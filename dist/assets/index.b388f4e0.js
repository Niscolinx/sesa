function GS(e, t) {
    for (var r = 0; r < t.length; r++) {
        const n = t[r]
        if (typeof n != 'string' && !Array.isArray(n)) {
            for (const a in n)
                if (a !== 'default' && !(a in e)) {
                    const l = Object.getOwnPropertyDescriptor(n, a)
                    l &&
                        Object.defineProperty(
                            e,
                            a,
                            l.get ? l : { enumerable: !0, get: () => n[a] }
                        )
                }
        }
    }
    return Object.freeze(
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' })
    )
}
;(function () {
    const t = document.createElement('link').relList
    if (t && t.supports && t.supports('modulepreload')) return
    for (const a of document.querySelectorAll('link[rel="modulepreload"]')) n(a)
    new MutationObserver((a) => {
        for (const l of a)
            if (l.type === 'childList')
                for (const o of l.addedNodes)
                    o.tagName === 'LINK' && o.rel === 'modulepreload' && n(o)
    }).observe(document, { childList: !0, subtree: !0 })
    function r(a) {
        const l = {}
        return (
            a.integrity && (l.integrity = a.integrity),
            a.referrerpolicy && (l.referrerPolicy = a.referrerpolicy),
            a.crossorigin === 'use-credentials'
                ? (l.credentials = 'include')
                : a.crossorigin === 'anonymous'
                ? (l.credentials = 'omit')
                : (l.credentials = 'same-origin'),
            l
        )
    }
    function n(a) {
        if (a.ep) return
        a.ep = !0
        const l = r(a)
        fetch(a.href, l)
    }
})()
var _c =
    typeof globalThis < 'u'
        ? globalThis
        : typeof window < 'u'
        ? window
        : typeof global < 'u'
        ? global
        : typeof self < 'u'
        ? self
        : {}
function rN(e) {
    return e &&
        e.__esModule &&
        Object.prototype.hasOwnProperty.call(e, 'default')
        ? e.default
        : e
}
var am = {},
    _1 = { exports: {} },
    Ar = {},
    C = { exports: {} },
    Te = {}
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var nc = Symbol.for('react.element'),
    qS = Symbol.for('react.portal'),
    KS = Symbol.for('react.fragment'),
    YS = Symbol.for('react.strict_mode'),
    XS = Symbol.for('react.profiler'),
    ZS = Symbol.for('react.provider'),
    JS = Symbol.for('react.context'),
    QS = Symbol.for('react.forward_ref'),
    eC = Symbol.for('react.suspense'),
    tC = Symbol.for('react.memo'),
    rC = Symbol.for('react.lazy'),
    Qv = Symbol.iterator
function nC(e) {
    return e === null || typeof e != 'object'
        ? null
        : ((e = (Qv && e[Qv]) || e['@@iterator']),
          typeof e == 'function' ? e : null)
}
var nN = {
        isMounted: function () {
            return !1
        },
        enqueueForceUpdate: function () {},
        enqueueReplaceState: function () {},
        enqueueSetState: function () {},
    },
    aN = Object.assign,
    iN = {}
function Ql(e, t, r) {
    ;(this.props = e),
        (this.context = t),
        (this.refs = iN),
        (this.updater = r || nN)
}
Ql.prototype.isReactComponent = {}
Ql.prototype.setState = function (e, t) {
    if (typeof e != 'object' && typeof e != 'function' && e != null)
        throw Error(
            'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
        )
    this.updater.enqueueSetState(this, e, t, 'setState')
}
Ql.prototype.forceUpdate = function (e) {
    this.updater.enqueueForceUpdate(this, e, 'forceUpdate')
}
function lN() {}
lN.prototype = Ql.prototype
function A1(e, t, r) {
    ;(this.props = e),
        (this.context = t),
        (this.refs = iN),
        (this.updater = r || nN)
}
var E1 = (A1.prototype = new lN())
E1.constructor = A1
aN(E1, Ql.prototype)
E1.isPureReactComponent = !0
var ey = Array.isArray,
    oN = Object.prototype.hasOwnProperty,
    k1 = { current: null },
    sN = { key: !0, ref: !0, __self: !0, __source: !0 }
function cN(e, t, r) {
    var n,
        a = {},
        l = null,
        o = null
    if (t != null)
        for (n in (t.ref !== void 0 && (o = t.ref),
        t.key !== void 0 && (l = '' + t.key),
        t))
            oN.call(t, n) && !sN.hasOwnProperty(n) && (a[n] = t[n])
    var s = arguments.length - 2
    if (s === 1) a.children = r
    else if (1 < s) {
        for (var c = Array(s), u = 0; u < s; u++) c[u] = arguments[u + 2]
        a.children = c
    }
    if (e && e.defaultProps)
        for (n in ((s = e.defaultProps), s)) a[n] === void 0 && (a[n] = s[n])
    return {
        $$typeof: nc,
        type: e,
        key: l,
        ref: o,
        props: a,
        _owner: k1.current,
    }
}
function aC(e, t) {
    return {
        $$typeof: nc,
        type: e.type,
        key: t,
        ref: e.ref,
        props: e.props,
        _owner: e._owner,
    }
}
function O1(e) {
    return typeof e == 'object' && e !== null && e.$$typeof === nc
}
function iC(e) {
    var t = { '=': '=0', ':': '=2' }
    return (
        '$' +
        e.replace(/[=:]/g, function (r) {
            return t[r]
        })
    )
}
var ty = /\/+/g
function Tp(e, t) {
    return typeof e == 'object' && e !== null && e.key != null
        ? iC('' + e.key)
        : t.toString(36)
}
function iu(e, t, r, n, a) {
    var l = typeof e
    ;(l === 'undefined' || l === 'boolean') && (e = null)
    var o = !1
    if (e === null) o = !0
    else
        switch (l) {
            case 'string':
            case 'number':
                o = !0
                break
            case 'object':
                switch (e.$$typeof) {
                    case nc:
                    case qS:
                        o = !0
                }
        }
    if (o)
        return (
            (o = e),
            (a = a(o)),
            (e = n === '' ? '.' + Tp(o, 0) : n),
            ey(a)
                ? ((r = ''),
                  e != null && (r = e.replace(ty, '$&/') + '/'),
                  iu(a, t, r, '', function (u) {
                      return u
                  }))
                : a != null &&
                  (O1(a) &&
                      (a = aC(
                          a,
                          r +
                              (!a.key || (o && o.key === a.key)
                                  ? ''
                                  : ('' + a.key).replace(ty, '$&/') + '/') +
                              e
                      )),
                  t.push(a)),
            1
        )
    if (((o = 0), (n = n === '' ? '.' : n + ':'), ey(e)))
        for (var s = 0; s < e.length; s++) {
            l = e[s]
            var c = n + Tp(l, s)
            o += iu(l, t, r, c, a)
        }
    else if (((c = nC(e)), typeof c == 'function'))
        for (e = c.call(e), s = 0; !(l = e.next()).done; )
            (l = l.value), (c = n + Tp(l, s++)), (o += iu(l, t, r, c, a))
    else if (l === 'object')
        throw (
            ((t = String(e)),
            Error(
                'Objects are not valid as a React child (found: ' +
                    (t === '[object Object]'
                        ? 'object with keys {' + Object.keys(e).join(', ') + '}'
                        : t) +
                    '). If you meant to render a collection of children, use an array instead.'
            ))
        )
    return o
}
function Ac(e, t, r) {
    if (e == null) return e
    var n = [],
        a = 0
    return (
        iu(e, n, '', '', function (l) {
            return t.call(r, l, a++)
        }),
        n
    )
}
function lC(e) {
    if (e._status === -1) {
        var t = e._result
        ;(t = t()),
            t.then(
                function (r) {
                    ;(e._status === 0 || e._status === -1) &&
                        ((e._status = 1), (e._result = r))
                },
                function (r) {
                    ;(e._status === 0 || e._status === -1) &&
                        ((e._status = 2), (e._result = r))
                }
            ),
            e._status === -1 && ((e._status = 0), (e._result = t))
    }
    if (e._status === 1) return e._result.default
    throw e._result
}
var nr = { current: null },
    lu = { transition: null },
    oC = {
        ReactCurrentDispatcher: nr,
        ReactCurrentBatchConfig: lu,
        ReactCurrentOwner: k1,
    }
Te.Children = {
    map: Ac,
    forEach: function (e, t, r) {
        Ac(
            e,
            function () {
                t.apply(this, arguments)
            },
            r
        )
    },
    count: function (e) {
        var t = 0
        return (
            Ac(e, function () {
                t++
            }),
            t
        )
    },
    toArray: function (e) {
        return (
            Ac(e, function (t) {
                return t
            }) || []
        )
    },
    only: function (e) {
        if (!O1(e))
            throw Error(
                'React.Children.only expected to receive a single React element child.'
            )
        return e
    },
}
Te.Component = Ql
Te.Fragment = KS
Te.Profiler = XS
Te.PureComponent = A1
Te.StrictMode = YS
Te.Suspense = eC
Te.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = oC
Te.cloneElement = function (e, t, r) {
    if (e == null)
        throw Error(
            'React.cloneElement(...): The argument must be a React element, but you passed ' +
                e +
                '.'
        )
    var n = aN({}, e.props),
        a = e.key,
        l = e.ref,
        o = e._owner
    if (t != null) {
        if (
            (t.ref !== void 0 && ((l = t.ref), (o = k1.current)),
            t.key !== void 0 && (a = '' + t.key),
            e.type && e.type.defaultProps)
        )
            var s = e.type.defaultProps
        for (c in t)
            oN.call(t, c) &&
                !sN.hasOwnProperty(c) &&
                (n[c] = t[c] === void 0 && s !== void 0 ? s[c] : t[c])
    }
    var c = arguments.length - 2
    if (c === 1) n.children = r
    else if (1 < c) {
        s = Array(c)
        for (var u = 0; u < c; u++) s[u] = arguments[u + 2]
        n.children = s
    }
    return { $$typeof: nc, type: e.type, key: a, ref: l, props: n, _owner: o }
}
Te.createContext = function (e) {
    return (
        (e = {
            $$typeof: JS,
            _currentValue: e,
            _currentValue2: e,
            _threadCount: 0,
            Provider: null,
            Consumer: null,
            _defaultValue: null,
            _globalName: null,
        }),
        (e.Provider = { $$typeof: ZS, _context: e }),
        (e.Consumer = e)
    )
}
Te.createElement = cN
Te.createFactory = function (e) {
    var t = cN.bind(null, e)
    return (t.type = e), t
}
Te.createRef = function () {
    return { current: null }
}
Te.forwardRef = function (e) {
    return { $$typeof: QS, render: e }
}
Te.isValidElement = O1
Te.lazy = function (e) {
    return { $$typeof: rC, _payload: { _status: -1, _result: e }, _init: lC }
}
Te.memo = function (e, t) {
    return { $$typeof: tC, type: e, compare: t === void 0 ? null : t }
}
Te.startTransition = function (e) {
    var t = lu.transition
    lu.transition = {}
    try {
        e()
    } finally {
        lu.transition = t
    }
}
Te.unstable_act = function () {
    throw Error('act(...) is not supported in production builds of React.')
}
Te.useCallback = function (e, t) {
    return nr.current.useCallback(e, t)
}
Te.useContext = function (e) {
    return nr.current.useContext(e)
}
Te.useDebugValue = function () {}
Te.useDeferredValue = function (e) {
    return nr.current.useDeferredValue(e)
}
Te.useEffect = function (e, t) {
    return nr.current.useEffect(e, t)
}
Te.useId = function () {
    return nr.current.useId()
}
Te.useImperativeHandle = function (e, t, r) {
    return nr.current.useImperativeHandle(e, t, r)
}
Te.useInsertionEffect = function (e, t) {
    return nr.current.useInsertionEffect(e, t)
}
Te.useLayoutEffect = function (e, t) {
    return nr.current.useLayoutEffect(e, t)
}
Te.useMemo = function (e, t) {
    return nr.current.useMemo(e, t)
}
Te.useReducer = function (e, t, r) {
    return nr.current.useReducer(e, t, r)
}
Te.useRef = function (e) {
    return nr.current.useRef(e)
}
Te.useState = function (e) {
    return nr.current.useState(e)
}
Te.useSyncExternalStore = function (e, t, r) {
    return nr.current.useSyncExternalStore(e, t, r)
}
Te.useTransition = function () {
    return nr.current.useTransition()
}
Te.version = '18.2.0'
;(function (e) {
    e.exports = Te
})(C)
const K = rN(C.exports),
    im = GS({ __proto__: null, default: K }, [C.exports])
var uN = { exports: {} },
    dN = {}
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ ;(function (e) {
    function t(D, R) {
        var V = D.length
        D.push(R)
        e: for (; 0 < V; ) {
            var G = (V - 1) >>> 1,
                ee = D[G]
            if (0 < a(ee, R)) (D[G] = R), (D[V] = ee), (V = G)
            else break e
        }
    }
    function r(D) {
        return D.length === 0 ? null : D[0]
    }
    function n(D) {
        if (D.length === 0) return null
        var R = D[0],
            V = D.pop()
        if (V !== R) {
            D[0] = V
            e: for (var G = 0, ee = D.length, Q = ee >>> 1; G < Q; ) {
                var B = 2 * (G + 1) - 1,
                    X = D[B],
                    ge = B + 1,
                    Pe = D[ge]
                if (0 > a(X, V))
                    ge < ee && 0 > a(Pe, X)
                        ? ((D[G] = Pe), (D[ge] = V), (G = ge))
                        : ((D[G] = X), (D[B] = V), (G = B))
                else if (ge < ee && 0 > a(Pe, V))
                    (D[G] = Pe), (D[ge] = V), (G = ge)
                else break e
            }
        }
        return R
    }
    function a(D, R) {
        var V = D.sortIndex - R.sortIndex
        return V !== 0 ? V : D.id - R.id
    }
    if (
        typeof performance == 'object' &&
        typeof performance.now == 'function'
    ) {
        var l = performance
        e.unstable_now = function () {
            return l.now()
        }
    } else {
        var o = Date,
            s = o.now()
        e.unstable_now = function () {
            return o.now() - s
        }
    }
    var c = [],
        u = [],
        f = 1,
        p = null,
        m = 3,
        v = !1,
        b = !1,
        h = !1,
        g = typeof setTimeout == 'function' ? setTimeout : null,
        x = typeof clearTimeout == 'function' ? clearTimeout : null,
        w = typeof setImmediate < 'u' ? setImmediate : null
    typeof navigator < 'u' &&
        navigator.scheduling !== void 0 &&
        navigator.scheduling.isInputPending !== void 0 &&
        navigator.scheduling.isInputPending.bind(navigator.scheduling)
    function y(D) {
        for (var R = r(u); R !== null; ) {
            if (R.callback === null) n(u)
            else if (R.startTime <= D)
                n(u), (R.sortIndex = R.expirationTime), t(c, R)
            else break
            R = r(u)
        }
    }
    function N(D) {
        if (((h = !1), y(D), !b))
            if (r(c) !== null) (b = !0), j(S)
            else {
                var R = r(u)
                R !== null && L(N, R.startTime - D)
            }
    }
    function S(D, R) {
        ;(b = !1), h && ((h = !1), x(k), (k = -1)), (v = !0)
        var V = m
        try {
            for (
                y(R), p = r(c);
                p !== null && (!(p.expirationTime > R) || (D && !_()));

            ) {
                var G = p.callback
                if (typeof G == 'function') {
                    ;(p.callback = null), (m = p.priorityLevel)
                    var ee = G(p.expirationTime <= R)
                    ;(R = e.unstable_now()),
                        typeof ee == 'function'
                            ? (p.callback = ee)
                            : p === r(c) && n(c),
                        y(R)
                } else n(c)
                p = r(c)
            }
            if (p !== null) var Q = !0
            else {
                var B = r(u)
                B !== null && L(N, B.startTime - R), (Q = !1)
            }
            return Q
        } finally {
            ;(p = null), (m = V), (v = !1)
        }
    }
    var P = !1,
        E = null,
        k = -1,
        M = 5,
        A = -1
    function _() {
        return !(e.unstable_now() - A < M)
    }
    function O() {
        if (E !== null) {
            var D = e.unstable_now()
            A = D
            var R = !0
            try {
                R = E(!0, D)
            } finally {
                R ? T() : ((P = !1), (E = null))
            }
        } else P = !1
    }
    var T
    if (typeof w == 'function')
        T = function () {
            w(O)
        }
    else if (typeof MessageChannel < 'u') {
        var $ = new MessageChannel(),
            I = $.port2
        ;($.port1.onmessage = O),
            (T = function () {
                I.postMessage(null)
            })
    } else
        T = function () {
            g(O, 0)
        }
    function j(D) {
        ;(E = D), P || ((P = !0), T())
    }
    function L(D, R) {
        k = g(function () {
            D(e.unstable_now())
        }, R)
    }
    ;(e.unstable_IdlePriority = 5),
        (e.unstable_ImmediatePriority = 1),
        (e.unstable_LowPriority = 4),
        (e.unstable_NormalPriority = 3),
        (e.unstable_Profiling = null),
        (e.unstable_UserBlockingPriority = 2),
        (e.unstable_cancelCallback = function (D) {
            D.callback = null
        }),
        (e.unstable_continueExecution = function () {
            b || v || ((b = !0), j(S))
        }),
        (e.unstable_forceFrameRate = function (D) {
            0 > D || 125 < D
                ? console.error(
                      'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported'
                  )
                : (M = 0 < D ? Math.floor(1e3 / D) : 5)
        }),
        (e.unstable_getCurrentPriorityLevel = function () {
            return m
        }),
        (e.unstable_getFirstCallbackNode = function () {
            return r(c)
        }),
        (e.unstable_next = function (D) {
            switch (m) {
                case 1:
                case 2:
                case 3:
                    var R = 3
                    break
                default:
                    R = m
            }
            var V = m
            m = R
            try {
                return D()
            } finally {
                m = V
            }
        }),
        (e.unstable_pauseExecution = function () {}),
        (e.unstable_requestPaint = function () {}),
        (e.unstable_runWithPriority = function (D, R) {
            switch (D) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break
                default:
                    D = 3
            }
            var V = m
            m = D
            try {
                return R()
            } finally {
                m = V
            }
        }),
        (e.unstable_scheduleCallback = function (D, R, V) {
            var G = e.unstable_now()
            switch (
                (typeof V == 'object' && V !== null
                    ? ((V = V.delay),
                      (V = typeof V == 'number' && 0 < V ? G + V : G))
                    : (V = G),
                D)
            ) {
                case 1:
                    var ee = -1
                    break
                case 2:
                    ee = 250
                    break
                case 5:
                    ee = 1073741823
                    break
                case 4:
                    ee = 1e4
                    break
                default:
                    ee = 5e3
            }
            return (
                (ee = V + ee),
                (D = {
                    id: f++,
                    callback: R,
                    priorityLevel: D,
                    startTime: V,
                    expirationTime: ee,
                    sortIndex: -1,
                }),
                V > G
                    ? ((D.sortIndex = V),
                      t(u, D),
                      r(c) === null &&
                          D === r(u) &&
                          (h ? (x(k), (k = -1)) : (h = !0), L(N, V - G)))
                    : ((D.sortIndex = ee), t(c, D), b || v || ((b = !0), j(S))),
                D
            )
        }),
        (e.unstable_shouldYield = _),
        (e.unstable_wrapCallback = function (D) {
            var R = m
            return function () {
                var V = m
                m = R
                try {
                    return D.apply(this, arguments)
                } finally {
                    m = V
                }
            }
        })
})(dN)
;(function (e) {
    e.exports = dN
})(uN)
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var fN = C.exports,
    Pr = uN.exports
function Y(e) {
    for (
        var t = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e,
            r = 1;
        r < arguments.length;
        r++
    )
        t += '&args[]=' + encodeURIComponent(arguments[r])
    return (
        'Minified React error #' +
        e +
        '; visit ' +
        t +
        ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
    )
}
var pN = new Set(),
    fs = {}
function Oi(e, t) {
    bl(e, t), bl(e + 'Capture', t)
}
function bl(e, t) {
    for (fs[e] = t, e = 0; e < t.length; e++) pN.add(t[e])
}
var Hn = !(
        typeof window > 'u' ||
        typeof window.document > 'u' ||
        typeof window.document.createElement > 'u'
    ),
    lm = Object.prototype.hasOwnProperty,
    sC =
        /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    ry = {},
    ny = {}
function cC(e) {
    return lm.call(ny, e)
        ? !0
        : lm.call(ry, e)
        ? !1
        : sC.test(e)
        ? (ny[e] = !0)
        : ((ry[e] = !0), !1)
}
function uC(e, t, r, n) {
    if (r !== null && r.type === 0) return !1
    switch (typeof t) {
        case 'function':
        case 'symbol':
            return !0
        case 'boolean':
            return n
                ? !1
                : r !== null
                ? !r.acceptsBooleans
                : ((e = e.toLowerCase().slice(0, 5)),
                  e !== 'data-' && e !== 'aria-')
        default:
            return !1
    }
}
function dC(e, t, r, n) {
    if (t === null || typeof t > 'u' || uC(e, t, r, n)) return !0
    if (n) return !1
    if (r !== null)
        switch (r.type) {
            case 3:
                return !t
            case 4:
                return t === !1
            case 5:
                return isNaN(t)
            case 6:
                return isNaN(t) || 1 > t
        }
    return !1
}
function ar(e, t, r, n, a, l, o) {
    ;(this.acceptsBooleans = t === 2 || t === 3 || t === 4),
        (this.attributeName = n),
        (this.attributeNamespace = a),
        (this.mustUseProperty = r),
        (this.propertyName = e),
        (this.type = t),
        (this.sanitizeURL = l),
        (this.removeEmptyString = o)
}
var zt = {}
'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
    .split(' ')
    .forEach(function (e) {
        zt[e] = new ar(e, 0, !1, e, null, !1, !1)
    })
;[
    ['acceptCharset', 'accept-charset'],
    ['className', 'class'],
    ['htmlFor', 'for'],
    ['httpEquiv', 'http-equiv'],
].forEach(function (e) {
    var t = e[0]
    zt[t] = new ar(t, 1, !1, e[1], null, !1, !1)
})
;['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
    zt[e] = new ar(e, 2, !1, e.toLowerCase(), null, !1, !1)
})
;[
    'autoReverse',
    'externalResourcesRequired',
    'focusable',
    'preserveAlpha',
].forEach(function (e) {
    zt[e] = new ar(e, 2, !1, e, null, !1, !1)
})
'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
    .split(' ')
    .forEach(function (e) {
        zt[e] = new ar(e, 3, !1, e.toLowerCase(), null, !1, !1)
    })
;['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
    zt[e] = new ar(e, 3, !0, e, null, !1, !1)
})
;['capture', 'download'].forEach(function (e) {
    zt[e] = new ar(e, 4, !1, e, null, !1, !1)
})
;['cols', 'rows', 'size', 'span'].forEach(function (e) {
    zt[e] = new ar(e, 6, !1, e, null, !1, !1)
})
;['rowSpan', 'start'].forEach(function (e) {
    zt[e] = new ar(e, 5, !1, e.toLowerCase(), null, !1, !1)
})
var T1 = /[\-:]([a-z])/g
function M1(e) {
    return e[1].toUpperCase()
}
'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
    .split(' ')
    .forEach(function (e) {
        var t = e.replace(T1, M1)
        zt[t] = new ar(t, 1, !1, e, null, !1, !1)
    })
'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
    .split(' ')
    .forEach(function (e) {
        var t = e.replace(T1, M1)
        zt[t] = new ar(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1)
    })
;['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
    var t = e.replace(T1, M1)
    zt[t] = new ar(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1)
})
;['tabIndex', 'crossOrigin'].forEach(function (e) {
    zt[e] = new ar(e, 1, !1, e.toLowerCase(), null, !1, !1)
})
zt.xlinkHref = new ar(
    'xlinkHref',
    1,
    !1,
    'xlink:href',
    'http://www.w3.org/1999/xlink',
    !0,
    !1
)
;['src', 'href', 'action', 'formAction'].forEach(function (e) {
    zt[e] = new ar(e, 1, !1, e.toLowerCase(), null, !0, !0)
})
function D1(e, t, r, n) {
    var a = zt.hasOwnProperty(t) ? zt[t] : null
    ;(a !== null
        ? a.type !== 0
        : n ||
          !(2 < t.length) ||
          (t[0] !== 'o' && t[0] !== 'O') ||
          (t[1] !== 'n' && t[1] !== 'N')) &&
        (dC(t, r, a, n) && (r = null),
        n || a === null
            ? cC(t) &&
              (r === null ? e.removeAttribute(t) : e.setAttribute(t, '' + r))
            : a.mustUseProperty
            ? (e[a.propertyName] = r === null ? (a.type === 3 ? !1 : '') : r)
            : ((t = a.attributeName),
              (n = a.attributeNamespace),
              r === null
                  ? e.removeAttribute(t)
                  : ((a = a.type),
                    (r = a === 3 || (a === 4 && r === !0) ? '' : '' + r),
                    n ? e.setAttributeNS(n, t, r) : e.setAttribute(t, r))))
}
var Qn = fN.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    Ec = Symbol.for('react.element'),
    Hi = Symbol.for('react.portal'),
    Gi = Symbol.for('react.fragment'),
    $1 = Symbol.for('react.strict_mode'),
    om = Symbol.for('react.profiler'),
    hN = Symbol.for('react.provider'),
    mN = Symbol.for('react.context'),
    I1 = Symbol.for('react.forward_ref'),
    sm = Symbol.for('react.suspense'),
    cm = Symbol.for('react.suspense_list'),
    R1 = Symbol.for('react.memo'),
    oa = Symbol.for('react.lazy'),
    gN = Symbol.for('react.offscreen'),
    ay = Symbol.iterator
function xo(e) {
    return e === null || typeof e != 'object'
        ? null
        : ((e = (ay && e[ay]) || e['@@iterator']),
          typeof e == 'function' ? e : null)
}
var pt = Object.assign,
    Mp
function jo(e) {
    if (Mp === void 0)
        try {
            throw Error()
        } catch (r) {
            var t = r.stack.trim().match(/\n( *(at )?)/)
            Mp = (t && t[1]) || ''
        }
    return (
        `
` +
        Mp +
        e
    )
}
var Dp = !1
function $p(e, t) {
    if (!e || Dp) return ''
    Dp = !0
    var r = Error.prepareStackTrace
    Error.prepareStackTrace = void 0
    try {
        if (t)
            if (
                ((t = function () {
                    throw Error()
                }),
                Object.defineProperty(t.prototype, 'props', {
                    set: function () {
                        throw Error()
                    },
                }),
                typeof Reflect == 'object' && Reflect.construct)
            ) {
                try {
                    Reflect.construct(t, [])
                } catch (u) {
                    var n = u
                }
                Reflect.construct(e, [], t)
            } else {
                try {
                    t.call()
                } catch (u) {
                    n = u
                }
                e.call(t.prototype)
            }
        else {
            try {
                throw Error()
            } catch (u) {
                n = u
            }
            e()
        }
    } catch (u) {
        if (u && n && typeof u.stack == 'string') {
            for (
                var a = u.stack.split(`
`),
                    l = n.stack.split(`
`),
                    o = a.length - 1,
                    s = l.length - 1;
                1 <= o && 0 <= s && a[o] !== l[s];

            )
                s--
            for (; 1 <= o && 0 <= s; o--, s--)
                if (a[o] !== l[s]) {
                    if (o !== 1 || s !== 1)
                        do
                            if ((o--, s--, 0 > s || a[o] !== l[s])) {
                                var c =
                                    `
` + a[o].replace(' at new ', ' at ')
                                return (
                                    e.displayName &&
                                        c.includes('<anonymous>') &&
                                        (c = c.replace(
                                            '<anonymous>',
                                            e.displayName
                                        )),
                                    c
                                )
                            }
                        while (1 <= o && 0 <= s)
                    break
                }
        }
    } finally {
        ;(Dp = !1), (Error.prepareStackTrace = r)
    }
    return (e = e ? e.displayName || e.name : '') ? jo(e) : ''
}
function fC(e) {
    switch (e.tag) {
        case 5:
            return jo(e.type)
        case 16:
            return jo('Lazy')
        case 13:
            return jo('Suspense')
        case 19:
            return jo('SuspenseList')
        case 0:
        case 2:
        case 15:
            return (e = $p(e.type, !1)), e
        case 11:
            return (e = $p(e.type.render, !1)), e
        case 1:
            return (e = $p(e.type, !0)), e
        default:
            return ''
    }
}
function um(e) {
    if (e == null) return null
    if (typeof e == 'function') return e.displayName || e.name || null
    if (typeof e == 'string') return e
    switch (e) {
        case Gi:
            return 'Fragment'
        case Hi:
            return 'Portal'
        case om:
            return 'Profiler'
        case $1:
            return 'StrictMode'
        case sm:
            return 'Suspense'
        case cm:
            return 'SuspenseList'
    }
    if (typeof e == 'object')
        switch (e.$$typeof) {
            case mN:
                return (e.displayName || 'Context') + '.Consumer'
            case hN:
                return (e._context.displayName || 'Context') + '.Provider'
            case I1:
                var t = e.render
                return (
                    (e = e.displayName),
                    e ||
                        ((e = t.displayName || t.name || ''),
                        (e =
                            e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')),
                    e
                )
            case R1:
                return (
                    (t = e.displayName || null),
                    t !== null ? t : um(e.type) || 'Memo'
                )
            case oa:
                ;(t = e._payload), (e = e._init)
                try {
                    return um(e(t))
                } catch {}
        }
    return null
}
function pC(e) {
    var t = e.type
    switch (e.tag) {
        case 24:
            return 'Cache'
        case 9:
            return (t.displayName || 'Context') + '.Consumer'
        case 10:
            return (t._context.displayName || 'Context') + '.Provider'
        case 18:
            return 'DehydratedFragment'
        case 11:
            return (
                (e = t.render),
                (e = e.displayName || e.name || ''),
                t.displayName ||
                    (e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')
            )
        case 7:
            return 'Fragment'
        case 5:
            return t
        case 4:
            return 'Portal'
        case 3:
            return 'Root'
        case 6:
            return 'Text'
        case 16:
            return um(t)
        case 8:
            return t === $1 ? 'StrictMode' : 'Mode'
        case 22:
            return 'Offscreen'
        case 12:
            return 'Profiler'
        case 21:
            return 'Scope'
        case 13:
            return 'Suspense'
        case 19:
            return 'SuspenseList'
        case 25:
            return 'TracingMarker'
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
            if (typeof t == 'function') return t.displayName || t.name || null
            if (typeof t == 'string') return t
    }
    return null
}
function Ma(e) {
    switch (typeof e) {
        case 'boolean':
        case 'number':
        case 'string':
        case 'undefined':
            return e
        case 'object':
            return e
        default:
            return ''
    }
}
function vN(e) {
    var t = e.type
    return (
        (e = e.nodeName) &&
        e.toLowerCase() === 'input' &&
        (t === 'checkbox' || t === 'radio')
    )
}
function hC(e) {
    var t = vN(e) ? 'checked' : 'value',
        r = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
        n = '' + e[t]
    if (
        !e.hasOwnProperty(t) &&
        typeof r < 'u' &&
        typeof r.get == 'function' &&
        typeof r.set == 'function'
    ) {
        var a = r.get,
            l = r.set
        return (
            Object.defineProperty(e, t, {
                configurable: !0,
                get: function () {
                    return a.call(this)
                },
                set: function (o) {
                    ;(n = '' + o), l.call(this, o)
                },
            }),
            Object.defineProperty(e, t, { enumerable: r.enumerable }),
            {
                getValue: function () {
                    return n
                },
                setValue: function (o) {
                    n = '' + o
                },
                stopTracking: function () {
                    ;(e._valueTracker = null), delete e[t]
                },
            }
        )
    }
}
function kc(e) {
    e._valueTracker || (e._valueTracker = hC(e))
}
function yN(e) {
    if (!e) return !1
    var t = e._valueTracker
    if (!t) return !0
    var r = t.getValue(),
        n = ''
    return (
        e && (n = vN(e) ? (e.checked ? 'true' : 'false') : e.value),
        (e = n),
        e !== r ? (t.setValue(e), !0) : !1
    )
}
function Nu(e) {
    if (
        ((e = e || (typeof document < 'u' ? document : void 0)), typeof e > 'u')
    )
        return null
    try {
        return e.activeElement || e.body
    } catch {
        return e.body
    }
}
function dm(e, t) {
    var r = t.checked
    return pt({}, t, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: r != null ? r : e._wrapperState.initialChecked,
    })
}
function iy(e, t) {
    var r = t.defaultValue == null ? '' : t.defaultValue,
        n = t.checked != null ? t.checked : t.defaultChecked
    ;(r = Ma(t.value != null ? t.value : r)),
        (e._wrapperState = {
            initialChecked: n,
            initialValue: r,
            controlled:
                t.type === 'checkbox' || t.type === 'radio'
                    ? t.checked != null
                    : t.value != null,
        })
}
function bN(e, t) {
    ;(t = t.checked), t != null && D1(e, 'checked', t, !1)
}
function fm(e, t) {
    bN(e, t)
    var r = Ma(t.value),
        n = t.type
    if (r != null)
        n === 'number'
            ? ((r === 0 && e.value === '') || e.value != r) &&
              (e.value = '' + r)
            : e.value !== '' + r && (e.value = '' + r)
    else if (n === 'submit' || n === 'reset') {
        e.removeAttribute('value')
        return
    }
    t.hasOwnProperty('value')
        ? pm(e, t.type, r)
        : t.hasOwnProperty('defaultValue') && pm(e, t.type, Ma(t.defaultValue)),
        t.checked == null &&
            t.defaultChecked != null &&
            (e.defaultChecked = !!t.defaultChecked)
}
function ly(e, t, r) {
    if (t.hasOwnProperty('value') || t.hasOwnProperty('defaultValue')) {
        var n = t.type
        if (
            !(
                (n !== 'submit' && n !== 'reset') ||
                (t.value !== void 0 && t.value !== null)
            )
        )
            return
        ;(t = '' + e._wrapperState.initialValue),
            r || t === e.value || (e.value = t),
            (e.defaultValue = t)
    }
    ;(r = e.name),
        r !== '' && (e.name = ''),
        (e.defaultChecked = !!e._wrapperState.initialChecked),
        r !== '' && (e.name = r)
}
function pm(e, t, r) {
    ;(t !== 'number' || Nu(e.ownerDocument) !== e) &&
        (r == null
            ? (e.defaultValue = '' + e._wrapperState.initialValue)
            : e.defaultValue !== '' + r && (e.defaultValue = '' + r))
}
var Fo = Array.isArray
function al(e, t, r, n) {
    if (((e = e.options), t)) {
        t = {}
        for (var a = 0; a < r.length; a++) t['$' + r[a]] = !0
        for (r = 0; r < e.length; r++)
            (a = t.hasOwnProperty('$' + e[r].value)),
                e[r].selected !== a && (e[r].selected = a),
                a && n && (e[r].defaultSelected = !0)
    } else {
        for (r = '' + Ma(r), t = null, a = 0; a < e.length; a++) {
            if (e[a].value === r) {
                ;(e[a].selected = !0), n && (e[a].defaultSelected = !0)
                return
            }
            t !== null || e[a].disabled || (t = e[a])
        }
        t !== null && (t.selected = !0)
    }
}
function hm(e, t) {
    if (t.dangerouslySetInnerHTML != null) throw Error(Y(91))
    return pt({}, t, {
        value: void 0,
        defaultValue: void 0,
        children: '' + e._wrapperState.initialValue,
    })
}
function oy(e, t) {
    var r = t.value
    if (r == null) {
        if (((r = t.children), (t = t.defaultValue), r != null)) {
            if (t != null) throw Error(Y(92))
            if (Fo(r)) {
                if (1 < r.length) throw Error(Y(93))
                r = r[0]
            }
            t = r
        }
        t == null && (t = ''), (r = t)
    }
    e._wrapperState = { initialValue: Ma(r) }
}
function xN(e, t) {
    var r = Ma(t.value),
        n = Ma(t.defaultValue)
    r != null &&
        ((r = '' + r),
        r !== e.value && (e.value = r),
        t.defaultValue == null && e.defaultValue !== r && (e.defaultValue = r)),
        n != null && (e.defaultValue = '' + n)
}
function sy(e) {
    var t = e.textContent
    t === e._wrapperState.initialValue &&
        t !== '' &&
        t !== null &&
        (e.value = t)
}
function wN(e) {
    switch (e) {
        case 'svg':
            return 'http://www.w3.org/2000/svg'
        case 'math':
            return 'http://www.w3.org/1998/Math/MathML'
        default:
            return 'http://www.w3.org/1999/xhtml'
    }
}
function mm(e, t) {
    return e == null || e === 'http://www.w3.org/1999/xhtml'
        ? wN(t)
        : e === 'http://www.w3.org/2000/svg' && t === 'foreignObject'
        ? 'http://www.w3.org/1999/xhtml'
        : e
}
var Oc,
    NN = (function (e) {
        return typeof MSApp < 'u' && MSApp.execUnsafeLocalFunction
            ? function (t, r, n, a) {
                  MSApp.execUnsafeLocalFunction(function () {
                      return e(t, r, n, a)
                  })
              }
            : e
    })(function (e, t) {
        if (e.namespaceURI !== 'http://www.w3.org/2000/svg' || 'innerHTML' in e)
            e.innerHTML = t
        else {
            for (
                Oc = Oc || document.createElement('div'),
                    Oc.innerHTML = '<svg>' + t.valueOf().toString() + '</svg>',
                    t = Oc.firstChild;
                e.firstChild;

            )
                e.removeChild(e.firstChild)
            for (; t.firstChild; ) e.appendChild(t.firstChild)
        }
    })
function ps(e, t) {
    if (t) {
        var r = e.firstChild
        if (r && r === e.lastChild && r.nodeType === 3) {
            r.nodeValue = t
            return
        }
    }
    e.textContent = t
}
var Yo = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0,
    },
    mC = ['Webkit', 'ms', 'Moz', 'O']
Object.keys(Yo).forEach(function (e) {
    mC.forEach(function (t) {
        ;(t = t + e.charAt(0).toUpperCase() + e.substring(1)), (Yo[t] = Yo[e])
    })
})
function SN(e, t, r) {
    return t == null || typeof t == 'boolean' || t === ''
        ? ''
        : r ||
          typeof t != 'number' ||
          t === 0 ||
          (Yo.hasOwnProperty(e) && Yo[e])
        ? ('' + t).trim()
        : t + 'px'
}
function CN(e, t) {
    e = e.style
    for (var r in t)
        if (t.hasOwnProperty(r)) {
            var n = r.indexOf('--') === 0,
                a = SN(r, t[r], n)
            r === 'float' && (r = 'cssFloat'),
                n ? e.setProperty(r, a) : (e[r] = a)
        }
}
var gC = pt(
    { menuitem: !0 },
    {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0,
    }
)
function gm(e, t) {
    if (t) {
        if (gC[e] && (t.children != null || t.dangerouslySetInnerHTML != null))
            throw Error(Y(137, e))
        if (t.dangerouslySetInnerHTML != null) {
            if (t.children != null) throw Error(Y(60))
            if (
                typeof t.dangerouslySetInnerHTML != 'object' ||
                !('__html' in t.dangerouslySetInnerHTML)
            )
                throw Error(Y(61))
        }
        if (t.style != null && typeof t.style != 'object') throw Error(Y(62))
    }
}
function vm(e, t) {
    if (e.indexOf('-') === -1) return typeof t.is == 'string'
    switch (e) {
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
            return !1
        default:
            return !0
    }
}
var ym = null
function L1(e) {
    return (
        (e = e.target || e.srcElement || window),
        e.correspondingUseElement && (e = e.correspondingUseElement),
        e.nodeType === 3 ? e.parentNode : e
    )
}
var bm = null,
    il = null,
    ll = null
function cy(e) {
    if ((e = lc(e))) {
        if (typeof bm != 'function') throw Error(Y(280))
        var t = e.stateNode
        t && ((t = of(t)), bm(e.stateNode, e.type, t))
    }
}
function PN(e) {
    il ? (ll ? ll.push(e) : (ll = [e])) : (il = e)
}
function _N() {
    if (il) {
        var e = il,
            t = ll
        if (((ll = il = null), cy(e), t))
            for (e = 0; e < t.length; e++) cy(t[e])
    }
}
function AN(e, t) {
    return e(t)
}
function EN() {}
var Ip = !1
function kN(e, t, r) {
    if (Ip) return e(t, r)
    Ip = !0
    try {
        return AN(e, t, r)
    } finally {
        ;(Ip = !1), (il !== null || ll !== null) && (EN(), _N())
    }
}
function hs(e, t) {
    var r = e.stateNode
    if (r === null) return null
    var n = of(r)
    if (n === null) return null
    r = n[t]
    e: switch (t) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
        case 'onMouseEnter':
            ;(n = !n.disabled) ||
                ((e = e.type),
                (n = !(
                    e === 'button' ||
                    e === 'input' ||
                    e === 'select' ||
                    e === 'textarea'
                ))),
                (e = !n)
            break e
        default:
            e = !1
    }
    if (e) return null
    if (r && typeof r != 'function') throw Error(Y(231, t, typeof r))
    return r
}
var xm = !1
if (Hn)
    try {
        var wo = {}
        Object.defineProperty(wo, 'passive', {
            get: function () {
                xm = !0
            },
        }),
            window.addEventListener('test', wo, wo),
            window.removeEventListener('test', wo, wo)
    } catch {
        xm = !1
    }
function vC(e, t, r, n, a, l, o, s, c) {
    var u = Array.prototype.slice.call(arguments, 3)
    try {
        t.apply(r, u)
    } catch (f) {
        this.onError(f)
    }
}
var Xo = !1,
    Su = null,
    Cu = !1,
    wm = null,
    yC = {
        onError: function (e) {
            ;(Xo = !0), (Su = e)
        },
    }
function bC(e, t, r, n, a, l, o, s, c) {
    ;(Xo = !1), (Su = null), vC.apply(yC, arguments)
}
function xC(e, t, r, n, a, l, o, s, c) {
    if ((bC.apply(this, arguments), Xo)) {
        if (Xo) {
            var u = Su
            ;(Xo = !1), (Su = null)
        } else throw Error(Y(198))
        Cu || ((Cu = !0), (wm = u))
    }
}
function Ti(e) {
    var t = e,
        r = e
    if (e.alternate) for (; t.return; ) t = t.return
    else {
        e = t
        do (t = e), (t.flags & 4098) !== 0 && (r = t.return), (e = t.return)
        while (e)
    }
    return t.tag === 3 ? r : null
}
function ON(e) {
    if (e.tag === 13) {
        var t = e.memoizedState
        if (
            (t === null &&
                ((e = e.alternate), e !== null && (t = e.memoizedState)),
            t !== null)
        )
            return t.dehydrated
    }
    return null
}
function uy(e) {
    if (Ti(e) !== e) throw Error(Y(188))
}
function wC(e) {
    var t = e.alternate
    if (!t) {
        if (((t = Ti(e)), t === null)) throw Error(Y(188))
        return t !== e ? null : e
    }
    for (var r = e, n = t; ; ) {
        var a = r.return
        if (a === null) break
        var l = a.alternate
        if (l === null) {
            if (((n = a.return), n !== null)) {
                r = n
                continue
            }
            break
        }
        if (a.child === l.child) {
            for (l = a.child; l; ) {
                if (l === r) return uy(a), e
                if (l === n) return uy(a), t
                l = l.sibling
            }
            throw Error(Y(188))
        }
        if (r.return !== n.return) (r = a), (n = l)
        else {
            for (var o = !1, s = a.child; s; ) {
                if (s === r) {
                    ;(o = !0), (r = a), (n = l)
                    break
                }
                if (s === n) {
                    ;(o = !0), (n = a), (r = l)
                    break
                }
                s = s.sibling
            }
            if (!o) {
                for (s = l.child; s; ) {
                    if (s === r) {
                        ;(o = !0), (r = l), (n = a)
                        break
                    }
                    if (s === n) {
                        ;(o = !0), (n = l), (r = a)
                        break
                    }
                    s = s.sibling
                }
                if (!o) throw Error(Y(189))
            }
        }
        if (r.alternate !== n) throw Error(Y(190))
    }
    if (r.tag !== 3) throw Error(Y(188))
    return r.stateNode.current === r ? e : t
}
function TN(e) {
    return (e = wC(e)), e !== null ? MN(e) : null
}
function MN(e) {
    if (e.tag === 5 || e.tag === 6) return e
    for (e = e.child; e !== null; ) {
        var t = MN(e)
        if (t !== null) return t
        e = e.sibling
    }
    return null
}
var DN = Pr.unstable_scheduleCallback,
    dy = Pr.unstable_cancelCallback,
    NC = Pr.unstable_shouldYield,
    SC = Pr.unstable_requestPaint,
    gt = Pr.unstable_now,
    CC = Pr.unstable_getCurrentPriorityLevel,
    j1 = Pr.unstable_ImmediatePriority,
    $N = Pr.unstable_UserBlockingPriority,
    Pu = Pr.unstable_NormalPriority,
    PC = Pr.unstable_LowPriority,
    IN = Pr.unstable_IdlePriority,
    rf = null,
    vn = null
function _C(e) {
    if (vn && typeof vn.onCommitFiberRoot == 'function')
        try {
            vn.onCommitFiberRoot(rf, e, void 0, (e.current.flags & 128) === 128)
        } catch {}
}
var on = Math.clz32 ? Math.clz32 : kC,
    AC = Math.log,
    EC = Math.LN2
function kC(e) {
    return (e >>>= 0), e === 0 ? 32 : (31 - ((AC(e) / EC) | 0)) | 0
}
var Tc = 64,
    Mc = 4194304
function Bo(e) {
    switch (e & -e) {
        case 1:
            return 1
        case 2:
            return 2
        case 4:
            return 4
        case 8:
            return 8
        case 16:
            return 16
        case 32:
            return 32
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return e & 4194240
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return e & 130023424
        case 134217728:
            return 134217728
        case 268435456:
            return 268435456
        case 536870912:
            return 536870912
        case 1073741824:
            return 1073741824
        default:
            return e
    }
}
function _u(e, t) {
    var r = e.pendingLanes
    if (r === 0) return 0
    var n = 0,
        a = e.suspendedLanes,
        l = e.pingedLanes,
        o = r & 268435455
    if (o !== 0) {
        var s = o & ~a
        s !== 0 ? (n = Bo(s)) : ((l &= o), l !== 0 && (n = Bo(l)))
    } else (o = r & ~a), o !== 0 ? (n = Bo(o)) : l !== 0 && (n = Bo(l))
    if (n === 0) return 0
    if (
        t !== 0 &&
        t !== n &&
        (t & a) === 0 &&
        ((a = n & -n),
        (l = t & -t),
        a >= l || (a === 16 && (l & 4194240) !== 0))
    )
        return t
    if (((n & 4) !== 0 && (n |= r & 16), (t = e.entangledLanes), t !== 0))
        for (e = e.entanglements, t &= n; 0 < t; )
            (r = 31 - on(t)), (a = 1 << r), (n |= e[r]), (t &= ~a)
    return n
}
function OC(e, t) {
    switch (e) {
        case 1:
        case 2:
        case 4:
            return t + 250
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return t + 5e3
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return -1
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
            return -1
        default:
            return -1
    }
}
function TC(e, t) {
    for (
        var r = e.suspendedLanes,
            n = e.pingedLanes,
            a = e.expirationTimes,
            l = e.pendingLanes;
        0 < l;

    ) {
        var o = 31 - on(l),
            s = 1 << o,
            c = a[o]
        c === -1
            ? ((s & r) === 0 || (s & n) !== 0) && (a[o] = OC(s, t))
            : c <= t && (e.expiredLanes |= s),
            (l &= ~s)
    }
}
function Nm(e) {
    return (
        (e = e.pendingLanes & -1073741825),
        e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
    )
}
function RN() {
    var e = Tc
    return (Tc <<= 1), (Tc & 4194240) === 0 && (Tc = 64), e
}
function Rp(e) {
    for (var t = [], r = 0; 31 > r; r++) t.push(e)
    return t
}
function ac(e, t, r) {
    ;(e.pendingLanes |= t),
        t !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
        (e = e.eventTimes),
        (t = 31 - on(t)),
        (e[t] = r)
}
function MC(e, t) {
    var r = e.pendingLanes & ~t
    ;(e.pendingLanes = t),
        (e.suspendedLanes = 0),
        (e.pingedLanes = 0),
        (e.expiredLanes &= t),
        (e.mutableReadLanes &= t),
        (e.entangledLanes &= t),
        (t = e.entanglements)
    var n = e.eventTimes
    for (e = e.expirationTimes; 0 < r; ) {
        var a = 31 - on(r),
            l = 1 << a
        ;(t[a] = 0), (n[a] = -1), (e[a] = -1), (r &= ~l)
    }
}
function F1(e, t) {
    var r = (e.entangledLanes |= t)
    for (e = e.entanglements; r; ) {
        var n = 31 - on(r),
            a = 1 << n
        ;(a & t) | (e[n] & t) && (e[n] |= t), (r &= ~a)
    }
}
var ze = 0
function LN(e) {
    return (
        (e &= -e),
        1 < e ? (4 < e ? ((e & 268435455) !== 0 ? 16 : 536870912) : 4) : 1
    )
}
var jN,
    B1,
    FN,
    BN,
    zN,
    Sm = !1,
    Dc = [],
    ba = null,
    xa = null,
    wa = null,
    ms = new Map(),
    gs = new Map(),
    ua = [],
    DC =
        'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
            ' '
        )
function fy(e, t) {
    switch (e) {
        case 'focusin':
        case 'focusout':
            ba = null
            break
        case 'dragenter':
        case 'dragleave':
            xa = null
            break
        case 'mouseover':
        case 'mouseout':
            wa = null
            break
        case 'pointerover':
        case 'pointerout':
            ms.delete(t.pointerId)
            break
        case 'gotpointercapture':
        case 'lostpointercapture':
            gs.delete(t.pointerId)
    }
}
function No(e, t, r, n, a, l) {
    return e === null || e.nativeEvent !== l
        ? ((e = {
              blockedOn: t,
              domEventName: r,
              eventSystemFlags: n,
              nativeEvent: l,
              targetContainers: [a],
          }),
          t !== null && ((t = lc(t)), t !== null && B1(t)),
          e)
        : ((e.eventSystemFlags |= n),
          (t = e.targetContainers),
          a !== null && t.indexOf(a) === -1 && t.push(a),
          e)
}
function $C(e, t, r, n, a) {
    switch (t) {
        case 'focusin':
            return (ba = No(ba, e, t, r, n, a)), !0
        case 'dragenter':
            return (xa = No(xa, e, t, r, n, a)), !0
        case 'mouseover':
            return (wa = No(wa, e, t, r, n, a)), !0
        case 'pointerover':
            var l = a.pointerId
            return ms.set(l, No(ms.get(l) || null, e, t, r, n, a)), !0
        case 'gotpointercapture':
            return (
                (l = a.pointerId),
                gs.set(l, No(gs.get(l) || null, e, t, r, n, a)),
                !0
            )
    }
    return !1
}
function VN(e) {
    var t = ui(e.target)
    if (t !== null) {
        var r = Ti(t)
        if (r !== null) {
            if (((t = r.tag), t === 13)) {
                if (((t = ON(r)), t !== null)) {
                    ;(e.blockedOn = t),
                        zN(e.priority, function () {
                            FN(r)
                        })
                    return
                }
            } else if (
                t === 3 &&
                r.stateNode.current.memoizedState.isDehydrated
            ) {
                e.blockedOn = r.tag === 3 ? r.stateNode.containerInfo : null
                return
            }
        }
    }
    e.blockedOn = null
}
function ou(e) {
    if (e.blockedOn !== null) return !1
    for (var t = e.targetContainers; 0 < t.length; ) {
        var r = Cm(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent)
        if (r === null) {
            r = e.nativeEvent
            var n = new r.constructor(r.type, r)
            ;(ym = n), r.target.dispatchEvent(n), (ym = null)
        } else return (t = lc(r)), t !== null && B1(t), (e.blockedOn = r), !1
        t.shift()
    }
    return !0
}
function py(e, t, r) {
    ou(e) && r.delete(t)
}
function IC() {
    ;(Sm = !1),
        ba !== null && ou(ba) && (ba = null),
        xa !== null && ou(xa) && (xa = null),
        wa !== null && ou(wa) && (wa = null),
        ms.forEach(py),
        gs.forEach(py)
}
function So(e, t) {
    e.blockedOn === t &&
        ((e.blockedOn = null),
        Sm ||
            ((Sm = !0),
            Pr.unstable_scheduleCallback(Pr.unstable_NormalPriority, IC)))
}
function vs(e) {
    function t(a) {
        return So(a, e)
    }
    if (0 < Dc.length) {
        So(Dc[0], e)
        for (var r = 1; r < Dc.length; r++) {
            var n = Dc[r]
            n.blockedOn === e && (n.blockedOn = null)
        }
    }
    for (
        ba !== null && So(ba, e),
            xa !== null && So(xa, e),
            wa !== null && So(wa, e),
            ms.forEach(t),
            gs.forEach(t),
            r = 0;
        r < ua.length;
        r++
    )
        (n = ua[r]), n.blockedOn === e && (n.blockedOn = null)
    for (; 0 < ua.length && ((r = ua[0]), r.blockedOn === null); )
        VN(r), r.blockedOn === null && ua.shift()
}
var ol = Qn.ReactCurrentBatchConfig,
    Au = !0
function RC(e, t, r, n) {
    var a = ze,
        l = ol.transition
    ol.transition = null
    try {
        ;(ze = 1), z1(e, t, r, n)
    } finally {
        ;(ze = a), (ol.transition = l)
    }
}
function LC(e, t, r, n) {
    var a = ze,
        l = ol.transition
    ol.transition = null
    try {
        ;(ze = 4), z1(e, t, r, n)
    } finally {
        ;(ze = a), (ol.transition = l)
    }
}
function z1(e, t, r, n) {
    if (Au) {
        var a = Cm(e, t, r, n)
        if (a === null) Gp(e, t, n, Eu, r), fy(e, n)
        else if ($C(a, e, t, r, n)) n.stopPropagation()
        else if ((fy(e, n), t & 4 && -1 < DC.indexOf(e))) {
            for (; a !== null; ) {
                var l = lc(a)
                if (
                    (l !== null && jN(l),
                    (l = Cm(e, t, r, n)),
                    l === null && Gp(e, t, n, Eu, r),
                    l === a)
                )
                    break
                a = l
            }
            a !== null && n.stopPropagation()
        } else Gp(e, t, n, null, r)
    }
}
var Eu = null
function Cm(e, t, r, n) {
    if (((Eu = null), (e = L1(n)), (e = ui(e)), e !== null))
        if (((t = Ti(e)), t === null)) e = null
        else if (((r = t.tag), r === 13)) {
            if (((e = ON(t)), e !== null)) return e
            e = null
        } else if (r === 3) {
            if (t.stateNode.current.memoizedState.isDehydrated)
                return t.tag === 3 ? t.stateNode.containerInfo : null
            e = null
        } else t !== e && (e = null)
    return (Eu = e), null
}
function UN(e) {
    switch (e) {
        case 'cancel':
        case 'click':
        case 'close':
        case 'contextmenu':
        case 'copy':
        case 'cut':
        case 'auxclick':
        case 'dblclick':
        case 'dragend':
        case 'dragstart':
        case 'drop':
        case 'focusin':
        case 'focusout':
        case 'input':
        case 'invalid':
        case 'keydown':
        case 'keypress':
        case 'keyup':
        case 'mousedown':
        case 'mouseup':
        case 'paste':
        case 'pause':
        case 'play':
        case 'pointercancel':
        case 'pointerdown':
        case 'pointerup':
        case 'ratechange':
        case 'reset':
        case 'resize':
        case 'seeked':
        case 'submit':
        case 'touchcancel':
        case 'touchend':
        case 'touchstart':
        case 'volumechange':
        case 'change':
        case 'selectionchange':
        case 'textInput':
        case 'compositionstart':
        case 'compositionend':
        case 'compositionupdate':
        case 'beforeblur':
        case 'afterblur':
        case 'beforeinput':
        case 'blur':
        case 'fullscreenchange':
        case 'focus':
        case 'hashchange':
        case 'popstate':
        case 'select':
        case 'selectstart':
            return 1
        case 'drag':
        case 'dragenter':
        case 'dragexit':
        case 'dragleave':
        case 'dragover':
        case 'mousemove':
        case 'mouseout':
        case 'mouseover':
        case 'pointermove':
        case 'pointerout':
        case 'pointerover':
        case 'scroll':
        case 'toggle':
        case 'touchmove':
        case 'wheel':
        case 'mouseenter':
        case 'mouseleave':
        case 'pointerenter':
        case 'pointerleave':
            return 4
        case 'message':
            switch (CC()) {
                case j1:
                    return 1
                case $N:
                    return 4
                case Pu:
                case PC:
                    return 16
                case IN:
                    return 536870912
                default:
                    return 16
            }
        default:
            return 16
    }
}
var pa = null,
    V1 = null,
    su = null
function WN() {
    if (su) return su
    var e,
        t = V1,
        r = t.length,
        n,
        a = 'value' in pa ? pa.value : pa.textContent,
        l = a.length
    for (e = 0; e < r && t[e] === a[e]; e++);
    var o = r - e
    for (n = 1; n <= o && t[r - n] === a[l - n]; n++);
    return (su = a.slice(e, 1 < n ? 1 - n : void 0))
}
function cu(e) {
    var t = e.keyCode
    return (
        'charCode' in e
            ? ((e = e.charCode), e === 0 && t === 13 && (e = 13))
            : (e = t),
        e === 10 && (e = 13),
        32 <= e || e === 13 ? e : 0
    )
}
function $c() {
    return !0
}
function hy() {
    return !1
}
function Er(e) {
    function t(r, n, a, l, o) {
        ;(this._reactName = r),
            (this._targetInst = a),
            (this.type = n),
            (this.nativeEvent = l),
            (this.target = o),
            (this.currentTarget = null)
        for (var s in e)
            e.hasOwnProperty(s) && ((r = e[s]), (this[s] = r ? r(l) : l[s]))
        return (
            (this.isDefaultPrevented = (
                l.defaultPrevented != null
                    ? l.defaultPrevented
                    : l.returnValue === !1
            )
                ? $c
                : hy),
            (this.isPropagationStopped = hy),
            this
        )
    }
    return (
        pt(t.prototype, {
            preventDefault: function () {
                this.defaultPrevented = !0
                var r = this.nativeEvent
                r &&
                    (r.preventDefault
                        ? r.preventDefault()
                        : typeof r.returnValue != 'unknown' &&
                          (r.returnValue = !1),
                    (this.isDefaultPrevented = $c))
            },
            stopPropagation: function () {
                var r = this.nativeEvent
                r &&
                    (r.stopPropagation
                        ? r.stopPropagation()
                        : typeof r.cancelBubble != 'unknown' &&
                          (r.cancelBubble = !0),
                    (this.isPropagationStopped = $c))
            },
            persist: function () {},
            isPersistent: $c,
        }),
        t
    )
}
var eo = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function (e) {
            return e.timeStamp || Date.now()
        },
        defaultPrevented: 0,
        isTrusted: 0,
    },
    U1 = Er(eo),
    ic = pt({}, eo, { view: 0, detail: 0 }),
    jC = Er(ic),
    Lp,
    jp,
    Co,
    nf = pt({}, ic, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: W1,
        button: 0,
        buttons: 0,
        relatedTarget: function (e) {
            return e.relatedTarget === void 0
                ? e.fromElement === e.srcElement
                    ? e.toElement
                    : e.fromElement
                : e.relatedTarget
        },
        movementX: function (e) {
            return 'movementX' in e
                ? e.movementX
                : (e !== Co &&
                      (Co && e.type === 'mousemove'
                          ? ((Lp = e.screenX - Co.screenX),
                            (jp = e.screenY - Co.screenY))
                          : (jp = Lp = 0),
                      (Co = e)),
                  Lp)
        },
        movementY: function (e) {
            return 'movementY' in e ? e.movementY : jp
        },
    }),
    my = Er(nf),
    FC = pt({}, nf, { dataTransfer: 0 }),
    BC = Er(FC),
    zC = pt({}, ic, { relatedTarget: 0 }),
    Fp = Er(zC),
    VC = pt({}, eo, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
    UC = Er(VC),
    WC = pt({}, eo, {
        clipboardData: function (e) {
            return 'clipboardData' in e ? e.clipboardData : window.clipboardData
        },
    }),
    HC = Er(WC),
    GC = pt({}, eo, { data: 0 }),
    gy = Er(GC),
    qC = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified',
    },
    KC = {
        8: 'Backspace',
        9: 'Tab',
        12: 'Clear',
        13: 'Enter',
        16: 'Shift',
        17: 'Control',
        18: 'Alt',
        19: 'Pause',
        20: 'CapsLock',
        27: 'Escape',
        32: ' ',
        33: 'PageUp',
        34: 'PageDown',
        35: 'End',
        36: 'Home',
        37: 'ArrowLeft',
        38: 'ArrowUp',
        39: 'ArrowRight',
        40: 'ArrowDown',
        45: 'Insert',
        46: 'Delete',
        112: 'F1',
        113: 'F2',
        114: 'F3',
        115: 'F4',
        116: 'F5',
        117: 'F6',
        118: 'F7',
        119: 'F8',
        120: 'F9',
        121: 'F10',
        122: 'F11',
        123: 'F12',
        144: 'NumLock',
        145: 'ScrollLock',
        224: 'Meta',
    },
    YC = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey',
    }
function XC(e) {
    var t = this.nativeEvent
    return t.getModifierState
        ? t.getModifierState(e)
        : (e = YC[e])
        ? !!t[e]
        : !1
}
function W1() {
    return XC
}
var ZC = pt({}, ic, {
        key: function (e) {
            if (e.key) {
                var t = qC[e.key] || e.key
                if (t !== 'Unidentified') return t
            }
            return e.type === 'keypress'
                ? ((e = cu(e)), e === 13 ? 'Enter' : String.fromCharCode(e))
                : e.type === 'keydown' || e.type === 'keyup'
                ? KC[e.keyCode] || 'Unidentified'
                : ''
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: W1,
        charCode: function (e) {
            return e.type === 'keypress' ? cu(e) : 0
        },
        keyCode: function (e) {
            return e.type === 'keydown' || e.type === 'keyup' ? e.keyCode : 0
        },
        which: function (e) {
            return e.type === 'keypress'
                ? cu(e)
                : e.type === 'keydown' || e.type === 'keyup'
                ? e.keyCode
                : 0
        },
    }),
    JC = Er(ZC),
    QC = pt({}, nf, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0,
    }),
    vy = Er(QC),
    eP = pt({}, ic, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: W1,
    }),
    tP = Er(eP),
    rP = pt({}, eo, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
    nP = Er(rP),
    aP = pt({}, nf, {
        deltaX: function (e) {
            return 'deltaX' in e
                ? e.deltaX
                : 'wheelDeltaX' in e
                ? -e.wheelDeltaX
                : 0
        },
        deltaY: function (e) {
            return 'deltaY' in e
                ? e.deltaY
                : 'wheelDeltaY' in e
                ? -e.wheelDeltaY
                : 'wheelDelta' in e
                ? -e.wheelDelta
                : 0
        },
        deltaZ: 0,
        deltaMode: 0,
    }),
    iP = Er(aP),
    lP = [9, 13, 27, 32],
    H1 = Hn && 'CompositionEvent' in window,
    Zo = null
Hn && 'documentMode' in document && (Zo = document.documentMode)
var oP = Hn && 'TextEvent' in window && !Zo,
    HN = Hn && (!H1 || (Zo && 8 < Zo && 11 >= Zo)),
    yy = String.fromCharCode(32),
    by = !1
function GN(e, t) {
    switch (e) {
        case 'keyup':
            return lP.indexOf(t.keyCode) !== -1
        case 'keydown':
            return t.keyCode !== 229
        case 'keypress':
        case 'mousedown':
        case 'focusout':
            return !0
        default:
            return !1
    }
}
function qN(e) {
    return (e = e.detail), typeof e == 'object' && 'data' in e ? e.data : null
}
var qi = !1
function sP(e, t) {
    switch (e) {
        case 'compositionend':
            return qN(t)
        case 'keypress':
            return t.which !== 32 ? null : ((by = !0), yy)
        case 'textInput':
            return (e = t.data), e === yy && by ? null : e
        default:
            return null
    }
}
function cP(e, t) {
    if (qi)
        return e === 'compositionend' || (!H1 && GN(e, t))
            ? ((e = WN()), (su = V1 = pa = null), (qi = !1), e)
            : null
    switch (e) {
        case 'paste':
            return null
        case 'keypress':
            if (
                !(t.ctrlKey || t.altKey || t.metaKey) ||
                (t.ctrlKey && t.altKey)
            ) {
                if (t.char && 1 < t.char.length) return t.char
                if (t.which) return String.fromCharCode(t.which)
            }
            return null
        case 'compositionend':
            return HN && t.locale !== 'ko' ? null : t.data
        default:
            return null
    }
}
var uP = {
    color: !0,
    date: !0,
    datetime: !0,
    'datetime-local': !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0,
}
function xy(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase()
    return t === 'input' ? !!uP[e.type] : t === 'textarea'
}
function KN(e, t, r, n) {
    PN(n),
        (t = ku(t, 'onChange')),
        0 < t.length &&
            ((r = new U1('onChange', 'change', null, r, n)),
            e.push({ event: r, listeners: t }))
}
var Jo = null,
    ys = null
function dP(e) {
    i9(e, 0)
}
function af(e) {
    var t = Xi(e)
    if (yN(t)) return e
}
function fP(e, t) {
    if (e === 'change') return t
}
var YN = !1
if (Hn) {
    var Bp
    if (Hn) {
        var zp = 'oninput' in document
        if (!zp) {
            var wy = document.createElement('div')
            wy.setAttribute('oninput', 'return;'),
                (zp = typeof wy.oninput == 'function')
        }
        Bp = zp
    } else Bp = !1
    YN = Bp && (!document.documentMode || 9 < document.documentMode)
}
function Ny() {
    Jo && (Jo.detachEvent('onpropertychange', XN), (ys = Jo = null))
}
function XN(e) {
    if (e.propertyName === 'value' && af(ys)) {
        var t = []
        KN(t, ys, e, L1(e)), kN(dP, t)
    }
}
function pP(e, t, r) {
    e === 'focusin'
        ? (Ny(), (Jo = t), (ys = r), Jo.attachEvent('onpropertychange', XN))
        : e === 'focusout' && Ny()
}
function hP(e) {
    if (e === 'selectionchange' || e === 'keyup' || e === 'keydown')
        return af(ys)
}
function mP(e, t) {
    if (e === 'click') return af(t)
}
function gP(e, t) {
    if (e === 'input' || e === 'change') return af(t)
}
function vP(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t)
}
var cn = typeof Object.is == 'function' ? Object.is : vP
function bs(e, t) {
    if (cn(e, t)) return !0
    if (
        typeof e != 'object' ||
        e === null ||
        typeof t != 'object' ||
        t === null
    )
        return !1
    var r = Object.keys(e),
        n = Object.keys(t)
    if (r.length !== n.length) return !1
    for (n = 0; n < r.length; n++) {
        var a = r[n]
        if (!lm.call(t, a) || !cn(e[a], t[a])) return !1
    }
    return !0
}
function Sy(e) {
    for (; e && e.firstChild; ) e = e.firstChild
    return e
}
function Cy(e, t) {
    var r = Sy(e)
    e = 0
    for (var n; r; ) {
        if (r.nodeType === 3) {
            if (((n = e + r.textContent.length), e <= t && n >= t))
                return { node: r, offset: t - e }
            e = n
        }
        e: {
            for (; r; ) {
                if (r.nextSibling) {
                    r = r.nextSibling
                    break e
                }
                r = r.parentNode
            }
            r = void 0
        }
        r = Sy(r)
    }
}
function ZN(e, t) {
    return e && t
        ? e === t
            ? !0
            : e && e.nodeType === 3
            ? !1
            : t && t.nodeType === 3
            ? ZN(e, t.parentNode)
            : 'contains' in e
            ? e.contains(t)
            : e.compareDocumentPosition
            ? !!(e.compareDocumentPosition(t) & 16)
            : !1
        : !1
}
function JN() {
    for (var e = window, t = Nu(); t instanceof e.HTMLIFrameElement; ) {
        try {
            var r = typeof t.contentWindow.location.href == 'string'
        } catch {
            r = !1
        }
        if (r) e = t.contentWindow
        else break
        t = Nu(e.document)
    }
    return t
}
function G1(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase()
    return (
        t &&
        ((t === 'input' &&
            (e.type === 'text' ||
                e.type === 'search' ||
                e.type === 'tel' ||
                e.type === 'url' ||
                e.type === 'password')) ||
            t === 'textarea' ||
            e.contentEditable === 'true')
    )
}
function yP(e) {
    var t = JN(),
        r = e.focusedElem,
        n = e.selectionRange
    if (
        t !== r &&
        r &&
        r.ownerDocument &&
        ZN(r.ownerDocument.documentElement, r)
    ) {
        if (n !== null && G1(r)) {
            if (
                ((t = n.start),
                (e = n.end),
                e === void 0 && (e = t),
                'selectionStart' in r)
            )
                (r.selectionStart = t),
                    (r.selectionEnd = Math.min(e, r.value.length))
            else if (
                ((e =
                    ((t = r.ownerDocument || document) && t.defaultView) ||
                    window),
                e.getSelection)
            ) {
                e = e.getSelection()
                var a = r.textContent.length,
                    l = Math.min(n.start, a)
                ;(n = n.end === void 0 ? l : Math.min(n.end, a)),
                    !e.extend && l > n && ((a = n), (n = l), (l = a)),
                    (a = Cy(r, l))
                var o = Cy(r, n)
                a &&
                    o &&
                    (e.rangeCount !== 1 ||
                        e.anchorNode !== a.node ||
                        e.anchorOffset !== a.offset ||
                        e.focusNode !== o.node ||
                        e.focusOffset !== o.offset) &&
                    ((t = t.createRange()),
                    t.setStart(a.node, a.offset),
                    e.removeAllRanges(),
                    l > n
                        ? (e.addRange(t), e.extend(o.node, o.offset))
                        : (t.setEnd(o.node, o.offset), e.addRange(t)))
            }
        }
        for (t = [], e = r; (e = e.parentNode); )
            e.nodeType === 1 &&
                t.push({ element: e, left: e.scrollLeft, top: e.scrollTop })
        for (
            typeof r.focus == 'function' && r.focus(), r = 0;
            r < t.length;
            r++
        )
            (e = t[r]),
                (e.element.scrollLeft = e.left),
                (e.element.scrollTop = e.top)
    }
}
var bP = Hn && 'documentMode' in document && 11 >= document.documentMode,
    Ki = null,
    Pm = null,
    Qo = null,
    _m = !1
function Py(e, t, r) {
    var n = r.window === r ? r.document : r.nodeType === 9 ? r : r.ownerDocument
    _m ||
        Ki == null ||
        Ki !== Nu(n) ||
        ((n = Ki),
        'selectionStart' in n && G1(n)
            ? (n = { start: n.selectionStart, end: n.selectionEnd })
            : ((n = (
                  (n.ownerDocument && n.ownerDocument.defaultView) ||
                  window
              ).getSelection()),
              (n = {
                  anchorNode: n.anchorNode,
                  anchorOffset: n.anchorOffset,
                  focusNode: n.focusNode,
                  focusOffset: n.focusOffset,
              })),
        (Qo && bs(Qo, n)) ||
            ((Qo = n),
            (n = ku(Pm, 'onSelect')),
            0 < n.length &&
                ((t = new U1('onSelect', 'select', null, t, r)),
                e.push({ event: t, listeners: n }),
                (t.target = Ki))))
}
function Ic(e, t) {
    var r = {}
    return (
        (r[e.toLowerCase()] = t.toLowerCase()),
        (r['Webkit' + e] = 'webkit' + t),
        (r['Moz' + e] = 'moz' + t),
        r
    )
}
var Yi = {
        animationend: Ic('Animation', 'AnimationEnd'),
        animationiteration: Ic('Animation', 'AnimationIteration'),
        animationstart: Ic('Animation', 'AnimationStart'),
        transitionend: Ic('Transition', 'TransitionEnd'),
    },
    Vp = {},
    QN = {}
Hn &&
    ((QN = document.createElement('div').style),
    'AnimationEvent' in window ||
        (delete Yi.animationend.animation,
        delete Yi.animationiteration.animation,
        delete Yi.animationstart.animation),
    'TransitionEvent' in window || delete Yi.transitionend.transition)
function lf(e) {
    if (Vp[e]) return Vp[e]
    if (!Yi[e]) return e
    var t = Yi[e],
        r
    for (r in t) if (t.hasOwnProperty(r) && r in QN) return (Vp[e] = t[r])
    return e
}
var e9 = lf('animationend'),
    t9 = lf('animationiteration'),
    r9 = lf('animationstart'),
    n9 = lf('transitionend'),
    a9 = new Map(),
    _y =
        'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
            ' '
        )
function Ba(e, t) {
    a9.set(e, t), Oi(t, [e])
}
for (var Up = 0; Up < _y.length; Up++) {
    var Wp = _y[Up],
        xP = Wp.toLowerCase(),
        wP = Wp[0].toUpperCase() + Wp.slice(1)
    Ba(xP, 'on' + wP)
}
Ba(e9, 'onAnimationEnd')
Ba(t9, 'onAnimationIteration')
Ba(r9, 'onAnimationStart')
Ba('dblclick', 'onDoubleClick')
Ba('focusin', 'onFocus')
Ba('focusout', 'onBlur')
Ba(n9, 'onTransitionEnd')
bl('onMouseEnter', ['mouseout', 'mouseover'])
bl('onMouseLeave', ['mouseout', 'mouseover'])
bl('onPointerEnter', ['pointerout', 'pointerover'])
bl('onPointerLeave', ['pointerout', 'pointerover'])
Oi(
    'onChange',
    'change click focusin focusout input keydown keyup selectionchange'.split(
        ' '
    )
)
Oi(
    'onSelect',
    'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
        ' '
    )
)
Oi('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste'])
Oi(
    'onCompositionEnd',
    'compositionend focusout keydown keypress keyup mousedown'.split(' ')
)
Oi(
    'onCompositionStart',
    'compositionstart focusout keydown keypress keyup mousedown'.split(' ')
)
Oi(
    'onCompositionUpdate',
    'compositionupdate focusout keydown keypress keyup mousedown'.split(' ')
)
var zo =
        'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
            ' '
        ),
    NP = new Set(
        'cancel close invalid load scroll toggle'.split(' ').concat(zo)
    )
function Ay(e, t, r) {
    var n = e.type || 'unknown-event'
    ;(e.currentTarget = r), xC(n, t, void 0, e), (e.currentTarget = null)
}
function i9(e, t) {
    t = (t & 4) !== 0
    for (var r = 0; r < e.length; r++) {
        var n = e[r],
            a = n.event
        n = n.listeners
        e: {
            var l = void 0
            if (t)
                for (var o = n.length - 1; 0 <= o; o--) {
                    var s = n[o],
                        c = s.instance,
                        u = s.currentTarget
                    if (((s = s.listener), c !== l && a.isPropagationStopped()))
                        break e
                    Ay(a, s, u), (l = c)
                }
            else
                for (o = 0; o < n.length; o++) {
                    if (
                        ((s = n[o]),
                        (c = s.instance),
                        (u = s.currentTarget),
                        (s = s.listener),
                        c !== l && a.isPropagationStopped())
                    )
                        break e
                    Ay(a, s, u), (l = c)
                }
        }
    }
    if (Cu) throw ((e = wm), (Cu = !1), (wm = null), e)
}
function Qe(e, t) {
    var r = t[Tm]
    r === void 0 && (r = t[Tm] = new Set())
    var n = e + '__bubble'
    r.has(n) || (l9(t, e, 2, !1), r.add(n))
}
function Hp(e, t, r) {
    var n = 0
    t && (n |= 4), l9(r, e, n, t)
}
var Rc = '_reactListening' + Math.random().toString(36).slice(2)
function xs(e) {
    if (!e[Rc]) {
        ;(e[Rc] = !0),
            pN.forEach(function (r) {
                r !== 'selectionchange' &&
                    (NP.has(r) || Hp(r, !1, e), Hp(r, !0, e))
            })
        var t = e.nodeType === 9 ? e : e.ownerDocument
        t === null || t[Rc] || ((t[Rc] = !0), Hp('selectionchange', !1, t))
    }
}
function l9(e, t, r, n) {
    switch (UN(t)) {
        case 1:
            var a = RC
            break
        case 4:
            a = LC
            break
        default:
            a = z1
    }
    ;(r = a.bind(null, t, r, e)),
        (a = void 0),
        !xm ||
            (t !== 'touchstart' && t !== 'touchmove' && t !== 'wheel') ||
            (a = !0),
        n
            ? a !== void 0
                ? e.addEventListener(t, r, { capture: !0, passive: a })
                : e.addEventListener(t, r, !0)
            : a !== void 0
            ? e.addEventListener(t, r, { passive: a })
            : e.addEventListener(t, r, !1)
}
function Gp(e, t, r, n, a) {
    var l = n
    if ((t & 1) === 0 && (t & 2) === 0 && n !== null)
        e: for (;;) {
            if (n === null) return
            var o = n.tag
            if (o === 3 || o === 4) {
                var s = n.stateNode.containerInfo
                if (s === a || (s.nodeType === 8 && s.parentNode === a)) break
                if (o === 4)
                    for (o = n.return; o !== null; ) {
                        var c = o.tag
                        if (
                            (c === 3 || c === 4) &&
                            ((c = o.stateNode.containerInfo),
                            c === a || (c.nodeType === 8 && c.parentNode === a))
                        )
                            return
                        o = o.return
                    }
                for (; s !== null; ) {
                    if (((o = ui(s)), o === null)) return
                    if (((c = o.tag), c === 5 || c === 6)) {
                        n = l = o
                        continue e
                    }
                    s = s.parentNode
                }
            }
            n = n.return
        }
    kN(function () {
        var u = l,
            f = L1(r),
            p = []
        e: {
            var m = a9.get(e)
            if (m !== void 0) {
                var v = U1,
                    b = e
                switch (e) {
                    case 'keypress':
                        if (cu(r) === 0) break e
                    case 'keydown':
                    case 'keyup':
                        v = JC
                        break
                    case 'focusin':
                        ;(b = 'focus'), (v = Fp)
                        break
                    case 'focusout':
                        ;(b = 'blur'), (v = Fp)
                        break
                    case 'beforeblur':
                    case 'afterblur':
                        v = Fp
                        break
                    case 'click':
                        if (r.button === 2) break e
                    case 'auxclick':
                    case 'dblclick':
                    case 'mousedown':
                    case 'mousemove':
                    case 'mouseup':
                    case 'mouseout':
                    case 'mouseover':
                    case 'contextmenu':
                        v = my
                        break
                    case 'drag':
                    case 'dragend':
                    case 'dragenter':
                    case 'dragexit':
                    case 'dragleave':
                    case 'dragover':
                    case 'dragstart':
                    case 'drop':
                        v = BC
                        break
                    case 'touchcancel':
                    case 'touchend':
                    case 'touchmove':
                    case 'touchstart':
                        v = tP
                        break
                    case e9:
                    case t9:
                    case r9:
                        v = UC
                        break
                    case n9:
                        v = nP
                        break
                    case 'scroll':
                        v = jC
                        break
                    case 'wheel':
                        v = iP
                        break
                    case 'copy':
                    case 'cut':
                    case 'paste':
                        v = HC
                        break
                    case 'gotpointercapture':
                    case 'lostpointercapture':
                    case 'pointercancel':
                    case 'pointerdown':
                    case 'pointermove':
                    case 'pointerout':
                    case 'pointerover':
                    case 'pointerup':
                        v = vy
                }
                var h = (t & 4) !== 0,
                    g = !h && e === 'scroll',
                    x = h ? (m !== null ? m + 'Capture' : null) : m
                h = []
                for (var w = u, y; w !== null; ) {
                    y = w
                    var N = y.stateNode
                    if (
                        (y.tag === 5 &&
                            N !== null &&
                            ((y = N),
                            x !== null &&
                                ((N = hs(w, x)),
                                N != null && h.push(ws(w, N, y)))),
                        g)
                    )
                        break
                    w = w.return
                }
                0 < h.length &&
                    ((m = new v(m, b, null, r, f)),
                    p.push({ event: m, listeners: h }))
            }
        }
        if ((t & 7) === 0) {
            e: {
                if (
                    ((m = e === 'mouseover' || e === 'pointerover'),
                    (v = e === 'mouseout' || e === 'pointerout'),
                    m &&
                        r !== ym &&
                        (b = r.relatedTarget || r.fromElement) &&
                        (ui(b) || b[Gn]))
                )
                    break e
                if (
                    (v || m) &&
                    ((m =
                        f.window === f
                            ? f
                            : (m = f.ownerDocument)
                            ? m.defaultView || m.parentWindow
                            : window),
                    v
                        ? ((b = r.relatedTarget || r.toElement),
                          (v = u),
                          (b = b ? ui(b) : null),
                          b !== null &&
                              ((g = Ti(b)),
                              b !== g || (b.tag !== 5 && b.tag !== 6)) &&
                              (b = null))
                        : ((v = null), (b = u)),
                    v !== b)
                ) {
                    if (
                        ((h = my),
                        (N = 'onMouseLeave'),
                        (x = 'onMouseEnter'),
                        (w = 'mouse'),
                        (e === 'pointerout' || e === 'pointerover') &&
                            ((h = vy),
                            (N = 'onPointerLeave'),
                            (x = 'onPointerEnter'),
                            (w = 'pointer')),
                        (g = v == null ? m : Xi(v)),
                        (y = b == null ? m : Xi(b)),
                        (m = new h(N, w + 'leave', v, r, f)),
                        (m.target = g),
                        (m.relatedTarget = y),
                        (N = null),
                        ui(f) === u &&
                            ((h = new h(x, w + 'enter', b, r, f)),
                            (h.target = y),
                            (h.relatedTarget = g),
                            (N = h)),
                        (g = N),
                        v && b)
                    )
                        t: {
                            for (h = v, x = b, w = 0, y = h; y; y = ji(y)) w++
                            for (y = 0, N = x; N; N = ji(N)) y++
                            for (; 0 < w - y; ) (h = ji(h)), w--
                            for (; 0 < y - w; ) (x = ji(x)), y--
                            for (; w--; ) {
                                if (
                                    h === x ||
                                    (x !== null && h === x.alternate)
                                )
                                    break t
                                ;(h = ji(h)), (x = ji(x))
                            }
                            h = null
                        }
                    else h = null
                    v !== null && Ey(p, m, v, h, !1),
                        b !== null && g !== null && Ey(p, g, b, h, !0)
                }
            }
            e: {
                if (
                    ((m = u ? Xi(u) : window),
                    (v = m.nodeName && m.nodeName.toLowerCase()),
                    v === 'select' || (v === 'input' && m.type === 'file'))
                )
                    var S = fP
                else if (xy(m))
                    if (YN) S = gP
                    else {
                        S = hP
                        var P = pP
                    }
                else
                    (v = m.nodeName) &&
                        v.toLowerCase() === 'input' &&
                        (m.type === 'checkbox' || m.type === 'radio') &&
                        (S = mP)
                if (S && (S = S(e, u))) {
                    KN(p, S, r, f)
                    break e
                }
                P && P(e, m, u),
                    e === 'focusout' &&
                        (P = m._wrapperState) &&
                        P.controlled &&
                        m.type === 'number' &&
                        pm(m, 'number', m.value)
            }
            switch (((P = u ? Xi(u) : window), e)) {
                case 'focusin':
                    ;(xy(P) || P.contentEditable === 'true') &&
                        ((Ki = P), (Pm = u), (Qo = null))
                    break
                case 'focusout':
                    Qo = Pm = Ki = null
                    break
                case 'mousedown':
                    _m = !0
                    break
                case 'contextmenu':
                case 'mouseup':
                case 'dragend':
                    ;(_m = !1), Py(p, r, f)
                    break
                case 'selectionchange':
                    if (bP) break
                case 'keydown':
                case 'keyup':
                    Py(p, r, f)
            }
            var E
            if (H1)
                e: {
                    switch (e) {
                        case 'compositionstart':
                            var k = 'onCompositionStart'
                            break e
                        case 'compositionend':
                            k = 'onCompositionEnd'
                            break e
                        case 'compositionupdate':
                            k = 'onCompositionUpdate'
                            break e
                    }
                    k = void 0
                }
            else
                qi
                    ? GN(e, r) && (k = 'onCompositionEnd')
                    : e === 'keydown' &&
                      r.keyCode === 229 &&
                      (k = 'onCompositionStart')
            k &&
                (HN &&
                    r.locale !== 'ko' &&
                    (qi || k !== 'onCompositionStart'
                        ? k === 'onCompositionEnd' && qi && (E = WN())
                        : ((pa = f),
                          (V1 = 'value' in pa ? pa.value : pa.textContent),
                          (qi = !0))),
                (P = ku(u, k)),
                0 < P.length &&
                    ((k = new gy(k, e, null, r, f)),
                    p.push({ event: k, listeners: P }),
                    E
                        ? (k.data = E)
                        : ((E = qN(r)), E !== null && (k.data = E)))),
                (E = oP ? sP(e, r) : cP(e, r)) &&
                    ((u = ku(u, 'onBeforeInput')),
                    0 < u.length &&
                        ((f = new gy(
                            'onBeforeInput',
                            'beforeinput',
                            null,
                            r,
                            f
                        )),
                        p.push({ event: f, listeners: u }),
                        (f.data = E)))
        }
        i9(p, t)
    })
}
function ws(e, t, r) {
    return { instance: e, listener: t, currentTarget: r }
}
function ku(e, t) {
    for (var r = t + 'Capture', n = []; e !== null; ) {
        var a = e,
            l = a.stateNode
        a.tag === 5 &&
            l !== null &&
            ((a = l),
            (l = hs(e, r)),
            l != null && n.unshift(ws(e, l, a)),
            (l = hs(e, t)),
            l != null && n.push(ws(e, l, a))),
            (e = e.return)
    }
    return n
}
function ji(e) {
    if (e === null) return null
    do e = e.return
    while (e && e.tag !== 5)
    return e || null
}
function Ey(e, t, r, n, a) {
    for (var l = t._reactName, o = []; r !== null && r !== n; ) {
        var s = r,
            c = s.alternate,
            u = s.stateNode
        if (c !== null && c === n) break
        s.tag === 5 &&
            u !== null &&
            ((s = u),
            a
                ? ((c = hs(r, l)), c != null && o.unshift(ws(r, c, s)))
                : a || ((c = hs(r, l)), c != null && o.push(ws(r, c, s)))),
            (r = r.return)
    }
    o.length !== 0 && e.push({ event: t, listeners: o })
}
var SP = /\r\n?/g,
    CP = /\u0000|\uFFFD/g
function ky(e) {
    return (typeof e == 'string' ? e : '' + e)
        .replace(
            SP,
            `
`
        )
        .replace(CP, '')
}
function Lc(e, t, r) {
    if (((t = ky(t)), ky(e) !== t && r)) throw Error(Y(425))
}
function Ou() {}
var Am = null,
    Em = null
function km(e, t) {
    return (
        e === 'textarea' ||
        e === 'noscript' ||
        typeof t.children == 'string' ||
        typeof t.children == 'number' ||
        (typeof t.dangerouslySetInnerHTML == 'object' &&
            t.dangerouslySetInnerHTML !== null &&
            t.dangerouslySetInnerHTML.__html != null)
    )
}
var Om = typeof setTimeout == 'function' ? setTimeout : void 0,
    PP = typeof clearTimeout == 'function' ? clearTimeout : void 0,
    Oy = typeof Promise == 'function' ? Promise : void 0,
    _P =
        typeof queueMicrotask == 'function'
            ? queueMicrotask
            : typeof Oy < 'u'
            ? function (e) {
                  return Oy.resolve(null).then(e).catch(AP)
              }
            : Om
function AP(e) {
    setTimeout(function () {
        throw e
    })
}
function qp(e, t) {
    var r = t,
        n = 0
    do {
        var a = r.nextSibling
        if ((e.removeChild(r), a && a.nodeType === 8))
            if (((r = a.data), r === '/$')) {
                if (n === 0) {
                    e.removeChild(a), vs(t)
                    return
                }
                n--
            } else (r !== '$' && r !== '$?' && r !== '$!') || n++
        r = a
    } while (r)
    vs(t)
}
function Na(e) {
    for (; e != null; e = e.nextSibling) {
        var t = e.nodeType
        if (t === 1 || t === 3) break
        if (t === 8) {
            if (((t = e.data), t === '$' || t === '$!' || t === '$?')) break
            if (t === '/$') return null
        }
    }
    return e
}
function Ty(e) {
    e = e.previousSibling
    for (var t = 0; e; ) {
        if (e.nodeType === 8) {
            var r = e.data
            if (r === '$' || r === '$!' || r === '$?') {
                if (t === 0) return e
                t--
            } else r === '/$' && t++
        }
        e = e.previousSibling
    }
    return null
}
var to = Math.random().toString(36).slice(2),
    mn = '__reactFiber$' + to,
    Ns = '__reactProps$' + to,
    Gn = '__reactContainer$' + to,
    Tm = '__reactEvents$' + to,
    EP = '__reactListeners$' + to,
    kP = '__reactHandles$' + to
function ui(e) {
    var t = e[mn]
    if (t) return t
    for (var r = e.parentNode; r; ) {
        if ((t = r[Gn] || r[mn])) {
            if (
                ((r = t.alternate),
                t.child !== null || (r !== null && r.child !== null))
            )
                for (e = Ty(e); e !== null; ) {
                    if ((r = e[mn])) return r
                    e = Ty(e)
                }
            return t
        }
        ;(e = r), (r = e.parentNode)
    }
    return null
}
function lc(e) {
    return (
        (e = e[mn] || e[Gn]),
        !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3)
            ? null
            : e
    )
}
function Xi(e) {
    if (e.tag === 5 || e.tag === 6) return e.stateNode
    throw Error(Y(33))
}
function of(e) {
    return e[Ns] || null
}
var Mm = [],
    Zi = -1
function za(e) {
    return { current: e }
}
function rt(e) {
    0 > Zi || ((e.current = Mm[Zi]), (Mm[Zi] = null), Zi--)
}
function Ze(e, t) {
    Zi++, (Mm[Zi] = e.current), (e.current = t)
}
var Da = {},
    Zt = za(Da),
    dr = za(!1),
    xi = Da
function xl(e, t) {
    var r = e.type.contextTypes
    if (!r) return Da
    var n = e.stateNode
    if (n && n.__reactInternalMemoizedUnmaskedChildContext === t)
        return n.__reactInternalMemoizedMaskedChildContext
    var a = {},
        l
    for (l in r) a[l] = t[l]
    return (
        n &&
            ((e = e.stateNode),
            (e.__reactInternalMemoizedUnmaskedChildContext = t),
            (e.__reactInternalMemoizedMaskedChildContext = a)),
        a
    )
}
function fr(e) {
    return (e = e.childContextTypes), e != null
}
function Tu() {
    rt(dr), rt(Zt)
}
function My(e, t, r) {
    if (Zt.current !== Da) throw Error(Y(168))
    Ze(Zt, t), Ze(dr, r)
}
function o9(e, t, r) {
    var n = e.stateNode
    if (((t = t.childContextTypes), typeof n.getChildContext != 'function'))
        return r
    n = n.getChildContext()
    for (var a in n) if (!(a in t)) throw Error(Y(108, pC(e) || 'Unknown', a))
    return pt({}, r, n)
}
function Mu(e) {
    return (
        (e =
            ((e = e.stateNode) &&
                e.__reactInternalMemoizedMergedChildContext) ||
            Da),
        (xi = Zt.current),
        Ze(Zt, e),
        Ze(dr, dr.current),
        !0
    )
}
function Dy(e, t, r) {
    var n = e.stateNode
    if (!n) throw Error(Y(169))
    r
        ? ((e = o9(e, t, xi)),
          (n.__reactInternalMemoizedMergedChildContext = e),
          rt(dr),
          rt(Zt),
          Ze(Zt, e))
        : rt(dr),
        Ze(dr, r)
}
var Dn = null,
    sf = !1,
    Kp = !1
function s9(e) {
    Dn === null ? (Dn = [e]) : Dn.push(e)
}
function OP(e) {
    ;(sf = !0), s9(e)
}
function Va() {
    if (!Kp && Dn !== null) {
        Kp = !0
        var e = 0,
            t = ze
        try {
            var r = Dn
            for (ze = 1; e < r.length; e++) {
                var n = r[e]
                do n = n(!0)
                while (n !== null)
            }
            ;(Dn = null), (sf = !1)
        } catch (a) {
            throw (Dn !== null && (Dn = Dn.slice(e + 1)), DN(j1, Va), a)
        } finally {
            ;(ze = t), (Kp = !1)
        }
    }
    return null
}
var Ji = [],
    Qi = 0,
    Du = null,
    $u = 0,
    Lr = [],
    jr = 0,
    wi = null,
    In = 1,
    Rn = ''
function Ja(e, t) {
    ;(Ji[Qi++] = $u), (Ji[Qi++] = Du), (Du = e), ($u = t)
}
function c9(e, t, r) {
    ;(Lr[jr++] = In), (Lr[jr++] = Rn), (Lr[jr++] = wi), (wi = e)
    var n = In
    e = Rn
    var a = 32 - on(n) - 1
    ;(n &= ~(1 << a)), (r += 1)
    var l = 32 - on(t) + a
    if (30 < l) {
        var o = a - (a % 5)
        ;(l = (n & ((1 << o) - 1)).toString(32)),
            (n >>= o),
            (a -= o),
            (In = (1 << (32 - on(t) + a)) | (r << a) | n),
            (Rn = l + e)
    } else (In = (1 << l) | (r << a) | n), (Rn = e)
}
function q1(e) {
    e.return !== null && (Ja(e, 1), c9(e, 1, 0))
}
function K1(e) {
    for (; e === Du; )
        (Du = Ji[--Qi]), (Ji[Qi] = null), ($u = Ji[--Qi]), (Ji[Qi] = null)
    for (; e === wi; )
        (wi = Lr[--jr]),
            (Lr[jr] = null),
            (Rn = Lr[--jr]),
            (Lr[jr] = null),
            (In = Lr[--jr]),
            (Lr[jr] = null)
}
var Sr = null,
    Nr = null,
    ot = !1,
    nn = null
function u9(e, t) {
    var r = Br(5, null, null, 0)
    ;(r.elementType = 'DELETED'),
        (r.stateNode = t),
        (r.return = e),
        (t = e.deletions),
        t === null ? ((e.deletions = [r]), (e.flags |= 16)) : t.push(r)
}
function $y(e, t) {
    switch (e.tag) {
        case 5:
            var r = e.type
            return (
                (t =
                    t.nodeType !== 1 ||
                    r.toLowerCase() !== t.nodeName.toLowerCase()
                        ? null
                        : t),
                t !== null
                    ? ((e.stateNode = t), (Sr = e), (Nr = Na(t.firstChild)), !0)
                    : !1
            )
        case 6:
            return (
                (t = e.pendingProps === '' || t.nodeType !== 3 ? null : t),
                t !== null ? ((e.stateNode = t), (Sr = e), (Nr = null), !0) : !1
            )
        case 13:
            return (
                (t = t.nodeType !== 8 ? null : t),
                t !== null
                    ? ((r = wi !== null ? { id: In, overflow: Rn } : null),
                      (e.memoizedState = {
                          dehydrated: t,
                          treeContext: r,
                          retryLane: 1073741824,
                      }),
                      (r = Br(18, null, null, 0)),
                      (r.stateNode = t),
                      (r.return = e),
                      (e.child = r),
                      (Sr = e),
                      (Nr = null),
                      !0)
                    : !1
            )
        default:
            return !1
    }
}
function Dm(e) {
    return (e.mode & 1) !== 0 && (e.flags & 128) === 0
}
function $m(e) {
    if (ot) {
        var t = Nr
        if (t) {
            var r = t
            if (!$y(e, t)) {
                if (Dm(e)) throw Error(Y(418))
                t = Na(r.nextSibling)
                var n = Sr
                t && $y(e, t)
                    ? u9(n, r)
                    : ((e.flags = (e.flags & -4097) | 2), (ot = !1), (Sr = e))
            }
        } else {
            if (Dm(e)) throw Error(Y(418))
            ;(e.flags = (e.flags & -4097) | 2), (ot = !1), (Sr = e)
        }
    }
}
function Iy(e) {
    for (
        e = e.return;
        e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13;

    )
        e = e.return
    Sr = e
}
function jc(e) {
    if (e !== Sr) return !1
    if (!ot) return Iy(e), (ot = !0), !1
    var t
    if (
        ((t = e.tag !== 3) &&
            !(t = e.tag !== 5) &&
            ((t = e.type),
            (t = t !== 'head' && t !== 'body' && !km(e.type, e.memoizedProps))),
        t && (t = Nr))
    ) {
        if (Dm(e)) throw (d9(), Error(Y(418)))
        for (; t; ) u9(e, t), (t = Na(t.nextSibling))
    }
    if ((Iy(e), e.tag === 13)) {
        if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
            throw Error(Y(317))
        e: {
            for (e = e.nextSibling, t = 0; e; ) {
                if (e.nodeType === 8) {
                    var r = e.data
                    if (r === '/$') {
                        if (t === 0) {
                            Nr = Na(e.nextSibling)
                            break e
                        }
                        t--
                    } else (r !== '$' && r !== '$!' && r !== '$?') || t++
                }
                e = e.nextSibling
            }
            Nr = null
        }
    } else Nr = Sr ? Na(e.stateNode.nextSibling) : null
    return !0
}
function d9() {
    for (var e = Nr; e; ) e = Na(e.nextSibling)
}
function wl() {
    ;(Nr = Sr = null), (ot = !1)
}
function Y1(e) {
    nn === null ? (nn = [e]) : nn.push(e)
}
var TP = Qn.ReactCurrentBatchConfig
function en(e, t) {
    if (e && e.defaultProps) {
        ;(t = pt({}, t)), (e = e.defaultProps)
        for (var r in e) t[r] === void 0 && (t[r] = e[r])
        return t
    }
    return t
}
var Iu = za(null),
    Ru = null,
    el = null,
    X1 = null
function Z1() {
    X1 = el = Ru = null
}
function J1(e) {
    var t = Iu.current
    rt(Iu), (e._currentValue = t)
}
function Im(e, t, r) {
    for (; e !== null; ) {
        var n = e.alternate
        if (
            ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), n !== null && (n.childLanes |= t))
                : n !== null && (n.childLanes & t) !== t && (n.childLanes |= t),
            e === r)
        )
            break
        e = e.return
    }
}
function sl(e, t) {
    ;(Ru = e),
        (X1 = el = null),
        (e = e.dependencies),
        e !== null &&
            e.firstContext !== null &&
            ((e.lanes & t) !== 0 && (or = !0), (e.firstContext = null))
}
function Hr(e) {
    var t = e._currentValue
    if (X1 !== e)
        if (((e = { context: e, memoizedValue: t, next: null }), el === null)) {
            if (Ru === null) throw Error(Y(308))
            ;(el = e), (Ru.dependencies = { lanes: 0, firstContext: e })
        } else el = el.next = e
    return t
}
var di = null
function Q1(e) {
    di === null ? (di = [e]) : di.push(e)
}
function f9(e, t, r, n) {
    var a = t.interleaved
    return (
        a === null ? ((r.next = r), Q1(t)) : ((r.next = a.next), (a.next = r)),
        (t.interleaved = r),
        qn(e, n)
    )
}
function qn(e, t) {
    e.lanes |= t
    var r = e.alternate
    for (r !== null && (r.lanes |= t), r = e, e = e.return; e !== null; )
        (e.childLanes |= t),
            (r = e.alternate),
            r !== null && (r.childLanes |= t),
            (r = e),
            (e = e.return)
    return r.tag === 3 ? r.stateNode : null
}
var sa = !1
function e0(e) {
    e.updateQueue = {
        baseState: e.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: { pending: null, interleaved: null, lanes: 0 },
        effects: null,
    }
}
function p9(e, t) {
    ;(e = e.updateQueue),
        t.updateQueue === e &&
            (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
            })
}
function zn(e, t) {
    return {
        eventTime: e,
        lane: t,
        tag: 0,
        payload: null,
        callback: null,
        next: null,
    }
}
function Sa(e, t, r) {
    var n = e.updateQueue
    if (n === null) return null
    if (((n = n.shared), (De & 2) !== 0)) {
        var a = n.pending
        return (
            a === null ? (t.next = t) : ((t.next = a.next), (a.next = t)),
            (n.pending = t),
            qn(e, r)
        )
    }
    return (
        (a = n.interleaved),
        a === null ? ((t.next = t), Q1(n)) : ((t.next = a.next), (a.next = t)),
        (n.interleaved = t),
        qn(e, r)
    )
}
function uu(e, t, r) {
    if (
        ((t = t.updateQueue),
        t !== null && ((t = t.shared), (r & 4194240) !== 0))
    ) {
        var n = t.lanes
        ;(n &= e.pendingLanes), (r |= n), (t.lanes = r), F1(e, r)
    }
}
function Ry(e, t) {
    var r = e.updateQueue,
        n = e.alternate
    if (n !== null && ((n = n.updateQueue), r === n)) {
        var a = null,
            l = null
        if (((r = r.firstBaseUpdate), r !== null)) {
            do {
                var o = {
                    eventTime: r.eventTime,
                    lane: r.lane,
                    tag: r.tag,
                    payload: r.payload,
                    callback: r.callback,
                    next: null,
                }
                l === null ? (a = l = o) : (l = l.next = o), (r = r.next)
            } while (r !== null)
            l === null ? (a = l = t) : (l = l.next = t)
        } else a = l = t
        ;(r = {
            baseState: n.baseState,
            firstBaseUpdate: a,
            lastBaseUpdate: l,
            shared: n.shared,
            effects: n.effects,
        }),
            (e.updateQueue = r)
        return
    }
    ;(e = r.lastBaseUpdate),
        e === null ? (r.firstBaseUpdate = t) : (e.next = t),
        (r.lastBaseUpdate = t)
}
function Lu(e, t, r, n) {
    var a = e.updateQueue
    sa = !1
    var l = a.firstBaseUpdate,
        o = a.lastBaseUpdate,
        s = a.shared.pending
    if (s !== null) {
        a.shared.pending = null
        var c = s,
            u = c.next
        ;(c.next = null), o === null ? (l = u) : (o.next = u), (o = c)
        var f = e.alternate
        f !== null &&
            ((f = f.updateQueue),
            (s = f.lastBaseUpdate),
            s !== o &&
                (s === null ? (f.firstBaseUpdate = u) : (s.next = u),
                (f.lastBaseUpdate = c)))
    }
    if (l !== null) {
        var p = a.baseState
        ;(o = 0), (f = u = c = null), (s = l)
        do {
            var m = s.lane,
                v = s.eventTime
            if ((n & m) === m) {
                f !== null &&
                    (f = f.next =
                        {
                            eventTime: v,
                            lane: 0,
                            tag: s.tag,
                            payload: s.payload,
                            callback: s.callback,
                            next: null,
                        })
                e: {
                    var b = e,
                        h = s
                    switch (((m = t), (v = r), h.tag)) {
                        case 1:
                            if (((b = h.payload), typeof b == 'function')) {
                                p = b.call(v, p, m)
                                break e
                            }
                            p = b
                            break e
                        case 3:
                            b.flags = (b.flags & -65537) | 128
                        case 0:
                            if (
                                ((b = h.payload),
                                (m =
                                    typeof b == 'function'
                                        ? b.call(v, p, m)
                                        : b),
                                m == null)
                            )
                                break e
                            p = pt({}, p, m)
                            break e
                        case 2:
                            sa = !0
                    }
                }
                s.callback !== null &&
                    s.lane !== 0 &&
                    ((e.flags |= 64),
                    (m = a.effects),
                    m === null ? (a.effects = [s]) : m.push(s))
            } else
                (v = {
                    eventTime: v,
                    lane: m,
                    tag: s.tag,
                    payload: s.payload,
                    callback: s.callback,
                    next: null,
                }),
                    f === null ? ((u = f = v), (c = p)) : (f = f.next = v),
                    (o |= m)
            if (((s = s.next), s === null)) {
                if (((s = a.shared.pending), s === null)) break
                ;(m = s),
                    (s = m.next),
                    (m.next = null),
                    (a.lastBaseUpdate = m),
                    (a.shared.pending = null)
            }
        } while (1)
        if (
            (f === null && (c = p),
            (a.baseState = c),
            (a.firstBaseUpdate = u),
            (a.lastBaseUpdate = f),
            (t = a.shared.interleaved),
            t !== null)
        ) {
            a = t
            do (o |= a.lane), (a = a.next)
            while (a !== t)
        } else l === null && (a.shared.lanes = 0)
        ;(Si |= o), (e.lanes = o), (e.memoizedState = p)
    }
}
function Ly(e, t, r) {
    if (((e = t.effects), (t.effects = null), e !== null))
        for (t = 0; t < e.length; t++) {
            var n = e[t],
                a = n.callback
            if (a !== null) {
                if (((n.callback = null), (n = r), typeof a != 'function'))
                    throw Error(Y(191, a))
                a.call(n)
            }
        }
}
var h9 = new fN.Component().refs
function Rm(e, t, r, n) {
    ;(t = e.memoizedState),
        (r = r(n, t)),
        (r = r == null ? t : pt({}, t, r)),
        (e.memoizedState = r),
        e.lanes === 0 && (e.updateQueue.baseState = r)
}
var cf = {
    isMounted: function (e) {
        return (e = e._reactInternals) ? Ti(e) === e : !1
    },
    enqueueSetState: function (e, t, r) {
        e = e._reactInternals
        var n = rr(),
            a = Pa(e),
            l = zn(n, a)
        ;(l.payload = t),
            r != null && (l.callback = r),
            (t = Sa(e, l, a)),
            t !== null && (sn(t, e, a, n), uu(t, e, a))
    },
    enqueueReplaceState: function (e, t, r) {
        e = e._reactInternals
        var n = rr(),
            a = Pa(e),
            l = zn(n, a)
        ;(l.tag = 1),
            (l.payload = t),
            r != null && (l.callback = r),
            (t = Sa(e, l, a)),
            t !== null && (sn(t, e, a, n), uu(t, e, a))
    },
    enqueueForceUpdate: function (e, t) {
        e = e._reactInternals
        var r = rr(),
            n = Pa(e),
            a = zn(r, n)
        ;(a.tag = 2),
            t != null && (a.callback = t),
            (t = Sa(e, a, n)),
            t !== null && (sn(t, e, n, r), uu(t, e, n))
    },
}
function jy(e, t, r, n, a, l, o) {
    return (
        (e = e.stateNode),
        typeof e.shouldComponentUpdate == 'function'
            ? e.shouldComponentUpdate(n, l, o)
            : t.prototype && t.prototype.isPureReactComponent
            ? !bs(r, n) || !bs(a, l)
            : !0
    )
}
function m9(e, t, r) {
    var n = !1,
        a = Da,
        l = t.contextType
    return (
        typeof l == 'object' && l !== null
            ? (l = Hr(l))
            : ((a = fr(t) ? xi : Zt.current),
              (n = t.contextTypes),
              (l = (n = n != null) ? xl(e, a) : Da)),
        (t = new t(r, l)),
        (e.memoizedState =
            t.state !== null && t.state !== void 0 ? t.state : null),
        (t.updater = cf),
        (e.stateNode = t),
        (t._reactInternals = e),
        n &&
            ((e = e.stateNode),
            (e.__reactInternalMemoizedUnmaskedChildContext = a),
            (e.__reactInternalMemoizedMaskedChildContext = l)),
        t
    )
}
function Fy(e, t, r, n) {
    ;(e = t.state),
        typeof t.componentWillReceiveProps == 'function' &&
            t.componentWillReceiveProps(r, n),
        typeof t.UNSAFE_componentWillReceiveProps == 'function' &&
            t.UNSAFE_componentWillReceiveProps(r, n),
        t.state !== e && cf.enqueueReplaceState(t, t.state, null)
}
function Lm(e, t, r, n) {
    var a = e.stateNode
    ;(a.props = r), (a.state = e.memoizedState), (a.refs = h9), e0(e)
    var l = t.contextType
    typeof l == 'object' && l !== null
        ? (a.context = Hr(l))
        : ((l = fr(t) ? xi : Zt.current), (a.context = xl(e, l))),
        (a.state = e.memoizedState),
        (l = t.getDerivedStateFromProps),
        typeof l == 'function' && (Rm(e, t, l, r), (a.state = e.memoizedState)),
        typeof t.getDerivedStateFromProps == 'function' ||
            typeof a.getSnapshotBeforeUpdate == 'function' ||
            (typeof a.UNSAFE_componentWillMount != 'function' &&
                typeof a.componentWillMount != 'function') ||
            ((t = a.state),
            typeof a.componentWillMount == 'function' && a.componentWillMount(),
            typeof a.UNSAFE_componentWillMount == 'function' &&
                a.UNSAFE_componentWillMount(),
            t !== a.state && cf.enqueueReplaceState(a, a.state, null),
            Lu(e, r, a, n),
            (a.state = e.memoizedState)),
        typeof a.componentDidMount == 'function' && (e.flags |= 4194308)
}
function Po(e, t, r) {
    if (
        ((e = r.ref),
        e !== null && typeof e != 'function' && typeof e != 'object')
    ) {
        if (r._owner) {
            if (((r = r._owner), r)) {
                if (r.tag !== 1) throw Error(Y(309))
                var n = r.stateNode
            }
            if (!n) throw Error(Y(147, e))
            var a = n,
                l = '' + e
            return t !== null &&
                t.ref !== null &&
                typeof t.ref == 'function' &&
                t.ref._stringRef === l
                ? t.ref
                : ((t = function (o) {
                      var s = a.refs
                      s === h9 && (s = a.refs = {}),
                          o === null ? delete s[l] : (s[l] = o)
                  }),
                  (t._stringRef = l),
                  t)
        }
        if (typeof e != 'string') throw Error(Y(284))
        if (!r._owner) throw Error(Y(290, e))
    }
    return e
}
function Fc(e, t) {
    throw (
        ((e = Object.prototype.toString.call(t)),
        Error(
            Y(
                31,
                e === '[object Object]'
                    ? 'object with keys {' + Object.keys(t).join(', ') + '}'
                    : e
            )
        ))
    )
}
function By(e) {
    var t = e._init
    return t(e._payload)
}
function g9(e) {
    function t(x, w) {
        if (e) {
            var y = x.deletions
            y === null ? ((x.deletions = [w]), (x.flags |= 16)) : y.push(w)
        }
    }
    function r(x, w) {
        if (!e) return null
        for (; w !== null; ) t(x, w), (w = w.sibling)
        return null
    }
    function n(x, w) {
        for (x = new Map(); w !== null; )
            w.key !== null ? x.set(w.key, w) : x.set(w.index, w),
                (w = w.sibling)
        return x
    }
    function a(x, w) {
        return (x = _a(x, w)), (x.index = 0), (x.sibling = null), x
    }
    function l(x, w, y) {
        return (
            (x.index = y),
            e
                ? ((y = x.alternate),
                  y !== null
                      ? ((y = y.index), y < w ? ((x.flags |= 2), w) : y)
                      : ((x.flags |= 2), w))
                : ((x.flags |= 1048576), w)
        )
    }
    function o(x) {
        return e && x.alternate === null && (x.flags |= 2), x
    }
    function s(x, w, y, N) {
        return w === null || w.tag !== 6
            ? ((w = th(y, x.mode, N)), (w.return = x), w)
            : ((w = a(w, y)), (w.return = x), w)
    }
    function c(x, w, y, N) {
        var S = y.type
        return S === Gi
            ? f(x, w, y.props.children, N, y.key)
            : w !== null &&
              (w.elementType === S ||
                  (typeof S == 'object' &&
                      S !== null &&
                      S.$$typeof === oa &&
                      By(S) === w.type))
            ? ((N = a(w, y.props)), (N.ref = Po(x, w, y)), (N.return = x), N)
            : ((N = gu(y.type, y.key, y.props, null, x.mode, N)),
              (N.ref = Po(x, w, y)),
              (N.return = x),
              N)
    }
    function u(x, w, y, N) {
        return w === null ||
            w.tag !== 4 ||
            w.stateNode.containerInfo !== y.containerInfo ||
            w.stateNode.implementation !== y.implementation
            ? ((w = rh(y, x.mode, N)), (w.return = x), w)
            : ((w = a(w, y.children || [])), (w.return = x), w)
    }
    function f(x, w, y, N, S) {
        return w === null || w.tag !== 7
            ? ((w = vi(y, x.mode, N, S)), (w.return = x), w)
            : ((w = a(w, y)), (w.return = x), w)
    }
    function p(x, w, y) {
        if ((typeof w == 'string' && w !== '') || typeof w == 'number')
            return (w = th('' + w, x.mode, y)), (w.return = x), w
        if (typeof w == 'object' && w !== null) {
            switch (w.$$typeof) {
                case Ec:
                    return (
                        (y = gu(w.type, w.key, w.props, null, x.mode, y)),
                        (y.ref = Po(x, null, w)),
                        (y.return = x),
                        y
                    )
                case Hi:
                    return (w = rh(w, x.mode, y)), (w.return = x), w
                case oa:
                    var N = w._init
                    return p(x, N(w._payload), y)
            }
            if (Fo(w) || xo(w))
                return (w = vi(w, x.mode, y, null)), (w.return = x), w
            Fc(x, w)
        }
        return null
    }
    function m(x, w, y, N) {
        var S = w !== null ? w.key : null
        if ((typeof y == 'string' && y !== '') || typeof y == 'number')
            return S !== null ? null : s(x, w, '' + y, N)
        if (typeof y == 'object' && y !== null) {
            switch (y.$$typeof) {
                case Ec:
                    return y.key === S ? c(x, w, y, N) : null
                case Hi:
                    return y.key === S ? u(x, w, y, N) : null
                case oa:
                    return (S = y._init), m(x, w, S(y._payload), N)
            }
            if (Fo(y) || xo(y)) return S !== null ? null : f(x, w, y, N, null)
            Fc(x, y)
        }
        return null
    }
    function v(x, w, y, N, S) {
        if ((typeof N == 'string' && N !== '') || typeof N == 'number')
            return (x = x.get(y) || null), s(w, x, '' + N, S)
        if (typeof N == 'object' && N !== null) {
            switch (N.$$typeof) {
                case Ec:
                    return (
                        (x = x.get(N.key === null ? y : N.key) || null),
                        c(w, x, N, S)
                    )
                case Hi:
                    return (
                        (x = x.get(N.key === null ? y : N.key) || null),
                        u(w, x, N, S)
                    )
                case oa:
                    var P = N._init
                    return v(x, w, y, P(N._payload), S)
            }
            if (Fo(N) || xo(N))
                return (x = x.get(y) || null), f(w, x, N, S, null)
            Fc(w, N)
        }
        return null
    }
    function b(x, w, y, N) {
        for (
            var S = null, P = null, E = w, k = (w = 0), M = null;
            E !== null && k < y.length;
            k++
        ) {
            E.index > k ? ((M = E), (E = null)) : (M = E.sibling)
            var A = m(x, E, y[k], N)
            if (A === null) {
                E === null && (E = M)
                break
            }
            e && E && A.alternate === null && t(x, E),
                (w = l(A, w, k)),
                P === null ? (S = A) : (P.sibling = A),
                (P = A),
                (E = M)
        }
        if (k === y.length) return r(x, E), ot && Ja(x, k), S
        if (E === null) {
            for (; k < y.length; k++)
                (E = p(x, y[k], N)),
                    E !== null &&
                        ((w = l(E, w, k)),
                        P === null ? (S = E) : (P.sibling = E),
                        (P = E))
            return ot && Ja(x, k), S
        }
        for (E = n(x, E); k < y.length; k++)
            (M = v(E, x, k, y[k], N)),
                M !== null &&
                    (e &&
                        M.alternate !== null &&
                        E.delete(M.key === null ? k : M.key),
                    (w = l(M, w, k)),
                    P === null ? (S = M) : (P.sibling = M),
                    (P = M))
        return (
            e &&
                E.forEach(function (_) {
                    return t(x, _)
                }),
            ot && Ja(x, k),
            S
        )
    }
    function h(x, w, y, N) {
        var S = xo(y)
        if (typeof S != 'function') throw Error(Y(150))
        if (((y = S.call(y)), y == null)) throw Error(Y(151))
        for (
            var P = (S = null), E = w, k = (w = 0), M = null, A = y.next();
            E !== null && !A.done;
            k++, A = y.next()
        ) {
            E.index > k ? ((M = E), (E = null)) : (M = E.sibling)
            var _ = m(x, E, A.value, N)
            if (_ === null) {
                E === null && (E = M)
                break
            }
            e && E && _.alternate === null && t(x, E),
                (w = l(_, w, k)),
                P === null ? (S = _) : (P.sibling = _),
                (P = _),
                (E = M)
        }
        if (A.done) return r(x, E), ot && Ja(x, k), S
        if (E === null) {
            for (; !A.done; k++, A = y.next())
                (A = p(x, A.value, N)),
                    A !== null &&
                        ((w = l(A, w, k)),
                        P === null ? (S = A) : (P.sibling = A),
                        (P = A))
            return ot && Ja(x, k), S
        }
        for (E = n(x, E); !A.done; k++, A = y.next())
            (A = v(E, x, k, A.value, N)),
                A !== null &&
                    (e &&
                        A.alternate !== null &&
                        E.delete(A.key === null ? k : A.key),
                    (w = l(A, w, k)),
                    P === null ? (S = A) : (P.sibling = A),
                    (P = A))
        return (
            e &&
                E.forEach(function (O) {
                    return t(x, O)
                }),
            ot && Ja(x, k),
            S
        )
    }
    function g(x, w, y, N) {
        if (
            (typeof y == 'object' &&
                y !== null &&
                y.type === Gi &&
                y.key === null &&
                (y = y.props.children),
            typeof y == 'object' && y !== null)
        ) {
            switch (y.$$typeof) {
                case Ec:
                    e: {
                        for (var S = y.key, P = w; P !== null; ) {
                            if (P.key === S) {
                                if (((S = y.type), S === Gi)) {
                                    if (P.tag === 7) {
                                        r(x, P.sibling),
                                            (w = a(P, y.props.children)),
                                            (w.return = x),
                                            (x = w)
                                        break e
                                    }
                                } else if (
                                    P.elementType === S ||
                                    (typeof S == 'object' &&
                                        S !== null &&
                                        S.$$typeof === oa &&
                                        By(S) === P.type)
                                ) {
                                    r(x, P.sibling),
                                        (w = a(P, y.props)),
                                        (w.ref = Po(x, P, y)),
                                        (w.return = x),
                                        (x = w)
                                    break e
                                }
                                r(x, P)
                                break
                            } else t(x, P)
                            P = P.sibling
                        }
                        y.type === Gi
                            ? ((w = vi(y.props.children, x.mode, N, y.key)),
                              (w.return = x),
                              (x = w))
                            : ((N = gu(
                                  y.type,
                                  y.key,
                                  y.props,
                                  null,
                                  x.mode,
                                  N
                              )),
                              (N.ref = Po(x, w, y)),
                              (N.return = x),
                              (x = N))
                    }
                    return o(x)
                case Hi:
                    e: {
                        for (P = y.key; w !== null; ) {
                            if (w.key === P)
                                if (
                                    w.tag === 4 &&
                                    w.stateNode.containerInfo ===
                                        y.containerInfo &&
                                    w.stateNode.implementation ===
                                        y.implementation
                                ) {
                                    r(x, w.sibling),
                                        (w = a(w, y.children || [])),
                                        (w.return = x),
                                        (x = w)
                                    break e
                                } else {
                                    r(x, w)
                                    break
                                }
                            else t(x, w)
                            w = w.sibling
                        }
                        ;(w = rh(y, x.mode, N)), (w.return = x), (x = w)
                    }
                    return o(x)
                case oa:
                    return (P = y._init), g(x, w, P(y._payload), N)
            }
            if (Fo(y)) return b(x, w, y, N)
            if (xo(y)) return h(x, w, y, N)
            Fc(x, y)
        }
        return (typeof y == 'string' && y !== '') || typeof y == 'number'
            ? ((y = '' + y),
              w !== null && w.tag === 6
                  ? (r(x, w.sibling), (w = a(w, y)), (w.return = x), (x = w))
                  : (r(x, w), (w = th(y, x.mode, N)), (w.return = x), (x = w)),
              o(x))
            : r(x, w)
    }
    return g
}
var Nl = g9(!0),
    v9 = g9(!1),
    oc = {},
    yn = za(oc),
    Ss = za(oc),
    Cs = za(oc)
function fi(e) {
    if (e === oc) throw Error(Y(174))
    return e
}
function t0(e, t) {
    switch ((Ze(Cs, t), Ze(Ss, e), Ze(yn, oc), (e = t.nodeType), e)) {
        case 9:
        case 11:
            t = (t = t.documentElement) ? t.namespaceURI : mm(null, '')
            break
        default:
            ;(e = e === 8 ? t.parentNode : t),
                (t = e.namespaceURI || null),
                (e = e.tagName),
                (t = mm(t, e))
    }
    rt(yn), Ze(yn, t)
}
function Sl() {
    rt(yn), rt(Ss), rt(Cs)
}
function y9(e) {
    fi(Cs.current)
    var t = fi(yn.current),
        r = mm(t, e.type)
    t !== r && (Ze(Ss, e), Ze(yn, r))
}
function r0(e) {
    Ss.current === e && (rt(yn), rt(Ss))
}
var ut = za(0)
function ju(e) {
    for (var t = e; t !== null; ) {
        if (t.tag === 13) {
            var r = t.memoizedState
            if (
                r !== null &&
                ((r = r.dehydrated),
                r === null || r.data === '$?' || r.data === '$!')
            )
                return t
        } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
            if ((t.flags & 128) !== 0) return t
        } else if (t.child !== null) {
            ;(t.child.return = t), (t = t.child)
            continue
        }
        if (t === e) break
        for (; t.sibling === null; ) {
            if (t.return === null || t.return === e) return null
            t = t.return
        }
        ;(t.sibling.return = t.return), (t = t.sibling)
    }
    return null
}
var Yp = []
function n0() {
    for (var e = 0; e < Yp.length; e++)
        Yp[e]._workInProgressVersionPrimary = null
    Yp.length = 0
}
var du = Qn.ReactCurrentDispatcher,
    Xp = Qn.ReactCurrentBatchConfig,
    Ni = 0,
    ft = null,
    xt = null,
    Ot = null,
    Fu = !1,
    es = !1,
    Ps = 0,
    MP = 0
function Wt() {
    throw Error(Y(321))
}
function a0(e, t) {
    if (t === null) return !1
    for (var r = 0; r < t.length && r < e.length; r++)
        if (!cn(e[r], t[r])) return !1
    return !0
}
function i0(e, t, r, n, a, l) {
    if (
        ((Ni = l),
        (ft = t),
        (t.memoizedState = null),
        (t.updateQueue = null),
        (t.lanes = 0),
        (du.current = e === null || e.memoizedState === null ? RP : LP),
        (e = r(n, a)),
        es)
    ) {
        l = 0
        do {
            if (((es = !1), (Ps = 0), 25 <= l)) throw Error(Y(301))
            ;(l += 1),
                (Ot = xt = null),
                (t.updateQueue = null),
                (du.current = jP),
                (e = r(n, a))
        } while (es)
    }
    if (
        ((du.current = Bu),
        (t = xt !== null && xt.next !== null),
        (Ni = 0),
        (Ot = xt = ft = null),
        (Fu = !1),
        t)
    )
        throw Error(Y(300))
    return e
}
function l0() {
    var e = Ps !== 0
    return (Ps = 0), e
}
function pn() {
    var e = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null,
    }
    return Ot === null ? (ft.memoizedState = Ot = e) : (Ot = Ot.next = e), Ot
}
function Gr() {
    if (xt === null) {
        var e = ft.alternate
        e = e !== null ? e.memoizedState : null
    } else e = xt.next
    var t = Ot === null ? ft.memoizedState : Ot.next
    if (t !== null) (Ot = t), (xt = e)
    else {
        if (e === null) throw Error(Y(310))
        ;(xt = e),
            (e = {
                memoizedState: xt.memoizedState,
                baseState: xt.baseState,
                baseQueue: xt.baseQueue,
                queue: xt.queue,
                next: null,
            }),
            Ot === null ? (ft.memoizedState = Ot = e) : (Ot = Ot.next = e)
    }
    return Ot
}
function _s(e, t) {
    return typeof t == 'function' ? t(e) : t
}
function Zp(e) {
    var t = Gr(),
        r = t.queue
    if (r === null) throw Error(Y(311))
    r.lastRenderedReducer = e
    var n = xt,
        a = n.baseQueue,
        l = r.pending
    if (l !== null) {
        if (a !== null) {
            var o = a.next
            ;(a.next = l.next), (l.next = o)
        }
        ;(n.baseQueue = a = l), (r.pending = null)
    }
    if (a !== null) {
        ;(l = a.next), (n = n.baseState)
        var s = (o = null),
            c = null,
            u = l
        do {
            var f = u.lane
            if ((Ni & f) === f)
                c !== null &&
                    (c = c.next =
                        {
                            lane: 0,
                            action: u.action,
                            hasEagerState: u.hasEagerState,
                            eagerState: u.eagerState,
                            next: null,
                        }),
                    (n = u.hasEagerState ? u.eagerState : e(n, u.action))
            else {
                var p = {
                    lane: f,
                    action: u.action,
                    hasEagerState: u.hasEagerState,
                    eagerState: u.eagerState,
                    next: null,
                }
                c === null ? ((s = c = p), (o = n)) : (c = c.next = p),
                    (ft.lanes |= f),
                    (Si |= f)
            }
            u = u.next
        } while (u !== null && u !== l)
        c === null ? (o = n) : (c.next = s),
            cn(n, t.memoizedState) || (or = !0),
            (t.memoizedState = n),
            (t.baseState = o),
            (t.baseQueue = c),
            (r.lastRenderedState = n)
    }
    if (((e = r.interleaved), e !== null)) {
        a = e
        do (l = a.lane), (ft.lanes |= l), (Si |= l), (a = a.next)
        while (a !== e)
    } else a === null && (r.lanes = 0)
    return [t.memoizedState, r.dispatch]
}
function Jp(e) {
    var t = Gr(),
        r = t.queue
    if (r === null) throw Error(Y(311))
    r.lastRenderedReducer = e
    var n = r.dispatch,
        a = r.pending,
        l = t.memoizedState
    if (a !== null) {
        r.pending = null
        var o = (a = a.next)
        do (l = e(l, o.action)), (o = o.next)
        while (o !== a)
        cn(l, t.memoizedState) || (or = !0),
            (t.memoizedState = l),
            t.baseQueue === null && (t.baseState = l),
            (r.lastRenderedState = l)
    }
    return [l, n]
}
function b9() {}
function x9(e, t) {
    var r = ft,
        n = Gr(),
        a = t(),
        l = !cn(n.memoizedState, a)
    if (
        (l && ((n.memoizedState = a), (or = !0)),
        (n = n.queue),
        o0(S9.bind(null, r, n, e), [e]),
        n.getSnapshot !== t || l || (Ot !== null && Ot.memoizedState.tag & 1))
    ) {
        if (
            ((r.flags |= 2048),
            As(9, N9.bind(null, r, n, a, t), void 0, null),
            Tt === null)
        )
            throw Error(Y(349))
        ;(Ni & 30) !== 0 || w9(r, t, a)
    }
    return a
}
function w9(e, t, r) {
    ;(e.flags |= 16384),
        (e = { getSnapshot: t, value: r }),
        (t = ft.updateQueue),
        t === null
            ? ((t = { lastEffect: null, stores: null }),
              (ft.updateQueue = t),
              (t.stores = [e]))
            : ((r = t.stores), r === null ? (t.stores = [e]) : r.push(e))
}
function N9(e, t, r, n) {
    ;(t.value = r), (t.getSnapshot = n), C9(t) && P9(e)
}
function S9(e, t, r) {
    return r(function () {
        C9(t) && P9(e)
    })
}
function C9(e) {
    var t = e.getSnapshot
    e = e.value
    try {
        var r = t()
        return !cn(e, r)
    } catch {
        return !0
    }
}
function P9(e) {
    var t = qn(e, 1)
    t !== null && sn(t, e, 1, -1)
}
function zy(e) {
    var t = pn()
    return (
        typeof e == 'function' && (e = e()),
        (t.memoizedState = t.baseState = e),
        (e = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: _s,
            lastRenderedState: e,
        }),
        (t.queue = e),
        (e = e.dispatch = IP.bind(null, ft, e)),
        [t.memoizedState, e]
    )
}
function As(e, t, r, n) {
    return (
        (e = { tag: e, create: t, destroy: r, deps: n, next: null }),
        (t = ft.updateQueue),
        t === null
            ? ((t = { lastEffect: null, stores: null }),
              (ft.updateQueue = t),
              (t.lastEffect = e.next = e))
            : ((r = t.lastEffect),
              r === null
                  ? (t.lastEffect = e.next = e)
                  : ((n = r.next),
                    (r.next = e),
                    (e.next = n),
                    (t.lastEffect = e))),
        e
    )
}
function _9() {
    return Gr().memoizedState
}
function fu(e, t, r, n) {
    var a = pn()
    ;(ft.flags |= e),
        (a.memoizedState = As(1 | t, r, void 0, n === void 0 ? null : n))
}
function uf(e, t, r, n) {
    var a = Gr()
    n = n === void 0 ? null : n
    var l = void 0
    if (xt !== null) {
        var o = xt.memoizedState
        if (((l = o.destroy), n !== null && a0(n, o.deps))) {
            a.memoizedState = As(t, r, l, n)
            return
        }
    }
    ;(ft.flags |= e), (a.memoizedState = As(1 | t, r, l, n))
}
function Vy(e, t) {
    return fu(8390656, 8, e, t)
}
function o0(e, t) {
    return uf(2048, 8, e, t)
}
function A9(e, t) {
    return uf(4, 2, e, t)
}
function E9(e, t) {
    return uf(4, 4, e, t)
}
function k9(e, t) {
    if (typeof t == 'function')
        return (
            (e = e()),
            t(e),
            function () {
                t(null)
            }
        )
    if (t != null)
        return (
            (e = e()),
            (t.current = e),
            function () {
                t.current = null
            }
        )
}
function O9(e, t, r) {
    return (
        (r = r != null ? r.concat([e]) : null), uf(4, 4, k9.bind(null, t, e), r)
    )
}
function s0() {}
function T9(e, t) {
    var r = Gr()
    t = t === void 0 ? null : t
    var n = r.memoizedState
    return n !== null && t !== null && a0(t, n[1])
        ? n[0]
        : ((r.memoizedState = [e, t]), e)
}
function M9(e, t) {
    var r = Gr()
    t = t === void 0 ? null : t
    var n = r.memoizedState
    return n !== null && t !== null && a0(t, n[1])
        ? n[0]
        : ((e = e()), (r.memoizedState = [e, t]), e)
}
function D9(e, t, r) {
    return (Ni & 21) === 0
        ? (e.baseState && ((e.baseState = !1), (or = !0)),
          (e.memoizedState = r))
        : (cn(r, t) ||
              ((r = RN()), (ft.lanes |= r), (Si |= r), (e.baseState = !0)),
          t)
}
function DP(e, t) {
    var r = ze
    ;(ze = r !== 0 && 4 > r ? r : 4), e(!0)
    var n = Xp.transition
    Xp.transition = {}
    try {
        e(!1), t()
    } finally {
        ;(ze = r), (Xp.transition = n)
    }
}
function $9() {
    return Gr().memoizedState
}
function $P(e, t, r) {
    var n = Pa(e)
    if (
        ((r = {
            lane: n,
            action: r,
            hasEagerState: !1,
            eagerState: null,
            next: null,
        }),
        I9(e))
    )
        R9(t, r)
    else if (((r = f9(e, t, r, n)), r !== null)) {
        var a = rr()
        sn(r, e, n, a), L9(r, t, n)
    }
}
function IP(e, t, r) {
    var n = Pa(e),
        a = {
            lane: n,
            action: r,
            hasEagerState: !1,
            eagerState: null,
            next: null,
        }
    if (I9(e)) R9(t, a)
    else {
        var l = e.alternate
        if (
            e.lanes === 0 &&
            (l === null || l.lanes === 0) &&
            ((l = t.lastRenderedReducer), l !== null)
        )
            try {
                var o = t.lastRenderedState,
                    s = l(o, r)
                if (((a.hasEagerState = !0), (a.eagerState = s), cn(s, o))) {
                    var c = t.interleaved
                    c === null
                        ? ((a.next = a), Q1(t))
                        : ((a.next = c.next), (c.next = a)),
                        (t.interleaved = a)
                    return
                }
            } catch {
            } finally {
            }
        ;(r = f9(e, t, a, n)),
            r !== null && ((a = rr()), sn(r, e, n, a), L9(r, t, n))
    }
}
function I9(e) {
    var t = e.alternate
    return e === ft || (t !== null && t === ft)
}
function R9(e, t) {
    es = Fu = !0
    var r = e.pending
    r === null ? (t.next = t) : ((t.next = r.next), (r.next = t)),
        (e.pending = t)
}
function L9(e, t, r) {
    if ((r & 4194240) !== 0) {
        var n = t.lanes
        ;(n &= e.pendingLanes), (r |= n), (t.lanes = r), F1(e, r)
    }
}
var Bu = {
        readContext: Hr,
        useCallback: Wt,
        useContext: Wt,
        useEffect: Wt,
        useImperativeHandle: Wt,
        useInsertionEffect: Wt,
        useLayoutEffect: Wt,
        useMemo: Wt,
        useReducer: Wt,
        useRef: Wt,
        useState: Wt,
        useDebugValue: Wt,
        useDeferredValue: Wt,
        useTransition: Wt,
        useMutableSource: Wt,
        useSyncExternalStore: Wt,
        useId: Wt,
        unstable_isNewReconciler: !1,
    },
    RP = {
        readContext: Hr,
        useCallback: function (e, t) {
            return (pn().memoizedState = [e, t === void 0 ? null : t]), e
        },
        useContext: Hr,
        useEffect: Vy,
        useImperativeHandle: function (e, t, r) {
            return (
                (r = r != null ? r.concat([e]) : null),
                fu(4194308, 4, k9.bind(null, t, e), r)
            )
        },
        useLayoutEffect: function (e, t) {
            return fu(4194308, 4, e, t)
        },
        useInsertionEffect: function (e, t) {
            return fu(4, 2, e, t)
        },
        useMemo: function (e, t) {
            var r = pn()
            return (
                (t = t === void 0 ? null : t),
                (e = e()),
                (r.memoizedState = [e, t]),
                e
            )
        },
        useReducer: function (e, t, r) {
            var n = pn()
            return (
                (t = r !== void 0 ? r(t) : t),
                (n.memoizedState = n.baseState = t),
                (e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: e,
                    lastRenderedState: t,
                }),
                (n.queue = e),
                (e = e.dispatch = $P.bind(null, ft, e)),
                [n.memoizedState, e]
            )
        },
        useRef: function (e) {
            var t = pn()
            return (e = { current: e }), (t.memoizedState = e)
        },
        useState: zy,
        useDebugValue: s0,
        useDeferredValue: function (e) {
            return (pn().memoizedState = e)
        },
        useTransition: function () {
            var e = zy(!1),
                t = e[0]
            return (e = DP.bind(null, e[1])), (pn().memoizedState = e), [t, e]
        },
        useMutableSource: function () {},
        useSyncExternalStore: function (e, t, r) {
            var n = ft,
                a = pn()
            if (ot) {
                if (r === void 0) throw Error(Y(407))
                r = r()
            } else {
                if (((r = t()), Tt === null)) throw Error(Y(349))
                ;(Ni & 30) !== 0 || w9(n, t, r)
            }
            a.memoizedState = r
            var l = { value: r, getSnapshot: t }
            return (
                (a.queue = l),
                Vy(S9.bind(null, n, l, e), [e]),
                (n.flags |= 2048),
                As(9, N9.bind(null, n, l, r, t), void 0, null),
                r
            )
        },
        useId: function () {
            var e = pn(),
                t = Tt.identifierPrefix
            if (ot) {
                var r = Rn,
                    n = In
                ;(r = (n & ~(1 << (32 - on(n) - 1))).toString(32) + r),
                    (t = ':' + t + 'R' + r),
                    (r = Ps++),
                    0 < r && (t += 'H' + r.toString(32)),
                    (t += ':')
            } else (r = MP++), (t = ':' + t + 'r' + r.toString(32) + ':')
            return (e.memoizedState = t)
        },
        unstable_isNewReconciler: !1,
    },
    LP = {
        readContext: Hr,
        useCallback: T9,
        useContext: Hr,
        useEffect: o0,
        useImperativeHandle: O9,
        useInsertionEffect: A9,
        useLayoutEffect: E9,
        useMemo: M9,
        useReducer: Zp,
        useRef: _9,
        useState: function () {
            return Zp(_s)
        },
        useDebugValue: s0,
        useDeferredValue: function (e) {
            var t = Gr()
            return D9(t, xt.memoizedState, e)
        },
        useTransition: function () {
            var e = Zp(_s)[0],
                t = Gr().memoizedState
            return [e, t]
        },
        useMutableSource: b9,
        useSyncExternalStore: x9,
        useId: $9,
        unstable_isNewReconciler: !1,
    },
    jP = {
        readContext: Hr,
        useCallback: T9,
        useContext: Hr,
        useEffect: o0,
        useImperativeHandle: O9,
        useInsertionEffect: A9,
        useLayoutEffect: E9,
        useMemo: M9,
        useReducer: Jp,
        useRef: _9,
        useState: function () {
            return Jp(_s)
        },
        useDebugValue: s0,
        useDeferredValue: function (e) {
            var t = Gr()
            return xt === null
                ? (t.memoizedState = e)
                : D9(t, xt.memoizedState, e)
        },
        useTransition: function () {
            var e = Jp(_s)[0],
                t = Gr().memoizedState
            return [e, t]
        },
        useMutableSource: b9,
        useSyncExternalStore: x9,
        useId: $9,
        unstable_isNewReconciler: !1,
    }
function Cl(e, t) {
    try {
        var r = '',
            n = t
        do (r += fC(n)), (n = n.return)
        while (n)
        var a = r
    } catch (l) {
        a =
            `
Error generating stack: ` +
            l.message +
            `
` +
            l.stack
    }
    return { value: e, source: t, stack: a, digest: null }
}
function Qp(e, t, r) {
    return {
        value: e,
        source: null,
        stack: r != null ? r : null,
        digest: t != null ? t : null,
    }
}
function jm(e, t) {
    try {
        console.error(t.value)
    } catch (r) {
        setTimeout(function () {
            throw r
        })
    }
}
var FP = typeof WeakMap == 'function' ? WeakMap : Map
function j9(e, t, r) {
    ;(r = zn(-1, r)), (r.tag = 3), (r.payload = { element: null })
    var n = t.value
    return (
        (r.callback = function () {
            Vu || ((Vu = !0), (Km = n)), jm(e, t)
        }),
        r
    )
}
function F9(e, t, r) {
    ;(r = zn(-1, r)), (r.tag = 3)
    var n = e.type.getDerivedStateFromError
    if (typeof n == 'function') {
        var a = t.value
        ;(r.payload = function () {
            return n(a)
        }),
            (r.callback = function () {
                jm(e, t)
            })
    }
    var l = e.stateNode
    return (
        l !== null &&
            typeof l.componentDidCatch == 'function' &&
            (r.callback = function () {
                jm(e, t),
                    typeof n != 'function' &&
                        (Ca === null ? (Ca = new Set([this])) : Ca.add(this))
                var o = t.stack
                this.componentDidCatch(t.value, {
                    componentStack: o !== null ? o : '',
                })
            }),
        r
    )
}
function Uy(e, t, r) {
    var n = e.pingCache
    if (n === null) {
        n = e.pingCache = new FP()
        var a = new Set()
        n.set(t, a)
    } else (a = n.get(t)), a === void 0 && ((a = new Set()), n.set(t, a))
    a.has(r) || (a.add(r), (e = QP.bind(null, e, t, r)), t.then(e, e))
}
function Wy(e) {
    do {
        var t
        if (
            ((t = e.tag === 13) &&
                ((t = e.memoizedState),
                (t = t !== null ? t.dehydrated !== null : !0)),
            t)
        )
            return e
        e = e.return
    } while (e !== null)
    return null
}
function Hy(e, t, r, n, a) {
    return (e.mode & 1) === 0
        ? (e === t
              ? (e.flags |= 65536)
              : ((e.flags |= 128),
                (r.flags |= 131072),
                (r.flags &= -52805),
                r.tag === 1 &&
                    (r.alternate === null
                        ? (r.tag = 17)
                        : ((t = zn(-1, 1)), (t.tag = 2), Sa(r, t, 1))),
                (r.lanes |= 1)),
          e)
        : ((e.flags |= 65536), (e.lanes = a), e)
}
var BP = Qn.ReactCurrentOwner,
    or = !1
function Jt(e, t, r, n) {
    t.child = e === null ? v9(t, null, r, n) : Nl(t, e.child, r, n)
}
function Gy(e, t, r, n, a) {
    r = r.render
    var l = t.ref
    return (
        sl(t, a),
        (n = i0(e, t, r, n, l, a)),
        (r = l0()),
        e !== null && !or
            ? ((t.updateQueue = e.updateQueue),
              (t.flags &= -2053),
              (e.lanes &= ~a),
              Kn(e, t, a))
            : (ot && r && q1(t), (t.flags |= 1), Jt(e, t, n, a), t.child)
    )
}
function qy(e, t, r, n, a) {
    if (e === null) {
        var l = r.type
        return typeof l == 'function' &&
            !g0(l) &&
            l.defaultProps === void 0 &&
            r.compare === null &&
            r.defaultProps === void 0
            ? ((t.tag = 15), (t.type = l), B9(e, t, l, n, a))
            : ((e = gu(r.type, null, n, t, t.mode, a)),
              (e.ref = t.ref),
              (e.return = t),
              (t.child = e))
    }
    if (((l = e.child), (e.lanes & a) === 0)) {
        var o = l.memoizedProps
        if (
            ((r = r.compare),
            (r = r !== null ? r : bs),
            r(o, n) && e.ref === t.ref)
        )
            return Kn(e, t, a)
    }
    return (
        (t.flags |= 1),
        (e = _a(l, n)),
        (e.ref = t.ref),
        (e.return = t),
        (t.child = e)
    )
}
function B9(e, t, r, n, a) {
    if (e !== null) {
        var l = e.memoizedProps
        if (bs(l, n) && e.ref === t.ref)
            if (((or = !1), (t.pendingProps = n = l), (e.lanes & a) !== 0))
                (e.flags & 131072) !== 0 && (or = !0)
            else return (t.lanes = e.lanes), Kn(e, t, a)
    }
    return Fm(e, t, r, n, a)
}
function z9(e, t, r) {
    var n = t.pendingProps,
        a = n.children,
        l = e !== null ? e.memoizedState : null
    if (n.mode === 'hidden')
        if ((t.mode & 1) === 0)
            (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
            }),
                Ze(rl, yr),
                (yr |= r)
        else {
            if ((r & 1073741824) === 0)
                return (
                    (e = l !== null ? l.baseLanes | r : r),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = {
                        baseLanes: e,
                        cachePool: null,
                        transitions: null,
                    }),
                    (t.updateQueue = null),
                    Ze(rl, yr),
                    (yr |= e),
                    null
                )
            ;(t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
            }),
                (n = l !== null ? l.baseLanes : r),
                Ze(rl, yr),
                (yr |= n)
        }
    else
        l !== null
            ? ((n = l.baseLanes | r), (t.memoizedState = null))
            : (n = r),
            Ze(rl, yr),
            (yr |= n)
    return Jt(e, t, a, r), t.child
}
function V9(e, t) {
    var r = t.ref
    ;((e === null && r !== null) || (e !== null && e.ref !== r)) &&
        ((t.flags |= 512), (t.flags |= 2097152))
}
function Fm(e, t, r, n, a) {
    var l = fr(r) ? xi : Zt.current
    return (
        (l = xl(t, l)),
        sl(t, a),
        (r = i0(e, t, r, n, l, a)),
        (n = l0()),
        e !== null && !or
            ? ((t.updateQueue = e.updateQueue),
              (t.flags &= -2053),
              (e.lanes &= ~a),
              Kn(e, t, a))
            : (ot && n && q1(t), (t.flags |= 1), Jt(e, t, r, a), t.child)
    )
}
function Ky(e, t, r, n, a) {
    if (fr(r)) {
        var l = !0
        Mu(t)
    } else l = !1
    if ((sl(t, a), t.stateNode === null))
        pu(e, t), m9(t, r, n), Lm(t, r, n, a), (n = !0)
    else if (e === null) {
        var o = t.stateNode,
            s = t.memoizedProps
        o.props = s
        var c = o.context,
            u = r.contextType
        typeof u == 'object' && u !== null
            ? (u = Hr(u))
            : ((u = fr(r) ? xi : Zt.current), (u = xl(t, u)))
        var f = r.getDerivedStateFromProps,
            p =
                typeof f == 'function' ||
                typeof o.getSnapshotBeforeUpdate == 'function'
        p ||
            (typeof o.UNSAFE_componentWillReceiveProps != 'function' &&
                typeof o.componentWillReceiveProps != 'function') ||
            ((s !== n || c !== u) && Fy(t, o, n, u)),
            (sa = !1)
        var m = t.memoizedState
        ;(o.state = m),
            Lu(t, n, o, a),
            (c = t.memoizedState),
            s !== n || m !== c || dr.current || sa
                ? (typeof f == 'function' &&
                      (Rm(t, r, f, n), (c = t.memoizedState)),
                  (s = sa || jy(t, r, s, n, m, c, u))
                      ? (p ||
                            (typeof o.UNSAFE_componentWillMount != 'function' &&
                                typeof o.componentWillMount != 'function') ||
                            (typeof o.componentWillMount == 'function' &&
                                o.componentWillMount(),
                            typeof o.UNSAFE_componentWillMount == 'function' &&
                                o.UNSAFE_componentWillMount()),
                        typeof o.componentDidMount == 'function' &&
                            (t.flags |= 4194308))
                      : (typeof o.componentDidMount == 'function' &&
                            (t.flags |= 4194308),
                        (t.memoizedProps = n),
                        (t.memoizedState = c)),
                  (o.props = n),
                  (o.state = c),
                  (o.context = u),
                  (n = s))
                : (typeof o.componentDidMount == 'function' &&
                      (t.flags |= 4194308),
                  (n = !1))
    } else {
        ;(o = t.stateNode),
            p9(e, t),
            (s = t.memoizedProps),
            (u = t.type === t.elementType ? s : en(t.type, s)),
            (o.props = u),
            (p = t.pendingProps),
            (m = o.context),
            (c = r.contextType),
            typeof c == 'object' && c !== null
                ? (c = Hr(c))
                : ((c = fr(r) ? xi : Zt.current), (c = xl(t, c)))
        var v = r.getDerivedStateFromProps
        ;(f =
            typeof v == 'function' ||
            typeof o.getSnapshotBeforeUpdate == 'function') ||
            (typeof o.UNSAFE_componentWillReceiveProps != 'function' &&
                typeof o.componentWillReceiveProps != 'function') ||
            ((s !== p || m !== c) && Fy(t, o, n, c)),
            (sa = !1),
            (m = t.memoizedState),
            (o.state = m),
            Lu(t, n, o, a)
        var b = t.memoizedState
        s !== p || m !== b || dr.current || sa
            ? (typeof v == 'function' &&
                  (Rm(t, r, v, n), (b = t.memoizedState)),
              (u = sa || jy(t, r, u, n, m, b, c) || !1)
                  ? (f ||
                        (typeof o.UNSAFE_componentWillUpdate != 'function' &&
                            typeof o.componentWillUpdate != 'function') ||
                        (typeof o.componentWillUpdate == 'function' &&
                            o.componentWillUpdate(n, b, c),
                        typeof o.UNSAFE_componentWillUpdate == 'function' &&
                            o.UNSAFE_componentWillUpdate(n, b, c)),
                    typeof o.componentDidUpdate == 'function' && (t.flags |= 4),
                    typeof o.getSnapshotBeforeUpdate == 'function' &&
                        (t.flags |= 1024))
                  : (typeof o.componentDidUpdate != 'function' ||
                        (s === e.memoizedProps && m === e.memoizedState) ||
                        (t.flags |= 4),
                    typeof o.getSnapshotBeforeUpdate != 'function' ||
                        (s === e.memoizedProps && m === e.memoizedState) ||
                        (t.flags |= 1024),
                    (t.memoizedProps = n),
                    (t.memoizedState = b)),
              (o.props = n),
              (o.state = b),
              (o.context = c),
              (n = u))
            : (typeof o.componentDidUpdate != 'function' ||
                  (s === e.memoizedProps && m === e.memoizedState) ||
                  (t.flags |= 4),
              typeof o.getSnapshotBeforeUpdate != 'function' ||
                  (s === e.memoizedProps && m === e.memoizedState) ||
                  (t.flags |= 1024),
              (n = !1))
    }
    return Bm(e, t, r, n, l, a)
}
function Bm(e, t, r, n, a, l) {
    V9(e, t)
    var o = (t.flags & 128) !== 0
    if (!n && !o) return a && Dy(t, r, !1), Kn(e, t, l)
    ;(n = t.stateNode), (BP.current = t)
    var s =
        o && typeof r.getDerivedStateFromError != 'function' ? null : n.render()
    return (
        (t.flags |= 1),
        e !== null && o
            ? ((t.child = Nl(t, e.child, null, l)),
              (t.child = Nl(t, null, s, l)))
            : Jt(e, t, s, l),
        (t.memoizedState = n.state),
        a && Dy(t, r, !0),
        t.child
    )
}
function U9(e) {
    var t = e.stateNode
    t.pendingContext
        ? My(e, t.pendingContext, t.pendingContext !== t.context)
        : t.context && My(e, t.context, !1),
        t0(e, t.containerInfo)
}
function Yy(e, t, r, n, a) {
    return wl(), Y1(a), (t.flags |= 256), Jt(e, t, r, n), t.child
}
var zm = { dehydrated: null, treeContext: null, retryLane: 0 }
function Vm(e) {
    return { baseLanes: e, cachePool: null, transitions: null }
}
function W9(e, t, r) {
    var n = t.pendingProps,
        a = ut.current,
        l = !1,
        o = (t.flags & 128) !== 0,
        s
    if (
        ((s = o) ||
            (s = e !== null && e.memoizedState === null ? !1 : (a & 2) !== 0),
        s
            ? ((l = !0), (t.flags &= -129))
            : (e === null || e.memoizedState !== null) && (a |= 1),
        Ze(ut, a & 1),
        e === null)
    )
        return (
            $m(t),
            (e = t.memoizedState),
            e !== null && ((e = e.dehydrated), e !== null)
                ? ((t.mode & 1) === 0
                      ? (t.lanes = 1)
                      : e.data === '$!'
                      ? (t.lanes = 8)
                      : (t.lanes = 1073741824),
                  null)
                : ((o = n.children),
                  (e = n.fallback),
                  l
                      ? ((n = t.mode),
                        (l = t.child),
                        (o = { mode: 'hidden', children: o }),
                        (n & 1) === 0 && l !== null
                            ? ((l.childLanes = 0), (l.pendingProps = o))
                            : (l = pf(o, n, 0, null)),
                        (e = vi(e, n, r, null)),
                        (l.return = t),
                        (e.return = t),
                        (l.sibling = e),
                        (t.child = l),
                        (t.child.memoizedState = Vm(r)),
                        (t.memoizedState = zm),
                        e)
                      : c0(t, o))
        )
    if (((a = e.memoizedState), a !== null && ((s = a.dehydrated), s !== null)))
        return zP(e, t, o, n, s, a, r)
    if (l) {
        ;(l = n.fallback), (o = t.mode), (a = e.child), (s = a.sibling)
        var c = { mode: 'hidden', children: n.children }
        return (
            (o & 1) === 0 && t.child !== a
                ? ((n = t.child),
                  (n.childLanes = 0),
                  (n.pendingProps = c),
                  (t.deletions = null))
                : ((n = _a(a, c)),
                  (n.subtreeFlags = a.subtreeFlags & 14680064)),
            s !== null
                ? (l = _a(s, l))
                : ((l = vi(l, o, r, null)), (l.flags |= 2)),
            (l.return = t),
            (n.return = t),
            (n.sibling = l),
            (t.child = n),
            (n = l),
            (l = t.child),
            (o = e.child.memoizedState),
            (o =
                o === null
                    ? Vm(r)
                    : {
                          baseLanes: o.baseLanes | r,
                          cachePool: null,
                          transitions: o.transitions,
                      }),
            (l.memoizedState = o),
            (l.childLanes = e.childLanes & ~r),
            (t.memoizedState = zm),
            n
        )
    }
    return (
        (l = e.child),
        (e = l.sibling),
        (n = _a(l, { mode: 'visible', children: n.children })),
        (t.mode & 1) === 0 && (n.lanes = r),
        (n.return = t),
        (n.sibling = null),
        e !== null &&
            ((r = t.deletions),
            r === null ? ((t.deletions = [e]), (t.flags |= 16)) : r.push(e)),
        (t.child = n),
        (t.memoizedState = null),
        n
    )
}
function c0(e, t) {
    return (
        (t = pf({ mode: 'visible', children: t }, e.mode, 0, null)),
        (t.return = e),
        (e.child = t)
    )
}
function Bc(e, t, r, n) {
    return (
        n !== null && Y1(n),
        Nl(t, e.child, null, r),
        (e = c0(t, t.pendingProps.children)),
        (e.flags |= 2),
        (t.memoizedState = null),
        e
    )
}
function zP(e, t, r, n, a, l, o) {
    if (r)
        return t.flags & 256
            ? ((t.flags &= -257), (n = Qp(Error(Y(422)))), Bc(e, t, o, n))
            : t.memoizedState !== null
            ? ((t.child = e.child), (t.flags |= 128), null)
            : ((l = n.fallback),
              (a = t.mode),
              (n = pf({ mode: 'visible', children: n.children }, a, 0, null)),
              (l = vi(l, a, o, null)),
              (l.flags |= 2),
              (n.return = t),
              (l.return = t),
              (n.sibling = l),
              (t.child = n),
              (t.mode & 1) !== 0 && Nl(t, e.child, null, o),
              (t.child.memoizedState = Vm(o)),
              (t.memoizedState = zm),
              l)
    if ((t.mode & 1) === 0) return Bc(e, t, o, null)
    if (a.data === '$!') {
        if (((n = a.nextSibling && a.nextSibling.dataset), n)) var s = n.dgst
        return (
            (n = s), (l = Error(Y(419))), (n = Qp(l, n, void 0)), Bc(e, t, o, n)
        )
    }
    if (((s = (o & e.childLanes) !== 0), or || s)) {
        if (((n = Tt), n !== null)) {
            switch (o & -o) {
                case 4:
                    a = 2
                    break
                case 16:
                    a = 8
                    break
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    a = 32
                    break
                case 536870912:
                    a = 268435456
                    break
                default:
                    a = 0
            }
            ;(a = (a & (n.suspendedLanes | o)) !== 0 ? 0 : a),
                a !== 0 &&
                    a !== l.retryLane &&
                    ((l.retryLane = a), qn(e, a), sn(n, e, a, -1))
        }
        return m0(), (n = Qp(Error(Y(421)))), Bc(e, t, o, n)
    }
    return a.data === '$?'
        ? ((t.flags |= 128),
          (t.child = e.child),
          (t = e7.bind(null, e)),
          (a._reactRetry = t),
          null)
        : ((e = l.treeContext),
          (Nr = Na(a.nextSibling)),
          (Sr = t),
          (ot = !0),
          (nn = null),
          e !== null &&
              ((Lr[jr++] = In),
              (Lr[jr++] = Rn),
              (Lr[jr++] = wi),
              (In = e.id),
              (Rn = e.overflow),
              (wi = t)),
          (t = c0(t, n.children)),
          (t.flags |= 4096),
          t)
}
function Xy(e, t, r) {
    e.lanes |= t
    var n = e.alternate
    n !== null && (n.lanes |= t), Im(e.return, t, r)
}
function eh(e, t, r, n, a) {
    var l = e.memoizedState
    l === null
        ? (e.memoizedState = {
              isBackwards: t,
              rendering: null,
              renderingStartTime: 0,
              last: n,
              tail: r,
              tailMode: a,
          })
        : ((l.isBackwards = t),
          (l.rendering = null),
          (l.renderingStartTime = 0),
          (l.last = n),
          (l.tail = r),
          (l.tailMode = a))
}
function H9(e, t, r) {
    var n = t.pendingProps,
        a = n.revealOrder,
        l = n.tail
    if ((Jt(e, t, n.children, r), (n = ut.current), (n & 2) !== 0))
        (n = (n & 1) | 2), (t.flags |= 128)
    else {
        if (e !== null && (e.flags & 128) !== 0)
            e: for (e = t.child; e !== null; ) {
                if (e.tag === 13) e.memoizedState !== null && Xy(e, r, t)
                else if (e.tag === 19) Xy(e, r, t)
                else if (e.child !== null) {
                    ;(e.child.return = e), (e = e.child)
                    continue
                }
                if (e === t) break e
                for (; e.sibling === null; ) {
                    if (e.return === null || e.return === t) break e
                    e = e.return
                }
                ;(e.sibling.return = e.return), (e = e.sibling)
            }
        n &= 1
    }
    if ((Ze(ut, n), (t.mode & 1) === 0)) t.memoizedState = null
    else
        switch (a) {
            case 'forwards':
                for (r = t.child, a = null; r !== null; )
                    (e = r.alternate),
                        e !== null && ju(e) === null && (a = r),
                        (r = r.sibling)
                ;(r = a),
                    r === null
                        ? ((a = t.child), (t.child = null))
                        : ((a = r.sibling), (r.sibling = null)),
                    eh(t, !1, a, r, l)
                break
            case 'backwards':
                for (r = null, a = t.child, t.child = null; a !== null; ) {
                    if (((e = a.alternate), e !== null && ju(e) === null)) {
                        t.child = a
                        break
                    }
                    ;(e = a.sibling), (a.sibling = r), (r = a), (a = e)
                }
                eh(t, !0, r, null, l)
                break
            case 'together':
                eh(t, !1, null, null, void 0)
                break
            default:
                t.memoizedState = null
        }
    return t.child
}
function pu(e, t) {
    ;(t.mode & 1) === 0 &&
        e !== null &&
        ((e.alternate = null), (t.alternate = null), (t.flags |= 2))
}
function Kn(e, t, r) {
    if (
        (e !== null && (t.dependencies = e.dependencies),
        (Si |= t.lanes),
        (r & t.childLanes) === 0)
    )
        return null
    if (e !== null && t.child !== e.child) throw Error(Y(153))
    if (t.child !== null) {
        for (
            e = t.child, r = _a(e, e.pendingProps), t.child = r, r.return = t;
            e.sibling !== null;

        )
            (e = e.sibling),
                (r = r.sibling = _a(e, e.pendingProps)),
                (r.return = t)
        r.sibling = null
    }
    return t.child
}
function VP(e, t, r) {
    switch (t.tag) {
        case 3:
            U9(t), wl()
            break
        case 5:
            y9(t)
            break
        case 1:
            fr(t.type) && Mu(t)
            break
        case 4:
            t0(t, t.stateNode.containerInfo)
            break
        case 10:
            var n = t.type._context,
                a = t.memoizedProps.value
            Ze(Iu, n._currentValue), (n._currentValue = a)
            break
        case 13:
            if (((n = t.memoizedState), n !== null))
                return n.dehydrated !== null
                    ? (Ze(ut, ut.current & 1), (t.flags |= 128), null)
                    : (r & t.child.childLanes) !== 0
                    ? W9(e, t, r)
                    : (Ze(ut, ut.current & 1),
                      (e = Kn(e, t, r)),
                      e !== null ? e.sibling : null)
            Ze(ut, ut.current & 1)
            break
        case 19:
            if (((n = (r & t.childLanes) !== 0), (e.flags & 128) !== 0)) {
                if (n) return H9(e, t, r)
                t.flags |= 128
            }
            if (
                ((a = t.memoizedState),
                a !== null &&
                    ((a.rendering = null),
                    (a.tail = null),
                    (a.lastEffect = null)),
                Ze(ut, ut.current),
                n)
            )
                break
            return null
        case 22:
        case 23:
            return (t.lanes = 0), z9(e, t, r)
    }
    return Kn(e, t, r)
}
var G9, Um, q9, K9
G9 = function (e, t) {
    for (var r = t.child; r !== null; ) {
        if (r.tag === 5 || r.tag === 6) e.appendChild(r.stateNode)
        else if (r.tag !== 4 && r.child !== null) {
            ;(r.child.return = r), (r = r.child)
            continue
        }
        if (r === t) break
        for (; r.sibling === null; ) {
            if (r.return === null || r.return === t) return
            r = r.return
        }
        ;(r.sibling.return = r.return), (r = r.sibling)
    }
}
Um = function () {}
q9 = function (e, t, r, n) {
    var a = e.memoizedProps
    if (a !== n) {
        ;(e = t.stateNode), fi(yn.current)
        var l = null
        switch (r) {
            case 'input':
                ;(a = dm(e, a)), (n = dm(e, n)), (l = [])
                break
            case 'select':
                ;(a = pt({}, a, { value: void 0 })),
                    (n = pt({}, n, { value: void 0 })),
                    (l = [])
                break
            case 'textarea':
                ;(a = hm(e, a)), (n = hm(e, n)), (l = [])
                break
            default:
                typeof a.onClick != 'function' &&
                    typeof n.onClick == 'function' &&
                    (e.onclick = Ou)
        }
        gm(r, n)
        var o
        r = null
        for (u in a)
            if (!n.hasOwnProperty(u) && a.hasOwnProperty(u) && a[u] != null)
                if (u === 'style') {
                    var s = a[u]
                    for (o in s)
                        s.hasOwnProperty(o) && (r || (r = {}), (r[o] = ''))
                } else
                    u !== 'dangerouslySetInnerHTML' &&
                        u !== 'children' &&
                        u !== 'suppressContentEditableWarning' &&
                        u !== 'suppressHydrationWarning' &&
                        u !== 'autoFocus' &&
                        (fs.hasOwnProperty(u)
                            ? l || (l = [])
                            : (l = l || []).push(u, null))
        for (u in n) {
            var c = n[u]
            if (
                ((s = a != null ? a[u] : void 0),
                n.hasOwnProperty(u) && c !== s && (c != null || s != null))
            )
                if (u === 'style')
                    if (s) {
                        for (o in s)
                            !s.hasOwnProperty(o) ||
                                (c && c.hasOwnProperty(o)) ||
                                (r || (r = {}), (r[o] = ''))
                        for (o in c)
                            c.hasOwnProperty(o) &&
                                s[o] !== c[o] &&
                                (r || (r = {}), (r[o] = c[o]))
                    } else r || (l || (l = []), l.push(u, r)), (r = c)
                else
                    u === 'dangerouslySetInnerHTML'
                        ? ((c = c ? c.__html : void 0),
                          (s = s ? s.__html : void 0),
                          c != null && s !== c && (l = l || []).push(u, c))
                        : u === 'children'
                        ? (typeof c != 'string' && typeof c != 'number') ||
                          (l = l || []).push(u, '' + c)
                        : u !== 'suppressContentEditableWarning' &&
                          u !== 'suppressHydrationWarning' &&
                          (fs.hasOwnProperty(u)
                              ? (c != null &&
                                    u === 'onScroll' &&
                                    Qe('scroll', e),
                                l || s === c || (l = []))
                              : (l = l || []).push(u, c))
        }
        r && (l = l || []).push('style', r)
        var u = l
        ;(t.updateQueue = u) && (t.flags |= 4)
    }
}
K9 = function (e, t, r, n) {
    r !== n && (t.flags |= 4)
}
function _o(e, t) {
    if (!ot)
        switch (e.tailMode) {
            case 'hidden':
                t = e.tail
                for (var r = null; t !== null; )
                    t.alternate !== null && (r = t), (t = t.sibling)
                r === null ? (e.tail = null) : (r.sibling = null)
                break
            case 'collapsed':
                r = e.tail
                for (var n = null; r !== null; )
                    r.alternate !== null && (n = r), (r = r.sibling)
                n === null
                    ? t || e.tail === null
                        ? (e.tail = null)
                        : (e.tail.sibling = null)
                    : (n.sibling = null)
        }
}
function Ht(e) {
    var t = e.alternate !== null && e.alternate.child === e.child,
        r = 0,
        n = 0
    if (t)
        for (var a = e.child; a !== null; )
            (r |= a.lanes | a.childLanes),
                (n |= a.subtreeFlags & 14680064),
                (n |= a.flags & 14680064),
                (a.return = e),
                (a = a.sibling)
    else
        for (a = e.child; a !== null; )
            (r |= a.lanes | a.childLanes),
                (n |= a.subtreeFlags),
                (n |= a.flags),
                (a.return = e),
                (a = a.sibling)
    return (e.subtreeFlags |= n), (e.childLanes = r), t
}
function UP(e, t, r) {
    var n = t.pendingProps
    switch ((K1(t), t.tag)) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return Ht(t), null
        case 1:
            return fr(t.type) && Tu(), Ht(t), null
        case 3:
            return (
                (n = t.stateNode),
                Sl(),
                rt(dr),
                rt(Zt),
                n0(),
                n.pendingContext &&
                    ((n.context = n.pendingContext), (n.pendingContext = null)),
                (e === null || e.child === null) &&
                    (jc(t)
                        ? (t.flags |= 4)
                        : e === null ||
                          (e.memoizedState.isDehydrated &&
                              (t.flags & 256) === 0) ||
                          ((t.flags |= 1024),
                          nn !== null && (Zm(nn), (nn = null)))),
                Um(e, t),
                Ht(t),
                null
            )
        case 5:
            r0(t)
            var a = fi(Cs.current)
            if (((r = t.type), e !== null && t.stateNode != null))
                q9(e, t, r, n, a),
                    e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152))
            else {
                if (!n) {
                    if (t.stateNode === null) throw Error(Y(166))
                    return Ht(t), null
                }
                if (((e = fi(yn.current)), jc(t))) {
                    ;(n = t.stateNode), (r = t.type)
                    var l = t.memoizedProps
                    switch (
                        ((n[mn] = t), (n[Ns] = l), (e = (t.mode & 1) !== 0), r)
                    ) {
                        case 'dialog':
                            Qe('cancel', n), Qe('close', n)
                            break
                        case 'iframe':
                        case 'object':
                        case 'embed':
                            Qe('load', n)
                            break
                        case 'video':
                        case 'audio':
                            for (a = 0; a < zo.length; a++) Qe(zo[a], n)
                            break
                        case 'source':
                            Qe('error', n)
                            break
                        case 'img':
                        case 'image':
                        case 'link':
                            Qe('error', n), Qe('load', n)
                            break
                        case 'details':
                            Qe('toggle', n)
                            break
                        case 'input':
                            iy(n, l), Qe('invalid', n)
                            break
                        case 'select':
                            ;(n._wrapperState = { wasMultiple: !!l.multiple }),
                                Qe('invalid', n)
                            break
                        case 'textarea':
                            oy(n, l), Qe('invalid', n)
                    }
                    gm(r, l), (a = null)
                    for (var o in l)
                        if (l.hasOwnProperty(o)) {
                            var s = l[o]
                            o === 'children'
                                ? typeof s == 'string'
                                    ? n.textContent !== s &&
                                      (l.suppressHydrationWarning !== !0 &&
                                          Lc(n.textContent, s, e),
                                      (a = ['children', s]))
                                    : typeof s == 'number' &&
                                      n.textContent !== '' + s &&
                                      (l.suppressHydrationWarning !== !0 &&
                                          Lc(n.textContent, s, e),
                                      (a = ['children', '' + s]))
                                : fs.hasOwnProperty(o) &&
                                  s != null &&
                                  o === 'onScroll' &&
                                  Qe('scroll', n)
                        }
                    switch (r) {
                        case 'input':
                            kc(n), ly(n, l, !0)
                            break
                        case 'textarea':
                            kc(n), sy(n)
                            break
                        case 'select':
                        case 'option':
                            break
                        default:
                            typeof l.onClick == 'function' && (n.onclick = Ou)
                    }
                    ;(n = a), (t.updateQueue = n), n !== null && (t.flags |= 4)
                } else {
                    ;(o = a.nodeType === 9 ? a : a.ownerDocument),
                        e === 'http://www.w3.org/1999/xhtml' && (e = wN(r)),
                        e === 'http://www.w3.org/1999/xhtml'
                            ? r === 'script'
                                ? ((e = o.createElement('div')),
                                  (e.innerHTML = '<script></script>'),
                                  (e = e.removeChild(e.firstChild)))
                                : typeof n.is == 'string'
                                ? (e = o.createElement(r, { is: n.is }))
                                : ((e = o.createElement(r)),
                                  r === 'select' &&
                                      ((o = e),
                                      n.multiple
                                          ? (o.multiple = !0)
                                          : n.size && (o.size = n.size)))
                            : (e = o.createElementNS(e, r)),
                        (e[mn] = t),
                        (e[Ns] = n),
                        G9(e, t, !1, !1),
                        (t.stateNode = e)
                    e: {
                        switch (((o = vm(r, n)), r)) {
                            case 'dialog':
                                Qe('cancel', e), Qe('close', e), (a = n)
                                break
                            case 'iframe':
                            case 'object':
                            case 'embed':
                                Qe('load', e), (a = n)
                                break
                            case 'video':
                            case 'audio':
                                for (a = 0; a < zo.length; a++) Qe(zo[a], e)
                                a = n
                                break
                            case 'source':
                                Qe('error', e), (a = n)
                                break
                            case 'img':
                            case 'image':
                            case 'link':
                                Qe('error', e), Qe('load', e), (a = n)
                                break
                            case 'details':
                                Qe('toggle', e), (a = n)
                                break
                            case 'input':
                                iy(e, n), (a = dm(e, n)), Qe('invalid', e)
                                break
                            case 'option':
                                a = n
                                break
                            case 'select':
                                ;(e._wrapperState = {
                                    wasMultiple: !!n.multiple,
                                }),
                                    (a = pt({}, n, { value: void 0 })),
                                    Qe('invalid', e)
                                break
                            case 'textarea':
                                oy(e, n), (a = hm(e, n)), Qe('invalid', e)
                                break
                            default:
                                a = n
                        }
                        gm(r, a), (s = a)
                        for (l in s)
                            if (s.hasOwnProperty(l)) {
                                var c = s[l]
                                l === 'style'
                                    ? CN(e, c)
                                    : l === 'dangerouslySetInnerHTML'
                                    ? ((c = c ? c.__html : void 0),
                                      c != null && NN(e, c))
                                    : l === 'children'
                                    ? typeof c == 'string'
                                        ? (r !== 'textarea' || c !== '') &&
                                          ps(e, c)
                                        : typeof c == 'number' && ps(e, '' + c)
                                    : l !== 'suppressContentEditableWarning' &&
                                      l !== 'suppressHydrationWarning' &&
                                      l !== 'autoFocus' &&
                                      (fs.hasOwnProperty(l)
                                          ? c != null &&
                                            l === 'onScroll' &&
                                            Qe('scroll', e)
                                          : c != null && D1(e, l, c, o))
                            }
                        switch (r) {
                            case 'input':
                                kc(e), ly(e, n, !1)
                                break
                            case 'textarea':
                                kc(e), sy(e)
                                break
                            case 'option':
                                n.value != null &&
                                    e.setAttribute('value', '' + Ma(n.value))
                                break
                            case 'select':
                                ;(e.multiple = !!n.multiple),
                                    (l = n.value),
                                    l != null
                                        ? al(e, !!n.multiple, l, !1)
                                        : n.defaultValue != null &&
                                          al(
                                              e,
                                              !!n.multiple,
                                              n.defaultValue,
                                              !0
                                          )
                                break
                            default:
                                typeof a.onClick == 'function' &&
                                    (e.onclick = Ou)
                        }
                        switch (r) {
                            case 'button':
                            case 'input':
                            case 'select':
                            case 'textarea':
                                n = !!n.autoFocus
                                break e
                            case 'img':
                                n = !0
                                break e
                            default:
                                n = !1
                        }
                    }
                    n && (t.flags |= 4)
                }
                t.ref !== null && ((t.flags |= 512), (t.flags |= 2097152))
            }
            return Ht(t), null
        case 6:
            if (e && t.stateNode != null) K9(e, t, e.memoizedProps, n)
            else {
                if (typeof n != 'string' && t.stateNode === null)
                    throw Error(Y(166))
                if (((r = fi(Cs.current)), fi(yn.current), jc(t))) {
                    if (
                        ((n = t.stateNode),
                        (r = t.memoizedProps),
                        (n[mn] = t),
                        (l = n.nodeValue !== r) && ((e = Sr), e !== null))
                    )
                        switch (e.tag) {
                            case 3:
                                Lc(n.nodeValue, r, (e.mode & 1) !== 0)
                                break
                            case 5:
                                e.memoizedProps.suppressHydrationWarning !==
                                    !0 && Lc(n.nodeValue, r, (e.mode & 1) !== 0)
                        }
                    l && (t.flags |= 4)
                } else
                    (n = (
                        r.nodeType === 9 ? r : r.ownerDocument
                    ).createTextNode(n)),
                        (n[mn] = t),
                        (t.stateNode = n)
            }
            return Ht(t), null
        case 13:
            if (
                (rt(ut),
                (n = t.memoizedState),
                e === null ||
                    (e.memoizedState !== null &&
                        e.memoizedState.dehydrated !== null))
            ) {
                if (
                    ot &&
                    Nr !== null &&
                    (t.mode & 1) !== 0 &&
                    (t.flags & 128) === 0
                )
                    d9(), wl(), (t.flags |= 98560), (l = !1)
                else if (((l = jc(t)), n !== null && n.dehydrated !== null)) {
                    if (e === null) {
                        if (!l) throw Error(Y(318))
                        if (
                            ((l = t.memoizedState),
                            (l = l !== null ? l.dehydrated : null),
                            !l)
                        )
                            throw Error(Y(317))
                        l[mn] = t
                    } else
                        wl(),
                            (t.flags & 128) === 0 && (t.memoizedState = null),
                            (t.flags |= 4)
                    Ht(t), (l = !1)
                } else nn !== null && (Zm(nn), (nn = null)), (l = !0)
                if (!l) return t.flags & 65536 ? t : null
            }
            return (t.flags & 128) !== 0
                ? ((t.lanes = r), t)
                : ((n = n !== null),
                  n !== (e !== null && e.memoizedState !== null) &&
                      n &&
                      ((t.child.flags |= 8192),
                      (t.mode & 1) !== 0 &&
                          (e === null || (ut.current & 1) !== 0
                              ? St === 0 && (St = 3)
                              : m0())),
                  t.updateQueue !== null && (t.flags |= 4),
                  Ht(t),
                  null)
        case 4:
            return (
                Sl(),
                Um(e, t),
                e === null && xs(t.stateNode.containerInfo),
                Ht(t),
                null
            )
        case 10:
            return J1(t.type._context), Ht(t), null
        case 17:
            return fr(t.type) && Tu(), Ht(t), null
        case 19:
            if ((rt(ut), (l = t.memoizedState), l === null)) return Ht(t), null
            if (((n = (t.flags & 128) !== 0), (o = l.rendering), o === null))
                if (n) _o(l, !1)
                else {
                    if (St !== 0 || (e !== null && (e.flags & 128) !== 0))
                        for (e = t.child; e !== null; ) {
                            if (((o = ju(e)), o !== null)) {
                                for (
                                    t.flags |= 128,
                                        _o(l, !1),
                                        n = o.updateQueue,
                                        n !== null &&
                                            ((t.updateQueue = n),
                                            (t.flags |= 4)),
                                        t.subtreeFlags = 0,
                                        n = r,
                                        r = t.child;
                                    r !== null;

                                )
                                    (l = r),
                                        (e = n),
                                        (l.flags &= 14680066),
                                        (o = l.alternate),
                                        o === null
                                            ? ((l.childLanes = 0),
                                              (l.lanes = e),
                                              (l.child = null),
                                              (l.subtreeFlags = 0),
                                              (l.memoizedProps = null),
                                              (l.memoizedState = null),
                                              (l.updateQueue = null),
                                              (l.dependencies = null),
                                              (l.stateNode = null))
                                            : ((l.childLanes = o.childLanes),
                                              (l.lanes = o.lanes),
                                              (l.child = o.child),
                                              (l.subtreeFlags = 0),
                                              (l.deletions = null),
                                              (l.memoizedProps =
                                                  o.memoizedProps),
                                              (l.memoizedState =
                                                  o.memoizedState),
                                              (l.updateQueue = o.updateQueue),
                                              (l.type = o.type),
                                              (e = o.dependencies),
                                              (l.dependencies =
                                                  e === null
                                                      ? null
                                                      : {
                                                            lanes: e.lanes,
                                                            firstContext:
                                                                e.firstContext,
                                                        })),
                                        (r = r.sibling)
                                return Ze(ut, (ut.current & 1) | 2), t.child
                            }
                            e = e.sibling
                        }
                    l.tail !== null &&
                        gt() > Pl &&
                        ((t.flags |= 128),
                        (n = !0),
                        _o(l, !1),
                        (t.lanes = 4194304))
                }
            else {
                if (!n)
                    if (((e = ju(o)), e !== null)) {
                        if (
                            ((t.flags |= 128),
                            (n = !0),
                            (r = e.updateQueue),
                            r !== null && ((t.updateQueue = r), (t.flags |= 4)),
                            _o(l, !0),
                            l.tail === null &&
                                l.tailMode === 'hidden' &&
                                !o.alternate &&
                                !ot)
                        )
                            return Ht(t), null
                    } else
                        2 * gt() - l.renderingStartTime > Pl &&
                            r !== 1073741824 &&
                            ((t.flags |= 128),
                            (n = !0),
                            _o(l, !1),
                            (t.lanes = 4194304))
                l.isBackwards
                    ? ((o.sibling = t.child), (t.child = o))
                    : ((r = l.last),
                      r !== null ? (r.sibling = o) : (t.child = o),
                      (l.last = o))
            }
            return l.tail !== null
                ? ((t = l.tail),
                  (l.rendering = t),
                  (l.tail = t.sibling),
                  (l.renderingStartTime = gt()),
                  (t.sibling = null),
                  (r = ut.current),
                  Ze(ut, n ? (r & 1) | 2 : r & 1),
                  t)
                : (Ht(t), null)
        case 22:
        case 23:
            return (
                h0(),
                (n = t.memoizedState !== null),
                e !== null &&
                    (e.memoizedState !== null) !== n &&
                    (t.flags |= 8192),
                n && (t.mode & 1) !== 0
                    ? (yr & 1073741824) !== 0 &&
                      (Ht(t), t.subtreeFlags & 6 && (t.flags |= 8192))
                    : Ht(t),
                null
            )
        case 24:
            return null
        case 25:
            return null
    }
    throw Error(Y(156, t.tag))
}
function WP(e, t) {
    switch ((K1(t), t.tag)) {
        case 1:
            return (
                fr(t.type) && Tu(),
                (e = t.flags),
                e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
            )
        case 3:
            return (
                Sl(),
                rt(dr),
                rt(Zt),
                n0(),
                (e = t.flags),
                (e & 65536) !== 0 && (e & 128) === 0
                    ? ((t.flags = (e & -65537) | 128), t)
                    : null
            )
        case 5:
            return r0(t), null
        case 13:
            if (
                (rt(ut),
                (e = t.memoizedState),
                e !== null && e.dehydrated !== null)
            ) {
                if (t.alternate === null) throw Error(Y(340))
                wl()
            }
            return (
                (e = t.flags),
                e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
            )
        case 19:
            return rt(ut), null
        case 4:
            return Sl(), null
        case 10:
            return J1(t.type._context), null
        case 22:
        case 23:
            return h0(), null
        case 24:
            return null
        default:
            return null
    }
}
var zc = !1,
    Kt = !1,
    HP = typeof WeakSet == 'function' ? WeakSet : Set,
    ne = null
function tl(e, t) {
    var r = e.ref
    if (r !== null)
        if (typeof r == 'function')
            try {
                r(null)
            } catch (n) {
                mt(e, t, n)
            }
        else r.current = null
}
function Wm(e, t, r) {
    try {
        r()
    } catch (n) {
        mt(e, t, n)
    }
}
var Zy = !1
function GP(e, t) {
    if (((Am = Au), (e = JN()), G1(e))) {
        if ('selectionStart' in e)
            var r = { start: e.selectionStart, end: e.selectionEnd }
        else
            e: {
                r = ((r = e.ownerDocument) && r.defaultView) || window
                var n = r.getSelection && r.getSelection()
                if (n && n.rangeCount !== 0) {
                    r = n.anchorNode
                    var a = n.anchorOffset,
                        l = n.focusNode
                    n = n.focusOffset
                    try {
                        r.nodeType, l.nodeType
                    } catch {
                        r = null
                        break e
                    }
                    var o = 0,
                        s = -1,
                        c = -1,
                        u = 0,
                        f = 0,
                        p = e,
                        m = null
                    t: for (;;) {
                        for (
                            var v;
                            p !== r ||
                                (a !== 0 && p.nodeType !== 3) ||
                                (s = o + a),
                                p !== l ||
                                    (n !== 0 && p.nodeType !== 3) ||
                                    (c = o + n),
                                p.nodeType === 3 && (o += p.nodeValue.length),
                                (v = p.firstChild) !== null;

                        )
                            (m = p), (p = v)
                        for (;;) {
                            if (p === e) break t
                            if (
                                (m === r && ++u === a && (s = o),
                                m === l && ++f === n && (c = o),
                                (v = p.nextSibling) !== null)
                            )
                                break
                            ;(p = m), (m = p.parentNode)
                        }
                        p = v
                    }
                    r = s === -1 || c === -1 ? null : { start: s, end: c }
                } else r = null
            }
        r = r || { start: 0, end: 0 }
    } else r = null
    for (
        Em = { focusedElem: e, selectionRange: r }, Au = !1, ne = t;
        ne !== null;

    )
        if (
            ((t = ne),
            (e = t.child),
            (t.subtreeFlags & 1028) !== 0 && e !== null)
        )
            (e.return = t), (ne = e)
        else
            for (; ne !== null; ) {
                t = ne
                try {
                    var b = t.alternate
                    if ((t.flags & 1024) !== 0)
                        switch (t.tag) {
                            case 0:
                            case 11:
                            case 15:
                                break
                            case 1:
                                if (b !== null) {
                                    var h = b.memoizedProps,
                                        g = b.memoizedState,
                                        x = t.stateNode,
                                        w = x.getSnapshotBeforeUpdate(
                                            t.elementType === t.type
                                                ? h
                                                : en(t.type, h),
                                            g
                                        )
                                    x.__reactInternalSnapshotBeforeUpdate = w
                                }
                                break
                            case 3:
                                var y = t.stateNode.containerInfo
                                y.nodeType === 1
                                    ? (y.textContent = '')
                                    : y.nodeType === 9 &&
                                      y.documentElement &&
                                      y.removeChild(y.documentElement)
                                break
                            case 5:
                            case 6:
                            case 4:
                            case 17:
                                break
                            default:
                                throw Error(Y(163))
                        }
                } catch (N) {
                    mt(t, t.return, N)
                }
                if (((e = t.sibling), e !== null)) {
                    ;(e.return = t.return), (ne = e)
                    break
                }
                ne = t.return
            }
    return (b = Zy), (Zy = !1), b
}
function ts(e, t, r) {
    var n = t.updateQueue
    if (((n = n !== null ? n.lastEffect : null), n !== null)) {
        var a = (n = n.next)
        do {
            if ((a.tag & e) === e) {
                var l = a.destroy
                ;(a.destroy = void 0), l !== void 0 && Wm(t, r, l)
            }
            a = a.next
        } while (a !== n)
    }
}
function df(e, t) {
    if (
        ((t = t.updateQueue),
        (t = t !== null ? t.lastEffect : null),
        t !== null)
    ) {
        var r = (t = t.next)
        do {
            if ((r.tag & e) === e) {
                var n = r.create
                r.destroy = n()
            }
            r = r.next
        } while (r !== t)
    }
}
function Hm(e) {
    var t = e.ref
    if (t !== null) {
        var r = e.stateNode
        switch (e.tag) {
            case 5:
                e = r
                break
            default:
                e = r
        }
        typeof t == 'function' ? t(e) : (t.current = e)
    }
}
function Y9(e) {
    var t = e.alternate
    t !== null && ((e.alternate = null), Y9(t)),
        (e.child = null),
        (e.deletions = null),
        (e.sibling = null),
        e.tag === 5 &&
            ((t = e.stateNode),
            t !== null &&
                (delete t[mn],
                delete t[Ns],
                delete t[Tm],
                delete t[EP],
                delete t[kP])),
        (e.stateNode = null),
        (e.return = null),
        (e.dependencies = null),
        (e.memoizedProps = null),
        (e.memoizedState = null),
        (e.pendingProps = null),
        (e.stateNode = null),
        (e.updateQueue = null)
}
function X9(e) {
    return e.tag === 5 || e.tag === 3 || e.tag === 4
}
function Jy(e) {
    e: for (;;) {
        for (; e.sibling === null; ) {
            if (e.return === null || X9(e.return)) return null
            e = e.return
        }
        for (
            e.sibling.return = e.return, e = e.sibling;
            e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

        ) {
            if (e.flags & 2 || e.child === null || e.tag === 4) continue e
            ;(e.child.return = e), (e = e.child)
        }
        if (!(e.flags & 2)) return e.stateNode
    }
}
function Gm(e, t, r) {
    var n = e.tag
    if (n === 5 || n === 6)
        (e = e.stateNode),
            t
                ? r.nodeType === 8
                    ? r.parentNode.insertBefore(e, t)
                    : r.insertBefore(e, t)
                : (r.nodeType === 8
                      ? ((t = r.parentNode), t.insertBefore(e, r))
                      : ((t = r), t.appendChild(e)),
                  (r = r._reactRootContainer),
                  r != null || t.onclick !== null || (t.onclick = Ou))
    else if (n !== 4 && ((e = e.child), e !== null))
        for (Gm(e, t, r), e = e.sibling; e !== null; )
            Gm(e, t, r), (e = e.sibling)
}
function qm(e, t, r) {
    var n = e.tag
    if (n === 5 || n === 6)
        (e = e.stateNode), t ? r.insertBefore(e, t) : r.appendChild(e)
    else if (n !== 4 && ((e = e.child), e !== null))
        for (qm(e, t, r), e = e.sibling; e !== null; )
            qm(e, t, r), (e = e.sibling)
}
var Lt = null,
    tn = !1
function aa(e, t, r) {
    for (r = r.child; r !== null; ) Z9(e, t, r), (r = r.sibling)
}
function Z9(e, t, r) {
    if (vn && typeof vn.onCommitFiberUnmount == 'function')
        try {
            vn.onCommitFiberUnmount(rf, r)
        } catch {}
    switch (r.tag) {
        case 5:
            Kt || tl(r, t)
        case 6:
            var n = Lt,
                a = tn
            ;(Lt = null),
                aa(e, t, r),
                (Lt = n),
                (tn = a),
                Lt !== null &&
                    (tn
                        ? ((e = Lt),
                          (r = r.stateNode),
                          e.nodeType === 8
                              ? e.parentNode.removeChild(r)
                              : e.removeChild(r))
                        : Lt.removeChild(r.stateNode))
            break
        case 18:
            Lt !== null &&
                (tn
                    ? ((e = Lt),
                      (r = r.stateNode),
                      e.nodeType === 8
                          ? qp(e.parentNode, r)
                          : e.nodeType === 1 && qp(e, r),
                      vs(e))
                    : qp(Lt, r.stateNode))
            break
        case 4:
            ;(n = Lt),
                (a = tn),
                (Lt = r.stateNode.containerInfo),
                (tn = !0),
                aa(e, t, r),
                (Lt = n),
                (tn = a)
            break
        case 0:
        case 11:
        case 14:
        case 15:
            if (
                !Kt &&
                ((n = r.updateQueue),
                n !== null && ((n = n.lastEffect), n !== null))
            ) {
                a = n = n.next
                do {
                    var l = a,
                        o = l.destroy
                    ;(l = l.tag),
                        o !== void 0 &&
                            ((l & 2) !== 0 || (l & 4) !== 0) &&
                            Wm(r, t, o),
                        (a = a.next)
                } while (a !== n)
            }
            aa(e, t, r)
            break
        case 1:
            if (
                !Kt &&
                (tl(r, t),
                (n = r.stateNode),
                typeof n.componentWillUnmount == 'function')
            )
                try {
                    ;(n.props = r.memoizedProps),
                        (n.state = r.memoizedState),
                        n.componentWillUnmount()
                } catch (s) {
                    mt(r, t, s)
                }
            aa(e, t, r)
            break
        case 21:
            aa(e, t, r)
            break
        case 22:
            r.mode & 1
                ? ((Kt = (n = Kt) || r.memoizedState !== null),
                  aa(e, t, r),
                  (Kt = n))
                : aa(e, t, r)
            break
        default:
            aa(e, t, r)
    }
}
function Qy(e) {
    var t = e.updateQueue
    if (t !== null) {
        e.updateQueue = null
        var r = e.stateNode
        r === null && (r = e.stateNode = new HP()),
            t.forEach(function (n) {
                var a = t7.bind(null, e, n)
                r.has(n) || (r.add(n), n.then(a, a))
            })
    }
}
function Jr(e, t) {
    var r = t.deletions
    if (r !== null)
        for (var n = 0; n < r.length; n++) {
            var a = r[n]
            try {
                var l = e,
                    o = t,
                    s = o
                e: for (; s !== null; ) {
                    switch (s.tag) {
                        case 5:
                            ;(Lt = s.stateNode), (tn = !1)
                            break e
                        case 3:
                            ;(Lt = s.stateNode.containerInfo), (tn = !0)
                            break e
                        case 4:
                            ;(Lt = s.stateNode.containerInfo), (tn = !0)
                            break e
                    }
                    s = s.return
                }
                if (Lt === null) throw Error(Y(160))
                Z9(l, o, a), (Lt = null), (tn = !1)
                var c = a.alternate
                c !== null && (c.return = null), (a.return = null)
            } catch (u) {
                mt(a, t, u)
            }
        }
    if (t.subtreeFlags & 12854)
        for (t = t.child; t !== null; ) J9(t, e), (t = t.sibling)
}
function J9(e, t) {
    var r = e.alternate,
        n = e.flags
    switch (e.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
            if ((Jr(t, e), dn(e), n & 4)) {
                try {
                    ts(3, e, e.return), df(3, e)
                } catch (h) {
                    mt(e, e.return, h)
                }
                try {
                    ts(5, e, e.return)
                } catch (h) {
                    mt(e, e.return, h)
                }
            }
            break
        case 1:
            Jr(t, e), dn(e), n & 512 && r !== null && tl(r, r.return)
            break
        case 5:
            if (
                (Jr(t, e),
                dn(e),
                n & 512 && r !== null && tl(r, r.return),
                e.flags & 32)
            ) {
                var a = e.stateNode
                try {
                    ps(a, '')
                } catch (h) {
                    mt(e, e.return, h)
                }
            }
            if (n & 4 && ((a = e.stateNode), a != null)) {
                var l = e.memoizedProps,
                    o = r !== null ? r.memoizedProps : l,
                    s = e.type,
                    c = e.updateQueue
                if (((e.updateQueue = null), c !== null))
                    try {
                        s === 'input' &&
                            l.type === 'radio' &&
                            l.name != null &&
                            bN(a, l),
                            vm(s, o)
                        var u = vm(s, l)
                        for (o = 0; o < c.length; o += 2) {
                            var f = c[o],
                                p = c[o + 1]
                            f === 'style'
                                ? CN(a, p)
                                : f === 'dangerouslySetInnerHTML'
                                ? NN(a, p)
                                : f === 'children'
                                ? ps(a, p)
                                : D1(a, f, p, u)
                        }
                        switch (s) {
                            case 'input':
                                fm(a, l)
                                break
                            case 'textarea':
                                xN(a, l)
                                break
                            case 'select':
                                var m = a._wrapperState.wasMultiple
                                a._wrapperState.wasMultiple = !!l.multiple
                                var v = l.value
                                v != null
                                    ? al(a, !!l.multiple, v, !1)
                                    : m !== !!l.multiple &&
                                      (l.defaultValue != null
                                          ? al(
                                                a,
                                                !!l.multiple,
                                                l.defaultValue,
                                                !0
                                            )
                                          : al(
                                                a,
                                                !!l.multiple,
                                                l.multiple ? [] : '',
                                                !1
                                            ))
                        }
                        a[Ns] = l
                    } catch (h) {
                        mt(e, e.return, h)
                    }
            }
            break
        case 6:
            if ((Jr(t, e), dn(e), n & 4)) {
                if (e.stateNode === null) throw Error(Y(162))
                ;(a = e.stateNode), (l = e.memoizedProps)
                try {
                    a.nodeValue = l
                } catch (h) {
                    mt(e, e.return, h)
                }
            }
            break
        case 3:
            if (
                (Jr(t, e),
                dn(e),
                n & 4 && r !== null && r.memoizedState.isDehydrated)
            )
                try {
                    vs(t.containerInfo)
                } catch (h) {
                    mt(e, e.return, h)
                }
            break
        case 4:
            Jr(t, e), dn(e)
            break
        case 13:
            Jr(t, e),
                dn(e),
                (a = e.child),
                a.flags & 8192 &&
                    ((l = a.memoizedState !== null),
                    (a.stateNode.isHidden = l),
                    !l ||
                        (a.alternate !== null &&
                            a.alternate.memoizedState !== null) ||
                        (f0 = gt())),
                n & 4 && Qy(e)
            break
        case 22:
            if (
                ((f = r !== null && r.memoizedState !== null),
                e.mode & 1
                    ? ((Kt = (u = Kt) || f), Jr(t, e), (Kt = u))
                    : Jr(t, e),
                dn(e),
                n & 8192)
            ) {
                if (
                    ((u = e.memoizedState !== null),
                    (e.stateNode.isHidden = u) && !f && (e.mode & 1) !== 0)
                )
                    for (ne = e, f = e.child; f !== null; ) {
                        for (p = ne = f; ne !== null; ) {
                            switch (((m = ne), (v = m.child), m.tag)) {
                                case 0:
                                case 11:
                                case 14:
                                case 15:
                                    ts(4, m, m.return)
                                    break
                                case 1:
                                    tl(m, m.return)
                                    var b = m.stateNode
                                    if (
                                        typeof b.componentWillUnmount ==
                                        'function'
                                    ) {
                                        ;(n = m), (r = m.return)
                                        try {
                                            ;(t = n),
                                                (b.props = t.memoizedProps),
                                                (b.state = t.memoizedState),
                                                b.componentWillUnmount()
                                        } catch (h) {
                                            mt(n, r, h)
                                        }
                                    }
                                    break
                                case 5:
                                    tl(m, m.return)
                                    break
                                case 22:
                                    if (m.memoizedState !== null) {
                                        tb(p)
                                        continue
                                    }
                            }
                            v !== null ? ((v.return = m), (ne = v)) : tb(p)
                        }
                        f = f.sibling
                    }
                e: for (f = null, p = e; ; ) {
                    if (p.tag === 5) {
                        if (f === null) {
                            f = p
                            try {
                                ;(a = p.stateNode),
                                    u
                                        ? ((l = a.style),
                                          typeof l.setProperty == 'function'
                                              ? l.setProperty(
                                                    'display',
                                                    'none',
                                                    'important'
                                                )
                                              : (l.display = 'none'))
                                        : ((s = p.stateNode),
                                          (c = p.memoizedProps.style),
                                          (o =
                                              c != null &&
                                              c.hasOwnProperty('display')
                                                  ? c.display
                                                  : null),
                                          (s.style.display = SN('display', o)))
                            } catch (h) {
                                mt(e, e.return, h)
                            }
                        }
                    } else if (p.tag === 6) {
                        if (f === null)
                            try {
                                p.stateNode.nodeValue = u ? '' : p.memoizedProps
                            } catch (h) {
                                mt(e, e.return, h)
                            }
                    } else if (
                        ((p.tag !== 22 && p.tag !== 23) ||
                            p.memoizedState === null ||
                            p === e) &&
                        p.child !== null
                    ) {
                        ;(p.child.return = p), (p = p.child)
                        continue
                    }
                    if (p === e) break e
                    for (; p.sibling === null; ) {
                        if (p.return === null || p.return === e) break e
                        f === p && (f = null), (p = p.return)
                    }
                    f === p && (f = null),
                        (p.sibling.return = p.return),
                        (p = p.sibling)
                }
            }
            break
        case 19:
            Jr(t, e), dn(e), n & 4 && Qy(e)
            break
        case 21:
            break
        default:
            Jr(t, e), dn(e)
    }
}
function dn(e) {
    var t = e.flags
    if (t & 2) {
        try {
            e: {
                for (var r = e.return; r !== null; ) {
                    if (X9(r)) {
                        var n = r
                        break e
                    }
                    r = r.return
                }
                throw Error(Y(160))
            }
            switch (n.tag) {
                case 5:
                    var a = n.stateNode
                    n.flags & 32 && (ps(a, ''), (n.flags &= -33))
                    var l = Jy(e)
                    qm(e, l, a)
                    break
                case 3:
                case 4:
                    var o = n.stateNode.containerInfo,
                        s = Jy(e)
                    Gm(e, s, o)
                    break
                default:
                    throw Error(Y(161))
            }
        } catch (c) {
            mt(e, e.return, c)
        }
        e.flags &= -3
    }
    t & 4096 && (e.flags &= -4097)
}
function qP(e, t, r) {
    ;(ne = e), Q9(e)
}
function Q9(e, t, r) {
    for (var n = (e.mode & 1) !== 0; ne !== null; ) {
        var a = ne,
            l = a.child
        if (a.tag === 22 && n) {
            var o = a.memoizedState !== null || zc
            if (!o) {
                var s = a.alternate,
                    c = (s !== null && s.memoizedState !== null) || Kt
                s = zc
                var u = Kt
                if (((zc = o), (Kt = c) && !u))
                    for (ne = a; ne !== null; )
                        (o = ne),
                            (c = o.child),
                            o.tag === 22 && o.memoizedState !== null
                                ? rb(a)
                                : c !== null
                                ? ((c.return = o), (ne = c))
                                : rb(a)
                for (; l !== null; ) (ne = l), Q9(l), (l = l.sibling)
                ;(ne = a), (zc = s), (Kt = u)
            }
            eb(e)
        } else
            (a.subtreeFlags & 8772) !== 0 && l !== null
                ? ((l.return = a), (ne = l))
                : eb(e)
    }
}
function eb(e) {
    for (; ne !== null; ) {
        var t = ne
        if ((t.flags & 8772) !== 0) {
            var r = t.alternate
            try {
                if ((t.flags & 8772) !== 0)
                    switch (t.tag) {
                        case 0:
                        case 11:
                        case 15:
                            Kt || df(5, t)
                            break
                        case 1:
                            var n = t.stateNode
                            if (t.flags & 4 && !Kt)
                                if (r === null) n.componentDidMount()
                                else {
                                    var a =
                                        t.elementType === t.type
                                            ? r.memoizedProps
                                            : en(t.type, r.memoizedProps)
                                    n.componentDidUpdate(
                                        a,
                                        r.memoizedState,
                                        n.__reactInternalSnapshotBeforeUpdate
                                    )
                                }
                            var l = t.updateQueue
                            l !== null && Ly(t, l, n)
                            break
                        case 3:
                            var o = t.updateQueue
                            if (o !== null) {
                                if (((r = null), t.child !== null))
                                    switch (t.child.tag) {
                                        case 5:
                                            r = t.child.stateNode
                                            break
                                        case 1:
                                            r = t.child.stateNode
                                    }
                                Ly(t, o, r)
                            }
                            break
                        case 5:
                            var s = t.stateNode
                            if (r === null && t.flags & 4) {
                                r = s
                                var c = t.memoizedProps
                                switch (t.type) {
                                    case 'button':
                                    case 'input':
                                    case 'select':
                                    case 'textarea':
                                        c.autoFocus && r.focus()
                                        break
                                    case 'img':
                                        c.src && (r.src = c.src)
                                }
                            }
                            break
                        case 6:
                            break
                        case 4:
                            break
                        case 12:
                            break
                        case 13:
                            if (t.memoizedState === null) {
                                var u = t.alternate
                                if (u !== null) {
                                    var f = u.memoizedState
                                    if (f !== null) {
                                        var p = f.dehydrated
                                        p !== null && vs(p)
                                    }
                                }
                            }
                            break
                        case 19:
                        case 17:
                        case 21:
                        case 22:
                        case 23:
                        case 25:
                            break
                        default:
                            throw Error(Y(163))
                    }
                Kt || (t.flags & 512 && Hm(t))
            } catch (m) {
                mt(t, t.return, m)
            }
        }
        if (t === e) {
            ne = null
            break
        }
        if (((r = t.sibling), r !== null)) {
            ;(r.return = t.return), (ne = r)
            break
        }
        ne = t.return
    }
}
function tb(e) {
    for (; ne !== null; ) {
        var t = ne
        if (t === e) {
            ne = null
            break
        }
        var r = t.sibling
        if (r !== null) {
            ;(r.return = t.return), (ne = r)
            break
        }
        ne = t.return
    }
}
function rb(e) {
    for (; ne !== null; ) {
        var t = ne
        try {
            switch (t.tag) {
                case 0:
                case 11:
                case 15:
                    var r = t.return
                    try {
                        df(4, t)
                    } catch (c) {
                        mt(t, r, c)
                    }
                    break
                case 1:
                    var n = t.stateNode
                    if (typeof n.componentDidMount == 'function') {
                        var a = t.return
                        try {
                            n.componentDidMount()
                        } catch (c) {
                            mt(t, a, c)
                        }
                    }
                    var l = t.return
                    try {
                        Hm(t)
                    } catch (c) {
                        mt(t, l, c)
                    }
                    break
                case 5:
                    var o = t.return
                    try {
                        Hm(t)
                    } catch (c) {
                        mt(t, o, c)
                    }
            }
        } catch (c) {
            mt(t, t.return, c)
        }
        if (t === e) {
            ne = null
            break
        }
        var s = t.sibling
        if (s !== null) {
            ;(s.return = t.return), (ne = s)
            break
        }
        ne = t.return
    }
}
var KP = Math.ceil,
    zu = Qn.ReactCurrentDispatcher,
    u0 = Qn.ReactCurrentOwner,
    Wr = Qn.ReactCurrentBatchConfig,
    De = 0,
    Tt = null,
    yt = null,
    Ft = 0,
    yr = 0,
    rl = za(0),
    St = 0,
    Es = null,
    Si = 0,
    ff = 0,
    d0 = 0,
    rs = null,
    ir = null,
    f0 = 0,
    Pl = 1 / 0,
    Tn = null,
    Vu = !1,
    Km = null,
    Ca = null,
    Vc = !1,
    ha = null,
    Uu = 0,
    ns = 0,
    Ym = null,
    hu = -1,
    mu = 0
function rr() {
    return (De & 6) !== 0 ? gt() : hu !== -1 ? hu : (hu = gt())
}
function Pa(e) {
    return (e.mode & 1) === 0
        ? 1
        : (De & 2) !== 0 && Ft !== 0
        ? Ft & -Ft
        : TP.transition !== null
        ? (mu === 0 && (mu = RN()), mu)
        : ((e = ze),
          e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : UN(e.type))),
          e)
}
function sn(e, t, r, n) {
    if (50 < ns) throw ((ns = 0), (Ym = null), Error(Y(185)))
    ac(e, r, n),
        ((De & 2) === 0 || e !== Tt) &&
            (e === Tt && ((De & 2) === 0 && (ff |= r), St === 4 && da(e, Ft)),
            pr(e, n),
            r === 1 &&
                De === 0 &&
                (t.mode & 1) === 0 &&
                ((Pl = gt() + 500), sf && Va()))
}
function pr(e, t) {
    var r = e.callbackNode
    TC(e, t)
    var n = _u(e, e === Tt ? Ft : 0)
    if (n === 0)
        r !== null && dy(r), (e.callbackNode = null), (e.callbackPriority = 0)
    else if (((t = n & -n), e.callbackPriority !== t)) {
        if ((r != null && dy(r), t === 1))
            e.tag === 0 ? OP(nb.bind(null, e)) : s9(nb.bind(null, e)),
                _P(function () {
                    ;(De & 6) === 0 && Va()
                }),
                (r = null)
        else {
            switch (LN(n)) {
                case 1:
                    r = j1
                    break
                case 4:
                    r = $N
                    break
                case 16:
                    r = Pu
                    break
                case 536870912:
                    r = IN
                    break
                default:
                    r = Pu
            }
            r = o8(r, e8.bind(null, e))
        }
        ;(e.callbackPriority = t), (e.callbackNode = r)
    }
}
function e8(e, t) {
    if (((hu = -1), (mu = 0), (De & 6) !== 0)) throw Error(Y(327))
    var r = e.callbackNode
    if (cl() && e.callbackNode !== r) return null
    var n = _u(e, e === Tt ? Ft : 0)
    if (n === 0) return null
    if ((n & 30) !== 0 || (n & e.expiredLanes) !== 0 || t) t = Wu(e, n)
    else {
        t = n
        var a = De
        De |= 2
        var l = r8()
        ;(Tt !== e || Ft !== t) && ((Tn = null), (Pl = gt() + 500), gi(e, t))
        do
            try {
                ZP()
                break
            } catch (s) {
                t8(e, s)
            }
        while (1)
        Z1(),
            (zu.current = l),
            (De = a),
            yt !== null ? (t = 0) : ((Tt = null), (Ft = 0), (t = St))
    }
    if (t !== 0) {
        if (
            (t === 2 && ((a = Nm(e)), a !== 0 && ((n = a), (t = Xm(e, a)))),
            t === 1)
        )
            throw ((r = Es), gi(e, 0), da(e, n), pr(e, gt()), r)
        if (t === 6) da(e, n)
        else {
            if (
                ((a = e.current.alternate),
                (n & 30) === 0 &&
                    !YP(a) &&
                    ((t = Wu(e, n)),
                    t === 2 &&
                        ((l = Nm(e)), l !== 0 && ((n = l), (t = Xm(e, l)))),
                    t === 1))
            )
                throw ((r = Es), gi(e, 0), da(e, n), pr(e, gt()), r)
            switch (((e.finishedWork = a), (e.finishedLanes = n), t)) {
                case 0:
                case 1:
                    throw Error(Y(345))
                case 2:
                    Qa(e, ir, Tn)
                    break
                case 3:
                    if (
                        (da(e, n),
                        (n & 130023424) === n &&
                            ((t = f0 + 500 - gt()), 10 < t))
                    ) {
                        if (_u(e, 0) !== 0) break
                        if (((a = e.suspendedLanes), (a & n) !== n)) {
                            rr(), (e.pingedLanes |= e.suspendedLanes & a)
                            break
                        }
                        e.timeoutHandle = Om(Qa.bind(null, e, ir, Tn), t)
                        break
                    }
                    Qa(e, ir, Tn)
                    break
                case 4:
                    if ((da(e, n), (n & 4194240) === n)) break
                    for (t = e.eventTimes, a = -1; 0 < n; ) {
                        var o = 31 - on(n)
                        ;(l = 1 << o), (o = t[o]), o > a && (a = o), (n &= ~l)
                    }
                    if (
                        ((n = a),
                        (n = gt() - n),
                        (n =
                            (120 > n
                                ? 120
                                : 480 > n
                                ? 480
                                : 1080 > n
                                ? 1080
                                : 1920 > n
                                ? 1920
                                : 3e3 > n
                                ? 3e3
                                : 4320 > n
                                ? 4320
                                : 1960 * KP(n / 1960)) - n),
                        10 < n)
                    ) {
                        e.timeoutHandle = Om(Qa.bind(null, e, ir, Tn), n)
                        break
                    }
                    Qa(e, ir, Tn)
                    break
                case 5:
                    Qa(e, ir, Tn)
                    break
                default:
                    throw Error(Y(329))
            }
        }
    }
    return pr(e, gt()), e.callbackNode === r ? e8.bind(null, e) : null
}
function Xm(e, t) {
    var r = rs
    return (
        e.current.memoizedState.isDehydrated && (gi(e, t).flags |= 256),
        (e = Wu(e, t)),
        e !== 2 && ((t = ir), (ir = r), t !== null && Zm(t)),
        e
    )
}
function Zm(e) {
    ir === null ? (ir = e) : ir.push.apply(ir, e)
}
function YP(e) {
    for (var t = e; ; ) {
        if (t.flags & 16384) {
            var r = t.updateQueue
            if (r !== null && ((r = r.stores), r !== null))
                for (var n = 0; n < r.length; n++) {
                    var a = r[n],
                        l = a.getSnapshot
                    a = a.value
                    try {
                        if (!cn(l(), a)) return !1
                    } catch {
                        return !1
                    }
                }
        }
        if (((r = t.child), t.subtreeFlags & 16384 && r !== null))
            (r.return = t), (t = r)
        else {
            if (t === e) break
            for (; t.sibling === null; ) {
                if (t.return === null || t.return === e) return !0
                t = t.return
            }
            ;(t.sibling.return = t.return), (t = t.sibling)
        }
    }
    return !0
}
function da(e, t) {
    for (
        t &= ~d0,
            t &= ~ff,
            e.suspendedLanes |= t,
            e.pingedLanes &= ~t,
            e = e.expirationTimes;
        0 < t;

    ) {
        var r = 31 - on(t),
            n = 1 << r
        ;(e[r] = -1), (t &= ~n)
    }
}
function nb(e) {
    if ((De & 6) !== 0) throw Error(Y(327))
    cl()
    var t = _u(e, 0)
    if ((t & 1) === 0) return pr(e, gt()), null
    var r = Wu(e, t)
    if (e.tag !== 0 && r === 2) {
        var n = Nm(e)
        n !== 0 && ((t = n), (r = Xm(e, n)))
    }
    if (r === 1) throw ((r = Es), gi(e, 0), da(e, t), pr(e, gt()), r)
    if (r === 6) throw Error(Y(345))
    return (
        (e.finishedWork = e.current.alternate),
        (e.finishedLanes = t),
        Qa(e, ir, Tn),
        pr(e, gt()),
        null
    )
}
function p0(e, t) {
    var r = De
    De |= 1
    try {
        return e(t)
    } finally {
        ;(De = r), De === 0 && ((Pl = gt() + 500), sf && Va())
    }
}
function Ci(e) {
    ha !== null && ha.tag === 0 && (De & 6) === 0 && cl()
    var t = De
    De |= 1
    var r = Wr.transition,
        n = ze
    try {
        if (((Wr.transition = null), (ze = 1), e)) return e()
    } finally {
        ;(ze = n), (Wr.transition = r), (De = t), (De & 6) === 0 && Va()
    }
}
function h0() {
    ;(yr = rl.current), rt(rl)
}
function gi(e, t) {
    ;(e.finishedWork = null), (e.finishedLanes = 0)
    var r = e.timeoutHandle
    if ((r !== -1 && ((e.timeoutHandle = -1), PP(r)), yt !== null))
        for (r = yt.return; r !== null; ) {
            var n = r
            switch ((K1(n), n.tag)) {
                case 1:
                    ;(n = n.type.childContextTypes), n != null && Tu()
                    break
                case 3:
                    Sl(), rt(dr), rt(Zt), n0()
                    break
                case 5:
                    r0(n)
                    break
                case 4:
                    Sl()
                    break
                case 13:
                    rt(ut)
                    break
                case 19:
                    rt(ut)
                    break
                case 10:
                    J1(n.type._context)
                    break
                case 22:
                case 23:
                    h0()
            }
            r = r.return
        }
    if (
        ((Tt = e),
        (yt = e = _a(e.current, null)),
        (Ft = yr = t),
        (St = 0),
        (Es = null),
        (d0 = ff = Si = 0),
        (ir = rs = null),
        di !== null)
    ) {
        for (t = 0; t < di.length; t++)
            if (((r = di[t]), (n = r.interleaved), n !== null)) {
                r.interleaved = null
                var a = n.next,
                    l = r.pending
                if (l !== null) {
                    var o = l.next
                    ;(l.next = a), (n.next = o)
                }
                r.pending = n
            }
        di = null
    }
    return e
}
function t8(e, t) {
    do {
        var r = yt
        try {
            if ((Z1(), (du.current = Bu), Fu)) {
                for (var n = ft.memoizedState; n !== null; ) {
                    var a = n.queue
                    a !== null && (a.pending = null), (n = n.next)
                }
                Fu = !1
            }
            if (
                ((Ni = 0),
                (Ot = xt = ft = null),
                (es = !1),
                (Ps = 0),
                (u0.current = null),
                r === null || r.return === null)
            ) {
                ;(St = 1), (Es = t), (yt = null)
                break
            }
            e: {
                var l = e,
                    o = r.return,
                    s = r,
                    c = t
                if (
                    ((t = Ft),
                    (s.flags |= 32768),
                    c !== null &&
                        typeof c == 'object' &&
                        typeof c.then == 'function')
                ) {
                    var u = c,
                        f = s,
                        p = f.tag
                    if (
                        (f.mode & 1) === 0 &&
                        (p === 0 || p === 11 || p === 15)
                    ) {
                        var m = f.alternate
                        m
                            ? ((f.updateQueue = m.updateQueue),
                              (f.memoizedState = m.memoizedState),
                              (f.lanes = m.lanes))
                            : ((f.updateQueue = null), (f.memoizedState = null))
                    }
                    var v = Wy(o)
                    if (v !== null) {
                        ;(v.flags &= -257),
                            Hy(v, o, s, l, t),
                            v.mode & 1 && Uy(l, u, t),
                            (t = v),
                            (c = u)
                        var b = t.updateQueue
                        if (b === null) {
                            var h = new Set()
                            h.add(c), (t.updateQueue = h)
                        } else b.add(c)
                        break e
                    } else {
                        if ((t & 1) === 0) {
                            Uy(l, u, t), m0()
                            break e
                        }
                        c = Error(Y(426))
                    }
                } else if (ot && s.mode & 1) {
                    var g = Wy(o)
                    if (g !== null) {
                        ;(g.flags & 65536) === 0 && (g.flags |= 256),
                            Hy(g, o, s, l, t),
                            Y1(Cl(c, s))
                        break e
                    }
                }
                ;(l = c = Cl(c, s)),
                    St !== 4 && (St = 2),
                    rs === null ? (rs = [l]) : rs.push(l),
                    (l = o)
                do {
                    switch (l.tag) {
                        case 3:
                            ;(l.flags |= 65536), (t &= -t), (l.lanes |= t)
                            var x = j9(l, c, t)
                            Ry(l, x)
                            break e
                        case 1:
                            s = c
                            var w = l.type,
                                y = l.stateNode
                            if (
                                (l.flags & 128) === 0 &&
                                (typeof w.getDerivedStateFromError ==
                                    'function' ||
                                    (y !== null &&
                                        typeof y.componentDidCatch ==
                                            'function' &&
                                        (Ca === null || !Ca.has(y))))
                            ) {
                                ;(l.flags |= 65536), (t &= -t), (l.lanes |= t)
                                var N = F9(l, s, t)
                                Ry(l, N)
                                break e
                            }
                    }
                    l = l.return
                } while (l !== null)
            }
            a8(r)
        } catch (S) {
            ;(t = S), yt === r && r !== null && (yt = r = r.return)
            continue
        }
        break
    } while (1)
}
function r8() {
    var e = zu.current
    return (zu.current = Bu), e === null ? Bu : e
}
function m0() {
    ;(St === 0 || St === 3 || St === 2) && (St = 4),
        Tt === null ||
            ((Si & 268435455) === 0 && (ff & 268435455) === 0) ||
            da(Tt, Ft)
}
function Wu(e, t) {
    var r = De
    De |= 2
    var n = r8()
    ;(Tt !== e || Ft !== t) && ((Tn = null), gi(e, t))
    do
        try {
            XP()
            break
        } catch (a) {
            t8(e, a)
        }
    while (1)
    if ((Z1(), (De = r), (zu.current = n), yt !== null)) throw Error(Y(261))
    return (Tt = null), (Ft = 0), St
}
function XP() {
    for (; yt !== null; ) n8(yt)
}
function ZP() {
    for (; yt !== null && !NC(); ) n8(yt)
}
function n8(e) {
    var t = l8(e.alternate, e, yr)
    ;(e.memoizedProps = e.pendingProps),
        t === null ? a8(e) : (yt = t),
        (u0.current = null)
}
function a8(e) {
    var t = e
    do {
        var r = t.alternate
        if (((e = t.return), (t.flags & 32768) === 0)) {
            if (((r = UP(r, t, yr)), r !== null)) {
                yt = r
                return
            }
        } else {
            if (((r = WP(r, t)), r !== null)) {
                ;(r.flags &= 32767), (yt = r)
                return
            }
            if (e !== null)
                (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null)
            else {
                ;(St = 6), (yt = null)
                return
            }
        }
        if (((t = t.sibling), t !== null)) {
            yt = t
            return
        }
        yt = t = e
    } while (t !== null)
    St === 0 && (St = 5)
}
function Qa(e, t, r) {
    var n = ze,
        a = Wr.transition
    try {
        ;(Wr.transition = null), (ze = 1), JP(e, t, r, n)
    } finally {
        ;(Wr.transition = a), (ze = n)
    }
    return null
}
function JP(e, t, r, n) {
    do cl()
    while (ha !== null)
    if ((De & 6) !== 0) throw Error(Y(327))
    r = e.finishedWork
    var a = e.finishedLanes
    if (r === null) return null
    if (((e.finishedWork = null), (e.finishedLanes = 0), r === e.current))
        throw Error(Y(177))
    ;(e.callbackNode = null), (e.callbackPriority = 0)
    var l = r.lanes | r.childLanes
    if (
        (MC(e, l),
        e === Tt && ((yt = Tt = null), (Ft = 0)),
        ((r.subtreeFlags & 2064) === 0 && (r.flags & 2064) === 0) ||
            Vc ||
            ((Vc = !0),
            o8(Pu, function () {
                return cl(), null
            })),
        (l = (r.flags & 15990) !== 0),
        (r.subtreeFlags & 15990) !== 0 || l)
    ) {
        ;(l = Wr.transition), (Wr.transition = null)
        var o = ze
        ze = 1
        var s = De
        ;(De |= 4),
            (u0.current = null),
            GP(e, r),
            J9(r, e),
            yP(Em),
            (Au = !!Am),
            (Em = Am = null),
            (e.current = r),
            qP(r),
            SC(),
            (De = s),
            (ze = o),
            (Wr.transition = l)
    } else e.current = r
    if (
        (Vc && ((Vc = !1), (ha = e), (Uu = a)),
        (l = e.pendingLanes),
        l === 0 && (Ca = null),
        _C(r.stateNode),
        pr(e, gt()),
        t !== null)
    )
        for (n = e.onRecoverableError, r = 0; r < t.length; r++)
            (a = t[r]),
                n(a.value, { componentStack: a.stack, digest: a.digest })
    if (Vu) throw ((Vu = !1), (e = Km), (Km = null), e)
    return (
        (Uu & 1) !== 0 && e.tag !== 0 && cl(),
        (l = e.pendingLanes),
        (l & 1) !== 0 ? (e === Ym ? ns++ : ((ns = 0), (Ym = e))) : (ns = 0),
        Va(),
        null
    )
}
function cl() {
    if (ha !== null) {
        var e = LN(Uu),
            t = Wr.transition,
            r = ze
        try {
            if (((Wr.transition = null), (ze = 16 > e ? 16 : e), ha === null))
                var n = !1
            else {
                if (((e = ha), (ha = null), (Uu = 0), (De & 6) !== 0))
                    throw Error(Y(331))
                var a = De
                for (De |= 4, ne = e.current; ne !== null; ) {
                    var l = ne,
                        o = l.child
                    if ((ne.flags & 16) !== 0) {
                        var s = l.deletions
                        if (s !== null) {
                            for (var c = 0; c < s.length; c++) {
                                var u = s[c]
                                for (ne = u; ne !== null; ) {
                                    var f = ne
                                    switch (f.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            ts(8, f, l)
                                    }
                                    var p = f.child
                                    if (p !== null) (p.return = f), (ne = p)
                                    else
                                        for (; ne !== null; ) {
                                            f = ne
                                            var m = f.sibling,
                                                v = f.return
                                            if ((Y9(f), f === u)) {
                                                ne = null
                                                break
                                            }
                                            if (m !== null) {
                                                ;(m.return = v), (ne = m)
                                                break
                                            }
                                            ne = v
                                        }
                                }
                            }
                            var b = l.alternate
                            if (b !== null) {
                                var h = b.child
                                if (h !== null) {
                                    b.child = null
                                    do {
                                        var g = h.sibling
                                        ;(h.sibling = null), (h = g)
                                    } while (h !== null)
                                }
                            }
                            ne = l
                        }
                    }
                    if ((l.subtreeFlags & 2064) !== 0 && o !== null)
                        (o.return = l), (ne = o)
                    else
                        e: for (; ne !== null; ) {
                            if (((l = ne), (l.flags & 2048) !== 0))
                                switch (l.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        ts(9, l, l.return)
                                }
                            var x = l.sibling
                            if (x !== null) {
                                ;(x.return = l.return), (ne = x)
                                break e
                            }
                            ne = l.return
                        }
                }
                var w = e.current
                for (ne = w; ne !== null; ) {
                    o = ne
                    var y = o.child
                    if ((o.subtreeFlags & 2064) !== 0 && y !== null)
                        (y.return = o), (ne = y)
                    else
                        e: for (o = w; ne !== null; ) {
                            if (((s = ne), (s.flags & 2048) !== 0))
                                try {
                                    switch (s.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            df(9, s)
                                    }
                                } catch (S) {
                                    mt(s, s.return, S)
                                }
                            if (s === o) {
                                ne = null
                                break e
                            }
                            var N = s.sibling
                            if (N !== null) {
                                ;(N.return = s.return), (ne = N)
                                break e
                            }
                            ne = s.return
                        }
                }
                if (
                    ((De = a),
                    Va(),
                    vn && typeof vn.onPostCommitFiberRoot == 'function')
                )
                    try {
                        vn.onPostCommitFiberRoot(rf, e)
                    } catch {}
                n = !0
            }
            return n
        } finally {
            ;(ze = r), (Wr.transition = t)
        }
    }
    return !1
}
function ab(e, t, r) {
    ;(t = Cl(r, t)),
        (t = j9(e, t, 1)),
        (e = Sa(e, t, 1)),
        (t = rr()),
        e !== null && (ac(e, 1, t), pr(e, t))
}
function mt(e, t, r) {
    if (e.tag === 3) ab(e, e, r)
    else
        for (; t !== null; ) {
            if (t.tag === 3) {
                ab(t, e, r)
                break
            } else if (t.tag === 1) {
                var n = t.stateNode
                if (
                    typeof t.type.getDerivedStateFromError == 'function' ||
                    (typeof n.componentDidCatch == 'function' &&
                        (Ca === null || !Ca.has(n)))
                ) {
                    ;(e = Cl(r, e)),
                        (e = F9(t, e, 1)),
                        (t = Sa(t, e, 1)),
                        (e = rr()),
                        t !== null && (ac(t, 1, e), pr(t, e))
                    break
                }
            }
            t = t.return
        }
}
function QP(e, t, r) {
    var n = e.pingCache
    n !== null && n.delete(t),
        (t = rr()),
        (e.pingedLanes |= e.suspendedLanes & r),
        Tt === e &&
            (Ft & r) === r &&
            (St === 4 ||
            (St === 3 && (Ft & 130023424) === Ft && 500 > gt() - f0)
                ? gi(e, 0)
                : (d0 |= r)),
        pr(e, t)
}
function i8(e, t) {
    t === 0 &&
        ((e.mode & 1) === 0
            ? (t = 1)
            : ((t = Mc), (Mc <<= 1), (Mc & 130023424) === 0 && (Mc = 4194304)))
    var r = rr()
    ;(e = qn(e, t)), e !== null && (ac(e, t, r), pr(e, r))
}
function e7(e) {
    var t = e.memoizedState,
        r = 0
    t !== null && (r = t.retryLane), i8(e, r)
}
function t7(e, t) {
    var r = 0
    switch (e.tag) {
        case 13:
            var n = e.stateNode,
                a = e.memoizedState
            a !== null && (r = a.retryLane)
            break
        case 19:
            n = e.stateNode
            break
        default:
            throw Error(Y(314))
    }
    n !== null && n.delete(t), i8(e, r)
}
var l8
l8 = function (e, t, r) {
    if (e !== null)
        if (e.memoizedProps !== t.pendingProps || dr.current) or = !0
        else {
            if ((e.lanes & r) === 0 && (t.flags & 128) === 0)
                return (or = !1), VP(e, t, r)
            or = (e.flags & 131072) !== 0
        }
    else (or = !1), ot && (t.flags & 1048576) !== 0 && c9(t, $u, t.index)
    switch (((t.lanes = 0), t.tag)) {
        case 2:
            var n = t.type
            pu(e, t), (e = t.pendingProps)
            var a = xl(t, Zt.current)
            sl(t, r), (a = i0(null, t, n, e, a, r))
            var l = l0()
            return (
                (t.flags |= 1),
                typeof a == 'object' &&
                a !== null &&
                typeof a.render == 'function' &&
                a.$$typeof === void 0
                    ? ((t.tag = 1),
                      (t.memoizedState = null),
                      (t.updateQueue = null),
                      fr(n) ? ((l = !0), Mu(t)) : (l = !1),
                      (t.memoizedState =
                          a.state !== null && a.state !== void 0
                              ? a.state
                              : null),
                      e0(t),
                      (a.updater = cf),
                      (t.stateNode = a),
                      (a._reactInternals = t),
                      Lm(t, n, e, r),
                      (t = Bm(null, t, n, !0, l, r)))
                    : ((t.tag = 0),
                      ot && l && q1(t),
                      Jt(null, t, a, r),
                      (t = t.child)),
                t
            )
        case 16:
            n = t.elementType
            e: {
                switch (
                    (pu(e, t),
                    (e = t.pendingProps),
                    (a = n._init),
                    (n = a(n._payload)),
                    (t.type = n),
                    (a = t.tag = n7(n)),
                    (e = en(n, e)),
                    a)
                ) {
                    case 0:
                        t = Fm(null, t, n, e, r)
                        break e
                    case 1:
                        t = Ky(null, t, n, e, r)
                        break e
                    case 11:
                        t = Gy(null, t, n, e, r)
                        break e
                    case 14:
                        t = qy(null, t, n, en(n.type, e), r)
                        break e
                }
                throw Error(Y(306, n, ''))
            }
            return t
        case 0:
            return (
                (n = t.type),
                (a = t.pendingProps),
                (a = t.elementType === n ? a : en(n, a)),
                Fm(e, t, n, a, r)
            )
        case 1:
            return (
                (n = t.type),
                (a = t.pendingProps),
                (a = t.elementType === n ? a : en(n, a)),
                Ky(e, t, n, a, r)
            )
        case 3:
            e: {
                if ((U9(t), e === null)) throw Error(Y(387))
                ;(n = t.pendingProps),
                    (l = t.memoizedState),
                    (a = l.element),
                    p9(e, t),
                    Lu(t, n, null, r)
                var o = t.memoizedState
                if (((n = o.element), l.isDehydrated))
                    if (
                        ((l = {
                            element: n,
                            isDehydrated: !1,
                            cache: o.cache,
                            pendingSuspenseBoundaries:
                                o.pendingSuspenseBoundaries,
                            transitions: o.transitions,
                        }),
                        (t.updateQueue.baseState = l),
                        (t.memoizedState = l),
                        t.flags & 256)
                    ) {
                        ;(a = Cl(Error(Y(423)), t)), (t = Yy(e, t, n, r, a))
                        break e
                    } else if (n !== a) {
                        ;(a = Cl(Error(Y(424)), t)), (t = Yy(e, t, n, r, a))
                        break e
                    } else
                        for (
                            Nr = Na(t.stateNode.containerInfo.firstChild),
                                Sr = t,
                                ot = !0,
                                nn = null,
                                r = v9(t, null, n, r),
                                t.child = r;
                            r;

                        )
                            (r.flags = (r.flags & -3) | 4096), (r = r.sibling)
                else {
                    if ((wl(), n === a)) {
                        t = Kn(e, t, r)
                        break e
                    }
                    Jt(e, t, n, r)
                }
                t = t.child
            }
            return t
        case 5:
            return (
                y9(t),
                e === null && $m(t),
                (n = t.type),
                (a = t.pendingProps),
                (l = e !== null ? e.memoizedProps : null),
                (o = a.children),
                km(n, a)
                    ? (o = null)
                    : l !== null && km(n, l) && (t.flags |= 32),
                V9(e, t),
                Jt(e, t, o, r),
                t.child
            )
        case 6:
            return e === null && $m(t), null
        case 13:
            return W9(e, t, r)
        case 4:
            return (
                t0(t, t.stateNode.containerInfo),
                (n = t.pendingProps),
                e === null ? (t.child = Nl(t, null, n, r)) : Jt(e, t, n, r),
                t.child
            )
        case 11:
            return (
                (n = t.type),
                (a = t.pendingProps),
                (a = t.elementType === n ? a : en(n, a)),
                Gy(e, t, n, a, r)
            )
        case 7:
            return Jt(e, t, t.pendingProps, r), t.child
        case 8:
            return Jt(e, t, t.pendingProps.children, r), t.child
        case 12:
            return Jt(e, t, t.pendingProps.children, r), t.child
        case 10:
            e: {
                if (
                    ((n = t.type._context),
                    (a = t.pendingProps),
                    (l = t.memoizedProps),
                    (o = a.value),
                    Ze(Iu, n._currentValue),
                    (n._currentValue = o),
                    l !== null)
                )
                    if (cn(l.value, o)) {
                        if (l.children === a.children && !dr.current) {
                            t = Kn(e, t, r)
                            break e
                        }
                    } else
                        for (
                            l = t.child, l !== null && (l.return = t);
                            l !== null;

                        ) {
                            var s = l.dependencies
                            if (s !== null) {
                                o = l.child
                                for (var c = s.firstContext; c !== null; ) {
                                    if (c.context === n) {
                                        if (l.tag === 1) {
                                            ;(c = zn(-1, r & -r)), (c.tag = 2)
                                            var u = l.updateQueue
                                            if (u !== null) {
                                                u = u.shared
                                                var f = u.pending
                                                f === null
                                                    ? (c.next = c)
                                                    : ((c.next = f.next),
                                                      (f.next = c)),
                                                    (u.pending = c)
                                            }
                                        }
                                        ;(l.lanes |= r),
                                            (c = l.alternate),
                                            c !== null && (c.lanes |= r),
                                            Im(l.return, r, t),
                                            (s.lanes |= r)
                                        break
                                    }
                                    c = c.next
                                }
                            } else if (l.tag === 10)
                                o = l.type === t.type ? null : l.child
                            else if (l.tag === 18) {
                                if (((o = l.return), o === null))
                                    throw Error(Y(341))
                                ;(o.lanes |= r),
                                    (s = o.alternate),
                                    s !== null && (s.lanes |= r),
                                    Im(o, r, t),
                                    (o = l.sibling)
                            } else o = l.child
                            if (o !== null) o.return = l
                            else
                                for (o = l; o !== null; ) {
                                    if (o === t) {
                                        o = null
                                        break
                                    }
                                    if (((l = o.sibling), l !== null)) {
                                        ;(l.return = o.return), (o = l)
                                        break
                                    }
                                    o = o.return
                                }
                            l = o
                        }
                Jt(e, t, a.children, r), (t = t.child)
            }
            return t
        case 9:
            return (
                (a = t.type),
                (n = t.pendingProps.children),
                sl(t, r),
                (a = Hr(a)),
                (n = n(a)),
                (t.flags |= 1),
                Jt(e, t, n, r),
                t.child
            )
        case 14:
            return (
                (n = t.type),
                (a = en(n, t.pendingProps)),
                (a = en(n.type, a)),
                qy(e, t, n, a, r)
            )
        case 15:
            return B9(e, t, t.type, t.pendingProps, r)
        case 17:
            return (
                (n = t.type),
                (a = t.pendingProps),
                (a = t.elementType === n ? a : en(n, a)),
                pu(e, t),
                (t.tag = 1),
                fr(n) ? ((e = !0), Mu(t)) : (e = !1),
                sl(t, r),
                m9(t, n, a),
                Lm(t, n, a, r),
                Bm(null, t, n, !0, e, r)
            )
        case 19:
            return H9(e, t, r)
        case 22:
            return z9(e, t, r)
    }
    throw Error(Y(156, t.tag))
}
function o8(e, t) {
    return DN(e, t)
}
function r7(e, t, r, n) {
    ;(this.tag = e),
        (this.key = r),
        (this.sibling =
            this.child =
            this.return =
            this.stateNode =
            this.type =
            this.elementType =
                null),
        (this.index = 0),
        (this.ref = null),
        (this.pendingProps = t),
        (this.dependencies =
            this.memoizedState =
            this.updateQueue =
            this.memoizedProps =
                null),
        (this.mode = n),
        (this.subtreeFlags = this.flags = 0),
        (this.deletions = null),
        (this.childLanes = this.lanes = 0),
        (this.alternate = null)
}
function Br(e, t, r, n) {
    return new r7(e, t, r, n)
}
function g0(e) {
    return (e = e.prototype), !(!e || !e.isReactComponent)
}
function n7(e) {
    if (typeof e == 'function') return g0(e) ? 1 : 0
    if (e != null) {
        if (((e = e.$$typeof), e === I1)) return 11
        if (e === R1) return 14
    }
    return 2
}
function _a(e, t) {
    var r = e.alternate
    return (
        r === null
            ? ((r = Br(e.tag, t, e.key, e.mode)),
              (r.elementType = e.elementType),
              (r.type = e.type),
              (r.stateNode = e.stateNode),
              (r.alternate = e),
              (e.alternate = r))
            : ((r.pendingProps = t),
              (r.type = e.type),
              (r.flags = 0),
              (r.subtreeFlags = 0),
              (r.deletions = null)),
        (r.flags = e.flags & 14680064),
        (r.childLanes = e.childLanes),
        (r.lanes = e.lanes),
        (r.child = e.child),
        (r.memoizedProps = e.memoizedProps),
        (r.memoizedState = e.memoizedState),
        (r.updateQueue = e.updateQueue),
        (t = e.dependencies),
        (r.dependencies =
            t === null
                ? null
                : { lanes: t.lanes, firstContext: t.firstContext }),
        (r.sibling = e.sibling),
        (r.index = e.index),
        (r.ref = e.ref),
        r
    )
}
function gu(e, t, r, n, a, l) {
    var o = 2
    if (((n = e), typeof e == 'function')) g0(e) && (o = 1)
    else if (typeof e == 'string') o = 5
    else
        e: switch (e) {
            case Gi:
                return vi(r.children, a, l, t)
            case $1:
                ;(o = 8), (a |= 8)
                break
            case om:
                return (
                    (e = Br(12, r, t, a | 2)),
                    (e.elementType = om),
                    (e.lanes = l),
                    e
                )
            case sm:
                return (
                    (e = Br(13, r, t, a)),
                    (e.elementType = sm),
                    (e.lanes = l),
                    e
                )
            case cm:
                return (
                    (e = Br(19, r, t, a)),
                    (e.elementType = cm),
                    (e.lanes = l),
                    e
                )
            case gN:
                return pf(r, a, l, t)
            default:
                if (typeof e == 'object' && e !== null)
                    switch (e.$$typeof) {
                        case hN:
                            o = 10
                            break e
                        case mN:
                            o = 9
                            break e
                        case I1:
                            o = 11
                            break e
                        case R1:
                            o = 14
                            break e
                        case oa:
                            ;(o = 16), (n = null)
                            break e
                    }
                throw Error(Y(130, e == null ? e : typeof e, ''))
        }
    return (
        (t = Br(o, r, t, a)),
        (t.elementType = e),
        (t.type = n),
        (t.lanes = l),
        t
    )
}
function vi(e, t, r, n) {
    return (e = Br(7, e, n, t)), (e.lanes = r), e
}
function pf(e, t, r, n) {
    return (
        (e = Br(22, e, n, t)),
        (e.elementType = gN),
        (e.lanes = r),
        (e.stateNode = { isHidden: !1 }),
        e
    )
}
function th(e, t, r) {
    return (e = Br(6, e, null, t)), (e.lanes = r), e
}
function rh(e, t, r) {
    return (
        (t = Br(4, e.children !== null ? e.children : [], e.key, t)),
        (t.lanes = r),
        (t.stateNode = {
            containerInfo: e.containerInfo,
            pendingChildren: null,
            implementation: e.implementation,
        }),
        t
    )
}
function a7(e, t, r, n, a) {
    ;(this.tag = t),
        (this.containerInfo = e),
        (this.finishedWork =
            this.pingCache =
            this.current =
            this.pendingChildren =
                null),
        (this.timeoutHandle = -1),
        (this.callbackNode = this.pendingContext = this.context = null),
        (this.callbackPriority = 0),
        (this.eventTimes = Rp(0)),
        (this.expirationTimes = Rp(-1)),
        (this.entangledLanes =
            this.finishedLanes =
            this.mutableReadLanes =
            this.expiredLanes =
            this.pingedLanes =
            this.suspendedLanes =
            this.pendingLanes =
                0),
        (this.entanglements = Rp(0)),
        (this.identifierPrefix = n),
        (this.onRecoverableError = a),
        (this.mutableSourceEagerHydrationData = null)
}
function v0(e, t, r, n, a, l, o, s, c) {
    return (
        (e = new a7(e, t, r, s, c)),
        t === 1 ? ((t = 1), l === !0 && (t |= 8)) : (t = 0),
        (l = Br(3, null, null, t)),
        (e.current = l),
        (l.stateNode = e),
        (l.memoizedState = {
            element: n,
            isDehydrated: r,
            cache: null,
            transitions: null,
            pendingSuspenseBoundaries: null,
        }),
        e0(l),
        e
    )
}
function i7(e, t, r) {
    var n =
        3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null
    return {
        $$typeof: Hi,
        key: n == null ? null : '' + n,
        children: e,
        containerInfo: t,
        implementation: r,
    }
}
function s8(e) {
    if (!e) return Da
    e = e._reactInternals
    e: {
        if (Ti(e) !== e || e.tag !== 1) throw Error(Y(170))
        var t = e
        do {
            switch (t.tag) {
                case 3:
                    t = t.stateNode.context
                    break e
                case 1:
                    if (fr(t.type)) {
                        t =
                            t.stateNode
                                .__reactInternalMemoizedMergedChildContext
                        break e
                    }
            }
            t = t.return
        } while (t !== null)
        throw Error(Y(171))
    }
    if (e.tag === 1) {
        var r = e.type
        if (fr(r)) return o9(e, r, t)
    }
    return t
}
function c8(e, t, r, n, a, l, o, s, c) {
    return (
        (e = v0(r, n, !0, e, a, l, o, s, c)),
        (e.context = s8(null)),
        (r = e.current),
        (n = rr()),
        (a = Pa(r)),
        (l = zn(n, a)),
        (l.callback = t != null ? t : null),
        Sa(r, l, a),
        (e.current.lanes = a),
        ac(e, a, n),
        pr(e, n),
        e
    )
}
function hf(e, t, r, n) {
    var a = t.current,
        l = rr(),
        o = Pa(a)
    return (
        (r = s8(r)),
        t.context === null ? (t.context = r) : (t.pendingContext = r),
        (t = zn(l, o)),
        (t.payload = { element: e }),
        (n = n === void 0 ? null : n),
        n !== null && (t.callback = n),
        (e = Sa(a, t, o)),
        e !== null && (sn(e, a, o, l), uu(e, a, o)),
        o
    )
}
function Hu(e) {
    if (((e = e.current), !e.child)) return null
    switch (e.child.tag) {
        case 5:
            return e.child.stateNode
        default:
            return e.child.stateNode
    }
}
function ib(e, t) {
    if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
        var r = e.retryLane
        e.retryLane = r !== 0 && r < t ? r : t
    }
}
function y0(e, t) {
    ib(e, t), (e = e.alternate) && ib(e, t)
}
function l7() {
    return null
}
var u8 =
    typeof reportError == 'function'
        ? reportError
        : function (e) {
              console.error(e)
          }
function b0(e) {
    this._internalRoot = e
}
mf.prototype.render = b0.prototype.render = function (e) {
    var t = this._internalRoot
    if (t === null) throw Error(Y(409))
    hf(e, t, null, null)
}
mf.prototype.unmount = b0.prototype.unmount = function () {
    var e = this._internalRoot
    if (e !== null) {
        this._internalRoot = null
        var t = e.containerInfo
        Ci(function () {
            hf(null, e, null, null)
        }),
            (t[Gn] = null)
    }
}
function mf(e) {
    this._internalRoot = e
}
mf.prototype.unstable_scheduleHydration = function (e) {
    if (e) {
        var t = BN()
        e = { blockedOn: null, target: e, priority: t }
        for (var r = 0; r < ua.length && t !== 0 && t < ua[r].priority; r++);
        ua.splice(r, 0, e), r === 0 && VN(e)
    }
}
function x0(e) {
    return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11))
}
function gf(e) {
    return !(
        !e ||
        (e.nodeType !== 1 &&
            e.nodeType !== 9 &&
            e.nodeType !== 11 &&
            (e.nodeType !== 8 ||
                e.nodeValue !== ' react-mount-point-unstable '))
    )
}
function lb() {}
function o7(e, t, r, n, a) {
    if (a) {
        if (typeof n == 'function') {
            var l = n
            n = function () {
                var u = Hu(o)
                l.call(u)
            }
        }
        var o = c8(t, n, e, 0, null, !1, !1, '', lb)
        return (
            (e._reactRootContainer = o),
            (e[Gn] = o.current),
            xs(e.nodeType === 8 ? e.parentNode : e),
            Ci(),
            o
        )
    }
    for (; (a = e.lastChild); ) e.removeChild(a)
    if (typeof n == 'function') {
        var s = n
        n = function () {
            var u = Hu(c)
            s.call(u)
        }
    }
    var c = v0(e, 0, !1, null, null, !1, !1, '', lb)
    return (
        (e._reactRootContainer = c),
        (e[Gn] = c.current),
        xs(e.nodeType === 8 ? e.parentNode : e),
        Ci(function () {
            hf(t, c, r, n)
        }),
        c
    )
}
function vf(e, t, r, n, a) {
    var l = r._reactRootContainer
    if (l) {
        var o = l
        if (typeof a == 'function') {
            var s = a
            a = function () {
                var c = Hu(o)
                s.call(c)
            }
        }
        hf(t, o, e, a)
    } else o = o7(r, t, e, a, n)
    return Hu(o)
}
jN = function (e) {
    switch (e.tag) {
        case 3:
            var t = e.stateNode
            if (t.current.memoizedState.isDehydrated) {
                var r = Bo(t.pendingLanes)
                r !== 0 &&
                    (F1(t, r | 1),
                    pr(t, gt()),
                    (De & 6) === 0 && ((Pl = gt() + 500), Va()))
            }
            break
        case 13:
            Ci(function () {
                var n = qn(e, 1)
                if (n !== null) {
                    var a = rr()
                    sn(n, e, 1, a)
                }
            }),
                y0(e, 1)
    }
}
B1 = function (e) {
    if (e.tag === 13) {
        var t = qn(e, 134217728)
        if (t !== null) {
            var r = rr()
            sn(t, e, 134217728, r)
        }
        y0(e, 134217728)
    }
}
FN = function (e) {
    if (e.tag === 13) {
        var t = Pa(e),
            r = qn(e, t)
        if (r !== null) {
            var n = rr()
            sn(r, e, t, n)
        }
        y0(e, t)
    }
}
BN = function () {
    return ze
}
zN = function (e, t) {
    var r = ze
    try {
        return (ze = e), t()
    } finally {
        ze = r
    }
}
bm = function (e, t, r) {
    switch (t) {
        case 'input':
            if ((fm(e, r), (t = r.name), r.type === 'radio' && t != null)) {
                for (r = e; r.parentNode; ) r = r.parentNode
                for (
                    r = r.querySelectorAll(
                        'input[name=' +
                            JSON.stringify('' + t) +
                            '][type="radio"]'
                    ),
                        t = 0;
                    t < r.length;
                    t++
                ) {
                    var n = r[t]
                    if (n !== e && n.form === e.form) {
                        var a = of(n)
                        if (!a) throw Error(Y(90))
                        yN(n), fm(n, a)
                    }
                }
            }
            break
        case 'textarea':
            xN(e, r)
            break
        case 'select':
            ;(t = r.value), t != null && al(e, !!r.multiple, t, !1)
    }
}
AN = p0
EN = Ci
var s7 = { usingClientEntryPoint: !1, Events: [lc, Xi, of, PN, _N, p0] },
    Ao = {
        findFiberByHostInstance: ui,
        bundleType: 0,
        version: '18.2.0',
        rendererPackageName: 'react-dom',
    },
    c7 = {
        bundleType: Ao.bundleType,
        version: Ao.version,
        rendererPackageName: Ao.rendererPackageName,
        rendererConfig: Ao.rendererConfig,
        overrideHookState: null,
        overrideHookStateDeletePath: null,
        overrideHookStateRenamePath: null,
        overrideProps: null,
        overridePropsDeletePath: null,
        overridePropsRenamePath: null,
        setErrorHandler: null,
        setSuspenseHandler: null,
        scheduleUpdate: null,
        currentDispatcherRef: Qn.ReactCurrentDispatcher,
        findHostInstanceByFiber: function (e) {
            return (e = TN(e)), e === null ? null : e.stateNode
        },
        findFiberByHostInstance: Ao.findFiberByHostInstance || l7,
        findHostInstancesForRefresh: null,
        scheduleRefresh: null,
        scheduleRoot: null,
        setRefreshHandler: null,
        getCurrentFiber: null,
        reconcilerVersion: '18.2.0-next-9e3b772b8-20220608',
    }
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < 'u') {
    var Uc = __REACT_DEVTOOLS_GLOBAL_HOOK__
    if (!Uc.isDisabled && Uc.supportsFiber)
        try {
            ;(rf = Uc.inject(c7)), (vn = Uc)
        } catch {}
}
Ar.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = s7
Ar.createPortal = function (e, t) {
    var r =
        2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null
    if (!x0(t)) throw Error(Y(200))
    return i7(e, t, null, r)
}
Ar.createRoot = function (e, t) {
    if (!x0(e)) throw Error(Y(299))
    var r = !1,
        n = '',
        a = u8
    return (
        t != null &&
            (t.unstable_strictMode === !0 && (r = !0),
            t.identifierPrefix !== void 0 && (n = t.identifierPrefix),
            t.onRecoverableError !== void 0 && (a = t.onRecoverableError)),
        (t = v0(e, 1, !1, null, null, r, !1, n, a)),
        (e[Gn] = t.current),
        xs(e.nodeType === 8 ? e.parentNode : e),
        new b0(t)
    )
}
Ar.findDOMNode = function (e) {
    if (e == null) return null
    if (e.nodeType === 1) return e
    var t = e._reactInternals
    if (t === void 0)
        throw typeof e.render == 'function'
            ? Error(Y(188))
            : ((e = Object.keys(e).join(',')), Error(Y(268, e)))
    return (e = TN(t)), (e = e === null ? null : e.stateNode), e
}
Ar.flushSync = function (e) {
    return Ci(e)
}
Ar.hydrate = function (e, t, r) {
    if (!gf(t)) throw Error(Y(200))
    return vf(null, e, t, !0, r)
}
Ar.hydrateRoot = function (e, t, r) {
    if (!x0(e)) throw Error(Y(405))
    var n = (r != null && r.hydratedSources) || null,
        a = !1,
        l = '',
        o = u8
    if (
        (r != null &&
            (r.unstable_strictMode === !0 && (a = !0),
            r.identifierPrefix !== void 0 && (l = r.identifierPrefix),
            r.onRecoverableError !== void 0 && (o = r.onRecoverableError)),
        (t = c8(t, null, e, 1, r != null ? r : null, a, !1, l, o)),
        (e[Gn] = t.current),
        xs(e),
        n)
    )
        for (e = 0; e < n.length; e++)
            (r = n[e]),
                (a = r._getVersion),
                (a = a(r._source)),
                t.mutableSourceEagerHydrationData == null
                    ? (t.mutableSourceEagerHydrationData = [r, a])
                    : t.mutableSourceEagerHydrationData.push(r, a)
    return new mf(t)
}
Ar.render = function (e, t, r) {
    if (!gf(t)) throw Error(Y(200))
    return vf(null, e, t, !1, r)
}
Ar.unmountComponentAtNode = function (e) {
    if (!gf(e)) throw Error(Y(40))
    return e._reactRootContainer
        ? (Ci(function () {
              vf(null, null, e, !1, function () {
                  ;(e._reactRootContainer = null), (e[Gn] = null)
              })
          }),
          !0)
        : !1
}
Ar.unstable_batchedUpdates = p0
Ar.unstable_renderSubtreeIntoContainer = function (e, t, r, n) {
    if (!gf(r)) throw Error(Y(200))
    if (e == null || e._reactInternals === void 0) throw Error(Y(38))
    return vf(e, t, r, !1, n)
}
Ar.version = '18.2.0-next-9e3b772b8-20220608'
;(function (e) {
    function t() {
        if (
            !(
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > 'u' ||
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != 'function'
            )
        )
            try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)
            } catch (r) {
                console.error(r)
            }
    }
    t(), (e.exports = Ar)
})(_1)
var ob = _1.exports
;(am.createRoot = ob.createRoot), (am.hydrateRoot = ob.hydrateRoot)
/**
 * @remix-run/router v1.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Ge() {
    return (
        (Ge = Object.assign
            ? Object.assign.bind()
            : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                      var r = arguments[t]
                      for (var n in r)
                          Object.prototype.hasOwnProperty.call(r, n) &&
                              (e[n] = r[n])
                  }
                  return e
              }),
        Ge.apply(this, arguments)
    )
}
var vt
;(function (e) {
    ;(e.Pop = 'POP'), (e.Push = 'PUSH'), (e.Replace = 'REPLACE')
})(vt || (vt = {}))
const sb = 'popstate'
function u7(e) {
    e === void 0 && (e = {})
    function t(n, a) {
        let { pathname: l, search: o, hash: s } = n.location
        return ks(
            '',
            { pathname: l, search: o, hash: s },
            (a.state && a.state.usr) || null,
            (a.state && a.state.key) || 'default'
        )
    }
    function r(n, a) {
        return typeof a == 'string' ? a : Cn(a)
    }
    return f7(t, r, null, e)
}
function Ce(e, t) {
    if (e === !1 || e === null || typeof e > 'u') throw new Error(t)
}
function d7() {
    return Math.random().toString(36).substr(2, 8)
}
function cb(e) {
    return { usr: e.state, key: e.key }
}
function ks(e, t, r, n) {
    return (
        r === void 0 && (r = null),
        Ge(
            {
                pathname: typeof e == 'string' ? e : e.pathname,
                search: '',
                hash: '',
            },
            typeof t == 'string' ? ea(t) : t,
            { state: r, key: (t && t.key) || n || d7() }
        )
    )
}
function Cn(e) {
    let { pathname: t = '/', search: r = '', hash: n = '' } = e
    return (
        r && r !== '?' && (t += r.charAt(0) === '?' ? r : '?' + r),
        n && n !== '#' && (t += n.charAt(0) === '#' ? n : '#' + n),
        t
    )
}
function ea(e) {
    let t = {}
    if (e) {
        let r = e.indexOf('#')
        r >= 0 && ((t.hash = e.substr(r)), (e = e.substr(0, r)))
        let n = e.indexOf('?')
        n >= 0 && ((t.search = e.substr(n)), (e = e.substr(0, n))),
            e && (t.pathname = e)
    }
    return t
}
function Os(e) {
    let t =
            typeof window < 'u' &&
            typeof window.location < 'u' &&
            window.location.origin !== 'null'
                ? window.location.origin
                : window.location.href,
        r = typeof e == 'string' ? e : Cn(e)
    return (
        Ce(
            t,
            'No window.location.(origin|href) available to create URL for href: ' +
                r
        ),
        new URL(r, t)
    )
}
function f7(e, t, r, n) {
    n === void 0 && (n = {})
    let { window: a = document.defaultView, v5Compat: l = !1 } = n,
        o = a.history,
        s = vt.Pop,
        c = null
    function u() {
        ;(s = vt.Pop), c && c({ action: s, location: m.location })
    }
    function f(v, b) {
        s = vt.Push
        let h = ks(m.location, v, b)
        r && r(h, v)
        let g = cb(h),
            x = m.createHref(h)
        try {
            o.pushState(g, '', x)
        } catch {
            a.location.assign(x)
        }
        l && c && c({ action: s, location: m.location })
    }
    function p(v, b) {
        s = vt.Replace
        let h = ks(m.location, v, b)
        r && r(h, v)
        let g = cb(h),
            x = m.createHref(h)
        o.replaceState(g, '', x),
            l && c && c({ action: s, location: m.location })
    }
    let m = {
        get action() {
            return s
        },
        get location() {
            return e(a, o)
        },
        listen(v) {
            if (c) throw new Error('A history only accepts one active listener')
            return (
                a.addEventListener(sb, u),
                (c = v),
                () => {
                    a.removeEventListener(sb, u), (c = null)
                }
            )
        },
        createHref(v) {
            return t(a, v)
        },
        encodeLocation(v) {
            let b = Os(typeof v == 'string' ? v : Cn(v))
            return { pathname: b.pathname, search: b.search, hash: b.hash }
        },
        push: f,
        replace: p,
        go(v) {
            return o.go(v)
        },
    }
    return m
}
var jt
;(function (e) {
    ;(e.data = 'data'),
        (e.deferred = 'deferred'),
        (e.redirect = 'redirect'),
        (e.error = 'error')
})(jt || (jt = {}))
function p7(e) {
    return e.index === !0
}
function d8(e, t, r) {
    return (
        t === void 0 && (t = []),
        r === void 0 && (r = new Set()),
        e.map((n, a) => {
            let l = [...t, a],
                o = typeof n.id == 'string' ? n.id : l.join('-')
            return (
                Ce(
                    n.index !== !0 || !n.children,
                    'Cannot specify children on an index route'
                ),
                Ce(
                    !r.has(o),
                    'Found a route id collision on id "' +
                        o +
                        `".  Route id's must be globally unique within Data Router usages`
                ),
                r.add(o),
                p7(n)
                    ? Ge({}, n, { id: o })
                    : Ge({}, n, {
                          id: o,
                          children: n.children ? d8(n.children, l, r) : void 0,
                      })
            )
        })
    )
}
function Vo(e, t, r) {
    r === void 0 && (r = '/')
    let n = typeof t == 'string' ? ea(t) : t,
        a = h8(n.pathname || '/', r)
    if (a == null) return null
    let l = f8(e)
    h7(l)
    let o = null
    for (let s = 0; o == null && s < l.length; ++s) o = S7(l[s], P7(a))
    return o
}
function f8(e, t, r, n) {
    t === void 0 && (t = []), r === void 0 && (r = []), n === void 0 && (n = '')
    let a = (l, o, s) => {
        let c = {
            relativePath: s === void 0 ? l.path || '' : s,
            caseSensitive: l.caseSensitive === !0,
            childrenIndex: o,
            route: l,
        }
        c.relativePath.startsWith('/') &&
            (Ce(
                c.relativePath.startsWith(n),
                'Absolute route path "' +
                    c.relativePath +
                    '" nested under path ' +
                    ('"' +
                        n +
                        '" is not valid. An absolute child route path ') +
                    'must start with the combined path of all its parent routes.'
            ),
            (c.relativePath = c.relativePath.slice(n.length)))
        let u = Vn([n, c.relativePath]),
            f = r.concat(c)
        l.children &&
            l.children.length > 0 &&
            (Ce(
                l.index !== !0,
                'Index routes must not have child routes. Please remove ' +
                    ('all child routes from route path "' + u + '".')
            ),
            f8(l.children, t, f, u)),
            !(l.path == null && !l.index) &&
                t.push({ path: u, score: w7(u, l.index), routesMeta: f })
    }
    return (
        e.forEach((l, o) => {
            var s
            if (l.path === '' || !((s = l.path) != null && s.includes('?')))
                a(l, o)
            else for (let c of p8(l.path)) a(l, o, c)
        }),
        t
    )
}
function p8(e) {
    let t = e.split('/')
    if (t.length === 0) return []
    let [r, ...n] = t,
        a = r.endsWith('?'),
        l = r.replace(/\?$/, '')
    if (n.length === 0) return a ? [l, ''] : [l]
    let o = p8(n.join('/')),
        s = []
    return (
        s.push(...o.map((c) => (c === '' ? l : [l, c].join('/')))),
        a && s.push(...o),
        s.map((c) => (e.startsWith('/') && c === '' ? '/' : c))
    )
}
function h7(e) {
    e.sort((t, r) =>
        t.score !== r.score
            ? r.score - t.score
            : N7(
                  t.routesMeta.map((n) => n.childrenIndex),
                  r.routesMeta.map((n) => n.childrenIndex)
              )
    )
}
const m7 = /^:\w+$/,
    g7 = 3,
    v7 = 2,
    y7 = 1,
    b7 = 10,
    x7 = -2,
    ub = (e) => e === '*'
function w7(e, t) {
    let r = e.split('/'),
        n = r.length
    return (
        r.some(ub) && (n += x7),
        t && (n += v7),
        r
            .filter((a) => !ub(a))
            .reduce((a, l) => a + (m7.test(l) ? g7 : l === '' ? y7 : b7), n)
    )
}
function N7(e, t) {
    return e.length === t.length && e.slice(0, -1).every((n, a) => n === t[a])
        ? e[e.length - 1] - t[t.length - 1]
        : 0
}
function S7(e, t) {
    let { routesMeta: r } = e,
        n = {},
        a = '/',
        l = []
    for (let o = 0; o < r.length; ++o) {
        let s = r[o],
            c = o === r.length - 1,
            u = a === '/' ? t : t.slice(a.length) || '/',
            f = Gu(
                {
                    path: s.relativePath,
                    caseSensitive: s.caseSensitive,
                    end: c,
                },
                u
            )
        if (!f) return null
        Object.assign(n, f.params)
        let p = s.route
        l.push({
            params: n,
            pathname: Vn([a, f.pathname]),
            pathnameBase: k7(Vn([a, f.pathnameBase])),
            route: p,
        }),
            f.pathnameBase !== '/' && (a = Vn([a, f.pathnameBase]))
    }
    return l
}
function Gu(e, t) {
    typeof e == 'string' && (e = { path: e, caseSensitive: !1, end: !0 })
    let [r, n] = C7(e.path, e.caseSensitive, e.end),
        a = t.match(r)
    if (!a) return null
    let l = a[0],
        o = l.replace(/(.)\/+$/, '$1'),
        s = a.slice(1)
    return {
        params: n.reduce((u, f, p) => {
            if (f === '*') {
                let m = s[p] || ''
                o = l.slice(0, l.length - m.length).replace(/(.)\/+$/, '$1')
            }
            return (u[f] = _7(s[p] || '', f)), u
        }, {}),
        pathname: l,
        pathnameBase: o,
        pattern: e,
    }
}
function C7(e, t, r) {
    t === void 0 && (t = !1),
        r === void 0 && (r = !0),
        w0(
            e === '*' || !e.endsWith('*') || e.endsWith('/*'),
            'Route path "' +
                e +
                '" will be treated as if it were ' +
                ('"' +
                    e.replace(/\*$/, '/*') +
                    '" because the `*` character must ') +
                'always follow a `/` in the pattern. To get rid of this warning, ' +
                ('please change the route path to "' +
                    e.replace(/\*$/, '/*') +
                    '".')
        )
    let n = [],
        a =
            '^' +
            e
                .replace(/\/*\*?$/, '')
                .replace(/^\/*/, '/')
                .replace(/[\\.*+^$?{}|()[\]]/g, '\\$&')
                .replace(/\/:(\w+)/g, (o, s) => (n.push(s), '/([^\\/]+)'))
    return (
        e.endsWith('*')
            ? (n.push('*'),
              (a += e === '*' || e === '/*' ? '(.*)$' : '(?:\\/(.+)|\\/*)$'))
            : r
            ? (a += '\\/*$')
            : e !== '' && e !== '/' && (a += '(?:(?=\\/|$))'),
        [new RegExp(a, t ? void 0 : 'i'), n]
    )
}
function P7(e) {
    try {
        return decodeURI(e)
    } catch (t) {
        return (
            w0(
                !1,
                'The URL path "' +
                    e +
                    '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
                    ('encoding (' + t + ').')
            ),
            e
        )
    }
}
function _7(e, t) {
    try {
        return decodeURIComponent(e)
    } catch (r) {
        return (
            w0(
                !1,
                'The value for the URL param "' +
                    t +
                    '" will not be decoded because' +
                    (' the string "' +
                        e +
                        '" is a malformed URL segment. This is probably') +
                    (' due to a bad percent encoding (' + r + ').')
            ),
            e
        )
    }
}
function h8(e, t) {
    if (t === '/') return e
    if (!e.toLowerCase().startsWith(t.toLowerCase())) return null
    let r = t.endsWith('/') ? t.length - 1 : t.length,
        n = e.charAt(r)
    return n && n !== '/' ? null : e.slice(r) || '/'
}
function w0(e, t) {
    if (!e) {
        typeof console < 'u' && console.warn(t)
        try {
            throw new Error(t)
        } catch {}
    }
}
function A7(e, t) {
    t === void 0 && (t = '/')
    let {
        pathname: r,
        search: n = '',
        hash: a = '',
    } = typeof e == 'string' ? ea(e) : e
    return {
        pathname: r ? (r.startsWith('/') ? r : E7(r, t)) : t,
        search: O7(n),
        hash: T7(a),
    }
}
function E7(e, t) {
    let r = t.replace(/\/+$/, '').split('/')
    return (
        e.split('/').forEach((a) => {
            a === '..' ? r.length > 1 && r.pop() : a !== '.' && r.push(a)
        }),
        r.length > 1 ? r.join('/') : '/'
    )
}
function nh(e, t, r, n) {
    return (
        "Cannot include a '" +
        e +
        "' character in a manually specified " +
        ('`to.' +
            t +
            '` field [' +
            JSON.stringify(n) +
            '].  Please separate it out to the ') +
        ('`to.' +
            r +
            '` field. Alternatively you may provide the full path as ') +
        'a string in <Link to="..."> and the router will parse it for you.'
    )
}
function yf(e) {
    return e.filter(
        (t, r) => r === 0 || (t.route.path && t.route.path.length > 0)
    )
}
function N0(e, t, r, n) {
    n === void 0 && (n = !1)
    let a
    typeof e == 'string'
        ? (a = ea(e))
        : ((a = Ge({}, e)),
          Ce(
              !a.pathname || !a.pathname.includes('?'),
              nh('?', 'pathname', 'search', a)
          ),
          Ce(
              !a.pathname || !a.pathname.includes('#'),
              nh('#', 'pathname', 'hash', a)
          ),
          Ce(
              !a.search || !a.search.includes('#'),
              nh('#', 'search', 'hash', a)
          ))
    let l = e === '' || a.pathname === '',
        o = l ? '/' : a.pathname,
        s
    if (n || o == null) s = r
    else {
        let p = t.length - 1
        if (o.startsWith('..')) {
            let m = o.split('/')
            for (; m[0] === '..'; ) m.shift(), (p -= 1)
            a.pathname = m.join('/')
        }
        s = p >= 0 ? t[p] : '/'
    }
    let c = A7(a, s),
        u = o && o !== '/' && o.endsWith('/'),
        f = (l || o === '.') && r.endsWith('/')
    return !c.pathname.endsWith('/') && (u || f) && (c.pathname += '/'), c
}
const Vn = (e) => e.join('/').replace(/\/\/+/g, '/'),
    k7 = (e) => e.replace(/\/+$/, '').replace(/^\/*/, '/'),
    O7 = (e) => (!e || e === '?' ? '' : e.startsWith('?') ? e : '?' + e),
    T7 = (e) => (!e || e === '#' ? '' : e.startsWith('#') ? e : '#' + e)
class db extends Error {}
class M7 {
    constructor(t) {
        ;(this.pendingKeys = new Set()),
            (this.subscriber = void 0),
            Ce(
                t && typeof t == 'object' && !Array.isArray(t),
                'defer() only accepts plain objects'
            )
        let r
        ;(this.abortPromise = new Promise((a, l) => (r = l))),
            (this.controller = new AbortController())
        let n = () => r(new db('Deferred data aborted'))
        ;(this.unlistenAbortSignal = () =>
            this.controller.signal.removeEventListener('abort', n)),
            this.controller.signal.addEventListener('abort', n),
            (this.data = Object.entries(t).reduce((a, l) => {
                let [o, s] = l
                return Object.assign(a, { [o]: this.trackPromise(o, s) })
            }, {}))
    }
    trackPromise(t, r) {
        if (!(r instanceof Promise)) return r
        this.pendingKeys.add(t)
        let n = Promise.race([r, this.abortPromise]).then(
            (a) => this.onSettle(n, t, null, a),
            (a) => this.onSettle(n, t, a)
        )
        return (
            n.catch(() => {}),
            Object.defineProperty(n, '_tracked', { get: () => !0 }),
            n
        )
    }
    onSettle(t, r, n, a) {
        if (this.controller.signal.aborted && n instanceof db)
            return (
                this.unlistenAbortSignal(),
                Object.defineProperty(t, '_error', { get: () => n }),
                Promise.reject(n)
            )
        this.pendingKeys.delete(r), this.done && this.unlistenAbortSignal()
        const l = this.subscriber
        return n
            ? (Object.defineProperty(t, '_error', { get: () => n }),
              l && l(!1),
              Promise.reject(n))
            : (Object.defineProperty(t, '_data', { get: () => a }),
              l && l(!1),
              a)
    }
    subscribe(t) {
        this.subscriber = t
    }
    cancel() {
        this.controller.abort(),
            this.pendingKeys.forEach((r, n) => this.pendingKeys.delete(n))
        let t = this.subscriber
        t && t(!0)
    }
    async resolveData(t) {
        let r = !1
        if (!this.done) {
            let n = () => this.cancel()
            t.addEventListener('abort', n),
                (r = await new Promise((a) => {
                    this.subscribe((l) => {
                        t.removeEventListener('abort', n),
                            (l || this.done) && a(l)
                    })
                }))
        }
        return r
    }
    get done() {
        return this.pendingKeys.size === 0
    }
    get unwrappedData() {
        return (
            Ce(
                this.data !== null && this.done,
                'Can only unwrap data on initialized and settled deferreds'
            ),
            Object.entries(this.data).reduce((t, r) => {
                let [n, a] = r
                return Object.assign(t, { [n]: $7(a) })
            }, {})
        )
    }
}
function D7(e) {
    return e instanceof Promise && e._tracked === !0
}
function $7(e) {
    if (!D7(e)) return e
    if (e._error) throw e._error
    return e._data
}
class bf {
    constructor(t, r, n, a) {
        a === void 0 && (a = !1),
            (this.status = t),
            (this.statusText = r || ''),
            (this.internal = a),
            n instanceof Error
                ? ((this.data = n.toString()), (this.error = n))
                : (this.data = n)
    }
}
function m8(e) {
    return e instanceof bf
}
const g8 = ['post', 'put', 'patch', 'delete'],
    I7 = new Set(g8),
    R7 = ['get', ...g8],
    L7 = new Set(R7),
    j7 = new Set([301, 302, 303, 307, 308]),
    F7 = new Set([307, 308]),
    ah = {
        state: 'idle',
        location: void 0,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
    },
    B7 = {
        state: 'idle',
        data: void 0,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
    },
    z7 =
        typeof window < 'u' &&
        typeof window.document < 'u' &&
        typeof window.document.createElement < 'u',
    V7 = !z7
function U7(e) {
    Ce(
        e.routes.length > 0,
        'You must provide a non-empty routes array to createRouter'
    )
    let t = d8(e.routes),
        r = null,
        n = new Set(),
        a = null,
        l = null,
        o = null,
        s = e.hydrationData != null,
        c = Vo(t, e.history.location, e.basename),
        u = null
    if (c == null) {
        let U = li(404, { pathname: e.history.location.pathname }),
            { matches: H, route: Z } = vb(t)
        ;(c = H), (u = { [Z.id]: U })
    }
    let f = !c.some((U) => U.route.loader) || e.hydrationData != null,
        p,
        m = {
            historyAction: e.history.action,
            location: e.history.location,
            matches: c,
            initialized: f,
            navigation: ah,
            restoreScrollPosition: e.hydrationData != null ? !1 : null,
            preventScrollReset: !1,
            revalidation: 'idle',
            loaderData: (e.hydrationData && e.hydrationData.loaderData) || {},
            actionData: (e.hydrationData && e.hydrationData.actionData) || null,
            errors: (e.hydrationData && e.hydrationData.errors) || u,
            fetchers: new Map(),
        },
        v = vt.Pop,
        b = !1,
        h,
        g = !1,
        x = !1,
        w = [],
        y = [],
        N = new Map(),
        S = 0,
        P = -1,
        E = new Map(),
        k = new Set(),
        M = new Map(),
        A = new Map()
    function _() {
        return (
            (r = e.history.listen((U) => {
                let { action: H, location: Z } = U
                return D(H, Z)
            })),
            m.initialized || D(vt.Pop, m.location),
            p
        )
    }
    function O() {
        r && r(), n.clear(), h && h.abort(), m.fetchers.forEach((U, H) => F(H))
    }
    function T(U) {
        return n.add(U), () => n.delete(U)
    }
    function $(U) {
        ;(m = Ge({}, m, U)), n.forEach((H) => H(m))
    }
    function I(U, H) {
        var Z
        let de =
                m.actionData != null &&
                m.navigation.formMethod != null &&
                oi(m.navigation.formMethod) &&
                m.navigation.state === 'loading' &&
                ((Z = U.state) == null ? void 0 : Z._isRedirect) !== !0,
            re
        H.actionData
            ? Object.keys(H.actionData).length > 0
                ? (re = H.actionData)
                : (re = null)
            : de
            ? (re = m.actionData)
            : (re = null)
        let be = H.loaderData
            ? gb(m.loaderData, H.loaderData, H.matches || [], H.errors)
            : m.loaderData
        $(
            Ge({}, H, {
                actionData: re,
                loaderData: be,
                historyAction: v,
                location: U,
                initialized: !0,
                navigation: ah,
                revalidation: 'idle',
                restoreScrollPosition: m.navigation.formData
                    ? !1
                    : ht(U, H.matches || m.matches),
                preventScrollReset: b,
            })
        ),
            g ||
                v === vt.Pop ||
                (v === vt.Push
                    ? e.history.push(U, U.state)
                    : v === vt.Replace && e.history.replace(U, U.state)),
            (v = vt.Pop),
            (b = !1),
            (g = !1),
            (x = !1),
            (w = []),
            (y = [])
    }
    async function j(U, H) {
        if (typeof U == 'number') {
            e.history.go(U)
            return
        }
        let { path: Z, submission: de, error: re } = fb(U, H),
            be = ks(m.location, Z, H && H.state)
        be = Ge({}, be, e.history.encodeLocation(be))
        let Se = H && H.replace != null ? H.replace : void 0,
            ke = vt.Push
        Se === !0
            ? (ke = vt.Replace)
            : Se === !1 ||
              (de != null &&
                  oi(de.formMethod) &&
                  de.formAction === m.location.pathname + m.location.search &&
                  (ke = vt.Replace))
        let we =
            H && 'preventScrollReset' in H
                ? H.preventScrollReset === !0
                : void 0
        return await D(ke, be, {
            submission: de,
            pendingError: re,
            preventScrollReset: we,
            replace: H && H.replace,
        })
    }
    function L() {
        if (
            (Pe(),
            $({ revalidation: 'loading' }),
            m.navigation.state !== 'submitting')
        ) {
            if (m.navigation.state === 'idle') {
                D(m.historyAction, m.location, {
                    startUninterruptedRevalidation: !0,
                })
                return
            }
            D(v || m.historyAction, m.navigation.location, {
                overrideNavigation: m.navigation,
            })
        }
    }
    async function D(U, H, Z) {
        h && h.abort(),
            (h = null),
            (v = U),
            (g = (Z && Z.startUninterruptedRevalidation) === !0),
            Ye(m.location, m.matches),
            (b = (Z && Z.preventScrollReset) === !0)
        let de = Z && Z.overrideNavigation,
            re = Vo(t, H, e.basename)
        if (!re) {
            let at = li(404, { pathname: H.pathname }),
                { matches: Xr, route: Zr } = vb(t)
            se(), I(H, { matches: Xr, loaderData: {}, errors: { [Zr.id]: at } })
            return
        }
        if (K7(m.location, H)) {
            I(H, { matches: re })
            return
        }
        h = new AbortController()
        let be = ko(H, h.signal, Z && Z.submission),
            Se,
            ke
        if (Z && Z.pendingError) ke = { [nl(re).route.id]: Z.pendingError }
        else if (Z && Z.submission && oi(Z.submission.formMethod)) {
            let at = await R(be, H, Z.submission, re, { replace: Z.replace })
            if (at.shortCircuited) return
            ;(Se = at.pendingActionData),
                (ke = at.pendingActionError),
                (de = Ge({ state: 'loading', location: H }, Z.submission)),
                (be = new Request(be.url, { signal: be.signal }))
        }
        let {
            shortCircuited: we,
            loaderData: It,
            errors: Ie,
        } = await V(be, H, re, de, Z && Z.submission, Z && Z.replace, Se, ke)
        we ||
            ((h = null),
            I(
                H,
                Ge({ matches: re }, Se ? { actionData: Se } : {}, {
                    loaderData: It,
                    errors: Ie,
                })
            ))
    }
    async function R(U, H, Z, de, re) {
        Pe()
        let be = Ge({ state: 'submitting', location: H }, Z)
        $({ navigation: be })
        let Se,
            ke = wb(de, H)
        if (!ke.route.action)
            Se = {
                type: jt.error,
                error: li(405, {
                    method: U.method,
                    pathname: H.pathname,
                    routeId: ke.route.id,
                }),
            }
        else if (
            ((Se = await Eo('action', U, ke, de, p.basename)), U.signal.aborted)
        )
            return { shortCircuited: !0 }
        if (ul(Se)) {
            let we
            return (
                re && re.replace != null
                    ? (we = re.replace)
                    : (we =
                          Se.location ===
                          m.location.pathname + m.location.search),
                await X(m, Se, { submission: Z, replace: we }),
                { shortCircuited: !0 }
            )
        }
        if (as(Se)) {
            let we = nl(de, ke.route.id)
            return (
                (re && re.replace) !== !0 && (v = vt.Push),
                {
                    pendingActionData: {},
                    pendingActionError: { [we.route.id]: Se.error },
                }
            )
        }
        if (pi(Se)) throw new Error('defer() is not supported in actions')
        return { pendingActionData: { [ke.route.id]: Se.data } }
    }
    async function V(U, H, Z, de, re, be, Se, ke) {
        let we = de
        we ||
            (we = Ge(
                {
                    state: 'loading',
                    location: H,
                    formMethod: void 0,
                    formAction: void 0,
                    formEncType: void 0,
                    formData: void 0,
                },
                re
            ))
        let It =
                re ||
                (we.formMethod && we.formAction && we.formData && we.formEncType
                    ? {
                          formMethod: we.formMethod,
                          formAction: we.formAction,
                          formData: we.formData,
                          formEncType: we.formEncType,
                      }
                    : void 0),
            [Ie, at] = pb(m, Z, It, H, x, w, y, Se, ke, M)
        if (
            (se(
                (Ut) =>
                    !(Z && Z.some((mr) => mr.route.id === Ut)) ||
                    (Ie && Ie.some((mr) => mr.route.id === Ut))
            ),
            Ie.length === 0 && at.length === 0)
        )
            return (
                I(
                    H,
                    Ge(
                        { matches: Z, loaderData: {}, errors: ke || null },
                        Se ? { actionData: Se } : {}
                    )
                ),
                { shortCircuited: !0 }
            )
        if (!g) {
            at.forEach((mr) => {
                let [Ka] = mr,
                    yo = m.fetchers.get(Ka),
                    bo = {
                        state: 'loading',
                        data: yo && yo.data,
                        formMethod: void 0,
                        formAction: void 0,
                        formEncType: void 0,
                        formData: void 0,
                        ' _hasFetcherDoneAnything ': !0,
                    }
                m.fetchers.set(Ka, bo)
            })
            let Ut = Se || m.actionData
            $(
                Ge(
                    { navigation: we },
                    Ut
                        ? Object.keys(Ut).length === 0
                            ? { actionData: null }
                            : { actionData: Ut }
                        : {},
                    at.length > 0 ? { fetchers: new Map(m.fetchers) } : {}
                )
            )
        }
        ;(P = ++S),
            at.forEach((Ut) => {
                let [mr] = Ut
                return N.set(mr, h)
            })
        let {
            results: Xr,
            loaderResults: Zr,
            fetcherResults: vo,
        } = await ge(m.matches, Z, Ie, at, U)
        if (U.signal.aborted) return { shortCircuited: !0 }
        at.forEach((Ut) => {
            let [mr] = Ut
            return N.delete(mr)
        })
        let Cc = yb(Xr)
        if (Cc) return await X(m, Cc, { replace: be }), { shortCircuited: !0 }
        let { loaderData: Pc, errors: Li } = mb(m, Z, Ie, Zr, ke, at, vo, A)
        A.forEach((Ut, mr) => {
            Ut.subscribe((Ka) => {
                ;(Ka || Ut.done) && A.delete(mr)
            })
        }),
            z()
        let Op = _e(P)
        return Ge(
            { loaderData: Pc, errors: Li },
            Op || at.length > 0 ? { fetchers: new Map(m.fetchers) } : {}
        )
    }
    function G(U) {
        return m.fetchers.get(U) || B7
    }
    function ee(U, H, Z, de) {
        if (V7)
            throw new Error(
                "router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback."
            )
        N.has(U) && q(U)
        let re = Vo(t, Z, e.basename)
        if (!re) {
            ue(U, H, li(404, { pathname: Z }))
            return
        }
        let { path: be, submission: Se } = fb(Z, de, !0),
            ke = wb(re, be)
        if (Se && oi(Se.formMethod)) {
            Q(U, H, be, ke, re, Se)
            return
        }
        M.set(U, [be, ke, re]), B(U, H, be, ke, re, Se)
    }
    async function Q(U, H, Z, de, re, be) {
        if ((Pe(), M.delete(U), !de.route.action)) {
            let kn = li(405, { method: be.formMethod, pathname: Z, routeId: H })
            ue(U, H, kn)
            return
        }
        let Se = m.fetchers.get(U),
            ke = Ge({ state: 'submitting' }, be, {
                data: Se && Se.data,
                ' _hasFetcherDoneAnything ': !0,
            })
        m.fetchers.set(U, ke), $({ fetchers: new Map(m.fetchers) })
        let we = new AbortController(),
            It = ko(Z, we.signal, be)
        N.set(U, we)
        let Ie = await Eo('action', It, de, re, p.basename)
        if (It.signal.aborted) {
            N.get(U) === we && N.delete(U)
            return
        }
        if (ul(Ie)) {
            N.delete(U), k.add(U)
            let kn = Ge({ state: 'loading' }, be, {
                data: void 0,
                ' _hasFetcherDoneAnything ': !0,
            })
            return (
                m.fetchers.set(U, kn),
                $({ fetchers: new Map(m.fetchers) }),
                X(m, Ie, { isFetchActionRedirect: !0 })
            )
        }
        if (as(Ie)) {
            ue(U, H, Ie.error)
            return
        }
        pi(Ie) && Ce(!1, 'defer() is not supported in actions')
        let at = m.navigation.location || m.location,
            Xr = ko(at, we.signal),
            Zr =
                m.navigation.state !== 'idle'
                    ? Vo(t, m.navigation.location, e.basename)
                    : m.matches
        Ce(Zr, "Didn't find any matches after fetcher action")
        let vo = ++S
        E.set(U, vo)
        let Cc = Ge({ state: 'loading', data: Ie.data }, be, {
            ' _hasFetcherDoneAnything ': !0,
        })
        m.fetchers.set(U, Cc)
        let [Pc, Li] = pb(
            m,
            Zr,
            be,
            at,
            x,
            w,
            y,
            { [de.route.id]: Ie.data },
            void 0,
            M
        )
        Li.filter((kn) => {
            let [Ya] = kn
            return Ya !== U
        }).forEach((kn) => {
            let [Ya] = kn,
                Jv = m.fetchers.get(Ya),
                HS = {
                    state: 'loading',
                    data: Jv && Jv.data,
                    formMethod: void 0,
                    formAction: void 0,
                    formEncType: void 0,
                    formData: void 0,
                    ' _hasFetcherDoneAnything ': !0,
                }
            m.fetchers.set(Ya, HS), N.set(Ya, we)
        }),
            $({ fetchers: new Map(m.fetchers) })
        let {
            results: Op,
            loaderResults: Ut,
            fetcherResults: mr,
        } = await ge(m.matches, Zr, Pc, Li, Xr)
        if (we.signal.aborted) return
        E.delete(U),
            N.delete(U),
            Li.forEach((kn) => {
                let [Ya] = kn
                return N.delete(Ya)
            })
        let Ka = yb(Op)
        if (Ka) return X(m, Ka)
        let { loaderData: yo, errors: bo } = mb(
                m,
                m.matches,
                Pc,
                Ut,
                void 0,
                Li,
                mr,
                A
            ),
            US = {
                state: 'idle',
                data: Ie.data,
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                ' _hasFetcherDoneAnything ': !0,
            }
        m.fetchers.set(U, US)
        let WS = _e(vo)
        m.navigation.state === 'loading' && vo > P
            ? (Ce(v, 'Expected pending action'),
              h && h.abort(),
              I(m.navigation.location, {
                  matches: Zr,
                  loaderData: yo,
                  errors: bo,
                  fetchers: new Map(m.fetchers),
              }))
            : ($(
                  Ge(
                      { errors: bo, loaderData: gb(m.loaderData, yo, Zr, bo) },
                      WS ? { fetchers: new Map(m.fetchers) } : {}
                  )
              ),
              (x = !1))
    }
    async function B(U, H, Z, de, re, be) {
        let Se = m.fetchers.get(U),
            ke = Ge(
                {
                    state: 'loading',
                    formMethod: void 0,
                    formAction: void 0,
                    formEncType: void 0,
                    formData: void 0,
                },
                be,
                { data: Se && Se.data, ' _hasFetcherDoneAnything ': !0 }
            )
        m.fetchers.set(U, ke), $({ fetchers: new Map(m.fetchers) })
        let we = new AbortController(),
            It = ko(Z, we.signal)
        N.set(U, we)
        let Ie = await Eo('loader', It, de, re, p.basename)
        if (
            (pi(Ie) && (Ie = (await x8(Ie, It.signal, !0)) || Ie),
            N.get(U) === we && N.delete(U),
            It.signal.aborted)
        )
            return
        if (ul(Ie)) {
            await X(m, Ie)
            return
        }
        if (as(Ie)) {
            let Xr = nl(m.matches, H)
            m.fetchers.delete(U),
                $({
                    fetchers: new Map(m.fetchers),
                    errors: { [Xr.route.id]: Ie.error },
                })
            return
        }
        Ce(!pi(Ie), 'Unhandled fetcher deferred data')
        let at = {
            state: 'idle',
            data: Ie.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            ' _hasFetcherDoneAnything ': !0,
        }
        m.fetchers.set(U, at), $({ fetchers: new Map(m.fetchers) })
    }
    async function X(U, H, Z) {
        var de
        let {
            submission: re,
            replace: be,
            isFetchActionRedirect: Se,
        } = Z === void 0 ? {} : Z
        H.revalidate && (x = !0)
        let ke = ks(
            U.location,
            H.location,
            Ge({ _isRedirect: !0 }, Se ? { _isFetchActionRedirect: !0 } : {})
        )
        if (
            (Ce(ke, 'Expected a location on the redirect navigation'),
            typeof ((de = window) == null ? void 0 : de.location) < 'u')
        ) {
            let Zr = Os(H.location).origin
            if (window.location.origin !== Zr) {
                be
                    ? window.location.replace(H.location)
                    : window.location.assign(H.location)
                return
            }
        }
        h = null
        let we = be === !0 ? vt.Replace : vt.Push,
            {
                formMethod: It,
                formAction: Ie,
                formEncType: at,
                formData: Xr,
            } = U.navigation
        !re &&
            It &&
            Ie &&
            Xr &&
            at &&
            (re = {
                formMethod: It,
                formAction: Ie,
                formEncType: at,
                formData: Xr,
            }),
            F7.has(H.status) && re && oi(re.formMethod)
                ? await D(we, ke, {
                      submission: Ge({}, re, { formAction: H.location }),
                  })
                : await D(we, ke, {
                      overrideNavigation: {
                          state: 'loading',
                          location: ke,
                          formMethod: re ? re.formMethod : void 0,
                          formAction: re ? re.formAction : void 0,
                          formEncType: re ? re.formEncType : void 0,
                          formData: re ? re.formData : void 0,
                      },
                  })
    }
    async function ge(U, H, Z, de, re) {
        let be = await Promise.all([
                ...Z.map((we) => Eo('loader', re, we, H, p.basename)),
                ...de.map((we) => {
                    let [, It, Ie, at] = we
                    return Eo('loader', ko(It, re.signal), Ie, at, p.basename)
                }),
            ]),
            Se = be.slice(0, Z.length),
            ke = be.slice(Z.length)
        return (
            await Promise.all([
                bb(U, Z, Se, re.signal, !1, m.loaderData),
                bb(
                    U,
                    de.map((we) => {
                        let [, , It] = we
                        return It
                    }),
                    ke,
                    re.signal,
                    !0
                ),
            ]),
            { results: be, loaderResults: Se, fetcherResults: ke }
        )
    }
    function Pe() {
        ;(x = !0),
            w.push(...se()),
            M.forEach((U, H) => {
                N.has(H) && (y.push(H), q(H))
            })
    }
    function ue(U, H, Z) {
        let de = nl(m.matches, H)
        F(U), $({ errors: { [de.route.id]: Z }, fetchers: new Map(m.fetchers) })
    }
    function F(U) {
        N.has(U) && q(U),
            M.delete(U),
            E.delete(U),
            k.delete(U),
            m.fetchers.delete(U)
    }
    function q(U) {
        let H = N.get(U)
        Ce(H, 'Expected fetch controller: ' + U), H.abort(), N.delete(U)
    }
    function te(U) {
        for (let H of U) {
            let de = {
                state: 'idle',
                data: G(H).data,
                formMethod: void 0,
                formAction: void 0,
                formEncType: void 0,
                formData: void 0,
                ' _hasFetcherDoneAnything ': !0,
            }
            m.fetchers.set(H, de)
        }
    }
    function z() {
        let U = []
        for (let H of k) {
            let Z = m.fetchers.get(H)
            Ce(Z, 'Expected fetcher: ' + H),
                Z.state === 'loading' && (k.delete(H), U.push(H))
        }
        te(U)
    }
    function _e(U) {
        let H = []
        for (let [Z, de] of E)
            if (de < U) {
                let re = m.fetchers.get(Z)
                Ce(re, 'Expected fetcher: ' + Z),
                    re.state === 'loading' && (q(Z), E.delete(Z), H.push(Z))
            }
        return te(H), H.length > 0
    }
    function se(U) {
        let H = []
        return (
            A.forEach((Z, de) => {
                ;(!U || U(de)) && (Z.cancel(), H.push(de), A.delete(de))
            }),
            H
        )
    }
    function Le(U, H, Z) {
        if (
            ((a = U),
            (o = H),
            (l = Z || ((de) => de.key)),
            !s && m.navigation === ah)
        ) {
            s = !0
            let de = ht(m.location, m.matches)
            de != null && $({ restoreScrollPosition: de })
        }
        return () => {
            ;(a = null), (o = null), (l = null)
        }
    }
    function Ye(U, H) {
        if (a && l && o) {
            let Z = H.map((re) => xb(re, m.loaderData)),
                de = l(U, Z) || U.key
            a[de] = o()
        }
    }
    function ht(U, H) {
        if (a && l && o) {
            let Z = H.map((be) => xb(be, m.loaderData)),
                de = l(U, Z) || U.key,
                re = a[de]
            if (typeof re == 'number') return re
        }
        return null
    }
    return (
        (p = {
            get basename() {
                return e.basename
            },
            get state() {
                return m
            },
            get routes() {
                return t
            },
            initialize: _,
            subscribe: T,
            enableScrollRestoration: Le,
            navigate: j,
            fetch: ee,
            revalidate: L,
            createHref: (U) => e.history.createHref(U),
            encodeLocation: (U) => e.history.encodeLocation(U),
            getFetcher: G,
            deleteFetcher: F,
            dispose: O,
            _internalFetchControllers: N,
            _internalActiveDeferreds: A,
        }),
        p
    )
}
function W7(e) {
    return e != null && 'formData' in e
}
function fb(e, t, r) {
    r === void 0 && (r = !1)
    let n = typeof e == 'string' ? e : Cn(e)
    if (!t || !W7(t)) return { path: n }
    if (t.formMethod && !X7(t.formMethod))
        return { path: n, error: li(405, { method: t.formMethod }) }
    let a
    if (
        t.formData &&
        ((a = {
            formMethod: t.formMethod || 'get',
            formAction: b8(n),
            formEncType:
                (t && t.formEncType) || 'application/x-www-form-urlencoded',
            formData: t.formData,
        }),
        oi(a.formMethod))
    )
        return { path: n, submission: a }
    let l = ea(n)
    try {
        let o = y8(t.formData)
        r && l.search && w8(l.search) && o.append('index', ''),
            (l.search = '?' + o)
    } catch {
        return { path: n, error: li(400) }
    }
    return { path: Cn(l), submission: a }
}
function H7(e, t) {
    let r = e
    if (t) {
        let n = e.findIndex((a) => a.route.id === t)
        n >= 0 && (r = e.slice(0, n))
    }
    return r
}
function pb(e, t, r, n, a, l, o, s, c, u) {
    let f = c ? Object.values(c)[0] : s ? Object.values(s)[0] : void 0,
        p = c ? Object.keys(c)[0] : void 0,
        v = H7(t, p).filter(
            (h, g) =>
                h.route.loader != null &&
                (G7(e.loaderData, e.matches[g], h) ||
                    l.some((x) => x === h.route.id) ||
                    hb(e.location, e.matches[g], r, n, h, a, f))
        ),
        b = []
    return (
        u &&
            u.forEach((h, g) => {
                let [x, w, y] = h
                o.includes(g)
                    ? b.push([g, x, w, y])
                    : a && hb(x, w, r, x, w, a, f) && b.push([g, x, w, y])
            }),
        [v, b]
    )
}
function G7(e, t, r) {
    let n = !t || r.route.id !== t.route.id,
        a = e[r.route.id] === void 0
    return n || a
}
function v8(e, t) {
    let r = e.route.path
    return (
        e.pathname !== t.pathname ||
        (r && r.endsWith('*') && e.params['*'] !== t.params['*'])
    )
}
function hb(e, t, r, n, a, l, o) {
    let s = Os(e),
        c = t.params,
        u = Os(n),
        f = a.params,
        p =
            v8(t, a) ||
            s.toString() === u.toString() ||
            s.search !== u.search ||
            l
    if (a.route.shouldRevalidate) {
        let m = a.route.shouldRevalidate(
            Ge(
                { currentUrl: s, currentParams: c, nextUrl: u, nextParams: f },
                r,
                { actionResult: o, defaultShouldRevalidate: p }
            )
        )
        if (typeof m == 'boolean') return m
    }
    return p
}
async function Eo(e, t, r, n, a, l, o, s) {
    a === void 0 && (a = '/'),
        l === void 0 && (l = !1),
        o === void 0 && (o = !1)
    let c,
        u,
        f,
        p = new Promise((v, b) => (f = b)),
        m = () => f()
    t.signal.addEventListener('abort', m)
    try {
        let v = r.route[e]
        Ce(
            v,
            'Could not find the ' +
                e +
                ' to run on the "' +
                r.route.id +
                '" route'
        ),
            (u = await Promise.race([
                v({ request: t, params: r.params, context: s }),
                p,
            ])),
            Ce(
                u !== void 0,
                'You defined ' +
                    (e === 'action' ? 'an action' : 'a loader') +
                    ' for route ' +
                    ('"' +
                        r.route.id +
                        '" but didn\'t return anything from your `' +
                        e +
                        '` ') +
                    'function. Please return a value or `null`.'
            )
    } catch (v) {
        ;(c = jt.error), (u = v)
    } finally {
        t.signal.removeEventListener('abort', m)
    }
    if (Y7(u)) {
        let v = u.status
        if (j7.has(v)) {
            let g = u.headers.get('Location')
            if (
                (Ce(
                    g,
                    'Redirects returned/thrown from loaders/actions must have a Location header'
                ),
                !(/^[a-z+]+:\/\//i.test(g) || g.startsWith('//')))
            ) {
                let w = n.slice(0, n.indexOf(r) + 1),
                    y = yf(w).map((S) => S.pathnameBase),
                    N = N0(g, y, new URL(t.url).pathname)
                if (
                    (Ce(Cn(N), 'Unable to resolve redirect location: ' + g), a)
                ) {
                    let S = N.pathname
                    N.pathname = S === '/' ? a : Vn([a, S])
                }
                g = Cn(N)
            }
            if (l) throw (u.headers.set('Location', g), u)
            return {
                type: jt.redirect,
                status: v,
                location: g,
                revalidate: u.headers.get('X-Remix-Revalidate') !== null,
            }
        }
        if (o) throw { type: c || jt.data, response: u }
        let b,
            h = u.headers.get('Content-Type')
        return (
            h && /\bapplication\/json\b/.test(h)
                ? (b = await u.json())
                : (b = await u.text()),
            c === jt.error
                ? {
                      type: c,
                      error: new bf(v, u.statusText, b),
                      headers: u.headers,
                  }
                : {
                      type: jt.data,
                      data: b,
                      statusCode: u.status,
                      headers: u.headers,
                  }
        )
    }
    return c === jt.error
        ? { type: c, error: u }
        : u instanceof M7
        ? { type: jt.deferred, deferredData: u }
        : { type: jt.data, data: u }
}
function ko(e, t, r) {
    let n = Os(b8(e)).toString(),
        a = { signal: t }
    if (r && oi(r.formMethod)) {
        let { formMethod: l, formEncType: o, formData: s } = r
        ;(a.method = l.toUpperCase()),
            (a.body = o === 'application/x-www-form-urlencoded' ? y8(s) : s)
    }
    return new Request(n, a)
}
function y8(e) {
    let t = new URLSearchParams()
    for (let [r, n] of e.entries())
        Ce(
            typeof n == 'string',
            'File inputs are not supported with encType "application/x-www-form-urlencoded", please use "multipart/form-data" instead.'
        ),
            t.append(r, n)
    return t
}
function q7(e, t, r, n, a) {
    let l = {},
        o = null,
        s,
        c = !1,
        u = {}
    return (
        r.forEach((f, p) => {
            let m = t[p].route.id
            if (
                (Ce(
                    !ul(f),
                    'Cannot handle redirect results in processLoaderData'
                ),
                as(f))
            ) {
                let v = nl(e, m),
                    b = f.error
                n && ((b = Object.values(n)[0]), (n = void 0)),
                    (o = o || {}),
                    o[v.route.id] == null && (o[v.route.id] = b),
                    (l[m] = void 0),
                    c || ((c = !0), (s = m8(f.error) ? f.error.status : 500)),
                    f.headers && (u[m] = f.headers)
            } else
                pi(f)
                    ? (a && a.set(m, f.deferredData),
                      (l[m] = f.deferredData.data))
                    : ((l[m] = f.data),
                      f.statusCode != null &&
                          f.statusCode !== 200 &&
                          !c &&
                          (s = f.statusCode),
                      f.headers && (u[m] = f.headers))
        }),
        n && ((o = n), (l[Object.keys(n)[0]] = void 0)),
        { loaderData: l, errors: o, statusCode: s || 200, loaderHeaders: u }
    )
}
function mb(e, t, r, n, a, l, o, s) {
    let { loaderData: c, errors: u } = q7(t, r, n, a, s)
    for (let f = 0; f < l.length; f++) {
        let [p, , m] = l[f]
        Ce(
            o !== void 0 && o[f] !== void 0,
            'Did not find corresponding fetcher result'
        )
        let v = o[f]
        if (as(v)) {
            let b = nl(e.matches, m.route.id)
            ;(u && u[b.route.id]) || (u = Ge({}, u, { [b.route.id]: v.error })),
                e.fetchers.delete(p)
        } else {
            if (ul(v))
                throw new Error('Unhandled fetcher revalidation redirect')
            if (pi(v)) throw new Error('Unhandled fetcher deferred data')
            {
                let b = {
                    state: 'idle',
                    data: v.data,
                    formMethod: void 0,
                    formAction: void 0,
                    formEncType: void 0,
                    formData: void 0,
                    ' _hasFetcherDoneAnything ': !0,
                }
                e.fetchers.set(p, b)
            }
        }
    }
    return { loaderData: c, errors: u }
}
function gb(e, t, r, n) {
    let a = Ge({}, t)
    for (let l of r) {
        let o = l.route.id
        if (
            (t.hasOwnProperty(o)
                ? t[o] !== void 0 && (a[o] = t[o])
                : e[o] !== void 0 && (a[o] = e[o]),
            n && n.hasOwnProperty(o))
        )
            break
    }
    return a
}
function nl(e, t) {
    return (
        (t ? e.slice(0, e.findIndex((n) => n.route.id === t) + 1) : [...e])
            .reverse()
            .find((n) => n.route.hasErrorBoundary === !0) || e[0]
    )
}
function vb(e) {
    let t = e.find((r) => r.index || !r.path || r.path === '/') || {
        id: '__shim-error-route__',
    }
    return {
        matches: [{ params: {}, pathname: '', pathnameBase: '', route: t }],
        route: t,
    }
}
function li(e, t) {
    let { pathname: r, routeId: n, method: a } = t === void 0 ? {} : t,
        l = 'Unknown Server Error',
        o = 'Unknown @remix-run/router error'
    return (
        e === 400
            ? ((l = 'Bad Request'),
              a && r && n
                  ? (o =
                        'You made a ' +
                        a +
                        ' request to "' +
                        r +
                        '" but ' +
                        ('did not provide a `loader` for route "' + n + '", ') +
                        'so there is no way to handle the request.')
                  : (o = 'Cannot submit binary form data using GET'))
            : e === 403
            ? ((l = 'Forbidden'),
              (o = 'Route "' + n + '" does not match URL "' + r + '"'))
            : e === 404
            ? ((l = 'Not Found'), (o = 'No route matches URL "' + r + '"'))
            : e === 405 &&
              ((l = 'Method Not Allowed'),
              a && r && n
                  ? (o =
                        'You made a ' +
                        a.toUpperCase() +
                        ' request to "' +
                        r +
                        '" but ' +
                        ('did not provide an `action` for route "' +
                            n +
                            '", ') +
                        'so there is no way to handle the request.')
                  : a &&
                    (o = 'Invalid request method "' + a.toUpperCase() + '"')),
        new bf(e || 500, l, new Error(o), !0)
    )
}
function yb(e) {
    for (let t = e.length - 1; t >= 0; t--) {
        let r = e[t]
        if (ul(r)) return r
    }
}
function b8(e) {
    let t = typeof e == 'string' ? ea(e) : e
    return Cn(Ge({}, t, { hash: '' }))
}
function K7(e, t) {
    return (
        e.pathname === t.pathname && e.search === t.search && e.hash !== t.hash
    )
}
function pi(e) {
    return e.type === jt.deferred
}
function as(e) {
    return e.type === jt.error
}
function ul(e) {
    return (e && e.type) === jt.redirect
}
function Y7(e) {
    return (
        e != null &&
        typeof e.status == 'number' &&
        typeof e.statusText == 'string' &&
        typeof e.headers == 'object' &&
        typeof e.body < 'u'
    )
}
function X7(e) {
    return L7.has(e)
}
function oi(e) {
    return I7.has(e)
}
async function bb(e, t, r, n, a, l) {
    for (let o = 0; o < r.length; o++) {
        let s = r[o],
            c = t[o],
            u = e.find((p) => p.route.id === c.route.id),
            f = u != null && !v8(u, c) && (l && l[c.route.id]) !== void 0
        pi(s) &&
            (a || f) &&
            (await x8(s, n, a).then((p) => {
                p && (r[o] = p || r[o])
            }))
    }
}
async function x8(e, t, r) {
    if ((r === void 0 && (r = !1), !(await e.deferredData.resolveData(t)))) {
        if (r)
            try {
                return { type: jt.data, data: e.deferredData.unwrappedData }
            } catch (a) {
                return { type: jt.error, error: a }
            }
        return { type: jt.data, data: e.deferredData.data }
    }
}
function w8(e) {
    return new URLSearchParams(e).getAll('index').some((t) => t === '')
}
function xb(e, t) {
    let { route: r, pathname: n, params: a } = e
    return { id: r.id, pathname: n, params: a, data: t[r.id], handle: r.handle }
}
function wb(e, t) {
    let r = typeof t == 'string' ? ea(t).search : t.search
    if (e[e.length - 1].route.index && w8(r || '')) return e[e.length - 1]
    let n = yf(e)
    return n[n.length - 1]
}
var xf = { exports: {} },
    wf = {}
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Z7 = C.exports,
    J7 = Symbol.for('react.element'),
    Q7 = Symbol.for('react.fragment'),
    e_ = Object.prototype.hasOwnProperty,
    t_ =
        Z7.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    r_ = { key: !0, ref: !0, __self: !0, __source: !0 }
function N8(e, t, r) {
    var n,
        a = {},
        l = null,
        o = null
    r !== void 0 && (l = '' + r),
        t.key !== void 0 && (l = '' + t.key),
        t.ref !== void 0 && (o = t.ref)
    for (n in t) e_.call(t, n) && !r_.hasOwnProperty(n) && (a[n] = t[n])
    if (e && e.defaultProps)
        for (n in ((t = e.defaultProps), t)) a[n] === void 0 && (a[n] = t[n])
    return {
        $$typeof: J7,
        type: e,
        key: l,
        ref: o,
        props: a,
        _owner: t_.current,
    }
}
wf.Fragment = Q7
wf.jsx = N8
wf.jsxs = N8
;(function (e) {
    e.exports = wf
})(xf)
const me = xf.exports.Fragment,
    i = xf.exports.jsx,
    d = xf.exports.jsxs
/**
 * React Router v6.6.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function qu() {
    return (
        (qu = Object.assign
            ? Object.assign.bind()
            : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                      var r = arguments[t]
                      for (var n in r)
                          Object.prototype.hasOwnProperty.call(r, n) &&
                              (e[n] = r[n])
                  }
                  return e
              }),
        qu.apply(this, arguments)
    )
}
function n_(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t)
}
const a_ = typeof Object.is == 'function' ? Object.is : n_,
    { useState: i_, useEffect: l_, useLayoutEffect: o_, useDebugValue: s_ } = im
function c_(e, t, r) {
    const n = t(),
        [{ inst: a }, l] = i_({ inst: { value: n, getSnapshot: t } })
    return (
        o_(() => {
            ;(a.value = n), (a.getSnapshot = t), ih(a) && l({ inst: a })
        }, [e, n, t]),
        l_(
            () => (
                ih(a) && l({ inst: a }),
                e(() => {
                    ih(a) && l({ inst: a })
                })
            ),
            [e]
        ),
        s_(n),
        n
    )
}
function ih(e) {
    const t = e.getSnapshot,
        r = e.value
    try {
        const n = t()
        return !a_(r, n)
    } catch {
        return !0
    }
}
function u_(e, t, r) {
    return t()
}
const d_ =
        typeof window < 'u' &&
        typeof window.document < 'u' &&
        typeof window.document.createElement < 'u',
    f_ = !d_,
    p_ = f_ ? u_ : c_,
    h_ =
        'useSyncExternalStore' in im ? ((e) => e.useSyncExternalStore)(im) : p_,
    S0 = C.exports.createContext(null),
    sc = C.exports.createContext(null),
    cc = C.exports.createContext(null),
    Nf = C.exports.createContext(null),
    Ua = C.exports.createContext({ outlet: null, matches: [] }),
    S8 = C.exports.createContext(null)
function m_(e, t) {
    let { relative: r } = t === void 0 ? {} : t
    ro() || Ce(!1)
    let { basename: n, navigator: a } = C.exports.useContext(cc),
        { hash: l, pathname: o, search: s } = C0(e, { relative: r }),
        c = o
    return (
        n !== '/' && (c = o === '/' ? n : Vn([n, o])),
        a.createHref({ pathname: c, search: s, hash: l })
    )
}
function ro() {
    return C.exports.useContext(Nf) != null
}
function Wa() {
    return ro() || Ce(!1), C.exports.useContext(Nf).location
}
function Me() {
    ro() || Ce(!1)
    let { basename: e, navigator: t } = C.exports.useContext(cc),
        { matches: r } = C.exports.useContext(Ua),
        { pathname: n } = Wa(),
        a = JSON.stringify(yf(r).map((s) => s.pathnameBase)),
        l = C.exports.useRef(!1)
    return (
        C.exports.useEffect(() => {
            l.current = !0
        }),
        C.exports.useCallback(
            function (s, c) {
                if ((c === void 0 && (c = {}), !l.current)) return
                if (typeof s == 'number') {
                    t.go(s)
                    return
                }
                let u = N0(s, JSON.parse(a), n, c.relative === 'path')
                e !== '/' &&
                    (u.pathname = u.pathname === '/' ? e : Vn([e, u.pathname])),
                    (c.replace ? t.replace : t.push)(u, c.state, c)
            },
            [e, t, a, n]
        )
    )
}
const g_ = C.exports.createContext(null)
function v_(e) {
    let t = C.exports.useContext(Ua).outlet
    return t && i(g_.Provider, { value: e, children: t })
}
function y_() {
    let { matches: e } = C.exports.useContext(Ua),
        t = e[e.length - 1]
    return t ? t.params : {}
}
function C0(e, t) {
    let { relative: r } = t === void 0 ? {} : t,
        { matches: n } = C.exports.useContext(Ua),
        { pathname: a } = Wa(),
        l = JSON.stringify(yf(n).map((o) => o.pathnameBase))
    return C.exports.useMemo(
        () => N0(e, JSON.parse(l), a, r === 'path'),
        [e, l, a, r]
    )
}
function b_(e, t) {
    ro() || Ce(!1)
    let { navigator: r } = C.exports.useContext(cc),
        n = C.exports.useContext(sc),
        { matches: a } = C.exports.useContext(Ua),
        l = a[a.length - 1],
        o = l ? l.params : {}
    l && l.pathname
    let s = l ? l.pathnameBase : '/'
    l && l.route
    let c = Wa(),
        u
    if (t) {
        var f
        let h = typeof t == 'string' ? ea(t) : t
        s === '/' ||
            ((f = h.pathname) == null ? void 0 : f.startsWith(s)) ||
            Ce(!1),
            (u = h)
    } else u = c
    let p = u.pathname || '/',
        m = s === '/' ? p : p.slice(s.length) || '/',
        v = Vo(e, { pathname: m }),
        b = S_(
            v &&
                v.map((h) =>
                    Object.assign({}, h, {
                        params: Object.assign({}, o, h.params),
                        pathname: Vn([
                            s,
                            r.encodeLocation
                                ? r.encodeLocation(h.pathname).pathname
                                : h.pathname,
                        ]),
                        pathnameBase:
                            h.pathnameBase === '/'
                                ? s
                                : Vn([
                                      s,
                                      r.encodeLocation
                                          ? r.encodeLocation(h.pathnameBase)
                                                .pathname
                                          : h.pathnameBase,
                                  ]),
                    })
                ),
            a,
            n || void 0
        )
    return t && b
        ? i(Nf.Provider, {
              value: {
                  location: qu(
                      {
                          pathname: '/',
                          search: '',
                          hash: '',
                          state: null,
                          key: 'default',
                      },
                      u
                  ),
                  navigationType: vt.Pop,
              },
              children: b,
          })
        : b
}
function x_() {
    let e = A_(),
        t = m8(e)
            ? e.status + ' ' + e.statusText
            : e instanceof Error
            ? e.message
            : JSON.stringify(e),
        r = e instanceof Error ? e.stack : null,
        n = 'rgba(200,200,200, 0.5)',
        a = { padding: '0.5rem', backgroundColor: n },
        l = { padding: '2px 4px', backgroundColor: n }
    return d(me, {
        children: [
            i('h2', { children: 'Unhandled Thrown Error!' }),
            i('h3', { style: { fontStyle: 'italic' }, children: t }),
            r ? i('pre', { style: a, children: r }) : null,
            i('p', { children: '\u{1F4BF} Hey developer \u{1F44B}' }),
            d('p', {
                children: [
                    'You can provide a way better UX than this when your app throws errors by providing your own\xA0',
                    i('code', { style: l, children: 'errorElement' }),
                    ' props on\xA0',
                    i('code', { style: l, children: '<Route>' }),
                ],
            }),
        ],
    })
}
class w_ extends C.exports.Component {
    constructor(t) {
        super(t), (this.state = { location: t.location, error: t.error })
    }
    static getDerivedStateFromError(t) {
        return { error: t }
    }
    static getDerivedStateFromProps(t, r) {
        return r.location !== t.location
            ? { error: t.error, location: t.location }
            : { error: t.error || r.error, location: r.location }
    }
    componentDidCatch(t, r) {
        console.error(
            'React Router caught the following error during render',
            t,
            r
        )
    }
    render() {
        return this.state.error
            ? i(Ua.Provider, {
                  value: this.props.routeContext,
                  children: i(S8.Provider, {
                      value: this.state.error,
                      children: this.props.component,
                  }),
              })
            : this.props.children
    }
}
function N_(e) {
    let { routeContext: t, match: r, children: n } = e,
        a = C.exports.useContext(S0)
    return (
        a &&
            a.static &&
            a.staticContext &&
            r.route.errorElement &&
            (a.staticContext._deepestRenderedBoundaryId = r.route.id),
        i(Ua.Provider, { value: t, children: n })
    )
}
function S_(e, t, r) {
    if ((t === void 0 && (t = []), e == null))
        if (r != null && r.errors) e = r.matches
        else return null
    let n = e,
        a = r == null ? void 0 : r.errors
    if (a != null) {
        let l = n.findIndex(
            (o) => o.route.id && (a == null ? void 0 : a[o.route.id])
        )
        l >= 0 || Ce(!1), (n = n.slice(0, Math.min(n.length, l + 1)))
    }
    return n.reduceRight((l, o, s) => {
        let c = o.route.id ? (a == null ? void 0 : a[o.route.id]) : null,
            u = r ? o.route.errorElement || i(x_, {}) : null,
            f = t.concat(n.slice(0, s + 1)),
            p = () =>
                i(N_, {
                    match: o,
                    routeContext: { outlet: l, matches: f },
                    children: c
                        ? u
                        : o.route.element !== void 0
                        ? o.route.element
                        : l,
                })
        return r && (o.route.errorElement || s === 0)
            ? i(w_, {
                  location: r.location,
                  component: u,
                  error: c,
                  children: p(),
                  routeContext: { outlet: null, matches: f },
              })
            : p()
    }, null)
}
var Nb
;(function (e) {
    e.UseRevalidator = 'useRevalidator'
})(Nb || (Nb = {}))
var Ku
;(function (e) {
    ;(e.UseLoaderData = 'useLoaderData'),
        (e.UseActionData = 'useActionData'),
        (e.UseRouteError = 'useRouteError'),
        (e.UseNavigation = 'useNavigation'),
        (e.UseRouteLoaderData = 'useRouteLoaderData'),
        (e.UseMatches = 'useMatches'),
        (e.UseRevalidator = 'useRevalidator')
})(Ku || (Ku = {}))
function C_(e) {
    let t = C.exports.useContext(sc)
    return t || Ce(!1), t
}
function P_(e) {
    let t = C.exports.useContext(Ua)
    return t || Ce(!1), t
}
function __(e) {
    let t = P_(),
        r = t.matches[t.matches.length - 1]
    return r.route.id || Ce(!1), r.route.id
}
function A_() {
    var e
    let t = C.exports.useContext(S8),
        r = C_(Ku.UseRouteError),
        n = __(Ku.UseRouteError)
    return t || ((e = r.errors) == null ? void 0 : e[n])
}
function E_(e) {
    let { fallbackElement: t, router: r } = e,
        n = h_(
            r.subscribe,
            () => r.state,
            () => r.state
        ),
        a = C.exports.useMemo(
            () => ({
                createHref: r.createHref,
                encodeLocation: r.encodeLocation,
                go: (o) => r.navigate(o),
                push: (o, s, c) =>
                    r.navigate(o, {
                        state: s,
                        preventScrollReset:
                            c == null ? void 0 : c.preventScrollReset,
                    }),
                replace: (o, s, c) =>
                    r.navigate(o, {
                        replace: !0,
                        state: s,
                        preventScrollReset:
                            c == null ? void 0 : c.preventScrollReset,
                    }),
            }),
            [r]
        ),
        l = r.basename || '/'
    return i(me, {
        children: i(S0.Provider, {
            value: { router: r, navigator: a, static: !1, basename: l },
            children: i(sc.Provider, {
                value: n,
                children: i(O_, {
                    basename: r.basename,
                    location: r.state.location,
                    navigationType: r.state.historyAction,
                    navigator: a,
                    children: r.state.initialized ? i(T_, {}) : t,
                }),
            }),
        }),
    })
}
function k_(e) {
    let { to: t, replace: r, state: n, relative: a } = e
    ro() || Ce(!1)
    let l = C.exports.useContext(sc),
        o = Me()
    return (
        C.exports.useEffect(() => {
            ;(l && l.navigation.state !== 'idle') ||
                o(t, { replace: r, state: n, relative: a })
        }),
        null
    )
}
function P0(e) {
    return v_(e.context)
}
function C8(e) {
    Ce(!1)
}
function O_(e) {
    let {
        basename: t = '/',
        children: r = null,
        location: n,
        navigationType: a = vt.Pop,
        navigator: l,
        static: o = !1,
    } = e
    ro() && Ce(!1)
    let s = t.replace(/^\/*/, '/'),
        c = C.exports.useMemo(
            () => ({ basename: s, navigator: l, static: o }),
            [s, l, o]
        )
    typeof n == 'string' && (n = ea(n))
    let {
            pathname: u = '/',
            search: f = '',
            hash: p = '',
            state: m = null,
            key: v = 'default',
        } = n,
        b = C.exports.useMemo(() => {
            let h = h8(u, s)
            return h == null
                ? null
                : { pathname: h, search: f, hash: p, state: m, key: v }
        }, [s, u, f, p, m, v])
    return b == null
        ? null
        : i(cc.Provider, {
              value: c,
              children: i(Nf.Provider, {
                  children: r,
                  value: { location: b, navigationType: a },
              }),
          })
}
function T_(e) {
    let { children: t, location: r } = e,
        n = C.exports.useContext(S0),
        a = n && !t ? n.router.routes : Yu(t)
    return b_(a, r)
}
var Sb
;(function (e) {
    ;(e[(e.pending = 0)] = 'pending'),
        (e[(e.success = 1)] = 'success'),
        (e[(e.error = 2)] = 'error')
})(Sb || (Sb = {}))
new Promise(() => {})
function Yu(e, t) {
    t === void 0 && (t = [])
    let r = []
    return (
        C.exports.Children.forEach(e, (n, a) => {
            if (!C.exports.isValidElement(n)) return
            if (n.type === C.exports.Fragment) {
                r.push.apply(r, Yu(n.props.children, t))
                return
            }
            n.type !== C8 && Ce(!1),
                !n.props.index || !n.props.children || Ce(!1)
            let l = [...t, a],
                o = {
                    id: n.props.id || l.join('-'),
                    caseSensitive: n.props.caseSensitive,
                    element: n.props.element,
                    index: n.props.index,
                    path: n.props.path,
                    loader: n.props.loader,
                    action: n.props.action,
                    errorElement: n.props.errorElement,
                    hasErrorBoundary: n.props.errorElement != null,
                    shouldRevalidate: n.props.shouldRevalidate,
                    handle: n.props.handle,
                }
            n.props.children && (o.children = Yu(n.props.children, l)),
                r.push(o)
        }),
        r
    )
}
function P8(e) {
    return e.map((t) => {
        let r = qu({}, t)
        return (
            r.hasErrorBoundary == null &&
                (r.hasErrorBoundary = r.errorElement != null),
            r.children && (r.children = P8(r.children)),
            r
        )
    })
}
/**
 * React Router DOM v6.6.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Jm() {
    return (
        (Jm = Object.assign
            ? Object.assign.bind()
            : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                      var r = arguments[t]
                      for (var n in r)
                          Object.prototype.hasOwnProperty.call(r, n) &&
                              (e[n] = r[n])
                  }
                  return e
              }),
        Jm.apply(this, arguments)
    )
}
function _8(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function M_(e) {
    return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
}
function D_(e, t) {
    return e.button === 0 && (!t || t === '_self') && !M_(e)
}
const $_ = [
        'onClick',
        'relative',
        'reloadDocument',
        'replace',
        'state',
        'target',
        'to',
        'preventScrollReset',
    ],
    I_ = [
        'aria-current',
        'caseSensitive',
        'className',
        'end',
        'style',
        'to',
        'children',
    ]
function R_(e, t) {
    return U7({
        basename: t == null ? void 0 : t.basename,
        history: u7({ window: t == null ? void 0 : t.window }),
        hydrationData: (t == null ? void 0 : t.hydrationData) || L_(),
        routes: P8(e),
    }).initialize()
}
function L_() {
    var e
    let t = (e = window) == null ? void 0 : e.__staticRouterHydrationData
    return t && t.errors && (t = Jm({}, t, { errors: j_(t.errors) })), t
}
function j_(e) {
    if (!e) return null
    let t = Object.entries(e),
        r = {}
    for (let [n, a] of t)
        if (a && a.__type === 'RouteErrorResponse')
            r[n] = new bf(a.status, a.statusText, a.data, a.internal === !0)
        else if (a && a.__type === 'Error') {
            let l = new Error(a.message)
            ;(l.stack = ''), (r[n] = l)
        } else r[n] = a
    return r
}
const ye = C.exports.forwardRef(function (t, r) {
        let {
                onClick: n,
                relative: a,
                reloadDocument: l,
                replace: o,
                state: s,
                target: c,
                to: u,
                preventScrollReset: f,
            } = t,
            p = _8(t, $_),
            m = m_(u, { relative: a }),
            v = B_(u, {
                replace: o,
                state: s,
                target: c,
                preventScrollReset: f,
                relative: a,
            })
        function b(h) {
            n && n(h), h.defaultPrevented || v(h)
        }
        return i('a', { ...p, href: m, onClick: l ? n : b, ref: r, target: c })
    }),
    F_ = C.exports.forwardRef(function (t, r) {
        let {
                'aria-current': n = 'page',
                caseSensitive: a = !1,
                className: l = '',
                end: o = !1,
                style: s,
                to: c,
                children: u,
            } = t,
            f = _8(t, I_),
            p = C0(c, { relative: f.relative }),
            m = Wa(),
            v = C.exports.useContext(sc),
            { navigator: b } = C.exports.useContext(cc),
            h = b.encodeLocation ? b.encodeLocation(p).pathname : p.pathname,
            g = m.pathname,
            x =
                v && v.navigation && v.navigation.location
                    ? v.navigation.location.pathname
                    : null
        a ||
            ((g = g.toLowerCase()),
            (x = x ? x.toLowerCase() : null),
            (h = h.toLowerCase()))
        let w =
                g === h ||
                (!o && g.startsWith(h) && g.charAt(h.length) === '/'),
            y =
                x != null &&
                (x === h ||
                    (!o && x.startsWith(h) && x.charAt(h.length) === '/')),
            N = w ? n : void 0,
            S
        typeof l == 'function'
            ? (S = l({ isActive: w, isPending: y }))
            : (S = [l, w ? 'active' : null, y ? 'pending' : null]
                  .filter(Boolean)
                  .join(' '))
        let P = typeof s == 'function' ? s({ isActive: w, isPending: y }) : s
        return i(ye, {
            ...f,
            'aria-current': N,
            className: S,
            ref: r,
            style: P,
            to: c,
            children:
                typeof u == 'function' ? u({ isActive: w, isPending: y }) : u,
        })
    })
var Cb
;(function (e) {
    ;(e.UseScrollRestoration = 'useScrollRestoration'),
        (e.UseSubmitImpl = 'useSubmitImpl'),
        (e.UseFetcher = 'useFetcher')
})(Cb || (Cb = {}))
var Pb
;(function (e) {
    ;(e.UseFetchers = 'useFetchers'),
        (e.UseScrollRestoration = 'useScrollRestoration')
})(Pb || (Pb = {}))
function B_(e, t) {
    let {
            target: r,
            replace: n,
            state: a,
            preventScrollReset: l,
            relative: o,
        } = t === void 0 ? {} : t,
        s = Me(),
        c = Wa(),
        u = C0(e, { relative: o })
    return C.exports.useCallback(
        (f) => {
            if (D_(f, r)) {
                f.preventDefault()
                let p = n !== void 0 ? n : Cn(c) === Cn(u)
                s(e, {
                    replace: p,
                    state: a,
                    preventScrollReset: l,
                    relative: o,
                })
            }
        },
        [c, s, u, n, a, r, e, l, o]
    )
}
const z_ = K.createContext({})
function V_({ children: e, ...t }) {
    return i(z_.Provider, { value: t, children: e })
}
const U_ = () => {
    const e = Me(),
        [t, r] = C.exports.useState({ email: '', password: '' })
    return d('div', {
        className: 'flex h-screen overflow-hidden',
        children: [
            d('form', {
                onSubmit: (l) => {
                    l.preventDefault()
                    let { email: o, password: s } = t
                    ;(o = o.toLowerCase().trim()),
                        console.log({ email: o }),
                        o === 'superadmin@sesa.com' && e('/superAdmin'),
                        o === 'securitycompany@sesa.com' &&
                            e('/securityCompany'),
                        o === 'estatemanager@sesa.com' && e('/estateManager')
                },
                className: 'basis-1/2 grid place-content-center gap-10',
                children: [
                    d('div', {
                        children: [
                            i('h1', {
                                className:
                                    'text-[4.5rem] font-Satoshi-ExtraBold',
                                children: 'Welcome back!',
                            }),
                            i('p', { children: 'Kindly enter your details' }),
                        ],
                    }),
                    d('div', {
                        className: 'grid gap-8',
                        onChange: (l) => {
                            r((o) => ({
                                ...o,
                                [l.target.name]: l.target.value,
                            }))
                        },
                        children: [
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'email',
                                        className: 'font-semibold',
                                        children: 'Email',
                                    }),
                                    i('input', {
                                        type: 'email',
                                        name: 'email',
                                        required: !0,
                                        value: t.email,
                                        id: 'email',
                                        className:
                                            'border border-color-grey p-4 rounded-lg w-full outline-color-primary outline-[0.5px]',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'password',
                                        className: 'font-semibold',
                                        children: 'Password',
                                    }),
                                    i('input', {
                                        type: 'password',
                                        required: !0,
                                        name: 'password',
                                        id: 'password',
                                        className:
                                            'border border-color-grey p-4  rounded-lg w-full',
                                    }),
                                ],
                            }),
                        ],
                    }),
                    i('button', {
                        className:
                            'btn bg-[#0556E5] text-white rounded-lg py-4',
                        children: 'Login',
                    }),
                ],
            }),
            i('figure', {
                children: i('img', { src: '/img/hero.png', alt: '' }),
            }),
        ],
    })
}
var W_ = function (t) {
        return t.join('/').replace(/\/\/+/g, '/')
    },
    H_ = /^:\w+$/,
    G_ = 3,
    q_ = 2,
    K_ = 1,
    Y_ = 10,
    X_ = -2,
    _b = function (t) {
        return t === '*'
    }
function Z_(e, t) {
    var r = e.split('/'),
        n = r.length
    return (
        r.some(_b) && (n += X_),
        t && (n += q_),
        r
            .filter(function (a) {
                return !_b(a)
            })
            .reduce(function (a, l) {
                return H_.test(l) ? a + G_ : l === '' ? a + K_ : a + Y_
            }, n)
    )
}
function J_(e, t) {
    var r =
        e.length === t.length &&
        e.slice(0, -1).every(function (n, a) {
            return n === t[a]
        })
    return r ? e[e.length - 1] - t[t.length - 1] : 0
}
function A8(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
        r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [],
        n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ''
    return (
        e.forEach(function (a, l) {
            var o
            if (
                typeof a.path != 'string' &&
                !a.index &&
                !(!((o = a.children) === null || o === void 0) && o.length)
            )
                throw new Error(
                    'useBreadcrumbs: `path` or `index` must be provided in every route object'
                )
            if (a.path && a.index)
                throw new Error(
                    'useBreadcrumbs: `path` and `index` cannot be provided at the same time'
                )
            var s = { relativePath: a.path || '', childrenIndex: l, route: a }
            if (s.relativePath.charAt(0) === '/') {
                if (!s.relativePath.startsWith(n))
                    throw new Error(
                        'useBreadcrumbs: The absolute path of the child route must start with the parent path'
                    )
                s.relativePath = s.relativePath.slice(n.length)
            }
            var c = W_([n, s.relativePath]),
                u = r.concat(s)
            if (a.children && a.children.length > 0) {
                if (a.index)
                    throw new Error(
                        'useBreadcrumbs: Index route cannot have child routes'
                    )
                A8(a.children, t, u, c)
            }
            t.push({ path: c, score: Z_(c, a.index), routesMeta: u })
        }),
        t
    )
}
function Q_(e) {
    return e.sort(function (t, r) {
        return t.score !== r.score
            ? r.score - t.score
            : J_(
                  t.routesMeta.map(function (n) {
                      return n.childrenIndex
                  }),
                  r.routesMeta.map(function (n) {
                      return n.childrenIndex
                  })
              )
    })
}
var Uo = Symbol('NO_BREADCRUMB'),
    E8 = function (t) {
        return t
            .replace(/^[\s_]+|[\s_]+$/g, '')
            .replace(/[-_\s]+/g, ' ')
            .replace(/^[a-z]/, function (r) {
                return r.toUpperCase()
            })
    },
    k8 = function (t) {
        var r = t.breadcrumb,
            n = t.match,
            a = t.location,
            l = t.props,
            o = Object.assign(
                { match: n, location: a, key: n.pathname },
                l || {}
            )
        return Object.assign(Object.assign({}, o), {
            breadcrumb:
                typeof r == 'string'
                    ? C.exports.createElement('span', { key: o.key }, r)
                    : i(r, { ...Object.assign({}, o) }),
        })
    },
    eA = function (t) {
        var r = t.currentSection,
            n = t.location,
            a = t.pathSection,
            l = t.defaultFormatter,
            o = Gu({ end: !0, path: a }, a)
        return k8({ breadcrumb: l ? l(r) : E8(r), match: o, location: n })
    },
    tA = function (t) {
        var r = t.currentSection,
            n = t.disableDefaults,
            a = t.excludePaths,
            l = t.defaultFormatter,
            o = t.location,
            s = t.pathSection,
            c = t.branches,
            u,
            f = function (m) {
                return Gu({ path: m, end: !0 }, s) != null
            }
        return a && a.some(f)
            ? Uo
            : (c.some(function (p) {
                  var m = p.path,
                      v = p.routesMeta,
                      b = v[v.length - 1].route,
                      h = b.breadcrumb
                  if (!h && b.index) {
                      var g = v[v.length - 2]
                      g && g.route.breadcrumb && (h = g.route.breadcrumb)
                  }
                  var x = b.caseSensitive,
                      w = b.props,
                      y = Gu({ path: m, end: !0, caseSensitive: x }, s)
                  return y && h === null
                      ? ((u = Uo), !0)
                      : y
                      ? !h && n
                          ? ((u = Uo), !0)
                          : ((u = k8({
                                breadcrumb: h || (l ? l(r) : E8(r)),
                                match: Object.assign(Object.assign({}, y), {
                                    route: b,
                                }),
                                location: o,
                                props: w,
                            })),
                            !0)
                      : !1
              }),
              u ||
                  (n
                      ? Uo
                      : eA({
                            pathSection: s,
                            currentSection: s === '/' ? 'Home' : r,
                            location: o,
                            defaultFormatter: l,
                        })))
    },
    rA = function (t) {
        var r = t.routes,
            n = t.location,
            a = t.options,
            l = a === void 0 ? {} : a,
            o = n.pathname,
            s = Q_(A8(r)),
            c = []
        return (
            o
                .split('?')[0]
                .split('/')
                .reduce(function (u, f, p) {
                    var m = f ? ''.concat(u, '/').concat(f) : '/'
                    if (m === '/' && p !== 0) return ''
                    var v = tA(
                        Object.assign(
                            {
                                currentSection: f,
                                location: n,
                                pathSection: m,
                                branches: s,
                            },
                            l
                        )
                    )
                    return v !== Uo && c.push(v), m === '/' ? '' : m
                }, ''),
            c
        )
    },
    nA = function (t, r) {
        return rA({ routes: t || [], location: Wa(), options: r })
    },
    oe = C8,
    O8 = {
        color: void 0,
        size: void 0,
        className: void 0,
        style: void 0,
        attr: void 0,
    },
    Ab = K.createContext && K.createContext(O8),
    Aa =
        (globalThis && globalThis.__assign) ||
        function () {
            return (
                (Aa =
                    Object.assign ||
                    function (e) {
                        for (var t, r = 1, n = arguments.length; r < n; r++) {
                            t = arguments[r]
                            for (var a in t)
                                Object.prototype.hasOwnProperty.call(t, a) &&
                                    (e[a] = t[a])
                        }
                        return e
                    }),
                Aa.apply(this, arguments)
            )
        },
    aA =
        (globalThis && globalThis.__rest) ||
        function (e, t) {
            var r = {}
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) &&
                    t.indexOf(n) < 0 &&
                    (r[n] = e[n])
            if (e != null && typeof Object.getOwnPropertySymbols == 'function')
                for (
                    var a = 0, n = Object.getOwnPropertySymbols(e);
                    a < n.length;
                    a++
                )
                    t.indexOf(n[a]) < 0 &&
                        Object.prototype.propertyIsEnumerable.call(e, n[a]) &&
                        (r[n[a]] = e[n[a]])
            return r
        }
function T8(e) {
    return (
        e &&
        e.map(function (t, r) {
            return K.createElement(t.tag, Aa({ key: r }, t.attr), T8(t.child))
        })
    )
}
function nt(e) {
    return function (t) {
        return i(iA, {
            ...Aa({ attr: Aa({}, e.attr) }, t),
            children: T8(e.child),
        })
    }
}
function iA(e) {
    var t = function (r) {
        var n = e.attr,
            a = e.size,
            l = e.title,
            o = aA(e, ['attr', 'size', 'title']),
            s = a || r.size || '1em',
            c
        return (
            r.className && (c = r.className),
            e.className && (c = (c ? c + ' ' : '') + e.className),
            d('svg', {
                ...Aa(
                    {
                        stroke: 'currentColor',
                        fill: 'currentColor',
                        strokeWidth: '0',
                    },
                    r.attr,
                    n,
                    o,
                    {
                        className: c,
                        style: Aa(
                            Aa({ color: e.color || r.color }, r.style),
                            e.style
                        ),
                        height: s,
                        width: s,
                        xmlns: 'http://www.w3.org/2000/svg',
                    }
                ),
                children: [l && i('title', { children: l }), e.children],
            })
        )
    }
    return Ab !== void 0
        ? i(Ab.Consumer, {
              children: function (r) {
                  return t(r)
              },
          })
        : t(O8)
}
function Ne(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24', fill: 'none' },
        child: [
            {
                tag: 'path',
                attr: {
                    opacity: '0.2',
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19ZM12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z',
                    fill: 'currentColor',
                },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M12 22C17.5228 22 22 17.5228 22 12H19C19 15.866 15.866 19 12 19V22Z',
                    fill: 'currentColor',
                },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M2 12C2 6.47715 6.47715 2 12 2V5C8.13401 5 5 8.13401 5 12H2Z',
                    fill: 'currentColor',
                },
            },
        ],
    })(e)
}
function le(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24' },
        child: [
            {
                tag: 'polyline',
                attr: {
                    fill: 'none',
                    stroke: '#000',
                    strokeWidth: '2',
                    points: '7.086 3.174 17.086 13.174 7.086 23.174',
                    transform: 'scale(1 -1) rotate(-89 -1.32 0)',
                },
            },
        ],
    })(e)
}
function dt(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24' },
        child: [
            {
                tag: 'polyline',
                attr: {
                    fill: 'none',
                    stroke: '#000',
                    strokeWidth: '2',
                    points: '7.086 1.174 17.086 11.174 7.086 21.174',
                    transform: 'rotate(-89 12.086 11.174)',
                },
            },
        ],
    })(e)
}
function lA(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 20 20', fill: 'currentColor' },
        child: [
            {
                tag: 'path',
                attr: {
                    fillRule: 'evenodd',
                    d: 'M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z',
                    clipRule: 'evenodd',
                },
            },
        ],
    })(e)
}
function oA(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 20 20', fill: 'currentColor' },
        child: [
            {
                tag: 'path',
                attr: {
                    fillRule: 'evenodd',
                    d: 'M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z',
                    clipRule: 'evenodd',
                },
            },
        ],
    })(e)
}
function Ae(e) {
    return nt({
        tag: 'svg',
        attr: { fill: 'none', viewBox: '0 0 24 24', stroke: 'currentColor' },
        child: [
            {
                tag: 'path',
                attr: {
                    strokeLinecap: 'round',
                    strokeLinejoin: 'round',
                    strokeWidth: '2',
                    d: 'M15 19l-7-7 7-7',
                },
            },
        ],
    })(e)
}
function Ee(e) {
    return nt({
        tag: 'svg',
        attr: { fill: 'none', viewBox: '0 0 24 24', stroke: 'currentColor' },
        child: [
            {
                tag: 'path',
                attr: {
                    strokeLinecap: 'round',
                    strokeLinejoin: 'round',
                    strokeWidth: '2',
                    d: 'M9 5l7 7-7 7',
                },
            },
        ],
    })(e)
}
function M8(e) {
    return nt({
        tag: 'svg',
        attr: { fill: 'none', viewBox: '0 0 24 24', stroke: 'currentColor' },
        child: [
            {
                tag: 'path',
                attr: {
                    strokeLinecap: 'round',
                    strokeLinejoin: 'round',
                    strokeWidth: '2',
                    d: 'M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z',
                },
            },
        ],
    })(e)
}
const qe = ({
        iconUrl: e,
        title: t,
        number: r,
        bgColor: n,
        percent: a,
        arrow: l,
        textColor: o = 'black',
    }) =>
        d('div', {
            className: `overviewCard ${n}`,
            children: [
                i('img', { src: e, alt: '', className: 'overviewCard__img' }),
                d('div', {
                    className: `overviewCard__content ${a ? 'relative' : ''}`,
                    children: [
                        i('p', {
                            className: 'overviewCard__title',
                            children: t,
                        }),
                        i('p', {
                            className: `overviewCard__number ${o}`,
                            children: r.toLocaleString(),
                        }),
                        a &&
                            d('div', {
                                className: 'absolute bottom-0 right-0',
                                children: [
                                    i('img', {
                                        src: l,
                                        alt: '',
                                        className: 'overviewCard__arrow',
                                    }),
                                    d('p', {
                                        className: 'text-green-600',
                                        children: [a, '%'],
                                    }),
                                ],
                            }),
                    ],
                }),
            ],
        }),
    sA = [
        {
            id: '1',
            guardName: 'Jacinta Sage',
            date: '12/12/2021',
            guardCode: 1234,
            checkInCount: 8,
            checkOutCount: 5,
            panicAlert: 2,
        },
        {
            id: '1',
            guardName: 'Jacinta Sage',
            date: '12/12/2021',
            guardCode: 1234,
            checkInCount: 8,
            checkOutCount: 5,
            panicAlert: 2,
        },
        {
            id: '1',
            guardName: 'Jacinta Sage',
            date: '12/12/2021',
            guardCode: 1234,
            checkInCount: 8,
            checkOutCount: 5,
            panicAlert: 2,
        },
        {
            id: '1',
            guardName: 'Jacinta Sage',
            date: '12/12/2021',
            guardCode: 1234,
            checkInCount: 8,
            checkOutCount: 5,
            panicAlert: 2,
        },
        {
            id: '1',
            guardName: 'Jacinta Sage',
            date: '12/12/2021',
            guardCode: 1234,
            checkInCount: 8,
            checkOutCount: 5,
            panicAlert: 2,
        },
        {
            id: '1',
            guardName: 'Jacinta Sage',
            date: '12/12/2021',
            guardCode: 1234,
            checkInCount: 8,
            checkOutCount: 5,
            panicAlert: 2,
        },
    ],
    cA = [
        {
            id: '1',
            guardName: 'John Sage',
            phoneNumber: '08012345678',
            date: '12/12/2021',
            guardCode: 1234,
            clockIn: 8,
            clockOut: 5,
        },
        {
            id: '1',
            guardName: 'John Doe',
            phoneNumber: '08012345678',
            date: '12/12/2021',
            guardCode: 1234,
            clockIn: 8,
            clockOut: 5,
        },
        {
            id: '1',
            guardName: 'John Doe',
            phoneNumber: '08012345678',
            date: '12/12/2021',
            guardCode: 1234,
            clockIn: 8,
            clockOut: 5,
        },
        {
            id: '1',
            guardName: 'John Doe',
            phoneNumber: '08012345678',
            date: '12/12/2021',
            guardCode: 1234,
            clockIn: 8,
            clockOut: 5,
        },
        {
            id: '1',
            guardName: 'John Doe',
            phoneNumber: '08012345678',
            date: '12/12/2021',
            guardCode: 1234,
            clockIn: 8,
            clockOut: 5,
        },
        {
            id: '1',
            guardName: 'John Doe',
            phoneNumber: '08012345678',
            date: '12/12/2021',
            guardCode: 1234,
            clockIn: 8,
            clockOut: 5,
        },
    ],
    Eb = ({ fetchedActivityReport: e }) =>
        d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('caption', {
                    className:
                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        d('p', {
                            className: ' font-bold',
                            children: [
                                'Activity Report List ',
                                i('span', { children: '(4)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Sort By',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Start Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'End Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid',
                    children: [
                        d('div', {
                            className:
                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-6 gap-8',
                            style: { fontSize: '1.6rem' },
                            children: [
                                d('p', {
                                    className: 'flex items-center gap-2',
                                    children: [
                                        i('input', {
                                            type: 'checkbox',
                                            className: 'cursor-pointer',
                                        }),
                                        i('p', { children: 'Guard Name' }),
                                    ],
                                }),
                                i('p', { children: 'Phone Number' }),
                                i('p', { children: 'Date' }),
                                i('p', { children: 'Guard Code' }),
                                i('p', { children: 'Clock In' }),
                                i('p', { children: 'Clock Out' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                e && e.length > 0
                                    ? K.Children.toArray(
                                          e.map(
                                              ({
                                                  guardCode: t,
                                                  guardName: r,
                                                  phoneNumber: n,
                                                  clockIn: a,
                                                  clockOut: l,
                                                  date: o,
                                              }) =>
                                                  d('div', {
                                                      className:
                                                          'grid justify-between border-b grid-cols-6 gap-8 ',
                                                      children: [
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-4',
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                      className:
                                                                          'cursor-pointer',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          r,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: n,
                                                          }),
                                                          i('p', {
                                                              children: o,
                                                          }),
                                                          i('p', {
                                                              children: t,
                                                          }),
                                                          i('p', {
                                                              children: a,
                                                          }),
                                                          i('p', {
                                                              children: l,
                                                          }),
                                                      ],
                                                  })
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                d('div', {
                                    className:
                                        'flex items-center border px-4 rounded-lg',
                                    children: [
                                        i('input', {
                                            type: 'text',
                                            className:
                                                'w-8 outline-none border-none cursor-pointer ',
                                            value: 6,
                                            inputMode: 'numeric',
                                        }),
                                        i(le, { className: 'text-[1.3rem]' }),
                                    ],
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {}),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '1',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '2',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '3',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '4',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                    children: '....',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '10',
                                }),
                                i(Ee, {}),
                            ],
                        }),
                    ],
                }),
            ],
        }),
    uA = ({ fetchedAttendanceReport: e }) =>
        d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('caption', {
                    className:
                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        d('p', {
                            className: ' font-bold',
                            children: [
                                'Attendance Report List ',
                                i('span', { children: '(4)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Sort By',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Start Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'End Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid',
                    children: [
                        d('div', {
                            className:
                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-6 gap-8',
                            style: { fontSize: '1.6rem' },
                            children: [
                                d('p', {
                                    className: 'flex items-center gap-2',
                                    children: [
                                        i('input', {
                                            type: 'checkbox',
                                            className: 'cursor-pointer',
                                        }),
                                        i('p', { children: 'Guard Name' }),
                                    ],
                                }),
                                i('p', { children: 'Date' }),
                                i('p', { children: 'Guard Code' }),
                                i('p', { children: 'Check In Count' }),
                                i('p', { children: 'Check Out Count' }),
                                i('p', { children: 'Panic Alert' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                e && e.length > 0
                                    ? K.Children.toArray(
                                          e.map(
                                              ({
                                                  guardCode: t,
                                                  guardName: r,
                                                  date: n,
                                                  checkInCount: a,
                                                  checkOutCount: l,
                                                  panicAlert: o,
                                              }) =>
                                                  d('div', {
                                                      className:
                                                          'grid justify-between border-b grid-cols-6 gap-8 ',
                                                      children: [
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-4',
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                      className:
                                                                          'cursor-pointer',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          r,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: n,
                                                          }),
                                                          i('p', {
                                                              children: t,
                                                          }),
                                                          i('p', {
                                                              children: a,
                                                          }),
                                                          i('p', {
                                                              children: l,
                                                          }),
                                                          i('p', {
                                                              children: o,
                                                          }),
                                                      ],
                                                  })
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                d('div', {
                                    className:
                                        'flex items-center border px-4 rounded-lg',
                                    children: [
                                        i('input', {
                                            type: 'text',
                                            className:
                                                'w-8 outline-none border-none cursor-pointer ',
                                            value: 6,
                                            inputMode: 'numeric',
                                        }),
                                        i(le, { className: 'text-[1.3rem]' }),
                                    ],
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {}),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '1',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '2',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '3',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '4',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                    children: '....',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '10',
                                }),
                                i(Ee, {}),
                            ],
                        }),
                    ],
                }),
            ],
        })
function dA() {
    const [e, t] = C.exports.useState(null),
        [r, n] = C.exports.useState(null),
        [a, l] = C.exports.useState(1)
    C.exports.useEffect(() => {
        ;(async () => {
            setTimeout(() => {
                t(cA), n(sA)
            }, 1e3)
        })()
    }, [])
    const o = () => new Date().toLocaleString('en-GB', { dateStyle: 'full' }),
        s = o()
    return (
        o(),
        d('div', {
            className: 'estateDetail',
            children: [
                d('div', {
                    className: 'estateDetail__radioBox',
                    children: [
                        i('input', {
                            defaultChecked: !0,
                            type: 'radio',
                            name: 'report',
                            id: 'activityReport',
                            className: 'hidden',
                            onChange: () => l(1),
                        }),
                        i('label', {
                            htmlFor: 'activityReport',
                            children: 'Activity Report',
                        }),
                        i('input', {
                            type: 'radio',
                            name: 'report',
                            id: 'attendanceReport',
                            className: 'hidden',
                            onChange: () => l(2),
                        }),
                        i('label', {
                            htmlFor: 'attendanceReport',
                            children: 'Attendance Report',
                        }),
                    ],
                }),
                d('div', {
                    className: 'mt-8 grid gap-8',
                    children: [
                        d('section', {
                            className:
                                'bg-white rounded-lg p-8 grid h-[28rem] text-[1.4rem]',
                            children: [
                                d('div', {
                                    className: 'flex w-full justify-between',
                                    children: [
                                        i('p', {
                                            className:
                                                'font-Satoshi-Medium text-[2rem]',
                                            children: 'Security Report',
                                        }),
                                        d('p', {
                                            className: 'text-[#666869]',
                                            children: [
                                                'Showing current Day:',
                                                ' ',
                                                i('span', {
                                                    className: 'text-black',
                                                    children: s,
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'overview flex gap-8',
                                    children: [
                                        i(qe, {
                                            title: 'Total number of Guards',
                                            number: 14,
                                            iconUrl: '/icons/admins/people.svg',
                                            bgColor: 'bg-[#F5F9FA]',
                                            textColor: 'text-[#00C2FF]',
                                        }),
                                        i(qe, {
                                            title: 'Guards on Duty',
                                            number: 40,
                                            iconUrl:
                                                '/icons/admins/housePeople.svg',
                                            bgColor: 'bg-[#FCF3FA]',
                                            textColor: 'text-[#B6008E]',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        i('section', {
                            className:
                                'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                            children:
                                e &&
                                ((u) => {
                                    switch (u) {
                                        case 1:
                                            return i(Eb, {
                                                fetchedActivityReport:
                                                    e != null ? e : [],
                                            })
                                        case 2:
                                            return i(uA, {
                                                fetchedAttendanceReport:
                                                    r != null ? r : [],
                                            })
                                        default:
                                            return i(Eb, {
                                                fetchedActivityReport:
                                                    e != null ? e : [],
                                            })
                                    }
                                })(a),
                        }),
                    ],
                }),
            ],
        })
    )
}
const fA = [
    {
        id: '1',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
    {
        id: '2',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
    {
        id: '3',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
    {
        id: '4',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
    {
        id: '5',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
    {
        id: '6',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
    {
        id: '7',
        propertyCode: 'H09985',
        address: 'Blk.2, Flt. 3, Zone A',
        propertyCategory: 'Residential',
        propertyName: 'Property 1',
        occupants: 122,
        RFID: 12331,
        accessCard: 8212,
        status: 'Active',
    },
]
function pA() {
    const [e, t] = C.exports.useState([])
    return (
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    t(fA)
                }, 1e3)
            })()
        }, []),
        i('div', {
            className: 'estateDetail',
            children: d('div', {
                className: 'mt-8 grid gap-8',
                children: [
                    d('section', {
                        className:
                            'bg-white rounded-lg p-8 grid h-[28rem] text-[1.4rem]',
                        children: [
                            d('div', {
                                className: 'flex w-full justify-between',
                                children: [
                                    i('p', { children: 'Iba Housing Estate' }),
                                    d('p', {
                                        className: 'text-[#666869]',
                                        children: [
                                            'Joined:',
                                            ' ',
                                            i('span', {
                                                className: 'text-black',
                                                children: '08 May, 2022',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'overview flex justify-between',
                                children: [
                                    i(qe, {
                                        title: 'Residents',
                                        number: 18e3,
                                        iconUrl:
                                            '/icons/overview/residents.svg',
                                        bgColor: 'bg-[#DDFCDC]',
                                        textColor: 'text-[#1A8F56]',
                                    }),
                                    i(qe, {
                                        title: 'Property',
                                        number: 4,
                                        iconUrl: '/icons/overview/property.svg',
                                        bgColor: 'bg-[#F5F9FA]',
                                        textColor: 'text-[#00C2FF]',
                                    }),
                                    i(qe, {
                                        title: 'Household',
                                        number: 40,
                                        iconUrl:
                                            '/icons/overview/household2.svg',
                                        bgColor: 'bg-[#FCF3FA]',
                                        textColor: 'text-[#B6008E]',
                                    }),
                                ],
                            }),
                            i('div', {
                                className: 'flex justify-end',
                                children: i(ye, {
                                    to: '/superAdmin/estates/detail/report/:4',
                                    className: 'text-[#0660FE] text-[1.4rem]',
                                    children: 'View Estate Report',
                                }),
                            }),
                        ],
                    }),
                    i('section', {
                        className:
                            'bg-color-white rounded-lg border min-w-[112rem]',
                        children: d('div', {
                            className: 'grid text-[1.6rem]',
                            children: [
                                d('caption', {
                                    className:
                                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                    children: [
                                        d('p', {
                                            className: ' font-bold',
                                            children: [
                                                'EstateManager List ',
                                                i('span', {
                                                    children: '(200)',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/search.svg',
                                                    alt: '',
                                                    className:
                                                        'absolute left-4 text-[4rem]',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder:
                                                        'Search Parameters',
                                                    className:
                                                        'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                d('select', {
                                                    className:
                                                        ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    children: [
                                                        i('option', {
                                                            hidden: !0,
                                                            value: '',
                                                            children: 'Sort By',
                                                        }),
                                                        i('option', {
                                                            value: 'date',
                                                            children: 'date',
                                                        }),
                                                        i('option', {
                                                            value: 'alpha',
                                                            children: 'Alpha',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {
                                                    className:
                                                        'absolute right-4 text-[1.3rem]',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid',
                                    children: [
                                        d('div', {
                                            className:
                                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-8 gap-8',
                                            style: { fontSize: '1.4rem' },
                                            children: [
                                                d('p', {
                                                    className:
                                                        'flex items-center gap-2',
                                                    children: [
                                                        i('input', {
                                                            type: 'checkbox',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Property Code',
                                                        }),
                                                    ],
                                                }),
                                                i('p', { children: 'Address' }),
                                                i('p', {
                                                    children:
                                                        'Property Category',
                                                }),
                                                i('p', {
                                                    children: 'Property Name',
                                                }),
                                                i('p', {
                                                    children: 'Occupants',
                                                }),
                                                i('p', { children: 'RFID' }),
                                                i('p', {
                                                    children: 'Access Card',
                                                }),
                                                i('p', { children: 'Status' }),
                                            ],
                                        }),
                                        i('div', {
                                            className: 'grid gap-8 mt-8 p-8',
                                            children:
                                                e && e.length > 0
                                                    ? K.Children.toArray(
                                                          e.map(
                                                              ({
                                                                  propertyCategory:
                                                                      r,
                                                                  propertyCode:
                                                                      n,
                                                                  propertyName:
                                                                      a,
                                                                  status: l,
                                                                  accessCard: o,
                                                                  address: s,
                                                                  RFID: c,
                                                                  occupants: u,
                                                              }) =>
                                                                  d('div', {
                                                                      className:
                                                                          'grid justify-between border-b grid-cols-8 gap-8 ',
                                                                      children:
                                                                          [
                                                                              d(
                                                                                  'p',
                                                                                  {
                                                                                      className:
                                                                                          'flex items-center gap-4',
                                                                                      children:
                                                                                          [
                                                                                              i(
                                                                                                  'input',
                                                                                                  {
                                                                                                      type: 'checkbox',
                                                                                                  }
                                                                                              ),
                                                                                              i(
                                                                                                  'span',
                                                                                                  {
                                                                                                      children:
                                                                                                          n,
                                                                                                  }
                                                                                              ),
                                                                                          ],
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          s,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          r,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          a,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          u,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          c,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          o,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          l,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  })
                                                          )
                                                      )
                                                    : i('div', {
                                                          children: i('div', {
                                                              className:
                                                                  'relative',
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'absolute w-full grid place-content-center',
                                                                      children:
                                                                          i(
                                                                              Ne,
                                                                              {
                                                                                  className:
                                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                                      }),
                                        }),
                                    ],
                                }),
                                d('footer', {
                                    className:
                                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex gap-8 items-center',
                                            children: [
                                                i('p', { children: 'View' }),
                                                d('div', {
                                                    className:
                                                        'flex items-center border px-4 rounded-lg',
                                                    children: [
                                                        i('input', {
                                                            type: 'text',
                                                            className:
                                                                'w-8 outline-none border-none cursor-pointer ',
                                                            value: 6,
                                                            inputMode:
                                                                'numeric',
                                                        }),
                                                        i(le, {
                                                            className:
                                                                'text-[1.3rem]',
                                                        }),
                                                    ],
                                                }),
                                                i('p', {
                                                    className: 'text',
                                                    children: 'List per page',
                                                }),
                                            ],
                                        }),
                                        d('ul', {
                                            className:
                                                'flex items-center gap-5 ml-10',
                                            children: [
                                                i(Ae, {}),
                                                i('li', {
                                                    className:
                                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                    children: '1',
                                                }),
                                                i('li', {
                                                    className:
                                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                    children: '2',
                                                }),
                                                i('li', {
                                                    className:
                                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                    children: '3',
                                                }),
                                                i('li', {
                                                    className:
                                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                    children: '4',
                                                }),
                                                i(Ee, {}),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                ],
            }),
        })
    )
}
function $e(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 512 512' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M416 277.333H277.333V416h-42.666V277.333H96v-42.666h138.667V96h42.666v138.667H416v42.666z',
                },
            },
        ],
    })(e)
}
function hA(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 512 512' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M170.718 216.482L141.6 245.6l93.6 93.6 208-208-29.118-29.118L235.2 279.918l-64.482-63.436zM422.4 256c0 91.518-74.883 166.4-166.4 166.4S89.6 347.518 89.6 256 164.482 89.6 256 89.6c15.6 0 31.2 2.082 45.764 6.241L334 63.6C310.082 53.2 284.082 48 256 48 141.6 48 48 141.6 48 256s93.6 208 208 208 208-93.6 208-208h-41.6z',
                },
            },
        ],
    })(e)
}
function Vt(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 512 512' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z',
                },
            },
        ],
    })(e)
}
const Ha = C.exports.createContext(null),
    kr = async (e) => {
        const t = document.querySelector(e)
        if (!t) return 'no photo selected'
        const r = t
        return await new Promise((a, l) => {
            r.addEventListener('change', (o) => {
                const s = o.target,
                    c = new FileReader()
                c.readAsDataURL(s.files[0]),
                    (c.onload = () => a(c.result)),
                    (c.onerror = (u) => l(u))
            })
        })
    },
    kb = () => {
        const e = C.exports.useContext(Ha),
            { handleOpen: t } = e,
            [r, n] = C.exports.useState('')
        return d('div', {
            className: 'addEstateManager',
            children: [
                i('p', {
                    className: 'addEstateManager__heading',
                    children: 'Personal Information',
                }),
                i('form', {
                    onSubmit: (o) => {
                        o.preventDefault(), t('renderedEstateManagers')
                    },
                    className: 'addEstateManager__formBox',
                    children: d('section', {
                        className: 'addEstateManager__form',
                        children: [
                            d('div', {
                                className: 'addEstateManager__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'firstName',
                                        children: 'First Name *',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'firstName',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addEstateManager__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'lastName',
                                        children: 'Last Name *',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'lastName',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addEstateManager__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'date',
                                        children: 'Date of Birth *',
                                    }),
                                    i('input', {
                                        type: 'date',
                                        id: 'date',
                                        required: !0,
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addEstateManager__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'gender',
                                        children: 'Gender *',
                                    }),
                                    d('div', {
                                        className: 'item__select',
                                        children: [
                                            d('select', {
                                                id: 'gender',
                                                children: [
                                                    i('option', {
                                                        hidden: !0,
                                                        children: '\xA0',
                                                    }),
                                                    i('option', {
                                                        value: 'male',
                                                        children: 'Male',
                                                    }),
                                                    i('option', {
                                                        value: 'female',
                                                        children: 'Female',
                                                    }),
                                                ],
                                            }),
                                            i(le, {}),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className:
                                    'addEstateManager__form--phoneNumber',
                                children: [
                                    i('label', {
                                        htmlFor: 'phoneNumber',
                                        children: 'Phone Number *',
                                    }),
                                    d('div', {
                                        className: 'phoneNumber__box',
                                        children: [
                                            i('select', {
                                                children: i('option', {
                                                    value: '234',
                                                    children: '+234',
                                                }),
                                            }),
                                            i('input', {
                                                required: !0,
                                                type: 'number',
                                                inputMode: 'numeric',
                                                id: 'phoneNumber',
                                                placeholder: 'Phone Number',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addEstateManager__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'email',
                                        children: 'Email Address *',
                                    }),
                                    i('input', {
                                        required: !0,
                                        type: 'email',
                                        id: 'email',
                                        placeholder: 'Your Email',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addEstateManager__form--file',
                                children: [
                                    d('label', {
                                        htmlFor: 'photoUpload',
                                        children: [
                                            i('img', {
                                                src: '/icons/estateManagers/photo_library.svg',
                                                alt: '',
                                            }),
                                            d('p', {
                                                children: [
                                                    'Drag estate manager picture here or',
                                                    ' ',
                                                    i('span', {
                                                        children: 'click',
                                                    }),
                                                    ' to upload',
                                                ],
                                            }),
                                        ],
                                    }),
                                    i('input', {
                                        type: 'file',
                                        name: 'photoUpload',
                                        id: 'photoUpload',
                                        accept: 'image/*',
                                        className: 'hidden',
                                        onClick: async (o) => {
                                            const s = await kr('#photoUpload')
                                            n(s)
                                        },
                                    }),
                                    r &&
                                        i('div', {
                                            className: 'file__uploadImgBox',
                                            children: i('img', {
                                                src: r,
                                                alt: 'photoPreview',
                                                className: 'object-contain',
                                            }),
                                        }),
                                ],
                            }),
                            d('button', {
                                className: 'btn estateManagers__btn',
                                style: { justifySelf: 'start' },
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    'Add EstateManager',
                                ],
                            }),
                        ],
                    }),
                }),
            ],
        })
    }
function an(e) {
    for (
        var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
        n < t;
        n++
    )
        r[n - 1] = arguments[n]
    throw Error(
        '[Immer] minified error nr: ' +
            e +
            (r.length
                ? ' ' +
                  r
                      .map(function (a) {
                          return "'" + a + "'"
                      })
                      .join(',')
                : '') +
            '. Find the full error at: https://bit.ly/3cXEKWf'
    )
}
function $a(e) {
    return !!e && !!e[lt]
}
function Yn(e) {
    var t
    return (
        !!e &&
        ((function (r) {
            if (!r || typeof r != 'object') return !1
            var n = Object.getPrototypeOf(r)
            if (n === null) return !0
            var a =
                Object.hasOwnProperty.call(n, 'constructor') && n.constructor
            return (
                a === Object ||
                (typeof a == 'function' && Function.toString.call(a) === SA)
            )
        })(e) ||
            Array.isArray(e) ||
            !!e[Rb] ||
            !!(!((t = e.constructor) === null || t === void 0) && t[Rb]) ||
            _0(e) ||
            A0(e))
    )
}
function Pi(e, t, r) {
    r === void 0 && (r = !1),
        no(e) === 0
            ? (r ? Object.keys : fl)(e).forEach(function (n) {
                  ;(r && typeof n == 'symbol') || t(n, e[n], e)
              })
            : e.forEach(function (n, a) {
                  return t(a, n, e)
              })
}
function no(e) {
    var t = e[lt]
    return t
        ? t.i > 3
            ? t.i - 4
            : t.i
        : Array.isArray(e)
        ? 1
        : _0(e)
        ? 2
        : A0(e)
        ? 3
        : 0
}
function dl(e, t) {
    return no(e) === 2 ? e.has(t) : Object.prototype.hasOwnProperty.call(e, t)
}
function mA(e, t) {
    return no(e) === 2 ? e.get(t) : e[t]
}
function D8(e, t, r) {
    var n = no(e)
    n === 2 ? e.set(t, r) : n === 3 ? e.add(r) : (e[t] = r)
}
function $8(e, t) {
    return e === t ? e !== 0 || 1 / e == 1 / t : e != e && t != t
}
function _0(e) {
    return wA && e instanceof Map
}
function A0(e) {
    return NA && e instanceof Set
}
function ei(e) {
    return e.o || e.t
}
function E0(e) {
    if (Array.isArray(e)) return Array.prototype.slice.call(e)
    var t = R8(e)
    delete t[lt]
    for (var r = fl(t), n = 0; n < r.length; n++) {
        var a = r[n],
            l = t[a]
        l.writable === !1 && ((l.writable = !0), (l.configurable = !0)),
            (l.get || l.set) &&
                (t[a] = {
                    configurable: !0,
                    writable: !0,
                    enumerable: l.enumerable,
                    value: e[a],
                })
    }
    return Object.create(Object.getPrototypeOf(e), t)
}
function k0(e, t) {
    return (
        t === void 0 && (t = !1),
        O0(e) ||
            $a(e) ||
            !Yn(e) ||
            (no(e) > 1 && (e.set = e.add = e.clear = e.delete = gA),
            Object.freeze(e),
            t &&
                Pi(
                    e,
                    function (r, n) {
                        return k0(n, !0)
                    },
                    !0
                )),
        e
    )
}
function gA() {
    an(2)
}
function O0(e) {
    return e == null || typeof e != 'object' || Object.isFrozen(e)
}
function bn(e) {
    var t = rg[e]
    return t || an(18, e), t
}
function vA(e, t) {
    rg[e] || (rg[e] = t)
}
function Qm() {
    return Ts
}
function lh(e, t) {
    t && (bn('Patches'), (e.u = []), (e.s = []), (e.v = t))
}
function Xu(e) {
    eg(e), e.p.forEach(yA), (e.p = null)
}
function eg(e) {
    e === Ts && (Ts = e.l)
}
function Ob(e) {
    return (Ts = { p: [], l: Ts, h: e, m: !0, _: 0 })
}
function yA(e) {
    var t = e[lt]
    t.i === 0 || t.i === 1 ? t.j() : (t.O = !0)
}
function oh(e, t) {
    t._ = t.p.length
    var r = t.p[0],
        n = e !== void 0 && e !== r
    return (
        t.h.g || bn('ES5').S(t, e, n),
        n
            ? (r[lt].P && (Xu(t), an(4)),
              Yn(e) && ((e = Zu(t, e)), t.l || Ju(t, e)),
              t.u && bn('Patches').M(r[lt].t, e, t.u, t.s))
            : (e = Zu(t, r, [])),
        Xu(t),
        t.u && t.v(t.u, t.s),
        e !== I8 ? e : void 0
    )
}
function Zu(e, t, r) {
    if (O0(t)) return t
    var n = t[lt]
    if (!n)
        return (
            Pi(
                t,
                function (s, c) {
                    return Tb(e, n, t, s, c, r)
                },
                !0
            ),
            t
        )
    if (n.A !== e) return t
    if (!n.P) return Ju(e, n.t, !0), n.t
    if (!n.I) {
        ;(n.I = !0), n.A._--
        var a = n.i === 4 || n.i === 5 ? (n.o = E0(n.k)) : n.o,
            l = a,
            o = !1
        n.i === 3 && ((l = new Set(a)), a.clear(), (o = !0)),
            Pi(l, function (s, c) {
                return Tb(e, n, a, s, c, r, o)
            }),
            Ju(e, a, !1),
            r && e.u && bn('Patches').N(n, r, e.u, e.s)
    }
    return n.o
}
function Tb(e, t, r, n, a, l, o) {
    if ($a(a)) {
        var s = Zu(
            e,
            a,
            l && t && t.i !== 3 && !dl(t.R, n) ? l.concat(n) : void 0
        )
        if ((D8(r, n, s), !$a(s))) return
        e.m = !1
    } else o && r.add(a)
    if (Yn(a) && !O0(a)) {
        if (!e.h.D && e._ < 1) return
        Zu(e, a), (t && t.A.l) || Ju(e, a)
    }
}
function Ju(e, t, r) {
    r === void 0 && (r = !1), e.h.D && e.m && k0(t, r)
}
function sh(e, t) {
    var r = e[lt]
    return (r ? ei(r) : e)[t]
}
function Mb(e, t) {
    if (t in e)
        for (var r = Object.getPrototypeOf(e); r; ) {
            var n = Object.getOwnPropertyDescriptor(r, t)
            if (n) return n
            r = Object.getPrototypeOf(r)
        }
}
function fa(e) {
    e.P || ((e.P = !0), e.l && fa(e.l))
}
function ch(e) {
    e.o || (e.o = E0(e.t))
}
function tg(e, t, r) {
    var n = _0(t)
        ? bn('MapSet').F(t, r)
        : A0(t)
        ? bn('MapSet').T(t, r)
        : e.g
        ? (function (a, l) {
              var o = Array.isArray(a),
                  s = {
                      i: o ? 1 : 0,
                      A: l ? l.A : Qm(),
                      P: !1,
                      I: !1,
                      R: {},
                      l,
                      t: a,
                      k: null,
                      o: null,
                      j: null,
                      C: !1,
                  },
                  c = s,
                  u = Ms
              o && ((c = [s]), (u = Wo))
              var f = Proxy.revocable(c, u),
                  p = f.revoke,
                  m = f.proxy
              return (s.k = m), (s.j = p), m
          })(t, r)
        : bn('ES5').J(t, r)
    return (r ? r.A : Qm()).p.push(n), n
}
function bA(e) {
    return (
        $a(e) || an(22, e),
        (function t(r) {
            if (!Yn(r)) return r
            var n,
                a = r[lt],
                l = no(r)
            if (a) {
                if (!a.P && (a.i < 4 || !bn('ES5').K(a))) return a.t
                ;(a.I = !0), (n = Db(r, l)), (a.I = !1)
            } else n = Db(r, l)
            return (
                Pi(n, function (o, s) {
                    ;(a && mA(a.t, o) === s) || D8(n, o, t(s))
                }),
                l === 3 ? new Set(n) : n
            )
        })(e)
    )
}
function Db(e, t) {
    switch (t) {
        case 2:
            return new Map(e)
        case 3:
            return Array.from(e)
    }
    return E0(e)
}
function xA() {
    function e(l, o) {
        var s = a[l]
        return (
            s
                ? (s.enumerable = o)
                : (a[l] = s =
                      {
                          configurable: !0,
                          enumerable: o,
                          get: function () {
                              var c = this[lt]
                              return Ms.get(c, l)
                          },
                          set: function (c) {
                              var u = this[lt]
                              Ms.set(u, l, c)
                          },
                      }),
            s
        )
    }
    function t(l) {
        for (var o = l.length - 1; o >= 0; o--) {
            var s = l[o][lt]
            if (!s.P)
                switch (s.i) {
                    case 5:
                        n(s) && fa(s)
                        break
                    case 4:
                        r(s) && fa(s)
                }
        }
    }
    function r(l) {
        for (var o = l.t, s = l.k, c = fl(s), u = c.length - 1; u >= 0; u--) {
            var f = c[u]
            if (f !== lt) {
                var p = o[f]
                if (p === void 0 && !dl(o, f)) return !0
                var m = s[f],
                    v = m && m[lt]
                if (v ? v.t !== p : !$8(m, p)) return !0
            }
        }
        var b = !!o[lt]
        return c.length !== fl(o).length + (b ? 0 : 1)
    }
    function n(l) {
        var o = l.k
        if (o.length !== l.t.length) return !0
        var s = Object.getOwnPropertyDescriptor(o, o.length - 1)
        if (s && !s.get) return !0
        for (var c = 0; c < o.length; c++) if (!o.hasOwnProperty(c)) return !0
        return !1
    }
    var a = {}
    vA('ES5', {
        J: function (l, o) {
            var s = Array.isArray(l),
                c = (function (f, p) {
                    if (f) {
                        for (var m = Array(p.length), v = 0; v < p.length; v++)
                            Object.defineProperty(m, '' + v, e(v, !0))
                        return m
                    }
                    var b = R8(p)
                    delete b[lt]
                    for (var h = fl(b), g = 0; g < h.length; g++) {
                        var x = h[g]
                        b[x] = e(x, f || !!b[x].enumerable)
                    }
                    return Object.create(Object.getPrototypeOf(p), b)
                })(s, l),
                u = {
                    i: s ? 5 : 4,
                    A: o ? o.A : Qm(),
                    P: !1,
                    I: !1,
                    R: {},
                    l: o,
                    t: l,
                    k: c,
                    o: null,
                    O: !1,
                    C: !1,
                }
            return Object.defineProperty(c, lt, { value: u, writable: !0 }), c
        },
        S: function (l, o, s) {
            s
                ? $a(o) && o[lt].A === l && t(l.p)
                : (l.u &&
                      (function c(u) {
                          if (u && typeof u == 'object') {
                              var f = u[lt]
                              if (f) {
                                  var p = f.t,
                                      m = f.k,
                                      v = f.R,
                                      b = f.i
                                  if (b === 4)
                                      Pi(m, function (y) {
                                          y !== lt &&
                                              (p[y] !== void 0 || dl(p, y)
                                                  ? v[y] || c(m[y])
                                                  : ((v[y] = !0), fa(f)))
                                      }),
                                          Pi(p, function (y) {
                                              m[y] !== void 0 ||
                                                  dl(m, y) ||
                                                  ((v[y] = !1), fa(f))
                                          })
                                  else if (b === 5) {
                                      if (
                                          (n(f) && (fa(f), (v.length = !0)),
                                          m.length < p.length)
                                      )
                                          for (
                                              var h = m.length;
                                              h < p.length;
                                              h++
                                          )
                                              v[h] = !1
                                      else
                                          for (
                                              var g = p.length;
                                              g < m.length;
                                              g++
                                          )
                                              v[g] = !0
                                      for (
                                          var x = Math.min(m.length, p.length),
                                              w = 0;
                                          w < x;
                                          w++
                                      )
                                          m.hasOwnProperty(w) || (v[w] = !0),
                                              v[w] === void 0 && c(m[w])
                                  }
                              }
                          }
                      })(l.p[0]),
                  t(l.p))
        },
        K: function (l) {
            return l.i === 4 ? r(l) : n(l)
        },
    })
}
var $b,
    Ts,
    T0 = typeof Symbol < 'u' && typeof Symbol('x') == 'symbol',
    wA = typeof Map < 'u',
    NA = typeof Set < 'u',
    Ib =
        typeof Proxy < 'u' &&
        Proxy.revocable !== void 0 &&
        typeof Reflect < 'u',
    I8 = T0
        ? Symbol.for('immer-nothing')
        : ((($b = {})['immer-nothing'] = !0), $b),
    Rb = T0 ? Symbol.for('immer-draftable') : '__$immer_draftable',
    lt = T0 ? Symbol.for('immer-state') : '__$immer_state',
    SA = '' + Object.prototype.constructor,
    fl =
        typeof Reflect < 'u' && Reflect.ownKeys
            ? Reflect.ownKeys
            : Object.getOwnPropertySymbols !== void 0
            ? function (e) {
                  return Object.getOwnPropertyNames(e).concat(
                      Object.getOwnPropertySymbols(e)
                  )
              }
            : Object.getOwnPropertyNames,
    R8 =
        Object.getOwnPropertyDescriptors ||
        function (e) {
            var t = {}
            return (
                fl(e).forEach(function (r) {
                    t[r] = Object.getOwnPropertyDescriptor(e, r)
                }),
                t
            )
        },
    rg = {},
    Ms = {
        get: function (e, t) {
            if (t === lt) return e
            var r = ei(e)
            if (!dl(r, t))
                return (function (a, l, o) {
                    var s,
                        c = Mb(l, o)
                    return c
                        ? 'value' in c
                            ? c.value
                            : (s = c.get) === null || s === void 0
                            ? void 0
                            : s.call(a.k)
                        : void 0
                })(e, r, t)
            var n = r[t]
            return e.I || !Yn(n)
                ? n
                : n === sh(e.t, t)
                ? (ch(e), (e.o[t] = tg(e.A.h, n, e)))
                : n
        },
        has: function (e, t) {
            return t in ei(e)
        },
        ownKeys: function (e) {
            return Reflect.ownKeys(ei(e))
        },
        set: function (e, t, r) {
            var n = Mb(ei(e), t)
            if (n != null && n.set) return n.set.call(e.k, r), !0
            if (!e.P) {
                var a = sh(ei(e), t),
                    l = a == null ? void 0 : a[lt]
                if (l && l.t === r) return (e.o[t] = r), (e.R[t] = !1), !0
                if ($8(r, a) && (r !== void 0 || dl(e.t, t))) return !0
                ch(e), fa(e)
            }
            return (
                (e.o[t] === r && (r !== void 0 || t in e.o)) ||
                    (Number.isNaN(r) && Number.isNaN(e.o[t])) ||
                    ((e.o[t] = r), (e.R[t] = !0)),
                !0
            )
        },
        deleteProperty: function (e, t) {
            return (
                sh(e.t, t) !== void 0 || t in e.t
                    ? ((e.R[t] = !1), ch(e), fa(e))
                    : delete e.R[t],
                e.o && delete e.o[t],
                !0
            )
        },
        getOwnPropertyDescriptor: function (e, t) {
            var r = ei(e),
                n = Reflect.getOwnPropertyDescriptor(r, t)
            return (
                n && {
                    writable: !0,
                    configurable: e.i !== 1 || t !== 'length',
                    enumerable: n.enumerable,
                    value: r[t],
                }
            )
        },
        defineProperty: function () {
            an(11)
        },
        getPrototypeOf: function (e) {
            return Object.getPrototypeOf(e.t)
        },
        setPrototypeOf: function () {
            an(12)
        },
    },
    Wo = {}
Pi(Ms, function (e, t) {
    Wo[e] = function () {
        return (arguments[0] = arguments[0][0]), t.apply(this, arguments)
    }
}),
    (Wo.deleteProperty = function (e, t) {
        return Wo.set.call(this, e, t, void 0)
    }),
    (Wo.set = function (e, t, r) {
        return Ms.set.call(this, e[0], t, r, e[0])
    })
var CA = (function () {
        function e(r) {
            var n = this
            ;(this.g = Ib),
                (this.D = !0),
                (this.produce = function (a, l, o) {
                    if (typeof a == 'function' && typeof l != 'function') {
                        var s = l
                        l = a
                        var c = n
                        return function (h) {
                            var g = this
                            h === void 0 && (h = s)
                            for (
                                var x = arguments.length,
                                    w = Array(x > 1 ? x - 1 : 0),
                                    y = 1;
                                y < x;
                                y++
                            )
                                w[y - 1] = arguments[y]
                            return c.produce(h, function (N) {
                                var S
                                return (S = l).call.apply(S, [g, N].concat(w))
                            })
                        }
                    }
                    var u
                    if (
                        (typeof l != 'function' && an(6),
                        o !== void 0 && typeof o != 'function' && an(7),
                        Yn(a))
                    ) {
                        var f = Ob(n),
                            p = tg(n, a, void 0),
                            m = !0
                        try {
                            ;(u = l(p)), (m = !1)
                        } finally {
                            m ? Xu(f) : eg(f)
                        }
                        return typeof Promise < 'u' && u instanceof Promise
                            ? u.then(
                                  function (h) {
                                      return lh(f, o), oh(h, f)
                                  },
                                  function (h) {
                                      throw (Xu(f), h)
                                  }
                              )
                            : (lh(f, o), oh(u, f))
                    }
                    if (!a || typeof a != 'object') {
                        if (
                            ((u = l(a)) === void 0 && (u = a),
                            u === I8 && (u = void 0),
                            n.D && k0(u, !0),
                            o)
                        ) {
                            var v = [],
                                b = []
                            bn('Patches').M(a, u, v, b), o(v, b)
                        }
                        return u
                    }
                    an(21, a)
                }),
                (this.produceWithPatches = function (a, l) {
                    if (typeof a == 'function')
                        return function (u) {
                            for (
                                var f = arguments.length,
                                    p = Array(f > 1 ? f - 1 : 0),
                                    m = 1;
                                m < f;
                                m++
                            )
                                p[m - 1] = arguments[m]
                            return n.produceWithPatches(u, function (v) {
                                return a.apply(void 0, [v].concat(p))
                            })
                        }
                    var o,
                        s,
                        c = n.produce(a, l, function (u, f) {
                            ;(o = u), (s = f)
                        })
                    return typeof Promise < 'u' && c instanceof Promise
                        ? c.then(function (u) {
                              return [u, o, s]
                          })
                        : [c, o, s]
                }),
                typeof (r == null ? void 0 : r.useProxies) == 'boolean' &&
                    this.setUseProxies(r.useProxies),
                typeof (r == null ? void 0 : r.autoFreeze) == 'boolean' &&
                    this.setAutoFreeze(r.autoFreeze)
        }
        var t = e.prototype
        return (
            (t.createDraft = function (r) {
                Yn(r) || an(8), $a(r) && (r = bA(r))
                var n = Ob(this),
                    a = tg(this, r, void 0)
                return (a[lt].C = !0), eg(n), a
            }),
            (t.finishDraft = function (r, n) {
                var a = r && r[lt],
                    l = a.A
                return lh(l, n), oh(void 0, l)
            }),
            (t.setAutoFreeze = function (r) {
                this.D = r
            }),
            (t.setUseProxies = function (r) {
                r && !Ib && an(20), (this.g = r)
            }),
            (t.applyPatches = function (r, n) {
                var a
                for (a = n.length - 1; a >= 0; a--) {
                    var l = n[a]
                    if (l.path.length === 0 && l.op === 'replace') {
                        r = l.value
                        break
                    }
                }
                a > -1 && (n = n.slice(a + 1))
                var o = bn('Patches').$
                return $a(r)
                    ? o(r, n)
                    : this.produce(r, function (s) {
                          return o(s, n)
                      })
            }),
            e
        )
    })(),
    _r = new CA(),
    L8 = _r.produce
_r.produceWithPatches.bind(_r)
_r.setAutoFreeze.bind(_r)
_r.setUseProxies.bind(_r)
_r.applyPatches.bind(_r)
_r.createDraft.bind(_r)
_r.finishDraft.bind(_r)
function Ds(e) {
    return (
        (Ds =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Ds(e)
    )
}
function PA(e, t) {
    if (Ds(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Ds(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function _A(e) {
    var t = PA(e, 'string')
    return Ds(t) === 'symbol' ? t : String(t)
}
function AA(e, t, r) {
    return (
        (t = _A(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function Lb(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function jb(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? Lb(Object(r), !0).forEach(function (n) {
                  AA(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : Lb(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Gt(e) {
    return (
        'Minified Redux error #' +
        e +
        '; visit https://redux.js.org/Errors?code=' +
        e +
        ' for the full message or use the non-minified dev environment for full errors. '
    )
}
var Fb = (function () {
        return (
            (typeof Symbol == 'function' && Symbol.observable) || '@@observable'
        )
    })(),
    uh = function () {
        return Math.random().toString(36).substring(7).split('').join('.')
    },
    Qu = {
        INIT: '@@redux/INIT' + uh(),
        REPLACE: '@@redux/REPLACE' + uh(),
        PROBE_UNKNOWN_ACTION: function () {
            return '@@redux/PROBE_UNKNOWN_ACTION' + uh()
        },
    }
function EA(e) {
    if (typeof e != 'object' || e === null) return !1
    for (var t = e; Object.getPrototypeOf(t) !== null; )
        t = Object.getPrototypeOf(t)
    return Object.getPrototypeOf(e) === t
}
function M0(e, t, r) {
    var n
    if (
        (typeof t == 'function' && typeof r == 'function') ||
        (typeof r == 'function' && typeof arguments[3] == 'function')
    )
        throw new Error(Gt(0))
    if (
        (typeof t == 'function' && typeof r > 'u' && ((r = t), (t = void 0)),
        typeof r < 'u')
    ) {
        if (typeof r != 'function') throw new Error(Gt(1))
        return r(M0)(e, t)
    }
    if (typeof e != 'function') throw new Error(Gt(2))
    var a = e,
        l = t,
        o = [],
        s = o,
        c = !1
    function u() {
        s === o && (s = o.slice())
    }
    function f() {
        if (c) throw new Error(Gt(3))
        return l
    }
    function p(h) {
        if (typeof h != 'function') throw new Error(Gt(4))
        if (c) throw new Error(Gt(5))
        var g = !0
        return (
            u(),
            s.push(h),
            function () {
                if (!!g) {
                    if (c) throw new Error(Gt(6))
                    ;(g = !1), u()
                    var w = s.indexOf(h)
                    s.splice(w, 1), (o = null)
                }
            }
        )
    }
    function m(h) {
        if (!EA(h)) throw new Error(Gt(7))
        if (typeof h.type > 'u') throw new Error(Gt(8))
        if (c) throw new Error(Gt(9))
        try {
            ;(c = !0), (l = a(l, h))
        } finally {
            c = !1
        }
        for (var g = (o = s), x = 0; x < g.length; x++) {
            var w = g[x]
            w()
        }
        return h
    }
    function v(h) {
        if (typeof h != 'function') throw new Error(Gt(10))
        ;(a = h), m({ type: Qu.REPLACE })
    }
    function b() {
        var h,
            g = p
        return (
            (h = {
                subscribe: function (w) {
                    if (typeof w != 'object' || w === null)
                        throw new Error(Gt(11))
                    function y() {
                        w.next && w.next(f())
                    }
                    y()
                    var N = g(y)
                    return { unsubscribe: N }
                },
            }),
            (h[Fb] = function () {
                return this
            }),
            h
        )
    }
    return (
        m({ type: Qu.INIT }),
        (n = { dispatch: m, subscribe: p, getState: f, replaceReducer: v }),
        (n[Fb] = b),
        n
    )
}
function kA(e) {
    Object.keys(e).forEach(function (t) {
        var r = e[t],
            n = r(void 0, { type: Qu.INIT })
        if (typeof n > 'u') throw new Error(Gt(12))
        if (typeof r(void 0, { type: Qu.PROBE_UNKNOWN_ACTION() }) > 'u')
            throw new Error(Gt(13))
    })
}
function j8(e) {
    for (var t = Object.keys(e), r = {}, n = 0; n < t.length; n++) {
        var a = t[n]
        typeof e[a] == 'function' && (r[a] = e[a])
    }
    var l = Object.keys(r),
        o
    try {
        kA(r)
    } catch (s) {
        o = s
    }
    return function (c, u) {
        if ((c === void 0 && (c = {}), o)) throw o
        for (var f = !1, p = {}, m = 0; m < l.length; m++) {
            var v = l[m],
                b = r[v],
                h = c[v],
                g = b(h, u)
            if (typeof g > 'u') throw (u && u.type, new Error(Gt(14)))
            ;(p[v] = g), (f = f || g !== h)
        }
        return (f = f || l.length !== Object.keys(c).length), f ? p : c
    }
}
function ed() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r]
    return t.length === 0
        ? function (n) {
              return n
          }
        : t.length === 1
        ? t[0]
        : t.reduce(function (n, a) {
              return function () {
                  return n(a.apply(void 0, arguments))
              }
          })
}
function OA() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r]
    return function (n) {
        return function () {
            var a = n.apply(void 0, arguments),
                l = function () {
                    throw new Error(Gt(15))
                },
                o = {
                    getState: a.getState,
                    dispatch: function () {
                        return l.apply(void 0, arguments)
                    },
                },
                s = t.map(function (c) {
                    return c(o)
                })
            return (
                (l = ed.apply(void 0, s)(a.dispatch)),
                jb(jb({}, a), {}, { dispatch: l })
            )
        }
    }
}
function F8(e) {
    var t = function (n) {
        var a = n.dispatch,
            l = n.getState
        return function (o) {
            return function (s) {
                return typeof s == 'function' ? s(a, l, e) : o(s)
            }
        }
    }
    return t
}
var B8 = F8()
B8.withExtraArgument = F8
const Bb = B8
var TA =
        (globalThis && globalThis.__extends) ||
        (function () {
            var e = function (t, r) {
                return (
                    (e =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (n, a) {
                                n.__proto__ = a
                            }) ||
                        function (n, a) {
                            for (var l in a)
                                Object.prototype.hasOwnProperty.call(a, l) &&
                                    (n[l] = a[l])
                        }),
                    e(t, r)
                )
            }
            return function (t, r) {
                if (typeof r != 'function' && r !== null)
                    throw new TypeError(
                        'Class extends value ' +
                            String(r) +
                            ' is not a constructor or null'
                    )
                e(t, r)
                function n() {
                    this.constructor = t
                }
                t.prototype =
                    r === null
                        ? Object.create(r)
                        : ((n.prototype = r.prototype), new n())
            }
        })(),
    MA =
        (globalThis && globalThis.__generator) ||
        function (e, t) {
            var r = {
                    label: 0,
                    sent: function () {
                        if (l[0] & 1) throw l[1]
                        return l[1]
                    },
                    trys: [],
                    ops: [],
                },
                n,
                a,
                l,
                o
            return (
                (o = { next: s(0), throw: s(1), return: s(2) }),
                typeof Symbol == 'function' &&
                    (o[Symbol.iterator] = function () {
                        return this
                    }),
                o
            )
            function s(u) {
                return function (f) {
                    return c([u, f])
                }
            }
            function c(u) {
                if (n) throw new TypeError('Generator is already executing.')
                for (; r; )
                    try {
                        if (
                            ((n = 1),
                            a &&
                                (l =
                                    u[0] & 2
                                        ? a.return
                                        : u[0]
                                        ? a.throw ||
                                          ((l = a.return) && l.call(a), 0)
                                        : a.next) &&
                                !(l = l.call(a, u[1])).done)
                        )
                            return l
                        switch (
                            ((a = 0), l && (u = [u[0] & 2, l.value]), u[0])
                        ) {
                            case 0:
                            case 1:
                                l = u
                                break
                            case 4:
                                return r.label++, { value: u[1], done: !1 }
                            case 5:
                                r.label++, (a = u[1]), (u = [0])
                                continue
                            case 7:
                                ;(u = r.ops.pop()), r.trys.pop()
                                continue
                            default:
                                if (
                                    ((l = r.trys),
                                    !(l = l.length > 0 && l[l.length - 1]) &&
                                        (u[0] === 6 || u[0] === 2))
                                ) {
                                    r = 0
                                    continue
                                }
                                if (
                                    u[0] === 3 &&
                                    (!l || (u[1] > l[0] && u[1] < l[3]))
                                ) {
                                    r.label = u[1]
                                    break
                                }
                                if (u[0] === 6 && r.label < l[1]) {
                                    ;(r.label = l[1]), (l = u)
                                    break
                                }
                                if (l && r.label < l[2]) {
                                    ;(r.label = l[2]), r.ops.push(u)
                                    break
                                }
                                l[2] && r.ops.pop(), r.trys.pop()
                                continue
                        }
                        u = t.call(e, r)
                    } catch (f) {
                        ;(u = [6, f]), (a = 0)
                    } finally {
                        n = l = 0
                    }
                if (u[0] & 5) throw u[1]
                return { value: u[0] ? u[1] : void 0, done: !0 }
            }
        },
    td =
        (globalThis && globalThis.__spreadArray) ||
        function (e, t) {
            for (var r = 0, n = t.length, a = e.length; r < n; r++, a++)
                e[a] = t[r]
            return e
        },
    DA = Object.defineProperty,
    $A = Object.defineProperties,
    IA = Object.getOwnPropertyDescriptors,
    zb = Object.getOwnPropertySymbols,
    RA = Object.prototype.hasOwnProperty,
    LA = Object.prototype.propertyIsEnumerable,
    Vb = function (e, t, r) {
        return t in e
            ? DA(e, t, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: r,
              })
            : (e[t] = r)
    },
    Ea = function (e, t) {
        for (var r in t || (t = {})) RA.call(t, r) && Vb(e, r, t[r])
        if (zb)
            for (var n = 0, a = zb(t); n < a.length; n++) {
                var r = a[n]
                LA.call(t, r) && Vb(e, r, t[r])
            }
        return e
    },
    dh = function (e, t) {
        return $A(e, IA(t))
    },
    jA = function (e, t, r) {
        return new Promise(function (n, a) {
            var l = function (c) {
                    try {
                        s(r.next(c))
                    } catch (u) {
                        a(u)
                    }
                },
                o = function (c) {
                    try {
                        s(r.throw(c))
                    } catch (u) {
                        a(u)
                    }
                },
                s = function (c) {
                    return c.done
                        ? n(c.value)
                        : Promise.resolve(c.value).then(l, o)
                }
            s((r = r.apply(e, t)).next())
        })
    },
    FA =
        typeof window < 'u' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
            ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
            : function () {
                  if (arguments.length !== 0)
                      return typeof arguments[0] == 'object'
                          ? ed
                          : ed.apply(null, arguments)
              }
function BA(e) {
    if (typeof e != 'object' || e === null) return !1
    var t = Object.getPrototypeOf(e)
    if (t === null) return !0
    for (var r = t; Object.getPrototypeOf(r) !== null; )
        r = Object.getPrototypeOf(r)
    return t === r
}
var zA = (function (e) {
    TA(t, e)
    function t() {
        for (var r = [], n = 0; n < arguments.length; n++) r[n] = arguments[n]
        var a = e.apply(this, r) || this
        return Object.setPrototypeOf(a, t.prototype), a
    }
    return (
        Object.defineProperty(t, Symbol.species, {
            get: function () {
                return t
            },
            enumerable: !1,
            configurable: !0,
        }),
        (t.prototype.concat = function () {
            for (var r = [], n = 0; n < arguments.length; n++)
                r[n] = arguments[n]
            return e.prototype.concat.apply(this, r)
        }),
        (t.prototype.prepend = function () {
            for (var r = [], n = 0; n < arguments.length; n++)
                r[n] = arguments[n]
            return r.length === 1 && Array.isArray(r[0])
                ? new (t.bind.apply(t, td([void 0], r[0].concat(this))))()
                : new (t.bind.apply(t, td([void 0], r.concat(this))))()
        }),
        t
    )
})(Array)
function ng(e) {
    return Yn(e) ? L8(e, function () {}) : e
}
function VA(e) {
    return typeof e == 'boolean'
}
function UA() {
    return function (t) {
        return WA(t)
    }
}
function WA(e) {
    e === void 0 && (e = {})
    var t = e.thunk,
        r = t === void 0 ? !0 : t
    e.immutableCheck, e.serializableCheck
    var n = new zA()
    return (
        r &&
            (VA(r)
                ? n.push(Bb)
                : n.push(Bb.withExtraArgument(r.extraArgument))),
        n
    )
}
var HA = !0
function GA(e) {
    var t = UA(),
        r = e || {},
        n = r.reducer,
        a = n === void 0 ? void 0 : n,
        l = r.middleware,
        o = l === void 0 ? t() : l,
        s = r.devTools,
        c = s === void 0 ? !0 : s,
        u = r.preloadedState,
        f = u === void 0 ? void 0 : u,
        p = r.enhancers,
        m = p === void 0 ? void 0 : p,
        v
    if (typeof a == 'function') v = a
    else if (BA(a)) v = j8(a)
    else
        throw new Error(
            '"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'
        )
    var b = o
    typeof b == 'function' && (b = b(t))
    var h = OA.apply(void 0, b),
        g = ed
    c && (g = FA(Ea({ trace: !HA }, typeof c == 'object' && c)))
    var x = [h]
    Array.isArray(m) ? (x = td([h], m)) : typeof m == 'function' && (x = m(x))
    var w = g.apply(void 0, x)
    return M0(v, f, w)
}
function ka(e, t) {
    function r() {
        for (var n = [], a = 0; a < arguments.length; a++) n[a] = arguments[a]
        if (t) {
            var l = t.apply(void 0, n)
            if (!l) throw new Error('prepareAction did not return an object')
            return Ea(
                Ea(
                    { type: e, payload: l.payload },
                    'meta' in l && { meta: l.meta }
                ),
                'error' in l && { error: l.error }
            )
        }
        return { type: e, payload: n[0] }
    }
    return (
        (r.toString = function () {
            return '' + e
        }),
        (r.type = e),
        (r.match = function (n) {
            return n.type === e
        }),
        r
    )
}
function z8(e) {
    var t = {},
        r = [],
        n,
        a = {
            addCase: function (l, o) {
                var s = typeof l == 'string' ? l : l.type
                if (s in t)
                    throw new Error(
                        'addCase cannot be called with two reducers for the same action type'
                    )
                return (t[s] = o), a
            },
            addMatcher: function (l, o) {
                return r.push({ matcher: l, reducer: o }), a
            },
            addDefaultCase: function (l) {
                return (n = l), a
            },
        }
    return e(a), [t, r, n]
}
function qA(e) {
    return typeof e == 'function'
}
function KA(e, t, r, n) {
    r === void 0 && (r = [])
    var a = typeof t == 'function' ? z8(t) : [t, r, n],
        l = a[0],
        o = a[1],
        s = a[2],
        c
    if (qA(e))
        c = function () {
            return ng(e())
        }
    else {
        var u = ng(e)
        c = function () {
            return u
        }
    }
    function f(p, m) {
        p === void 0 && (p = c())
        var v = td(
            [l[m.type]],
            o
                .filter(function (b) {
                    var h = b.matcher
                    return h(m)
                })
                .map(function (b) {
                    var h = b.reducer
                    return h
                })
        )
        return (
            v.filter(function (b) {
                return !!b
            }).length === 0 && (v = [s]),
            v.reduce(function (b, h) {
                if (h)
                    if ($a(b)) {
                        var g = b,
                            x = h(g, m)
                        return x === void 0 ? b : x
                    } else {
                        if (Yn(b))
                            return L8(b, function (w) {
                                return h(w, m)
                            })
                        var x = h(b, m)
                        if (x === void 0) {
                            if (b === null) return b
                            throw Error(
                                'A case reducer on a non-draftable value must not return undefined'
                            )
                        }
                        return x
                    }
                return b
            }, p)
        )
    }
    return (f.getInitialState = c), f
}
function YA(e, t) {
    return e + '/' + t
}
function V8(e) {
    var t = e.name
    if (!t) throw new Error('`name` is a required option for createSlice')
    typeof process < 'u'
    var r =
            typeof e.initialState == 'function'
                ? e.initialState
                : ng(e.initialState),
        n = e.reducers || {},
        a = Object.keys(n),
        l = {},
        o = {},
        s = {}
    a.forEach(function (f) {
        var p = n[f],
            m = YA(t, f),
            v,
            b
        'reducer' in p ? ((v = p.reducer), (b = p.prepare)) : (v = p),
            (l[f] = v),
            (o[m] = v),
            (s[f] = b ? ka(m, b) : ka(m))
    })
    function c() {
        var f =
                typeof e.extraReducers == 'function'
                    ? z8(e.extraReducers)
                    : [e.extraReducers],
            p = f[0],
            m = p === void 0 ? {} : p,
            v = f[1],
            b = v === void 0 ? [] : v,
            h = f[2],
            g = h === void 0 ? void 0 : h,
            x = Ea(Ea({}, m), o)
        return KA(r, function (w) {
            for (var y in x) w.addCase(y, x[y])
            for (var N = 0, S = b; N < S.length; N++) {
                var P = S[N]
                w.addMatcher(P.matcher, P.reducer)
            }
            g && w.addDefaultCase(g)
        })
    }
    var u
    return {
        name: t,
        reducer: function (f, p) {
            return u || (u = c()), u(f, p)
        },
        actions: s,
        caseReducers: l,
        getInitialState: function () {
            return u || (u = c()), u.getInitialState()
        },
    }
}
var XA = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW',
    ZA = function (e) {
        e === void 0 && (e = 21)
        for (var t = '', r = e; r--; ) t += XA[(Math.random() * 64) | 0]
        return t
    },
    JA = ['name', 'message', 'stack', 'code'],
    fh = (function () {
        function e(t, r) {
            ;(this.payload = t), (this.meta = r)
        }
        return e
    })(),
    Ub = (function () {
        function e(t, r) {
            ;(this.payload = t), (this.meta = r)
        }
        return e
    })(),
    QA = function (e) {
        if (typeof e == 'object' && e !== null) {
            for (var t = {}, r = 0, n = JA; r < n.length; r++) {
                var a = n[r]
                typeof e[a] == 'string' && (t[a] = e[a])
            }
            return t
        }
        return { message: String(e) }
    }
;(function () {
    function e(t, r, n) {
        var a = ka(t + '/fulfilled', function (u, f, p, m) {
                return {
                    payload: u,
                    meta: dh(Ea({}, m || {}), {
                        arg: p,
                        requestId: f,
                        requestStatus: 'fulfilled',
                    }),
                }
            }),
            l = ka(t + '/pending', function (u, f, p) {
                return {
                    payload: void 0,
                    meta: dh(Ea({}, p || {}), {
                        arg: f,
                        requestId: u,
                        requestStatus: 'pending',
                    }),
                }
            }),
            o = ka(t + '/rejected', function (u, f, p, m, v) {
                return {
                    payload: m,
                    error: ((n && n.serializeError) || QA)(u || 'Rejected'),
                    meta: dh(Ea({}, v || {}), {
                        arg: p,
                        requestId: f,
                        rejectedWithValue: !!m,
                        requestStatus: 'rejected',
                        aborted: (u == null ? void 0 : u.name) === 'AbortError',
                        condition:
                            (u == null ? void 0 : u.name) === 'ConditionError',
                    }),
                }
            }),
            s =
                typeof AbortController < 'u'
                    ? AbortController
                    : (function () {
                          function u() {
                              this.signal = {
                                  aborted: !1,
                                  addEventListener: function () {},
                                  dispatchEvent: function () {
                                      return !1
                                  },
                                  onabort: function () {},
                                  removeEventListener: function () {},
                                  reason: void 0,
                                  throwIfAborted: function () {},
                              }
                          }
                          return (u.prototype.abort = function () {}), u
                      })()
        function c(u) {
            return function (f, p, m) {
                var v = n != null && n.idGenerator ? n.idGenerator(u) : ZA(),
                    b = new s(),
                    h
                function g(w) {
                    ;(h = w), b.abort()
                }
                var x = (function () {
                    return jA(this, null, function () {
                        var w, y, N, S, P, E, k
                        return MA(this, function (M) {
                            switch (M.label) {
                                case 0:
                                    return (
                                        M.trys.push([0, 4, , 5]),
                                        (S =
                                            (w =
                                                n == null
                                                    ? void 0
                                                    : n.condition) == null
                                                ? void 0
                                                : w.call(n, u, {
                                                      getState: p,
                                                      extra: m,
                                                  })),
                                        tE(S) ? [4, S] : [3, 2]
                                    )
                                case 1:
                                    ;(S = M.sent()), (M.label = 2)
                                case 2:
                                    if (S === !1 || b.signal.aborted)
                                        throw {
                                            name: 'ConditionError',
                                            message:
                                                'Aborted due to condition callback returning false.',
                                        }
                                    return (
                                        (P = new Promise(function (A, _) {
                                            return b.signal.addEventListener(
                                                'abort',
                                                function () {
                                                    return _({
                                                        name: 'AbortError',
                                                        message: h || 'Aborted',
                                                    })
                                                }
                                            )
                                        })),
                                        f(
                                            l(
                                                v,
                                                u,
                                                (y =
                                                    n == null
                                                        ? void 0
                                                        : n.getPendingMeta) ==
                                                    null
                                                    ? void 0
                                                    : y.call(
                                                          n,
                                                          {
                                                              requestId: v,
                                                              arg: u,
                                                          },
                                                          {
                                                              getState: p,
                                                              extra: m,
                                                          }
                                                      )
                                            )
                                        ),
                                        [
                                            4,
                                            Promise.race([
                                                P,
                                                Promise.resolve(
                                                    r(u, {
                                                        dispatch: f,
                                                        getState: p,
                                                        extra: m,
                                                        requestId: v,
                                                        signal: b.signal,
                                                        abort: g,
                                                        rejectWithValue:
                                                            function (A, _) {
                                                                return new fh(
                                                                    A,
                                                                    _
                                                                )
                                                            },
                                                        fulfillWithValue:
                                                            function (A, _) {
                                                                return new Ub(
                                                                    A,
                                                                    _
                                                                )
                                                            },
                                                    })
                                                ).then(function (A) {
                                                    if (A instanceof fh) throw A
                                                    return A instanceof Ub
                                                        ? a(
                                                              A.payload,
                                                              v,
                                                              u,
                                                              A.meta
                                                          )
                                                        : a(A, v, u)
                                                }),
                                            ]),
                                        ]
                                    )
                                case 3:
                                    return (N = M.sent()), [3, 5]
                                case 4:
                                    return (
                                        (E = M.sent()),
                                        (N =
                                            E instanceof fh
                                                ? o(
                                                      null,
                                                      v,
                                                      u,
                                                      E.payload,
                                                      E.meta
                                                  )
                                                : o(E, v, u)),
                                        [3, 5]
                                    )
                                case 5:
                                    return (
                                        (k =
                                            n &&
                                            !n.dispatchConditionRejection &&
                                            o.match(N) &&
                                            N.meta.condition),
                                        k || f(N),
                                        [2, N]
                                    )
                            }
                        })
                    })
                })()
                return Object.assign(x, {
                    abort: g,
                    requestId: v,
                    arg: u,
                    unwrap: function () {
                        return x.then(eE)
                    },
                })
            }
        }
        return Object.assign(c, {
            pending: l,
            rejected: o,
            fulfilled: a,
            typePrefix: t,
        })
    }
    return (
        (e.withTypes = function () {
            return e
        }),
        e
    )
})()
function eE(e) {
    if (e.meta && e.meta.rejectedWithValue) throw e.payload
    if (e.error) throw e.error
    return e.payload
}
function tE(e) {
    return e !== null && typeof e == 'object' && typeof e.then == 'function'
}
var D0 = 'listenerMiddleware'
ka(D0 + '/add')
ka(D0 + '/removeAll')
ka(D0 + '/remove')
var Wb
typeof queueMicrotask == 'function' &&
    queueMicrotask.bind(
        typeof window < 'u' ? window : typeof global < 'u' ? global : globalThis
    )
xA()
const rE = {
        estatePath: 'renderedEstates',
        adminPath: 'renderedAdmins',
        estateManagerPath: 'renderedEstateManagers',
        rolesAndPermPath: 'renderRolesAndPerm',
        additionalResidentPath: 'renderedAdditionalResidents',
        securityCompanyPath: 'renderedSecurityCompanies',
    },
    U8 = V8({
        name: 'routeChange',
        initialState: rE,
        reducers: {
            setEstatePath: (e, t) => {
                e.estatePath = t.payload
            },
            setAdminPath: (e, t) => {
                e.adminPath = t.payload
            },
            setEstateManagerPath: (e, t) => {
                e.estateManagerPath = t.payload
            },
            setRolesAndPermPath: (e, t) => {
                e.rolesAndPermPath = t.payload
            },
            setAdditionalResidentPath: (e, t) => {
                e.additionalResidentPath = t.payload
            },
            setSecurityCompanyPath: (e, t) => {
                e.securityCompanyPath = t.payload
            },
        },
    }),
    {
        setEstatePath: $0,
        setAdminPath: I0,
        setEstateManagerPath: R0,
        setRolesAndPermPath: noe,
        setAdditionalResidentPath: W8,
        setSecurityCompanyPath: aoe,
    } = U8.actions,
    Sf = (e) => e.routeChange,
    nE = U8.reducer
var H8 = { exports: {} },
    G8 = {}
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var _l = C.exports
function aE(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t)
}
var iE = typeof Object.is == 'function' ? Object.is : aE,
    lE = _l.useState,
    oE = _l.useEffect,
    sE = _l.useLayoutEffect,
    cE = _l.useDebugValue
function uE(e, t) {
    var r = t(),
        n = lE({ inst: { value: r, getSnapshot: t } }),
        a = n[0].inst,
        l = n[1]
    return (
        sE(
            function () {
                ;(a.value = r), (a.getSnapshot = t), ph(a) && l({ inst: a })
            },
            [e, r, t]
        ),
        oE(
            function () {
                return (
                    ph(a) && l({ inst: a }),
                    e(function () {
                        ph(a) && l({ inst: a })
                    })
                )
            },
            [e]
        ),
        cE(r),
        r
    )
}
function ph(e) {
    var t = e.getSnapshot
    e = e.value
    try {
        var r = t()
        return !iE(e, r)
    } catch {
        return !0
    }
}
function dE(e, t) {
    return t()
}
var fE =
    typeof window > 'u' ||
    typeof window.document > 'u' ||
    typeof window.document.createElement > 'u'
        ? dE
        : uE
G8.useSyncExternalStore =
    _l.useSyncExternalStore !== void 0 ? _l.useSyncExternalStore : fE
;(function (e) {
    e.exports = G8
})(H8)
var q8 = { exports: {} },
    K8 = {}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Cf = C.exports,
    pE = H8.exports
function hE(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t)
}
var mE = typeof Object.is == 'function' ? Object.is : hE,
    gE = pE.useSyncExternalStore,
    vE = Cf.useRef,
    yE = Cf.useEffect,
    bE = Cf.useMemo,
    xE = Cf.useDebugValue
K8.useSyncExternalStoreWithSelector = function (e, t, r, n, a) {
    var l = vE(null)
    if (l.current === null) {
        var o = { hasValue: !1, value: null }
        l.current = o
    } else o = l.current
    l = bE(
        function () {
            function c(v) {
                if (!u) {
                    if (
                        ((u = !0),
                        (f = v),
                        (v = n(v)),
                        a !== void 0 && o.hasValue)
                    ) {
                        var b = o.value
                        if (a(b, v)) return (p = b)
                    }
                    return (p = v)
                }
                if (((b = p), mE(f, v))) return b
                var h = n(v)
                return a !== void 0 && a(b, h) ? b : ((f = v), (p = h))
            }
            var u = !1,
                f,
                p,
                m = r === void 0 ? null : r
            return [
                function () {
                    return c(t())
                },
                m === null
                    ? void 0
                    : function () {
                          return c(m())
                      },
            ]
        },
        [t, r, n, a]
    )
    var s = gE(e, l[0], l[1])
    return (
        yE(
            function () {
                ;(o.hasValue = !0), (o.value = s)
            },
            [s]
        ),
        xE(s),
        s
    )
}
;(function (e) {
    e.exports = K8
})(q8)
function wE(e) {
    e()
}
let Y8 = wE
const NE = (e) => (Y8 = e),
    SE = () => Y8,
    Ia = C.exports.createContext(null)
function X8() {
    return C.exports.useContext(Ia)
}
const CE = () => {
    throw new Error('uSES not initialized!')
}
let Z8 = CE
const PE = (e) => {
        Z8 = e
    },
    _E = (e, t) => e === t
function AE(e = Ia) {
    const t = e === Ia ? X8 : () => C.exports.useContext(e)
    return function (n, a = _E) {
        const { store: l, subscription: o, getServerState: s } = t(),
            c = Z8(o.addNestedSub, l.getState, s || l.getState, n, a)
        return C.exports.useDebugValue(c), c
    }
}
const EE = AE()
var L0 = { exports: {} },
    Ve = {}
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Mt = typeof Symbol == 'function' && Symbol.for,
    j0 = Mt ? Symbol.for('react.element') : 60103,
    F0 = Mt ? Symbol.for('react.portal') : 60106,
    Pf = Mt ? Symbol.for('react.fragment') : 60107,
    _f = Mt ? Symbol.for('react.strict_mode') : 60108,
    Af = Mt ? Symbol.for('react.profiler') : 60114,
    Ef = Mt ? Symbol.for('react.provider') : 60109,
    kf = Mt ? Symbol.for('react.context') : 60110,
    B0 = Mt ? Symbol.for('react.async_mode') : 60111,
    Of = Mt ? Symbol.for('react.concurrent_mode') : 60111,
    Tf = Mt ? Symbol.for('react.forward_ref') : 60112,
    Mf = Mt ? Symbol.for('react.suspense') : 60113,
    kE = Mt ? Symbol.for('react.suspense_list') : 60120,
    Df = Mt ? Symbol.for('react.memo') : 60115,
    $f = Mt ? Symbol.for('react.lazy') : 60116,
    OE = Mt ? Symbol.for('react.block') : 60121,
    TE = Mt ? Symbol.for('react.fundamental') : 60117,
    ME = Mt ? Symbol.for('react.responder') : 60118,
    DE = Mt ? Symbol.for('react.scope') : 60119
function Or(e) {
    if (typeof e == 'object' && e !== null) {
        var t = e.$$typeof
        switch (t) {
            case j0:
                switch (((e = e.type), e)) {
                    case B0:
                    case Of:
                    case Pf:
                    case Af:
                    case _f:
                    case Mf:
                        return e
                    default:
                        switch (((e = e && e.$$typeof), e)) {
                            case kf:
                            case Tf:
                            case $f:
                            case Df:
                            case Ef:
                                return e
                            default:
                                return t
                        }
                }
            case F0:
                return t
        }
    }
}
function J8(e) {
    return Or(e) === Of
}
Ve.AsyncMode = B0
Ve.ConcurrentMode = Of
Ve.ContextConsumer = kf
Ve.ContextProvider = Ef
Ve.Element = j0
Ve.ForwardRef = Tf
Ve.Fragment = Pf
Ve.Lazy = $f
Ve.Memo = Df
Ve.Portal = F0
Ve.Profiler = Af
Ve.StrictMode = _f
Ve.Suspense = Mf
Ve.isAsyncMode = function (e) {
    return J8(e) || Or(e) === B0
}
Ve.isConcurrentMode = J8
Ve.isContextConsumer = function (e) {
    return Or(e) === kf
}
Ve.isContextProvider = function (e) {
    return Or(e) === Ef
}
Ve.isElement = function (e) {
    return typeof e == 'object' && e !== null && e.$$typeof === j0
}
Ve.isForwardRef = function (e) {
    return Or(e) === Tf
}
Ve.isFragment = function (e) {
    return Or(e) === Pf
}
Ve.isLazy = function (e) {
    return Or(e) === $f
}
Ve.isMemo = function (e) {
    return Or(e) === Df
}
Ve.isPortal = function (e) {
    return Or(e) === F0
}
Ve.isProfiler = function (e) {
    return Or(e) === Af
}
Ve.isStrictMode = function (e) {
    return Or(e) === _f
}
Ve.isSuspense = function (e) {
    return Or(e) === Mf
}
Ve.isValidElementType = function (e) {
    return (
        typeof e == 'string' ||
        typeof e == 'function' ||
        e === Pf ||
        e === Of ||
        e === Af ||
        e === _f ||
        e === Mf ||
        e === kE ||
        (typeof e == 'object' &&
            e !== null &&
            (e.$$typeof === $f ||
                e.$$typeof === Df ||
                e.$$typeof === Ef ||
                e.$$typeof === kf ||
                e.$$typeof === Tf ||
                e.$$typeof === TE ||
                e.$$typeof === ME ||
                e.$$typeof === DE ||
                e.$$typeof === OE))
    )
}
Ve.typeOf = Or
;(function (e) {
    e.exports = Ve
})(L0)
var Q8 = L0.exports,
    $E = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
    },
    IE = {
        $$typeof: !0,
        compare: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
        type: !0,
    },
    e3 = {}
e3[Q8.ForwardRef] = $E
e3[Q8.Memo] = IE
var RE = { exports: {} },
    Ue = {}
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var z0 = Symbol.for('react.element'),
    V0 = Symbol.for('react.portal'),
    If = Symbol.for('react.fragment'),
    Rf = Symbol.for('react.strict_mode'),
    Lf = Symbol.for('react.profiler'),
    jf = Symbol.for('react.provider'),
    Ff = Symbol.for('react.context'),
    LE = Symbol.for('react.server_context'),
    Bf = Symbol.for('react.forward_ref'),
    zf = Symbol.for('react.suspense'),
    Vf = Symbol.for('react.suspense_list'),
    Uf = Symbol.for('react.memo'),
    Wf = Symbol.for('react.lazy'),
    jE = Symbol.for('react.offscreen'),
    t3
t3 = Symbol.for('react.module.reference')
function Kr(e) {
    if (typeof e == 'object' && e !== null) {
        var t = e.$$typeof
        switch (t) {
            case z0:
                switch (((e = e.type), e)) {
                    case If:
                    case Lf:
                    case Rf:
                    case zf:
                    case Vf:
                        return e
                    default:
                        switch (((e = e && e.$$typeof), e)) {
                            case LE:
                            case Ff:
                            case Bf:
                            case Wf:
                            case Uf:
                            case jf:
                                return e
                            default:
                                return t
                        }
                }
            case V0:
                return t
        }
    }
}
Ue.ContextConsumer = Ff
Ue.ContextProvider = jf
Ue.Element = z0
Ue.ForwardRef = Bf
Ue.Fragment = If
Ue.Lazy = Wf
Ue.Memo = Uf
Ue.Portal = V0
Ue.Profiler = Lf
Ue.StrictMode = Rf
Ue.Suspense = zf
Ue.SuspenseList = Vf
Ue.isAsyncMode = function () {
    return !1
}
Ue.isConcurrentMode = function () {
    return !1
}
Ue.isContextConsumer = function (e) {
    return Kr(e) === Ff
}
Ue.isContextProvider = function (e) {
    return Kr(e) === jf
}
Ue.isElement = function (e) {
    return typeof e == 'object' && e !== null && e.$$typeof === z0
}
Ue.isForwardRef = function (e) {
    return Kr(e) === Bf
}
Ue.isFragment = function (e) {
    return Kr(e) === If
}
Ue.isLazy = function (e) {
    return Kr(e) === Wf
}
Ue.isMemo = function (e) {
    return Kr(e) === Uf
}
Ue.isPortal = function (e) {
    return Kr(e) === V0
}
Ue.isProfiler = function (e) {
    return Kr(e) === Lf
}
Ue.isStrictMode = function (e) {
    return Kr(e) === Rf
}
Ue.isSuspense = function (e) {
    return Kr(e) === zf
}
Ue.isSuspenseList = function (e) {
    return Kr(e) === Vf
}
Ue.isValidElementType = function (e) {
    return (
        typeof e == 'string' ||
        typeof e == 'function' ||
        e === If ||
        e === Lf ||
        e === Rf ||
        e === zf ||
        e === Vf ||
        e === jE ||
        (typeof e == 'object' &&
            e !== null &&
            (e.$$typeof === Wf ||
                e.$$typeof === Uf ||
                e.$$typeof === jf ||
                e.$$typeof === Ff ||
                e.$$typeof === Bf ||
                e.$$typeof === t3 ||
                e.getModuleId !== void 0))
    )
}
Ue.typeOf = Kr
;(function (e) {
    e.exports = Ue
})(RE)
function FE() {
    const e = SE()
    let t = null,
        r = null
    return {
        clear() {
            ;(t = null), (r = null)
        },
        notify() {
            e(() => {
                let n = t
                for (; n; ) n.callback(), (n = n.next)
            })
        },
        get() {
            let n = [],
                a = t
            for (; a; ) n.push(a), (a = a.next)
            return n
        },
        subscribe(n) {
            let a = !0,
                l = (r = { callback: n, next: null, prev: r })
            return (
                l.prev ? (l.prev.next = l) : (t = l),
                function () {
                    !a ||
                        t === null ||
                        ((a = !1),
                        l.next ? (l.next.prev = l.prev) : (r = l.prev),
                        l.prev ? (l.prev.next = l.next) : (t = l.next))
                }
            )
        },
    }
}
const Hb = { notify() {}, get: () => [] }
function BE(e, t) {
    let r,
        n = Hb
    function a(p) {
        return c(), n.subscribe(p)
    }
    function l() {
        n.notify()
    }
    function o() {
        f.onStateChange && f.onStateChange()
    }
    function s() {
        return Boolean(r)
    }
    function c() {
        r || ((r = t ? t.addNestedSub(o) : e.subscribe(o)), (n = FE()))
    }
    function u() {
        r && (r(), (r = void 0), n.clear(), (n = Hb))
    }
    const f = {
        addNestedSub: a,
        notifyNestedSubs: l,
        handleChangeWrapper: o,
        isSubscribed: s,
        trySubscribe: c,
        tryUnsubscribe: u,
        getListeners: () => n,
    }
    return f
}
const zE =
        typeof window < 'u' &&
        typeof window.document < 'u' &&
        typeof window.document.createElement < 'u',
    VE = zE ? C.exports.useLayoutEffect : C.exports.useEffect
function UE({ store: e, context: t, children: r, serverState: n }) {
    const a = C.exports.useMemo(() => {
            const s = BE(e)
            return {
                store: e,
                subscription: s,
                getServerState: n ? () => n : void 0,
            }
        }, [e, n]),
        l = C.exports.useMemo(() => e.getState(), [e])
    return (
        VE(() => {
            const { subscription: s } = a
            return (
                (s.onStateChange = s.notifyNestedSubs),
                s.trySubscribe(),
                l !== e.getState() && s.notifyNestedSubs(),
                () => {
                    s.tryUnsubscribe(), (s.onStateChange = void 0)
                }
            )
        }, [a, l]),
        i((t || Ia).Provider, { value: a, children: r })
    )
}
function r3(e = Ia) {
    const t = e === Ia ? X8 : () => C.exports.useContext(e)
    return function () {
        const { store: n } = t()
        return n
    }
}
const WE = r3()
function HE(e = Ia) {
    const t = e === Ia ? WE : r3(e)
    return function () {
        return t().dispatch
    }
}
const GE = HE()
PE(q8.exports.useSyncExternalStoreWithSelector)
NE(_1.exports.unstable_batchedUpdates)
const _n = GE,
    Hf = EE,
    qE = [
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
    ]
function KE() {
    const e = _n(),
        [t, r] = C.exports.useState([])
    return (
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    r(qE)
                }, 1e3)
            })()
        }, []),
        i('div', {
            className: 'renderedEstateManagers',
            children: d('table', {
                className: 'renderedEstateManagers__tableBox',
                children: [
                    d('caption', {
                        className: 'renderedEstateManagers__caption',
                        children: [
                            d('p', {
                                className: 'caption__title',
                                children: [
                                    'EstateManager List ',
                                    i('span', { children: '(200)' }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__searchBox',
                                children: [
                                    i('img', {
                                        src: '/icons/estateManagers/search.svg',
                                        alt: '',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__select',
                                children: [
                                    d('select', {
                                        children: [
                                            i('option', {
                                                hidden: !0,
                                                value: '',
                                                children: 'Sort By',
                                            }),
                                            i('option', {
                                                value: 'date',
                                                children: 'date',
                                            }),
                                            i('option', {
                                                value: 'alpha',
                                                children: 'Alpha',
                                            }),
                                        ],
                                    }),
                                    i(le, {}),
                                ],
                            }),
                            d('button', {
                                className: 'btn estateManagers__btn',
                                onClick: () => {
                                    e(R0('addEstateManager'))
                                },
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    i('p', { children: 'Add EstateManager' }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'renderedEstateManagers__table',
                        children: [
                            i('thead', {
                                className:
                                    'renderedEstateManagers__table--head',
                                children: d('tr', {
                                    children: [
                                        d('th', {
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                }),
                                                i('p', { children: 'Name' }),
                                            ],
                                        }),
                                        i('th', { children: 'Gender' }),
                                        i('th', { children: 'Phone Number' }),
                                        i('th', { children: 'Joined' }),
                                        i('th', { children: 'Status' }),
                                        i('th', { children: 'Actions' }),
                                    ],
                                }),
                            }),
                            i('tbody', {
                                className:
                                    'renderedEstateManagers__table--body',
                                children:
                                    t && t.length > 0
                                        ? t.map((a, l) =>
                                              d(
                                                  'tr',
                                                  {
                                                      children: [
                                                          d('td', {
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                  }),
                                                                  i('img', {
                                                                      src: '/img/me.jpeg',
                                                                      alt: '',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          a.name,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.gender,
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.phoneNumber,
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.onboardingDate,
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.status,
                                                          }),
                                                          i('td', {
                                                              children: i(
                                                                  'button',
                                                                  {
                                                                      children:
                                                                          i(
                                                                              'img',
                                                                              {
                                                                                  src: '/icons/admins/threeDots.svg',
                                                                                  alt: '',
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                                      ],
                                                  },
                                                  l
                                              )
                                          )
                                        : i('tr', {
                                              children: i('td', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className: 'renderedEstateManagers__footer',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    d('div', {
                                        className:
                                            'flex items-center border px-4 rounded-lg',
                                        children: [
                                            i('input', {
                                                type: 'number',
                                                className:
                                                    'w-8 outline-none border-none cursor-pointer',
                                                value: 6,
                                            }),
                                            i(le, {
                                                className: 'text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {}),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '1',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '2',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '3',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '4',
                                    }),
                                    i(Ee, {}),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    )
}
function YE() {
    const e = _n(),
        { estateManagerPath: t } = Hf(Sf),
        [r, n] = C.exports.useState(!1)
    return i('div', {
        className: 'estateManagers',
        children: i('div', {
            className: 'estateManagers__container',
            children: r
                ? i('section', {
                      children: ((o) => {
                          switch (o) {
                              case 'renderedEstateManagers':
                                  return i(KE, {})
                              case 'addEstateManager':
                                  return i(kb, {})
                              default:
                                  return i(kb, {})
                          }
                      })(t),
                  })
                : d('section', {
                      className: 'estateManagers__wrapper',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any EstateManager yet',
                          }),
                          d('button', {
                              className: 'btn estateManagers__btn',
                              onClick: () => {
                                  n(!0), e(R0('renderedEstateManagers'))
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add EstateManager',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const Gb = () => {
    const e = C.exports.useContext(Ha),
        { handleOpen: t } = e,
        [r, n] = C.exports.useState('')
    return i('div', {
        className: 'addEstate',
        children: d('form', {
            onSubmit: (o) => {
                o.preventDefault(), t('renderedEstates')
            },
            className: 'addEstate__formBox',
            children: [
                d('section', {
                    className: 'addEstate__box',
                    children: [
                        i('p', {
                            className: 'addEstate__heading',
                            children: 'Estate Details',
                        }),
                        d('div', {
                            className: 'addEstate__form',
                            children: [
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'firstName',
                                            children: 'Estate Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'firstName',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'lastName',
                                            children: 'State *',
                                        }),
                                        d('div', {
                                            className: 'item__select',
                                            children: [
                                                d('select', {
                                                    id: 'state',
                                                    children: [
                                                        i('option', {
                                                            hidden: !0,
                                                            children: '\xA0',
                                                        }),
                                                        i('option', {
                                                            value: 'lagos',
                                                            children: 'Lagos',
                                                        }),
                                                        i('option', {
                                                            value: 'FCT',
                                                            children: 'FCT',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {}),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'addEstate__form--item col-span-full',
                                    children: [
                                        i('label', {
                                            htmlFor: 'address',
                                            children: 'Address *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            id: 'address',
                                            required: !0,
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'estateManager',
                                            children: 'Estate Manager *',
                                        }),
                                        d('div', {
                                            className: 'item__select',
                                            children: [
                                                d('select', {
                                                    id: 'estateManager',
                                                    children: [
                                                        i('option', {
                                                            hidden: !0,
                                                            children: '\xA0',
                                                        }),
                                                        i('option', {
                                                            value: 'manager',
                                                            children:
                                                                'Manager1',
                                                        }),
                                                        i('option', {
                                                            value: 'manager2',
                                                            children:
                                                                'Manager2',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {}),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'securityCompaany',
                                            children: 'Security Company *',
                                        }),
                                        d('div', {
                                            className: 'item__select',
                                            children: [
                                                d('select', {
                                                    id: 'securityCompaany',
                                                    children: [
                                                        i('option', {
                                                            hidden: !0,
                                                            children: '\xA0',
                                                        }),
                                                        i('option', {
                                                            value: 'company',
                                                            children:
                                                                'Company1',
                                                        }),
                                                        i('option', {
                                                            value: 'company2',
                                                            children:
                                                                'Company2',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {}),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
                d('section', {
                    className: 'addEstate__box',
                    children: [
                        i('p', {
                            className: 'addEstate__heading',
                            children: 'Estate Convenience Fees',
                        }),
                        d('div', {
                            className: 'addEstate__form',
                            children: [
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'firstName',
                                            children: 'Estate(%)',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'estatePercentage',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'lastName',
                                            children: 'SESA(%)',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'sesaPercentage',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'date',
                                            children: 'Number of Resident User',
                                        }),
                                        i('input', {
                                            type: 'number',
                                            id: 'residentUsersNo',
                                            required: !0,
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'additionalResidentUser',
                                            children:
                                                'Additional Resident User',
                                        }),
                                        i('input', {
                                            required: !0,
                                            type: 'text',
                                            id: 'additionalResidentUser',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'signOutRequired',
                                            children: 'Sign Out Required',
                                        }),
                                        d('div', {
                                            className: 'item__select',
                                            style: { width: '10rem' },
                                            children: [
                                                d('select', {
                                                    id: 'signOutRequired',
                                                    children: [
                                                        i('option', {
                                                            value: 'yes',
                                                            children: 'Yes',
                                                        }),
                                                        i('option', {
                                                            value: 'no',
                                                            children: 'No',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {}),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--file',
                                    children: [
                                        d('label', {
                                            htmlFor: 'photoUpload',
                                            children: [
                                                i('img', {
                                                    src: '/icons/addEstates/photo_library.svg',
                                                    alt: '',
                                                }),
                                                d('p', {
                                                    children: [
                                                        'Drag addEstate manager picture here or',
                                                        ' ',
                                                        i('span', {
                                                            children: 'click',
                                                        }),
                                                        ' to upload',
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i('input', {
                                            type: 'file',
                                            name: 'photoUpload',
                                            id: 'photoUpload',
                                            accept: 'image/*',
                                            className: 'hidden',
                                            onClick: async (o) => {
                                                const s = await kr(
                                                    '#photoUpload'
                                                )
                                                n(s)
                                            },
                                        }),
                                        r &&
                                            i('div', {
                                                className: 'file__uploadImgBox',
                                                children: i('img', {
                                                    src: r,
                                                    alt: 'photoPreview',
                                                    className: 'object-contain',
                                                }),
                                            }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
                d('section', {
                    className: 'addEstate__box',
                    children: [
                        i('p', {
                            className: 'addEstate__heading',
                            children: 'Estate Account Details',
                        }),
                        d('div', {
                            className: 'addEstate__form',
                            children: [
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'bankName',
                                            children: 'Bank Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'bankName',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'accountName',
                                            children: 'Account Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'accountName',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'addEstate__form--item',
                                    children: [
                                        i('label', {
                                            htmlFor: 'accountNumber',
                                            children: 'Account Number *',
                                        }),
                                        i('input', {
                                            type: 'number',
                                            id: 'accountNumber',
                                            required: !0,
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
                d('button', {
                    className: 'btn addEstate__btn',
                    style: { justifySelf: 'start' },
                    children: [
                        i('span', { children: i($e, {}) }),
                        ' ',
                        'Add AddEstate',
                    ],
                }),
            ],
        }),
    })
}
function n3(e) {
    return nt({
        tag: 'svg',
        attr: {
            viewBox: '0 0 24 24',
            strokeWidth: '2',
            stroke: 'currentColor',
            fill: 'none',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
        },
        child: [
            { tag: 'desc', attr: {}, child: [] },
            {
                tag: 'path',
                attr: { stroke: 'none', d: 'M0 0h24v24H0z', fill: 'none' },
            },
            {
                tag: 'rect',
                attr: { x: '8', y: '8', width: '12', height: '12', rx: '2' },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2',
                },
            },
        ],
    })(e)
}
function U0(e) {
    return nt({
        tag: 'svg',
        attr: {
            viewBox: '0 0 24 24',
            strokeWidth: '2',
            stroke: 'currentColor',
            fill: 'none',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
        },
        child: [
            { tag: 'desc', attr: {}, child: [] },
            {
                tag: 'path',
                attr: { stroke: 'none', d: 'M0 0h24v24H0z', fill: 'none' },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M7 18v-10.948a1.05 1.05 0 0 1 1.968 -.51l6.064 10.916a1.05 1.05 0 0 0 1.968 -.51v-10.948',
                },
            },
            { tag: 'path', attr: { d: 'M5 10h14' } },
            { tag: 'path', attr: { d: 'M5 14h14' } },
        ],
    })(e)
}
const XE = [
    {
        id: '1',
        img: '/img/img1.png',
        details: {
            estateName: 'Iba Housing Estate',
            securityCompany: 'Proton',
            status: 'Active',
            estateBalance: 5e3,
            NoOfResidents: 3400,
            signOutRequired: !0,
            estateManager: 'Sladin Ama',
            NoOfHouseholds: 45,
        },
    },
    {
        id: '2',
        img: '/img/img2.png',
        details: {
            estateName: 'Iba Housing Estate',
            securityCompany: 'Proton',
            status: 'Active',
            estateBalance: 5e3,
            NoOfResidents: 3400,
            signOutRequired: !0,
            estateManager: 'Sladin Ama',
            NoOfHouseholds: 45,
        },
    },
    {
        id: '3',
        img: '/img/img3.png',
        details: {
            estateName: 'Iba Housing Estate',
            securityCompany: 'Proton',
            status: 'Active',
            estateBalance: 5e3,
            NoOfResidents: 3400,
            signOutRequired: !0,
            estateManager: 'Sladin Ama',
            NoOfHouseholds: 45,
        },
    },
]
function ZE() {
    const e = _n(),
        [t, r] = C.exports.useState([])
    return (
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    r(XE)
                }, 1e3)
            })()
        }, []),
        i('div', {
            className: 'renderedEstates',
            children: d('table', {
                className: 'renderedEstates__tableBox',
                children: [
                    d('caption', {
                        className: 'renderedEstates__caption',
                        children: [
                            d('p', {
                                className: 'caption__title',
                                children: [
                                    'Estate List ',
                                    i('span', { children: '(202)' }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__searchBox',
                                children: [
                                    i('img', {
                                        src: '/icons/estates/search.svg',
                                        alt: '',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__select',
                                children: [
                                    d('select', {
                                        children: [
                                            i('option', {
                                                hidden: !0,
                                                value: '',
                                                children: 'Category',
                                            }),
                                            i('option', {
                                                value: 'date',
                                                children: 'date',
                                            }),
                                            i('option', {
                                                value: 'alpha',
                                                children: 'Alpha',
                                            }),
                                        ],
                                    }),
                                    i(le, {}),
                                ],
                            }),
                            d('button', {
                                className: 'btn addEstate__btn',
                                onClick: () => {
                                    e($0('addEstate'))
                                },
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    i('p', { children: 'Add Estate' }),
                                ],
                            }),
                        ],
                    }),
                    i('div', {
                        className: 'renderedEstates__table',
                        children: i('tbody', {
                            className: 'renderedEstates__table--body',
                            children:
                                t && t.length > 0
                                    ? K.Children.toArray(
                                          t.map(
                                              ({
                                                  img: a,
                                                  id: l,
                                                  details: {
                                                      estateBalance: o,
                                                      estateManager: s,
                                                      estateName: c,
                                                      NoOfHouseholds: u,
                                                      NoOfResidents: f,
                                                      securityCompany: p,
                                                      signOutRequired: m,
                                                      status: v,
                                                  },
                                              }) =>
                                                  i(ye, {
                                                      to: `/superAdmin/estates/detail/:${l}`,
                                                      children: d('tr', {
                                                          className: 'w-full',
                                                          children: [
                                                              i('td', {
                                                                  children: i(
                                                                      'img',
                                                                      {
                                                                          src: a,
                                                                          alt: '',
                                                                          className:
                                                                              'table__img',
                                                                      }
                                                                  ),
                                                              }),
                                                              d('td', {
                                                                  children: [
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[1.4rem] text-[#043FA7]',
                                                                                          children:
                                                                                              'Estate\xA0Name',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'font-[1.6rem] whitespace-nowrap',
                                                                                          children:
                                                                                              c,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              'Security Company',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              p,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              'Status',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#1D9F5F]',
                                                                                          children:
                                                                                              v,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                  ],
                                                              }),
                                                              d('td', {
                                                                  children: [
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              'Estate Balance',
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      U0,
                                                                                                      {
                                                                                                          className:
                                                                                                              'text-[2rem]',
                                                                                                      }
                                                                                                  ),
                                                                                                  o,
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              'No of Residents',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              f,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              'Sign Out Required',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              m
                                                                                                  ? 'Yes'
                                                                                                  : 'No',
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                  ],
                                                              }),
                                                              d('td', {
                                                                  className:
                                                                      ' grid content-start',
                                                                  children: [
                                                                      d('div', {
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              'Estate Manager',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              s,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      d('div', {
                                                                          className:
                                                                              ' mt-10',
                                                                          children:
                                                                              [
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[#043FA7]',
                                                                                          children:
                                                                                              [
                                                                                                  ' ',
                                                                                                  'No of Households',
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              u,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                  ],
                                                              }),
                                                              i('td', {
                                                                  className:
                                                                      'flex items-start content-start mr-4',
                                                                  style: {
                                                                      width: '1rem',
                                                                  },
                                                                  children: i(
                                                                      'button',
                                                                      {
                                                                          children:
                                                                              i(
                                                                                  M8,
                                                                                  {
                                                                                      className:
                                                                                          'text-[2rem]',
                                                                                  }
                                                                              ),
                                                                      }
                                                                  ),
                                                              }),
                                                          ],
                                                      }),
                                                  })
                                          )
                                      )
                                    : i('tr', {
                                          children: i('td', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    }),
                    d('footer', {
                        className: 'renderedEstates__footer',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    d('div', {
                                        className:
                                            'flex items-center border px-4 rounded-lg',
                                        children: [
                                            i('input', {
                                                type: 'number',
                                                className:
                                                    'w-8 outline-none border-none cursor-pointer',
                                                value: 6,
                                            }),
                                            i(le, {
                                                className: 'text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {}),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '1',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '2',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '3',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '4',
                                    }),
                                    i(Ee, {}),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    )
}
function JE() {
    const e = _n(),
        { estatePath: t } = Hf(Sf),
        [r, n] = C.exports.useState(!1)
    return i('div', {
        className: 'estates',
        children: i('div', {
            className: 'estates__container',
            children: r
                ? i('section', {
                      children: ((o) => {
                          switch (o) {
                              case 'renderedEstates':
                                  return i(ZE, {})
                              case 'addEstate':
                                  return i(Gb, {})
                              default:
                                  return i(Gb, {})
                          }
                      })(t),
                  })
                : d('section', {
                      className: 'estates__wrapper bg-white',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any Estate yet',
                          }),
                          d('button', {
                              className: 'btn addEstate__btn',
                              onClick: () => {
                                  n(!0), e($0('renderedEstates'))
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Estate',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const QE = [
    { id: '1', name: 'Jacintha Sage', role: 'admin' },
    { id: '2', name: 'Jacintha Sage', role: 'estate Manager' },
    { id: '3', name: 'Jacintha Sage', role: 'security Company' },
    { id: '4', name: 'Jacintha Sage', role: 'security Company' },
    { id: '5', name: 'Jacintha Sage', role: 'Admin' },
]
function ek() {
    const e = C.exports.useRef(null),
        [t, r] = C.exports.useState(new Array(10).fill('')),
        [n, a] = C.exports.useState([
            'admin',
            'estate Manager',
            'security Company',
            'security Guard',
            'resident',
        ]),
        [l, o] = C.exports.useState(null),
        [s, c] = C.exports.useState({ isDropDownOpen: !1, index: null }),
        [u, f] = C.exports.useState([])
    C.exports.useEffect(() => {
        ;(async () => {
            setTimeout(() => {
                f(QE)
            }, 1e3)
        })()
    }, [])
    const p = (h, g) => {
            console.log('clicked'),
                c((x) => ({ isDropDownOpen: h.target.checked, index: g }))
        },
        m = (h, g, x) => {
            console.log('select role'), o((w) => ({ ...w, [x]: g }))
        },
        v = () => {
            var h
            ;(h = e.current) == null || h.showModal()
        },
        b = () => {
            var h
            ;(h = e.current) == null || h.close()
        }
    return d('div', {
        className: 'renderedEstateManagers',
        children: [
            i('dialog', {
                ref: e,
                className: 'dialog',
                children: i('section', {
                    className: 'grid place-content-center w-full h-[100vh]',
                    children: d('div', {
                        className:
                            'bg-white rounded-2xl grid  w-[64rem] h-[60rem] gap-8 py-8 px-10 items-center',
                        children: [
                            i('div', {
                                className: 'border-b',
                                children: i('p', {
                                    className: 'text-[1.6rem] font-semibold',
                                    children: 'Permissions List',
                                }),
                            }),
                            i('div', {
                                className: 'my-10 grid gap-4 h-full',
                                children: K.Children.toArray(
                                    t.map((h, g) =>
                                        d(
                                            'div',
                                            {
                                                className:
                                                    'flex items-center gap-4 ',
                                                children: [
                                                    i('input', {
                                                        type: 'checkbox',
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    d('p', {
                                                        className:
                                                            'text-[1.6rem]',
                                                        children: [
                                                            'Permission ',
                                                            g + 1,
                                                        ],
                                                    }),
                                                ],
                                            },
                                            g
                                        )
                                    )
                                ),
                            }),
                            d('button', {
                                className:
                                    'bg-color-blue-1 px-12 py-4 text-white text-[1.4rem] flex items-center justify-self-start rounded-lg gap-4 self-center',
                                onClick: b,
                                children: [
                                    i('img', {
                                        src: '/icons/admins/saveDisk.svg',
                                        alt: '',
                                    }),
                                    i('span', { children: 'Save Changes' }),
                                ],
                            }),
                        ],
                    }),
                }),
            }),
            d('table', {
                className: 'renderedEstateManagers__tableBox',
                children: [
                    d('caption', {
                        className:
                            'renderedEstateManagers__caption justify-baseline',
                        children: [
                            d('p', {
                                className: 'caption__title',
                                children: [
                                    'Role List ',
                                    i('span', { children: '(200)' }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__searchBox',
                                children: [
                                    i('img', {
                                        src: '/icons/estateManagers/search.svg',
                                        alt: '',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__select',
                                children: [
                                    d('select', {
                                        children: [
                                            i('option', {
                                                hidden: !0,
                                                value: '',
                                                children: 'Sort By',
                                            }),
                                            i('option', {
                                                value: 'date',
                                                children: 'date',
                                            }),
                                            i('option', {
                                                value: 'alpha',
                                                children: 'Alpha',
                                            }),
                                        ],
                                    }),
                                    i(le, {}),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'renderedEstateManagers__table',
                        children: [
                            i('thead', {
                                className:
                                    'renderedEstateManagers__table--head',
                                children: d('tr', {
                                    children: [
                                        d('th', {
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                }),
                                                i('p', { children: 'Name' }),
                                            ],
                                        }),
                                        i('th', { children: 'Roles' }),
                                        i('th', { children: 'Actions' }),
                                    ],
                                }),
                            }),
                            i('tbody', {
                                className:
                                    'renderedEstateManagers__table--body',
                                children:
                                    u && u.length > 0
                                        ? K.Children.toArray(
                                              u.map((h, g) => {
                                                  const {
                                                      isDropDownOpen: x,
                                                      index: w,
                                                  } = s
                                                  return d(
                                                      'tr',
                                                      {
                                                          className: 'relative',
                                                          children: [
                                                              d('td', {
                                                                  children: [
                                                                      i(
                                                                          'input',
                                                                          {
                                                                              type: 'checkbox',
                                                                          }
                                                                      ),
                                                                      i('img', {
                                                                          src: '/img/me.jpeg',
                                                                          alt: '',
                                                                      }),
                                                                      i(
                                                                          'span',
                                                                          {
                                                                              children:
                                                                                  h.name,
                                                                          }
                                                                      ),
                                                                  ],
                                                              }),
                                                              d('td', {
                                                                  children: [
                                                                      d(
                                                                          'label',
                                                                          {
                                                                              className:
                                                                                  'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                              htmlFor:
                                                                                  g.toString(),
                                                                              onClick:
                                                                                  () =>
                                                                                      c(
                                                                                          (
                                                                                              y
                                                                                          ) => ({
                                                                                              isDropDownOpen:
                                                                                                  !y.isDropDownOpen,
                                                                                              index: g,
                                                                                          })
                                                                                      ),
                                                                              children:
                                                                                  [
                                                                                      l &&
                                                                                      l[
                                                                                          g
                                                                                      ]
                                                                                          ? l[
                                                                                                g
                                                                                            ]
                                                                                          : i(
                                                                                                'span',
                                                                                                {
                                                                                                    className:
                                                                                                        'text-color-primary',
                                                                                                    children:
                                                                                                        'Select Role',
                                                                                                }
                                                                                            ),
                                                                                      x &&
                                                                                      w ===
                                                                                          g
                                                                                          ? i(
                                                                                                dt,
                                                                                                {
                                                                                                    className:
                                                                                                        'w-[1rem] h-[1rem]',
                                                                                                }
                                                                                            )
                                                                                          : i(
                                                                                                le,
                                                                                                {
                                                                                                    className:
                                                                                                        'w-[1rem] h-[1rem]',
                                                                                                }
                                                                                            ),
                                                                                  ],
                                                                          }
                                                                      ),
                                                                      i(
                                                                          'input',
                                                                          {
                                                                              type: 'radio',
                                                                              name: 'dropdown',
                                                                              className:
                                                                                  'hidden',
                                                                              id: g.toString(),
                                                                              onChange:
                                                                                  (
                                                                                      y
                                                                                  ) =>
                                                                                      p(
                                                                                          y,
                                                                                          g
                                                                                      ),
                                                                          }
                                                                      ),
                                                                      x &&
                                                                          w ===
                                                                              g &&
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'absolute top-[5rem] translate-x-[6rem] border border-color-primary-light w-[24rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                  children:
                                                                                      n.map(
                                                                                          (
                                                                                              y,
                                                                                              N
                                                                                          ) =>
                                                                                              i(
                                                                                                  'p',
                                                                                                  {
                                                                                                      className:
                                                                                                          'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                      onClick:
                                                                                                          (
                                                                                                              S
                                                                                                          ) =>
                                                                                                              m(
                                                                                                                  S,
                                                                                                                  y,
                                                                                                                  g
                                                                                                              ),
                                                                                                      children:
                                                                                                          y,
                                                                                                  },
                                                                                                  N +
                                                                                                      g
                                                                                              )
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  ],
                                                              }),
                                                              i('td', {
                                                                  children: i(
                                                                      'button',
                                                                      {
                                                                          className:
                                                                              'text-[#098DFF]',
                                                                          onClick:
                                                                              v,
                                                                          children:
                                                                              'Edit Permissions',
                                                                      }
                                                                  ),
                                                              }),
                                                          ],
                                                      },
                                                      g
                                                  )
                                              })
                                          )
                                        : i('tr', {
                                              children: i('td', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className: 'renderedEstateManagers__footer',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    d('div', {
                                        className:
                                            'flex items-center border px-4 rounded-lg',
                                        children: [
                                            i('input', {
                                                type: 'text',
                                                className:
                                                    'w-8 outline-none border-none cursor-pointer',
                                                value: 6,
                                            }),
                                            i(le, {
                                                className: 'text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {}),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '1',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '2',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '3',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '4',
                                    }),
                                    i(Ee, {}),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        ],
    })
}
function tk() {
    const [e, t] = C.exports.useState(!1)
    return i('div', {
        className: 'estateManagers',
        children: i('div', {
            className: 'estateManagers__container',
            children: e
                ? i('section', { children: i(ek, {}) })
                : d('section', {
                      className: 'estateManagers__wrapper',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any users to enroll yet',
                          }),
                          d('button', {
                              className: 'btn estateManagers__btn',
                              onClick: () => {
                                  t(!0)
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'View Users',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const rk = () => {
        const [e, t] = C.exports.useState([
                'package 1',
                'package 2',
                'package 3',
                'package 4',
            ]),
            [r, n] = C.exports.useState([
                'monthly',
                'weekly',
                'quarterly',
                'yearly',
            ]),
            [a, l] = C.exports.useState(!1),
            [o, s] = C.exports.useState('package 1'),
            [c, u] = C.exports.useState(!1),
            [f, p] = C.exports.useState('monthly'),
            m = () => l(!a),
            v = (g) => {
                s(g), l(!1)
            },
            b = () => u(!c),
            h = (g) => {
                p(g), u(!1)
            }
        return i('div', {
            className: ' p-8 bg-white h-[70vh] rounded-lg overflow-y-scroll',
            children: d('section', {
                className: 'grid max-w-[65vw] gap-16',
                style: {
                    gridTemplateColumns: 'repeat(auto-fit, minmax(40rem, 1fr))',
                },
                children: [
                    d('div', {
                        className: 'relative self-end grid gap-4',
                        children: [
                            i('p', {
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Name of Package',
                            }),
                            i('p', {
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                onClick: m,
                                children: o,
                            }),
                            a &&
                                i('div', {
                                    className:
                                        'absolute top-[8rem]  left-0 border border-color-primary-light w-[24rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                    children: e.map((g, x) =>
                                        i(
                                            'p',
                                            {
                                                className:
                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                onClick: () => v(g),
                                                children: g,
                                            },
                                            x
                                        )
                                    ),
                                }),
                        ],
                    }),
                    d('div', {
                        className: 'relative self-end grid gap-4',
                        children: [
                            i('p', {
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Frequency',
                            }),
                            i('p', {
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                onClick: b,
                                children: f,
                            }),
                            c &&
                                i('div', {
                                    className:
                                        'absolute top-[8rem]  left-0 border border-color-primary-light w-[24rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                    children: r.map((g, x) =>
                                        i(
                                            'p',
                                            {
                                                className:
                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                onClick: () => h(g),
                                                children: g,
                                            },
                                            x
                                        )
                                    ),
                                }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'packageName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'amount',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'userName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Details',
                            }),
                            i('input', {
                                type: 'text',
                                required: !0,
                                id: 'userName',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'startDate',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Discount',
                            }),
                            i('input', {
                                type: 'text',
                                required: !0,
                                id: 'discount',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                            }),
                        ],
                    }),
                ],
            }),
        })
    },
    nk = ({ fetchedResidentUserHistory: e }) => {
        const t = Me(),
            [r, n] = C.exports.useState(['View Details', 'Deactivate']),
            [a, l] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            o = (M, A) => {
                l(() => ({ isDropDownOpen: M.target.checked, index: A }))
            },
            s = (M, A) => {
                A === 'View Details' && t('/superAdmin/additional-resident/:Id')
            },
            c = ['A-Z', 'date'],
            [u, f] = C.exports.useState(!1),
            [p, m] = C.exports.useState({ arr: [2, 4, 6, 8] }),
            [v, b] = C.exports.useState('A-Z'),
            [h, g] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: 2,
                totalPage: Math.ceil(e.length / 2),
                slicedPages: null,
            }),
            x = () => f(!u),
            w = (M) => {
                b(M), f(!1)
            },
            y = (M) => {
                const A = parseInt(M.target.value),
                    _ = []
                for (let O = 0; O < e.length; O += A) _.push(e.slice(O, O + A))
                g((O) => ({
                    ...O,
                    itemsPerPage: A,
                    index: 0,
                    currentPage: 1,
                    slicedPages: _,
                    totalPage: Math.ceil(e.length / A),
                }))
            }
        C.exports.useEffect(() => {
            console.log({ slicedPages: E })
        }, [h.slicedPages]),
            C.exports.useEffect(() => {
                const M = []
                for (let A = 0; A < e.length; A += h.itemsPerPage)
                    M.push(e.slice(A, A + h.itemsPerPage))
                g((A) => ({ ...A, slicedPages: M }))
            }, [e])
        const N = () => {
                h.currentPage !== h.totalPage &&
                    g((M) => ({
                        ...M,
                        index: M.index + 1,
                        currentPage: M.currentPage + 1,
                    }))
            },
            S = () => {
                h.currentPage !== 1 &&
                    g((M) => ({
                        ...M,
                        index: M.index - 1,
                        currentPage: M.currentPage - 1,
                    }))
            },
            { currentPage: P, slicedPages: E } = h,
            k = (M, A) => {
                console.log({ index: A }),
                    g((_) => ({ ..._, index: A, currentPage: A + 1 }))
            }
        return d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('div', {
                    className:
                        'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        d('p', {
                            className: ' font-bold',
                            children: [
                                'Resident User History ',
                                i('span', { children: '(10)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className:
                                'relative flex items-center w-[10rem] justify-items-start cursor-pointer',
                            children: [
                                i('p', {
                                    className:
                                        'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                    onClick: x,
                                    children: v,
                                }),
                                u &&
                                    i('div', {
                                        className:
                                            'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                        children: c.map((M, A) =>
                                            i(
                                                'p',
                                                {
                                                    className:
                                                        'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                    onClick: () => w(M),
                                                    children: M,
                                                },
                                                A
                                            )
                                        ),
                                    }),
                                u
                                    ? i(dt, {
                                          className:
                                              'absolute right-4 text-[1.3rem]',
                                      })
                                    : i(le, {
                                          className:
                                              'absolute right-4 text-[1.3rem]',
                                      }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid',
                    children: [
                        d('div', {
                            className:
                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-9 gap-8',
                            style: { fontSize: '1.4rem' },
                            children: [
                                d('p', {
                                    className: 'flex items-center gap-2',
                                    children: [
                                        i('input', {
                                            type: 'checkbox',
                                            className: 'cursor-pointer',
                                        }),
                                        i('p', { children: 'Package Name' }),
                                    ],
                                }),
                                i('p', { children: 'User Name' }),
                                i('p', { children: 'Frequency' }),
                                i('p', { children: 'Amount' }),
                                i('p', { children: 'Start Date' }),
                                i('p', { children: 'End Date' }),
                                i('p', { children: 'Transaction Type' }),
                                i('p', { children: 'Status' }),
                                i('p', { children: 'Actions' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                h.slicedPages && h.slicedPages.length > 0
                                    ? K.Children.toArray(
                                          h.slicedPages[h.index].map(
                                              (
                                                  {
                                                      packageName: M,
                                                      userName: A,
                                                      frequency: _,
                                                      amount: O,
                                                      startDate: T,
                                                      endDate: $,
                                                      transactionType: I,
                                                      status: j,
                                                      id: L,
                                                  },
                                                  D
                                              ) => {
                                                  const {
                                                      isDropDownOpen: R,
                                                      index: V,
                                                  } = a
                                                  return d('div', {
                                                      className:
                                                          'grid justify-between border-b grid-cols-9 gap-8 ',
                                                      children: [
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-4',
                                                              children: [
                                                                  L,
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                      className:
                                                                          'cursor-pointer',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          M,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: A,
                                                          }),
                                                          i('p', {
                                                              children: _,
                                                          }),
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-.5',
                                                              children: [
                                                                  i('img', {
                                                                      src: '/icons/Naira.svg',
                                                                      alt: '',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          O,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: T,
                                                          }),
                                                          i('p', {
                                                              children: $,
                                                          }),
                                                          i('p', {
                                                              children: I,
                                                          }),
                                                          i('p', {
                                                              children: j,
                                                          }),
                                                          d('div', {
                                                              className:
                                                                  'relative',
                                                              children: [
                                                                  i('label', {
                                                                      className:
                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                      htmlFor:
                                                                          D.toString(),
                                                                      onClick:
                                                                          () =>
                                                                              l(
                                                                                  (
                                                                                      G
                                                                                  ) => ({
                                                                                      isDropDownOpen:
                                                                                          !G.isDropDownOpen,
                                                                                      index: D,
                                                                                  })
                                                                              ),
                                                                      children:
                                                                          i(
                                                                              'span',
                                                                              {
                                                                                  className:
                                                                                      'text-color-primary',
                                                                                  children:
                                                                                      i(
                                                                                          'img',
                                                                                          {
                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                              alt: '',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }),
                                                                  i('input', {
                                                                      type: 'radio',
                                                                      name: 'dropdown',
                                                                      className:
                                                                          'hidden',
                                                                      id: D.toString(),
                                                                      onChange:
                                                                          (G) =>
                                                                              o(
                                                                                  G,
                                                                                  D
                                                                              ),
                                                                  }),
                                                                  R &&
                                                                      V === D &&
                                                                      i('div', {
                                                                          className:
                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                          children:
                                                                              r.map(
                                                                                  (
                                                                                      G,
                                                                                      ee
                                                                                  ) =>
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                              onClick:
                                                                                                  (
                                                                                                      Q
                                                                                                  ) =>
                                                                                                      s(
                                                                                                          Q,
                                                                                                          G
                                                                                                      ),
                                                                                              children:
                                                                                                  G ===
                                                                                                  'Deactivate'
                                                                                                      ? i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-red-600',
                                                                                                                children:
                                                                                                                    G,
                                                                                                            }
                                                                                                        )
                                                                                                      : G,
                                                                                          },
                                                                                          ee +
                                                                                              D
                                                                                      )
                                                                              ),
                                                                      }),
                                                              ],
                                                          }),
                                                      ],
                                                  })
                                              }
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                i('select', {
                                    name: '',
                                    id: '',
                                    className:
                                        'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                    onChange: y,
                                    children: p.arr.map((M, A) =>
                                        i(
                                            'option',
                                            {
                                                value: M,
                                                className:
                                                    'capitalize cursor-pointer bg-white',
                                                children: M,
                                            },
                                            A
                                        )
                                    ),
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {
                                    onClick: S,
                                    className: 'cursor-pointer',
                                }),
                                E == null
                                    ? void 0
                                    : E.map((M, A) =>
                                          i(
                                              'li',
                                              {
                                                  children:
                                                      A + 1 === P
                                                          ? i('span', {
                                                                className:
                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                children: A + 1,
                                                            })
                                                          : i('span', {
                                                                className:
                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                onClick: (_) =>
                                                                    k(_, A),
                                                                children: A + 1,
                                                            }),
                                              },
                                              A
                                          )
                                      ),
                                i(Ee, {
                                    onClick: N,
                                    className: 'cursor-pointer',
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    ak = [
        {
            id: '1',
            packageName: 'Gold',
            frequency: 'Monthly',
            price: 6e3,
            status: 'Active',
        },
        {
            id: '1',
            packageName: 'Gold',
            frequency: 'Monthly',
            price: 12e3,
            status: 'Active',
        },
        {
            id: '1',
            packageName: 'Gold',
            frequency: 'Monthly',
            price: 8e3,
            status: 'Active',
        },
    ],
    qb = ({ fetchedResidentUsers: e }) => {
        const t = _n(),
            [r, n] = C.exports.useState([
                'View Details',
                'Activate',
                'Deactivate',
                'Delete',
            ]),
            [a, l] = C.exports.useState(null),
            [o, s] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            c = (p, m) => {
                console.log('clicked'),
                    s((v) => ({ isDropDownOpen: p.target.checked, index: m }))
            },
            u = (p, m, v) => {
                l((b) => ({ ...b, [v]: m }))
            }
        return d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('caption', {
                    className:
                        'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        d('p', {
                            className: ' font-bold',
                            children: [
                                'Resident User List ',
                                i('span', { children: '(4)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Sort By',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('button', {
                            className:
                                'bg-color-blue-1 text-white flex gap-2 items-center rounded-lg py-4 px-16 text-[1.6rem] ml-auto',
                            onClick: () => {
                                t(W8('addResidentUserPackage'))
                            },
                            children: [
                                i('span', { children: i($e, {}) }),
                                ' ',
                                'Add Package',
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid',
                    children: [
                        d('div', {
                            className:
                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-5 gap-8',
                            style: { fontSize: '1.6rem' },
                            children: [
                                d('p', {
                                    className: 'flex items-center gap-2',
                                    children: [
                                        i('input', {
                                            type: 'checkbox',
                                            className: 'cursor-pointer',
                                        }),
                                        i('p', { children: 'Package Name' }),
                                    ],
                                }),
                                i('p', { children: 'Frequency' }),
                                i('p', { children: 'Price' }),
                                i('p', { children: 'Status' }),
                                i('p', { children: 'Actions' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                e && e.length > 0
                                    ? K.Children.toArray(
                                          e.map(
                                              (
                                                  {
                                                      packageName: p,
                                                      price: m,
                                                      frequency: v,
                                                      status: b,
                                                  },
                                                  h
                                              ) => {
                                                  const {
                                                      isDropDownOpen: g,
                                                      index: x,
                                                  } = o
                                                  return d('div', {
                                                      className:
                                                          'grid justify-between border-b grid-cols-5 gap-8 ',
                                                      children: [
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-4',
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                      className:
                                                                          'cursor-pointer',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          p,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: v,
                                                          }),
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-.5',
                                                              children: [
                                                                  i('img', {
                                                                      src: '/icons/Naira.svg',
                                                                      alt: '',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          m,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: b,
                                                          }),
                                                          d('div', {
                                                              className:
                                                                  'relative',
                                                              children: [
                                                                  i('label', {
                                                                      className:
                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                      htmlFor:
                                                                          h.toString(),
                                                                      onClick:
                                                                          () =>
                                                                              s(
                                                                                  (
                                                                                      w
                                                                                  ) => ({
                                                                                      isDropDownOpen:
                                                                                          !w.isDropDownOpen,
                                                                                      index: h,
                                                                                  })
                                                                              ),
                                                                      children:
                                                                          i(
                                                                              'span',
                                                                              {
                                                                                  className:
                                                                                      'text-color-primary',
                                                                                  children:
                                                                                      i(
                                                                                          'img',
                                                                                          {
                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                              alt: '',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }),
                                                                  i('input', {
                                                                      type: 'radio',
                                                                      name: 'dropdown',
                                                                      className:
                                                                          'hidden',
                                                                      id: h.toString(),
                                                                      onChange:
                                                                          (w) =>
                                                                              c(
                                                                                  w,
                                                                                  h
                                                                              ),
                                                                  }),
                                                                  g &&
                                                                      x === h &&
                                                                      i('div', {
                                                                          className:
                                                                              'absolute top-0 translate-x-[5rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                          children:
                                                                              r.map(
                                                                                  (
                                                                                      w,
                                                                                      y
                                                                                  ) =>
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                              onClick:
                                                                                                  (
                                                                                                      N
                                                                                                  ) =>
                                                                                                      u(
                                                                                                          N,
                                                                                                          w,
                                                                                                          h
                                                                                                      ),
                                                                                              children:
                                                                                                  w ===
                                                                                                  'Activate'
                                                                                                      ? i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-green-600',
                                                                                                                children:
                                                                                                                    w,
                                                                                                            }
                                                                                                        )
                                                                                                      : w ===
                                                                                                        'Delete'
                                                                                                      ? i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-red-600',
                                                                                                                children:
                                                                                                                    w,
                                                                                                            }
                                                                                                        )
                                                                                                      : w,
                                                                                          },
                                                                                          y +
                                                                                              h
                                                                                      )
                                                                              ),
                                                                      }),
                                                              ],
                                                          }),
                                                      ],
                                                  })
                                              }
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                d('div', {
                                    className:
                                        'flex items-center border px-4 rounded-lg',
                                    children: [
                                        i('input', {
                                            type: 'text',
                                            className:
                                                'w-8 outline-none border-none cursor-pointer ',
                                            value: 6,
                                            inputMode: 'numeric',
                                        }),
                                        i(le, { className: 'text-[1.3rem]' }),
                                    ],
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {}),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '1',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '2',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '3',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '4',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                    children: '....',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                    children: '10',
                                }),
                                i(Ee, {}),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    ik = [
        {
            id: '1',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '2',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '3',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '4',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '5',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '6',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '7',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '8',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '9',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
        {
            id: '10',
            packageName: 'Gold',
            userName: 'John Doe',
            frequency: 'Monthly',
            amount: 1e3,
            startDate: '2021-01-01',
            endDate: '2021-01-31',
            transactionType: 'purchase',
            status: 'active',
        },
    ]
function Kb() {
    const [e, t] = C.exports.useState(null),
        [r, n] = C.exports.useState(null),
        [a, l] = C.exports.useState(1)
    C.exports.useEffect(() => {
        ;(async () => {
            setTimeout(() => {
                t(ak), n(ik)
            }, 1e3)
        })()
    }, [])
    const o = (s) => {
        switch (s) {
            case 1:
                return i(qb, { fetchedResidentUsers: e != null ? e : [] })
            case 2:
                return i(nk, { fetchedResidentUserHistory: r != null ? r : [] })
            default:
                return i(qb, { fetchedResidentUsers: e != null ? e : [] })
        }
    }
    return d('div', {
        children: [
            d('div', {
                className: 'estateDetail__radioBox',
                children: [
                    i('input', {
                        type: 'radio',
                        name: 'report',
                        id: 'additionalResidentUsr',
                        className: 'hidden',
                        onChange: () => l(1),
                        defaultChecked: !0,
                    }),
                    i('label', {
                        htmlFor: 'additionalResidentUsr',
                        children: 'Additional Resident Package',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'report',
                        id: 'residentUserHistory',
                        className: 'hidden',
                        onChange: () => l(2),
                    }),
                    i('label', {
                        htmlFor: 'residentUserHistory',
                        className: 'capitalize',
                        children: 'Package purchase history',
                    }),
                ],
            }),
            i('div', {
                className: 'mt-8 grid gap-8',
                children: i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children:
                        e && e.length > 0
                            ? o(a)
                            : i('section', {
                                  className:
                                      'relative w-[70vw] h-[60vh] mx-auto grid',
                                  children: i('div', {
                                      className:
                                          'absolute w-full h-full grid place-content-center',
                                      children: i(Ne, {
                                          className:
                                              'animate-spin text-color-green-light text-5xl',
                                      }),
                                  }),
                              }),
                }),
            }),
        ],
    })
}
function lk() {
    const e = _n(),
        { additionalResidentPath: t } = Hf(Sf),
        [r, n] = C.exports.useState(!1)
    return i('div', {
        children: i('div', {
            className: 'rounded-lg mt-[3rem] h-[80vh]',
            children: r
                ? i('section', {
                      children: ((o) => {
                          switch (o) {
                              case 'renderedAdditionalResidents':
                                  return i(Kb, {})
                              case 'addResidentUserPackage':
                                  return i(rk, {})
                              default:
                                  return i(Kb, {})
                          }
                      })(t),
                  })
                : d('section', {
                      className:
                          'grid place-content-center w-full h-full justify-items-center gap-4 bg-white',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any Package yet',
                          }),
                          d('button', {
                              className:
                                  'bg-color-blue-1 text-white flex gap-2 items-center rounded-lg justify-self-center py-4 px-16 text-[1.6rem]',
                              onClick: () => {
                                  n(!0), e(W8('renderedAdditionalResident'))
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Package',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const ok = () => (
        C.exports.useContext(Ha),
        d('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: [
                i('div', {
                    className: 'flex justify-end',
                    children: d('button', {
                        className:
                            'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                        children: [
                            i('img', {
                                src: '/icons/admins/delete.svg',
                                alt: '',
                            }),
                            i('span', {
                                className:
                                    'text-red-600 text-[1.4rem] font-semibold ',
                                children: 'Deactivate',
                            }),
                        ],
                    }),
                }),
                d('section', {
                    className: 'grid max-w-[65vw] gap-16',
                    style: {
                        gridTemplateColumns:
                            'repeat(auto-fit, minmax(40rem, 1fr))',
                    },
                    children: [
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'packageName',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Name of Package',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'packageName',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Gold',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'userName',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Name of User (Buyer)',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'userName',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Wale Ogunleye',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'packageName',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Amount',
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/Naira.svg',
                                            alt: '',
                                            className: 'absolute left-3',
                                        }),
                                        i('input', {
                                            disabled: !0,
                                            type: 'text',
                                            required: !0,
                                            id: 'amount',
                                            className:
                                                'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                            value: 6e3,
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'frequency',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Frequency',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'frequency',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Monthly',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'startDate',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Start Date',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'startDate',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: '12-May-22',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'endDate',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'End Date',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'endDate',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: '12-May-22',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'estateUser',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Estate User',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'estateUser',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Ibare',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'transactionType',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Transaction Type',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'transactionType',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Purchase',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'phoneNumber',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Phone Number',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'phoneNumber',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: '09023238423',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'status',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Status',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'status',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Status',
                                }),
                            ],
                        }),
                    ],
                }),
                d('section', {
                    className:
                        'grid text-[1.4rem] w-full py-10 gap-8 border-t mt-20',
                    children: [
                        i('h4', {
                            className: 'text-[1.6rem] font-semibold',
                            children: 'Beneficiary Details',
                        }),
                        d('div', {
                            className: 'items-center w-full grid',
                            style: {
                                gridTemplateColumns:
                                    'repeat(auto-fit, minmax(20rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    className: ' grid items-center gap-2',
                                    children: [
                                        i('p', {
                                            className: 'font-semibold',
                                            children: 'Resident User',
                                        }),
                                        d('div', {
                                            className:
                                                'flex items-center gap-6',
                                            children: [
                                                i('img', {
                                                    src: '/img/me.jpeg',
                                                    alt: '',
                                                    className:
                                                        'w-[3rem] h-[3rem] object-cover object-top rounded-full',
                                                }),
                                                i('p', {
                                                    className: 'font-semibold',
                                                    children: 'Jacintha Sage',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid items-center gap-2',
                                    children: [
                                        i('p', {
                                            className: 'font-semibold',
                                            children: 'Email',
                                        }),
                                        i('p', {
                                            className: 'text-gray-500',
                                            children: 'jacintha@gmail.com',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid items-center gap-2',
                                    children: [
                                        i('p', {
                                            className: 'font-semibold',
                                            children: 'Phone Number',
                                        }),
                                        i('p', {
                                            className: 'text-gray-500',
                                            children: '09072847232',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    ),
    sk = [
        {
            id: '1',
            img: '/img/security/img1.png',
            details: {
                companyName: 'Proton Security',
                CompanyAddress: '04, Wright Avenue Lagos, Nigeria',
                walletBalance: 5e3,
                joinedDate: new Date(),
                NoOfGuards: 3400,
                status: 'active',
            },
        },
        {
            id: '2',
            img: '/img/security/img2.png',
            details: {
                companyName: 'Proton Security',
                CompanyAddress: '04, Wright Avenue Lagos, Nigeria',
                walletBalance: 5e3,
                joinedDate: new Date(),
                NoOfGuards: 3400,
                status: 'active',
            },
        },
        {
            id: '3',
            img: '/img/security/img3.png',
            details: {
                companyName: 'Proton Security',
                CompanyAddress: '04, Wright Avenue Lagos, Nigeria',
                walletBalance: 5e3,
                joinedDate: new Date(),
                NoOfGuards: 3400,
                status: 'active',
            },
        },
    ]
function ck() {
    const e = Me()
    _n()
    const [t, r] = C.exports.useState([]),
        [n, a] = C.exports.useState({ isDropDownOpen: !1, index: null }),
        l = (v, b) => {
            a(() => ({ isDropDownOpen: v.target.checked, index: b }))
        }
    C.exports.useEffect(() => {
        ;(async () => {
            setTimeout(() => {
                r(sk)
            }, 1e3)
        })()
    }, [])
    const o = () => {
            e('/superAdmin/security-company/add')
        },
        s = C.exports.useRef(null),
        c = () => {
            s.current && s.current.close()
        },
        u = () => {
            s.current && s.current.showModal()
        },
        f = () => {
            c()
        },
        p = (v, b) => {
            console.log({ item: v, index: b }),
                a(() => ({ isDropDownOpen: !1, index: null })),
                v === 'View Details' && e(`/superAdmin/security-company/:${b}`),
                v === 'Deactivate' && u()
        },
        m = ['View Details', 'Activate', 'Deactivate']
    return i('div', {
        className: 'w-full grid item rounded-lg',
        children: d('div', {
            className: 'grid text-[1.6rem] gap-10',
            style: { fontFamily: 'Satoshi-Regular' },
            children: [
                i('dialog', {
                    className: 'dialog',
                    ref: s,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children: [
                                i('img', {
                                    src: '/icons/admins/modalWarning.svg',
                                    alt: '',
                                }),
                                i('p', {
                                    children:
                                        'Are you sure you want to deactivate this security company?',
                                }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => c(),
                                            children: 'Cancel',
                                        }),
                                        i('button', {
                                            className:
                                                'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                            onClick: f,
                                            children: 'Deactivate',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'flex w-full justify-between items-center gap-12 p-8 bg-color-white rounded-lg',
                    children: [
                        d('p', {
                            className: 'text-[1.6rem] font-bold',
                            children: [
                                'SecurityCompany List ',
                                i('span', { children: '(202)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[25rem] rounded-lg border border-color-blue-light py-4 px-8 outline-none appearance-none',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        'cursor-pointer w-[25rem] rounded-lg border border-color-blue-light py-4 px-8 outline-none appearance-none',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            children: 'Category',
                                        }),
                                        i('option', { children: 'date' }),
                                        i('option', { children: 'Alpha' }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('button', {
                            className:
                                'btn ml-auto bg-color-blue-1 text-white flex gap-2 items-center self-center rounded-lg py-4 px-8',
                            onClick: o,
                            children: [
                                i('span', { children: i($e, {}) }),
                                ' ',
                                i('p', { children: 'Add Company' }),
                            ],
                        }),
                    ],
                }),
                i('div', {
                    className: 'w-full',
                    children: i('div', {
                        className: 'grid gap-8 ',
                        children:
                            t && t.length > 0
                                ? K.Children.toArray(
                                      t.map(
                                          (
                                              {
                                                  img: v,
                                                  id: b,
                                                  details: {
                                                      companyName: h,
                                                      CompanyAddress: g,
                                                      walletBalance: x,
                                                      joinedDate: w,
                                                      NoOfGuards: y,
                                                      status: N,
                                                  },
                                              },
                                              S
                                          ) => {
                                              const {
                                                  isDropDownOpen: P,
                                                  index: E,
                                              } = n
                                              return d('div', {
                                                  className:
                                                      'p-8 flex bg-white border border-color-grey rounded-lg ',
                                                  style: {
                                                      justifyContent:
                                                          'repeat(4, minmax(min-content, 1fr))',
                                                  },
                                                  children: [
                                                      i('div', {
                                                          className:
                                                              'w-full py-8 grid items-start gap-4 ',
                                                          children: i('img', {
                                                              src: v,
                                                              alt: '',
                                                              className:
                                                                  'w-[21rem] h-[18rem] object-cover rounded-lg',
                                                          }),
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'w-full py-8 grid items-start gap-4 ',
                                                          children: [
                                                              d('div', {
                                                                  children: [
                                                                      i('p', {
                                                                          className:
                                                                              'text-[1.4rem] text-[#043FA7]',
                                                                          children:
                                                                              'Name',
                                                                      }),
                                                                      i('p', {
                                                                          className:
                                                                              'font-[1.6rem] whitespace-nowrap',
                                                                          children:
                                                                              h,
                                                                      }),
                                                                  ],
                                                              }),
                                                              d('div', {
                                                                  children: [
                                                                      i('p', {
                                                                          className:
                                                                              'text-[#043FA7]',
                                                                          children:
                                                                              'Address',
                                                                      }),
                                                                      i(
                                                                          'address',
                                                                          {
                                                                              className:
                                                                                  'not-italic max-w-[20rem]',
                                                                              children:
                                                                                  g,
                                                                          }
                                                                      ),
                                                                  ],
                                                              }),
                                                          ],
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'w-full py-8 grid items-start gap-4 ',
                                                          children: [
                                                              d('div', {
                                                                  children: [
                                                                      i('p', {
                                                                          className:
                                                                              'text-[#043FA7]',
                                                                          children:
                                                                              'Wallet Balance',
                                                                      }),
                                                                      d('p', {
                                                                          className:
                                                                              'flex items-center',
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      U0,
                                                                                      {
                                                                                          className:
                                                                                              'text-[2rem]',
                                                                                      }
                                                                                  ),
                                                                                  x.toLocaleString(),
                                                                              ],
                                                                      }),
                                                                  ],
                                                              }),
                                                              d('div', {
                                                                  children: [
                                                                      i('p', {
                                                                          className:
                                                                              'text-[#043FA7]',
                                                                          children:
                                                                              'Joined Date',
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              w.toLocaleDateString(
                                                                                  void 0,
                                                                                  {
                                                                                      day: 'numeric',
                                                                                      month: 'short',
                                                                                      year: 'numeric',
                                                                                  }
                                                                              ),
                                                                      }),
                                                                  ],
                                                              }),
                                                          ],
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'w-full py-8 grid items-start gap-4  content-start',
                                                          children: [
                                                              d('div', {
                                                                  children: [
                                                                      i('p', {
                                                                          className:
                                                                              'text-[#043FA7]',
                                                                          children:
                                                                              'No of Security Guards',
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              y,
                                                                      }),
                                                                  ],
                                                              }),
                                                              d('div', {
                                                                  className:
                                                                      ' mt-10',
                                                                  children: [
                                                                      i('p', {
                                                                          className:
                                                                              'text-[#043FA7]',
                                                                          children:
                                                                              'Status',
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              N ===
                                                                              'active'
                                                                                  ? i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                ' text-color-green-light',
                                                                                            children:
                                                                                                'Active',
                                                                                        }
                                                                                    )
                                                                                  : i(
                                                                                        'span',
                                                                                        {
                                                                                            children:
                                                                                                'Deactivated',
                                                                                        }
                                                                                    ),
                                                                      }),
                                                                  ],
                                                              }),
                                                          ],
                                                      }),
                                                      d('div', {
                                                          className: 'relative',
                                                          children: [
                                                              i('label', {
                                                                  className:
                                                                      'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                  htmlFor:
                                                                      S.toString(),
                                                                  onClick: () =>
                                                                      a(
                                                                          (
                                                                              k
                                                                          ) => ({
                                                                              isDropDownOpen:
                                                                                  !k.isDropDownOpen,
                                                                              index: S,
                                                                          })
                                                                      ),
                                                                  children: i(
                                                                      'button',
                                                                      {
                                                                          children:
                                                                              i(
                                                                                  M8,
                                                                                  {
                                                                                      className:
                                                                                          'text-[2rem]',
                                                                                  }
                                                                              ),
                                                                      }
                                                                  ),
                                                              }),
                                                              i('input', {
                                                                  type: 'radio',
                                                                  name: 'dropdown',
                                                                  className:
                                                                      'hidden',
                                                                  id: S.toString(),
                                                                  onChange: (
                                                                      k
                                                                  ) => l(k, S),
                                                              }),
                                                              P &&
                                                                  E === S &&
                                                                  i('div', {
                                                                      className:
                                                                          'absolute top-0 translate-x-[-10rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                      children:
                                                                          m.map(
                                                                              (
                                                                                  k,
                                                                                  M
                                                                              ) =>
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                          onClick:
                                                                                              (
                                                                                                  A
                                                                                              ) =>
                                                                                                  p(
                                                                                                      k,
                                                                                                      b
                                                                                                  ),
                                                                                          children:
                                                                                              k ===
                                                                                              'Activate'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-green-600',
                                                                                                            children:
                                                                                                                k,
                                                                                                        }
                                                                                                    )
                                                                                                  : k ===
                                                                                                    'Deactivate'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-red-600',
                                                                                                            children:
                                                                                                                k,
                                                                                                        }
                                                                                                    )
                                                                                                  : k,
                                                                                      },
                                                                                      M +
                                                                                          S
                                                                                  )
                                                                          ),
                                                                  }),
                                                          ],
                                                      }),
                                                  ],
                                              })
                                          }
                                      )
                                  )
                                : i('div', {
                                      className: 'relative',
                                      children: i('div', {
                                          className:
                                              'absolute w-full grid place-content-center',
                                          children: i(Ne, {
                                              className:
                                                  'animate-spin text-[#0660FE] text-4xl',
                                          }),
                                      }),
                                  }),
                    }),
                }),
                d('footer', {
                    className: 'flex items-center p-8 mt-8 bg-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                d('div', {
                                    className:
                                        'flex items-center border px-4 rounded-lg',
                                    children: [
                                        i('input', {
                                            type: 'number',
                                            className:
                                                'w-8 outline-none border-none cursor-pointer',
                                            defaultValue: 6,
                                        }),
                                        i(le, { className: 'text-[1.3rem]' }),
                                    ],
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {}),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem]',
                                    children: '1',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem]',
                                    children: '2',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem]',
                                    children: '3',
                                }),
                                i('li', {
                                    className:
                                        'grid place-content-center border w-[3rem] h-[3rem]',
                                    children: '4',
                                }),
                                i(Ee, {}),
                            ],
                        }),
                    ],
                }),
            ],
        }),
    })
}
function uk() {
    const e = Me(),
        [t, r] = C.exports.useState(!1)
    return i('div', {
        children: i('div', {
            className: 'rounded-lg mt-[3rem] h-[80vh]',
            children: t
                ? d('section', {
                      className: 'estates__wrapper bg-white',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any security Company yet',
                          }),
                          d('button', {
                              className:
                                  'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                              onClick: () => {
                                  r(!0), e('/superAdmin/security-company/add')
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Company',
                              ],
                          }),
                      ],
                  })
                : i('section', { children: i(ck, {}) }),
        }),
    })
}
const dk = () => {
    const [e, t] = C.exports.useState(!0),
        r = (s) => {
            s.preventDefault(), l('success')
        },
        n = C.exports.useRef(null),
        a = () => {
            n.current && n.current.close()
        },
        l = (s) => {
            t(s === 'warning'), n.current && n.current.showModal()
        }
    return d(me, {
        children: [
            i('dialog', {
                className: 'dialog',
                ref: n,
                children: i('section', {
                    className: 'grid place-content-center w-full h-[100vh]',
                    children: d('div', {
                        className:
                            'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8 text-[1.6rem]',
                        children: [
                            e
                                ? i('img', {
                                      src: '/icons/admins/modalWarning.svg',
                                      alt: '',
                                  })
                                : i('img', {
                                      src: '/icons/admins/modalSuccess.svg',
                                      alt: '',
                                  }),
                            e
                                ? i('p', {
                                      children:
                                          'Are you sure you want to deactivate this security company?',
                                  })
                                : i('p', {
                                      children:
                                          'You have successfully added a security Company',
                                  }),
                            d('div', {
                                className: 'flex w-full justify-center gap-8',
                                children: [
                                    e
                                        ? i('button', {
                                              className:
                                                  'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                              onClick: () => a(),
                                              children: 'Cancel',
                                          })
                                        : i('button', {
                                              className:
                                                  'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                              onClick: () => a(),
                                              children: 'View Details',
                                          }),
                                    e
                                        ? i('button', {
                                              className:
                                                  'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                              onClick: () => {
                                                  a()
                                              },
                                              children: 'Deactivate',
                                          })
                                        : i('button', {
                                              className:
                                                  'btn text-white bg-[#0556E5] border rounded-lg w-[15rem]',
                                              onClick: () => a(),
                                              children: 'View Details',
                                          }),
                                ],
                            }),
                        ],
                    }),
                }),
            }),
            d('div', {
                className:
                    'grid p-8 bg-white h-[80vh] items-baseline overflow-y-scroll rounded-lg',
                children: [
                    d('div', {
                        className: 'flex justify-between items-center',
                        children: [
                            i('img', {
                                src: '/icons/admins/detailsImg.svg',
                                alt: 'photoPreview',
                                className:
                                    'object-cover w-[11rem] h-[11rem] rounded-full',
                            }),
                            d('button', {
                                className:
                                    'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                onClick: () => l('warning'),
                                children: [
                                    i('img', {
                                        src: '/icons/admins/delete.svg',
                                        alt: '',
                                    }),
                                    i('span', {
                                        className:
                                            'text-red-600 text-[1.4rem] font-semibold',
                                        children: 'Deactivate',
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('form', {
                        onSubmit: r,
                        className: 'grid max-w-[84rem] gap-16 mt-12',
                        style: {
                            gridTemplateColumns:
                                ' repeat(auto-fit, minmax(35rem, 1fr))',
                        },
                        children: [
                            d('div', {
                                className: 'grid gap-4 relative ',
                                children: [
                                    i('label', {
                                        htmlFor: 'securityCompany',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Security Company *',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        value: 'Orca Security',
                                        required: !0,
                                        disabled: !0,
                                        id: 'securityCompany',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'email',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Email Address',
                                    }),
                                    i('input', {
                                        type: 'email',
                                        required: !0,
                                        disabled: !0,
                                        value: 'orcas@gmail.com',
                                        id: 'email',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'address',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Address',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: '04, Wright Avenue Lagos, Nigeria',
                                        id: 'address',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'noOfGuards',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'No of Security Guards',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: '10',
                                        id: 'noOfGuards',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'walletBalance',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Wallet Balance',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: '\u20A65,000',
                                        id: 'walletBalance',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'joinedDate',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Joined Date',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: '02-May-22',
                                        id: 'joinedDate',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'NoOfAssignedGuards',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children:
                                            'No of Assigned Security Guards',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: '10',
                                        id: 'NoOfAssignedGuards',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'noOfBankAccountsOpened',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'No of Bank Accounts Opened',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: '10',
                                        id: 'noOfBankAccountsOpened',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 disabled:text-gray-500',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'status',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Status',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        disabled: !0,
                                        value: 'Active',
                                        id: 'status',
                                        className:
                                            'w-full bg-white text-[1.6rem] outline-none disabled:text-color-green-light',
                                    }),
                                ],
                            }),
                            d('button', {
                                className:
                                    'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full',
                                style: { justifySelf: 'start' },
                                onClick: () => l('success'),
                                children: [
                                    i('span', {
                                        children: i('img', {
                                            src: '/icons/admins/saveDisk.svg',
                                            alt: '',
                                            className: 'w-[1.7rem] h-[1.7rem]',
                                        }),
                                    }),
                                    ' ',
                                    'Save Changes',
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        ],
    })
}
var a3 = { exports: {} }
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ ;(function (e) {
    ;(function () {
        var t = {}.hasOwnProperty
        function r() {
            for (var n = [], a = 0; a < arguments.length; a++) {
                var l = arguments[a]
                if (!!l) {
                    var o = typeof l
                    if (o === 'string' || o === 'number') n.push(l)
                    else if (Array.isArray(l)) {
                        if (l.length) {
                            var s = r.apply(null, l)
                            s && n.push(s)
                        }
                    } else if (o === 'object') {
                        if (
                            l.toString !== Object.prototype.toString &&
                            !l.toString.toString().includes('[native code]')
                        ) {
                            n.push(l.toString())
                            continue
                        }
                        for (var c in l) t.call(l, c) && l[c] && n.push(c)
                    }
                }
            }
            return n.join(' ')
        }
        e.exports ? ((r.default = r), (e.exports = r)) : (window.classNames = r)
    })()
})(a3)
const He = a3.exports
function fk(e) {
    var t = typeof e
    return e != null && (t == 'object' || t == 'function')
}
var Tr = fk,
    pk = typeof _c == 'object' && _c && _c.Object === Object && _c,
    i3 = pk,
    hk = i3,
    mk = typeof self == 'object' && self && self.Object === Object && self,
    gk = hk || mk || Function('return this')(),
    An = gk,
    vk = An,
    yk = vk.Symbol,
    uc = yk,
    Yb = uc,
    l3 = Object.prototype,
    bk = l3.hasOwnProperty,
    xk = l3.toString,
    Oo = Yb ? Yb.toStringTag : void 0
function wk(e) {
    var t = bk.call(e, Oo),
        r = e[Oo]
    try {
        e[Oo] = void 0
        var n = !0
    } catch {}
    var a = xk.call(e)
    return n && (t ? (e[Oo] = r) : delete e[Oo]), a
}
var Nk = wk,
    Sk = Object.prototype,
    Ck = Sk.toString
function Pk(e) {
    return Ck.call(e)
}
var _k = Pk,
    Xb = uc,
    Ak = Nk,
    Ek = _k,
    kk = '[object Null]',
    Ok = '[object Undefined]',
    Zb = Xb ? Xb.toStringTag : void 0
function Tk(e) {
    return e == null
        ? e === void 0
            ? Ok
            : kk
        : Zb && Zb in Object(e)
        ? Ak(e)
        : Ek(e)
}
var ta = Tk,
    Mk = Array.isArray,
    Fe = Mk
function Dk(e) {
    return e != null && typeof e == 'object'
}
var ra = Dk,
    $k = ta,
    Ik = Fe,
    Rk = ra,
    Lk = '[object String]'
function jk(e) {
    return typeof e == 'string' || (!Ik(e) && Rk(e) && $k(e) == Lk)
}
var dc = jk,
    Fk = ta,
    Bk = ra,
    zk = '[object Symbol]'
function Vk(e) {
    return typeof e == 'symbol' || (Bk(e) && Fk(e) == zk)
}
var ao = Vk,
    Uk = Fe,
    Wk = ao,
    Hk = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    Gk = /^\w*$/
function qk(e, t) {
    if (Uk(e)) return !1
    var r = typeof e
    return r == 'number' ||
        r == 'symbol' ||
        r == 'boolean' ||
        e == null ||
        Wk(e)
        ? !0
        : Gk.test(e) || !Hk.test(e) || (t != null && e in Object(t))
}
var W0 = qk,
    Kk = ta,
    Yk = Tr,
    Xk = '[object AsyncFunction]',
    Zk = '[object Function]',
    Jk = '[object GeneratorFunction]',
    Qk = '[object Proxy]'
function eO(e) {
    if (!Yk(e)) return !1
    var t = Kk(e)
    return t == Zk || t == Jk || t == Xk || t == Qk
}
var pe = eO,
    tO = An,
    rO = tO['__core-js_shared__'],
    nO = rO,
    hh = nO,
    Jb = (function () {
        var e = /[^.]+$/.exec((hh && hh.keys && hh.keys.IE_PROTO) || '')
        return e ? 'Symbol(src)_1.' + e : ''
    })()
function aO(e) {
    return !!Jb && Jb in e
}
var iO = aO,
    lO = Function.prototype,
    oO = lO.toString
function sO(e) {
    if (e != null) {
        try {
            return oO.call(e)
        } catch {}
        try {
            return e + ''
        } catch {}
    }
    return ''
}
var o3 = sO,
    cO = pe,
    uO = iO,
    dO = Tr,
    fO = o3,
    pO = /[\\^$.*+?()[\]{}|]/g,
    hO = /^\[object .+?Constructor\]$/,
    mO = Function.prototype,
    gO = Object.prototype,
    vO = mO.toString,
    yO = gO.hasOwnProperty,
    bO = RegExp(
        '^' +
            vO
                .call(yO)
                .replace(pO, '\\$&')
                .replace(
                    /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                    '$1.*?'
                ) +
            '$'
    )
function xO(e) {
    if (!dO(e) || uO(e)) return !1
    var t = cO(e) ? bO : hO
    return t.test(fO(e))
}
var wO = xO
function NO(e, t) {
    return e == null ? void 0 : e[t]
}
var SO = NO,
    CO = wO,
    PO = SO
function _O(e, t) {
    var r = PO(e, t)
    return CO(r) ? r : void 0
}
var Mi = _O,
    AO = Mi,
    EO = AO(Object, 'create'),
    Gf = EO,
    Qb = Gf
function kO() {
    ;(this.__data__ = Qb ? Qb(null) : {}), (this.size = 0)
}
var OO = kO
function TO(e) {
    var t = this.has(e) && delete this.__data__[e]
    return (this.size -= t ? 1 : 0), t
}
var MO = TO,
    DO = Gf,
    $O = '__lodash_hash_undefined__',
    IO = Object.prototype,
    RO = IO.hasOwnProperty
function LO(e) {
    var t = this.__data__
    if (DO) {
        var r = t[e]
        return r === $O ? void 0 : r
    }
    return RO.call(t, e) ? t[e] : void 0
}
var jO = LO,
    FO = Gf,
    BO = Object.prototype,
    zO = BO.hasOwnProperty
function VO(e) {
    var t = this.__data__
    return FO ? t[e] !== void 0 : zO.call(t, e)
}
var UO = VO,
    WO = Gf,
    HO = '__lodash_hash_undefined__'
function GO(e, t) {
    var r = this.__data__
    return (
        (this.size += this.has(e) ? 0 : 1),
        (r[e] = WO && t === void 0 ? HO : t),
        this
    )
}
var qO = GO,
    KO = OO,
    YO = MO,
    XO = jO,
    ZO = UO,
    JO = qO
function io(e) {
    var t = -1,
        r = e == null ? 0 : e.length
    for (this.clear(); ++t < r; ) {
        var n = e[t]
        this.set(n[0], n[1])
    }
}
io.prototype.clear = KO
io.prototype.delete = YO
io.prototype.get = XO
io.prototype.has = ZO
io.prototype.set = JO
var QO = io
function eT() {
    ;(this.__data__ = []), (this.size = 0)
}
var tT = eT
function rT(e, t) {
    return e === t || (e !== e && t !== t)
}
var H0 = rT,
    nT = H0
function aT(e, t) {
    for (var r = e.length; r--; ) if (nT(e[r][0], t)) return r
    return -1
}
var qf = aT,
    iT = qf,
    lT = Array.prototype,
    oT = lT.splice
function sT(e) {
    var t = this.__data__,
        r = iT(t, e)
    if (r < 0) return !1
    var n = t.length - 1
    return r == n ? t.pop() : oT.call(t, r, 1), --this.size, !0
}
var cT = sT,
    uT = qf
function dT(e) {
    var t = this.__data__,
        r = uT(t, e)
    return r < 0 ? void 0 : t[r][1]
}
var fT = dT,
    pT = qf
function hT(e) {
    return pT(this.__data__, e) > -1
}
var mT = hT,
    gT = qf
function vT(e, t) {
    var r = this.__data__,
        n = gT(r, e)
    return n < 0 ? (++this.size, r.push([e, t])) : (r[n][1] = t), this
}
var yT = vT,
    bT = tT,
    xT = cT,
    wT = fT,
    NT = mT,
    ST = yT
function lo(e) {
    var t = -1,
        r = e == null ? 0 : e.length
    for (this.clear(); ++t < r; ) {
        var n = e[t]
        this.set(n[0], n[1])
    }
}
lo.prototype.clear = bT
lo.prototype.delete = xT
lo.prototype.get = wT
lo.prototype.has = NT
lo.prototype.set = ST
var Kf = lo,
    CT = Mi,
    PT = An,
    _T = CT(PT, 'Map'),
    G0 = _T,
    e2 = QO,
    AT = Kf,
    ET = G0
function kT() {
    ;(this.size = 0),
        (this.__data__ = {
            hash: new e2(),
            map: new (ET || AT)(),
            string: new e2(),
        })
}
var OT = kT
function TT(e) {
    var t = typeof e
    return t == 'string' || t == 'number' || t == 'symbol' || t == 'boolean'
        ? e !== '__proto__'
        : e === null
}
var MT = TT,
    DT = MT
function $T(e, t) {
    var r = e.__data__
    return DT(t) ? r[typeof t == 'string' ? 'string' : 'hash'] : r.map
}
var Yf = $T,
    IT = Yf
function RT(e) {
    var t = IT(this, e).delete(e)
    return (this.size -= t ? 1 : 0), t
}
var LT = RT,
    jT = Yf
function FT(e) {
    return jT(this, e).get(e)
}
var BT = FT,
    zT = Yf
function VT(e) {
    return zT(this, e).has(e)
}
var UT = VT,
    WT = Yf
function HT(e, t) {
    var r = WT(this, e),
        n = r.size
    return r.set(e, t), (this.size += r.size == n ? 0 : 1), this
}
var GT = HT,
    qT = OT,
    KT = LT,
    YT = BT,
    XT = UT,
    ZT = GT
function oo(e) {
    var t = -1,
        r = e == null ? 0 : e.length
    for (this.clear(); ++t < r; ) {
        var n = e[t]
        this.set(n[0], n[1])
    }
}
oo.prototype.clear = qT
oo.prototype.delete = KT
oo.prototype.get = YT
oo.prototype.has = XT
oo.prototype.set = ZT
var q0 = oo,
    s3 = q0,
    JT = 'Expected a function'
function K0(e, t) {
    if (typeof e != 'function' || (t != null && typeof t != 'function'))
        throw new TypeError(JT)
    var r = function () {
        var n = arguments,
            a = t ? t.apply(this, n) : n[0],
            l = r.cache
        if (l.has(a)) return l.get(a)
        var o = e.apply(this, n)
        return (r.cache = l.set(a, o) || l), o
    }
    return (r.cache = new (K0.Cache || s3)()), r
}
K0.Cache = s3
var QT = K0,
    eM = QT,
    tM = 500
function rM(e) {
    var t = eM(e, function (n) {
            return r.size === tM && r.clear(), n
        }),
        r = t.cache
    return t
}
var nM = rM,
    aM = nM,
    iM =
        /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
    lM = /\\(\\)?/g,
    oM = aM(function (e) {
        var t = []
        return (
            e.charCodeAt(0) === 46 && t.push(''),
            e.replace(iM, function (r, n, a, l) {
                t.push(a ? l.replace(lM, '$1') : n || r)
            }),
            t
        )
    }),
    sM = oM
function cM(e, t) {
    for (var r = -1, n = e == null ? 0 : e.length, a = Array(n); ++r < n; )
        a[r] = t(e[r], r, e)
    return a
}
var Y0 = cM,
    t2 = uc,
    uM = Y0,
    dM = Fe,
    fM = ao,
    pM = 1 / 0,
    r2 = t2 ? t2.prototype : void 0,
    n2 = r2 ? r2.toString : void 0
function c3(e) {
    if (typeof e == 'string') return e
    if (dM(e)) return uM(e, c3) + ''
    if (fM(e)) return n2 ? n2.call(e) : ''
    var t = e + ''
    return t == '0' && 1 / e == -pM ? '-0' : t
}
var hM = c3,
    mM = hM
function gM(e) {
    return e == null ? '' : mM(e)
}
var u3 = gM,
    vM = Fe,
    yM = W0,
    bM = sM,
    xM = u3
function wM(e, t) {
    return vM(e) ? e : yM(e, t) ? [e] : bM(xM(e))
}
var d3 = wM,
    NM = ao,
    SM = 1 / 0
function CM(e) {
    if (typeof e == 'string' || NM(e)) return e
    var t = e + ''
    return t == '0' && 1 / e == -SM ? '-0' : t
}
var Xf = CM,
    PM = d3,
    _M = Xf
function AM(e, t) {
    t = PM(t, e)
    for (var r = 0, n = t.length; e != null && r < n; ) e = e[_M(t[r++])]
    return r && r == n ? e : void 0
}
var X0 = AM,
    EM = X0
function kM(e, t, r) {
    var n = e == null ? void 0 : EM(e, t)
    return n === void 0 ? r : n
}
var hr = kM
function OM(e) {
    return e == null
}
var ce = OM,
    TM = ta,
    MM = ra,
    DM = '[object Number]'
function $M(e) {
    return typeof e == 'number' || (MM(e) && TM(e) == DM)
}
var f3 = $M,
    IM = f3
function RM(e) {
    return IM(e) && e != +e
}
var Zf = RM,
    Yt = function (t) {
        return t === 0 ? 0 : t > 0 ? 1 : -1
    },
    ag = function (t) {
        return dc(t) && t.indexOf('%') === t.length - 1
    },
    J = function (t) {
        return f3(t) && !Zf(t)
    },
    Ct = function (t) {
        return J(t) || dc(t)
    },
    LM = 0,
    so = function (t) {
        var r = ++LM
        return ''.concat(t || '').concat(r)
    },
    sr = function (t, r) {
        var n =
                arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 0,
            a =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : !1
        if (!J(t) && !dc(t)) return n
        var l
        if (ag(t)) {
            var o = t.indexOf('%')
            l = (r * parseFloat(t.slice(0, o))) / 100
        } else l = +t
        return Zf(l) && (l = n), a && l > r && (l = r), l
    },
    ia = function (t) {
        if (!t) return null
        var r = Object.keys(t)
        return r && r.length ? t[r[0]] : null
    },
    jM = function (t) {
        if (!Fe(t)) return !1
        for (var r = t.length, n = {}, a = 0; a < r; a++)
            if (!n[t[a]]) n[t[a]] = !0
            else return !0
        return !1
    },
    xr = function (t, r) {
        return J(t) && J(r)
            ? function (n) {
                  return t + n * (r - t)
              }
            : function () {
                  return r
              }
    }
function rd(e, t, r) {
    return !e || !e.length
        ? null
        : e.find(function (n) {
              return n && (typeof t == 'function' ? t(n) : hr(n, t)) === r
          })
}
function pl(e, t) {
    for (var r in e)
        if (
            {}.hasOwnProperty.call(e, r) &&
            (!{}.hasOwnProperty.call(t, r) || e[r] !== t[r])
        )
            return !1
    for (var n in t)
        if ({}.hasOwnProperty.call(t, n) && !{}.hasOwnProperty.call(e, n))
            return !1
    return !0
}
function ig(e) {
    return (
        (ig =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        ig(e)
    )
}
var FM = ['viewBox', 'children'],
    BM = [
        'aria-activedescendant',
        'aria-atomic',
        'aria-autocomplete',
        'aria-busy',
        'aria-checked',
        'aria-colcount',
        'aria-colindex',
        'aria-colspan',
        'aria-controls',
        'aria-current',
        'aria-describedby',
        'aria-details',
        'aria-disabled',
        'aria-errormessage',
        'aria-expanded',
        'aria-flowto',
        'aria-haspopup',
        'aria-hidden',
        'aria-invalid',
        'aria-keyshortcuts',
        'aria-label',
        'aria-labelledby',
        'aria-level',
        'aria-live',
        'aria-modal',
        'aria-multiline',
        'aria-multiselectable',
        'aria-orientation',
        'aria-owns',
        'aria-placeholder',
        'aria-posinset',
        'aria-pressed',
        'aria-readonly',
        'aria-relevant',
        'aria-required',
        'aria-roledescription',
        'aria-rowcount',
        'aria-rowindex',
        'aria-rowspan',
        'aria-selected',
        'aria-setsize',
        'aria-sort',
        'aria-valuemax',
        'aria-valuemin',
        'aria-valuenow',
        'aria-valuetext',
        'className',
        'color',
        'height',
        'id',
        'lang',
        'max',
        'media',
        'method',
        'min',
        'name',
        'style',
        'target',
        'type',
        'width',
        'role',
        'tabIndex',
        'accentHeight',
        'accumulate',
        'additive',
        'alignmentBaseline',
        'allowReorder',
        'alphabetic',
        'amplitude',
        'arabicForm',
        'ascent',
        'attributeName',
        'attributeType',
        'autoReverse',
        'azimuth',
        'baseFrequency',
        'baselineShift',
        'baseProfile',
        'bbox',
        'begin',
        'bias',
        'by',
        'calcMode',
        'capHeight',
        'clip',
        'clipPath',
        'clipPathUnits',
        'clipRule',
        'colorInterpolation',
        'colorInterpolationFilters',
        'colorProfile',
        'colorRendering',
        'contentScriptType',
        'contentStyleType',
        'cursor',
        'cx',
        'cy',
        'd',
        'decelerate',
        'descent',
        'diffuseConstant',
        'direction',
        'display',
        'divisor',
        'dominantBaseline',
        'dur',
        'dx',
        'dy',
        'edgeMode',
        'elevation',
        'enableBackground',
        'end',
        'exponent',
        'externalResourcesRequired',
        'fill',
        'fillOpacity',
        'fillRule',
        'filter',
        'filterRes',
        'filterUnits',
        'floodColor',
        'floodOpacity',
        'focusable',
        'fontFamily',
        'fontSize',
        'fontSizeAdjust',
        'fontStretch',
        'fontStyle',
        'fontVariant',
        'fontWeight',
        'format',
        'from',
        'fx',
        'fy',
        'g1',
        'g2',
        'glyphName',
        'glyphOrientationHorizontal',
        'glyphOrientationVertical',
        'glyphRef',
        'gradientTransform',
        'gradientUnits',
        'hanging',
        'horizAdvX',
        'horizOriginX',
        'href',
        'ideographic',
        'imageRendering',
        'in2',
        'in',
        'intercept',
        'k1',
        'k2',
        'k3',
        'k4',
        'k',
        'kernelMatrix',
        'kernelUnitLength',
        'kerning',
        'keyPoints',
        'keySplines',
        'keyTimes',
        'lengthAdjust',
        'letterSpacing',
        'lightingColor',
        'limitingConeAngle',
        'local',
        'markerEnd',
        'markerHeight',
        'markerMid',
        'markerStart',
        'markerUnits',
        'markerWidth',
        'mask',
        'maskContentUnits',
        'maskUnits',
        'mathematical',
        'mode',
        'numOctaves',
        'offset',
        'opacity',
        'operator',
        'order',
        'orient',
        'orientation',
        'origin',
        'overflow',
        'overlinePosition',
        'overlineThickness',
        'paintOrder',
        'panose1',
        'pathLength',
        'patternContentUnits',
        'patternTransform',
        'patternUnits',
        'pointerEvents',
        'pointsAtX',
        'pointsAtY',
        'pointsAtZ',
        'preserveAlpha',
        'preserveAspectRatio',
        'primitiveUnits',
        'r',
        'radius',
        'refX',
        'refY',
        'renderingIntent',
        'repeatCount',
        'repeatDur',
        'requiredExtensions',
        'requiredFeatures',
        'restart',
        'result',
        'rotate',
        'rx',
        'ry',
        'seed',
        'shapeRendering',
        'slope',
        'spacing',
        'specularConstant',
        'specularExponent',
        'speed',
        'spreadMethod',
        'startOffset',
        'stdDeviation',
        'stemh',
        'stemv',
        'stitchTiles',
        'stopColor',
        'stopOpacity',
        'strikethroughPosition',
        'strikethroughThickness',
        'string',
        'stroke',
        'strokeDasharray',
        'strokeDashoffset',
        'strokeLinecap',
        'strokeLinejoin',
        'strokeMiterlimit',
        'strokeOpacity',
        'strokeWidth',
        'surfaceScale',
        'systemLanguage',
        'tableValues',
        'targetX',
        'targetY',
        'textAnchor',
        'textDecoration',
        'textLength',
        'textRendering',
        'to',
        'transform',
        'u1',
        'u2',
        'underlinePosition',
        'underlineThickness',
        'unicode',
        'unicodeBidi',
        'unicodeRange',
        'unitsPerEm',
        'vAlphabetic',
        'values',
        'vectorEffect',
        'version',
        'vertAdvY',
        'vertOriginX',
        'vertOriginY',
        'vHanging',
        'vIdeographic',
        'viewTarget',
        'visibility',
        'vMathematical',
        'widths',
        'wordSpacing',
        'writingMode',
        'x1',
        'x2',
        'x',
        'xChannelSelector',
        'xHeight',
        'xlinkActuate',
        'xlinkArcrole',
        'xlinkHref',
        'xlinkRole',
        'xlinkShow',
        'xlinkTitle',
        'xlinkType',
        'xmlBase',
        'xmlLang',
        'xmlns',
        'xmlnsXlink',
        'xmlSpace',
        'y1',
        'y2',
        'y',
        'yChannelSelector',
        'z',
        'zoomAndPan',
        'ref',
        'key',
        'angle',
    ],
    a2 = ['points', 'pathLength'],
    mh = { svg: FM, polygon: a2, polyline: a2 },
    Z0 = [
        'dangerouslySetInnerHTML',
        'onCopy',
        'onCopyCapture',
        'onCut',
        'onCutCapture',
        'onPaste',
        'onPasteCapture',
        'onCompositionEnd',
        'onCompositionEndCapture',
        'onCompositionStart',
        'onCompositionStartCapture',
        'onCompositionUpdate',
        'onCompositionUpdateCapture',
        'onFocus',
        'onFocusCapture',
        'onBlur',
        'onBlurCapture',
        'onChange',
        'onChangeCapture',
        'onBeforeInput',
        'onBeforeInputCapture',
        'onInput',
        'onInputCapture',
        'onReset',
        'onResetCapture',
        'onSubmit',
        'onSubmitCapture',
        'onInvalid',
        'onInvalidCapture',
        'onLoad',
        'onLoadCapture',
        'onError',
        'onErrorCapture',
        'onKeyDown',
        'onKeyDownCapture',
        'onKeyPress',
        'onKeyPressCapture',
        'onKeyUp',
        'onKeyUpCapture',
        'onAbort',
        'onAbortCapture',
        'onCanPlay',
        'onCanPlayCapture',
        'onCanPlayThrough',
        'onCanPlayThroughCapture',
        'onDurationChange',
        'onDurationChangeCapture',
        'onEmptied',
        'onEmptiedCapture',
        'onEncrypted',
        'onEncryptedCapture',
        'onEnded',
        'onEndedCapture',
        'onLoadedData',
        'onLoadedDataCapture',
        'onLoadedMetadata',
        'onLoadedMetadataCapture',
        'onLoadStart',
        'onLoadStartCapture',
        'onPause',
        'onPauseCapture',
        'onPlay',
        'onPlayCapture',
        'onPlaying',
        'onPlayingCapture',
        'onProgress',
        'onProgressCapture',
        'onRateChange',
        'onRateChangeCapture',
        'onSeeked',
        'onSeekedCapture',
        'onSeeking',
        'onSeekingCapture',
        'onStalled',
        'onStalledCapture',
        'onSuspend',
        'onSuspendCapture',
        'onTimeUpdate',
        'onTimeUpdateCapture',
        'onVolumeChange',
        'onVolumeChangeCapture',
        'onWaiting',
        'onWaitingCapture',
        'onAuxClick',
        'onAuxClickCapture',
        'onClick',
        'onClickCapture',
        'onContextMenu',
        'onContextMenuCapture',
        'onDoubleClick',
        'onDoubleClickCapture',
        'onDrag',
        'onDragCapture',
        'onDragEnd',
        'onDragEndCapture',
        'onDragEnter',
        'onDragEnterCapture',
        'onDragExit',
        'onDragExitCapture',
        'onDragLeave',
        'onDragLeaveCapture',
        'onDragOver',
        'onDragOverCapture',
        'onDragStart',
        'onDragStartCapture',
        'onDrop',
        'onDropCapture',
        'onMouseDown',
        'onMouseDownCapture',
        'onMouseEnter',
        'onMouseLeave',
        'onMouseMove',
        'onMouseMoveCapture',
        'onMouseOut',
        'onMouseOutCapture',
        'onMouseOver',
        'onMouseOverCapture',
        'onMouseUp',
        'onMouseUpCapture',
        'onSelect',
        'onSelectCapture',
        'onTouchCancel',
        'onTouchCancelCapture',
        'onTouchEnd',
        'onTouchEndCapture',
        'onTouchMove',
        'onTouchMoveCapture',
        'onTouchStart',
        'onTouchStartCapture',
        'onPointerDown',
        'onPointerDownCapture',
        'onPointerMove',
        'onPointerMoveCapture',
        'onPointerUp',
        'onPointerUpCapture',
        'onPointerCancel',
        'onPointerCancelCapture',
        'onPointerEnter',
        'onPointerEnterCapture',
        'onPointerLeave',
        'onPointerLeaveCapture',
        'onPointerOver',
        'onPointerOverCapture',
        'onPointerOut',
        'onPointerOutCapture',
        'onGotPointerCapture',
        'onGotPointerCaptureCapture',
        'onLostPointerCapture',
        'onLostPointerCaptureCapture',
        'onScroll',
        'onScrollCapture',
        'onWheel',
        'onWheelCapture',
        'onAnimationStart',
        'onAnimationStartCapture',
        'onAnimationEnd',
        'onAnimationEndCapture',
        'onAnimationIteration',
        'onAnimationIterationCapture',
        'onTransitionEnd',
        'onTransitionEndCapture',
    ],
    nd = function (t, r) {
        if (!t || typeof t == 'function' || typeof t == 'boolean') return null
        var n = t
        if ((C.exports.isValidElement(t) && (n = t.props), !Tr(n))) return null
        var a = {}
        return (
            Object.keys(n).forEach(function (l) {
                Z0.includes(l) &&
                    (a[l] =
                        r ||
                        function (o) {
                            return n[l](n, o)
                        })
            }),
            a
        )
    },
    zM = function (t, r, n) {
        return function (a) {
            return t(r, n, a), null
        }
    },
    _i = function (t, r, n) {
        if (!Tr(t) || ig(t) !== 'object') return null
        var a = null
        return (
            Object.keys(t).forEach(function (l) {
                var o = t[l]
                Z0.includes(l) &&
                    typeof o == 'function' &&
                    (a || (a = {}), (a[l] = zM(o, r, n)))
            }),
            a
        )
    },
    VM = ['children'],
    UM = ['children']
function i2(e, t) {
    if (e == null) return {}
    var r = WM(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function WM(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
var l2 = {
        click: 'onClick',
        mousedown: 'onMouseDown',
        mouseup: 'onMouseUp',
        mouseover: 'onMouseOver',
        mousemove: 'onMouseMove',
        mouseout: 'onMouseOut',
        mouseenter: 'onMouseEnter',
        mouseleave: 'onMouseLeave',
        touchcancel: 'onTouchCancel',
        touchend: 'onTouchEnd',
        touchmove: 'onTouchMove',
        touchstart: 'onTouchStart',
    },
    Oa = function (t) {
        return typeof t == 'string'
            ? t
            : t
            ? t.displayName || t.name || 'Component'
            : ''
    },
    o2 = null,
    gh = null,
    J0 = function e(t) {
        if (t === o2 && Fe(gh)) return gh
        var r = []
        return (
            C.exports.Children.forEach(t, function (n) {
                ce(n) ||
                    (L0.exports.isFragment(n)
                        ? (r = r.concat(e(n.props.children)))
                        : r.push(n))
            }),
            (gh = r),
            (o2 = t),
            r
        )
    }
function Cr(e, t) {
    var r = [],
        n = []
    return (
        Fe(t)
            ? (n = t.map(function (a) {
                  return Oa(a)
              }))
            : (n = [Oa(t)]),
        J0(e).forEach(function (a) {
            var l = hr(a, 'type.displayName') || hr(a, 'type.name')
            n.indexOf(l) !== -1 && r.push(a)
        }),
        r
    )
}
function Ln(e, t) {
    var r = Cr(e, t)
    return r && r[0]
}
var s2 = function (t) {
        if (!t || !t.props) return !1
        var r = t.props,
            n = r.width,
            a = r.height
        return !(!J(n) || n <= 0 || !J(a) || a <= 0)
    },
    HM = [
        'a',
        'altGlyph',
        'altGlyphDef',
        'altGlyphItem',
        'animate',
        'animateColor',
        'animateMotion',
        'animateTransform',
        'circle',
        'clipPath',
        'color-profile',
        'cursor',
        'defs',
        'desc',
        'ellipse',
        'feBlend',
        'feColormatrix',
        'feComponentTransfer',
        'feComposite',
        'feConvolveMatrix',
        'feDiffuseLighting',
        'feDisplacementMap',
        'feDistantLight',
        'feFlood',
        'feFuncA',
        'feFuncB',
        'feFuncG',
        'feFuncR',
        'feGaussianBlur',
        'feImage',
        'feMerge',
        'feMergeNode',
        'feMorphology',
        'feOffset',
        'fePointLight',
        'feSpecularLighting',
        'feSpotLight',
        'feTile',
        'feTurbulence',
        'filter',
        'font',
        'font-face',
        'font-face-format',
        'font-face-name',
        'font-face-url',
        'foreignObject',
        'g',
        'glyph',
        'glyphRef',
        'hkern',
        'image',
        'line',
        'lineGradient',
        'marker',
        'mask',
        'metadata',
        'missing-glyph',
        'mpath',
        'path',
        'pattern',
        'polygon',
        'polyline',
        'radialGradient',
        'rect',
        'script',
        'set',
        'stop',
        'style',
        'svg',
        'switch',
        'symbol',
        'text',
        'textPath',
        'title',
        'tref',
        'tspan',
        'use',
        'view',
        'vkern',
    ],
    GM = function (t) {
        return t && t.type && dc(t.type) && HM.indexOf(t.type) >= 0
    },
    ve = function (t, r, n) {
        var a
        if (!t || typeof t == 'function' || typeof t == 'boolean') return null
        var l = t
        if ((C.exports.isValidElement(t) && (l = t.props), !Tr(l))) return null
        var o = {},
            s =
                (a = mh == null ? void 0 : mh[n]) !== null && a !== void 0
                    ? a
                    : []
        return (
            Object.keys(l).forEach(function (c) {
                ;((n && s.includes(c)) ||
                    BM.includes(c) ||
                    (r && Z0.includes(c))) &&
                    (o[c] = l[c])
            }),
            o
        )
    },
    p3 = function e(t, r) {
        if (t === r) return !0
        var n = C.exports.Children.count(t)
        if (n !== C.exports.Children.count(r)) return !1
        if (n === 0) return !0
        if (n === 1) return c2(Fe(t) ? t[0] : t, Fe(r) ? r[0] : r)
        for (var a = 0; a < n; a++) {
            var l = t[a],
                o = r[a]
            if (Fe(l) || Fe(o)) {
                if (!e(l, o)) return !1
            } else if (!c2(l, o)) return !1
        }
        return !0
    },
    c2 = function (t, r) {
        if (ce(t) && ce(r)) return !0
        if (!ce(t) && !ce(r)) {
            var n = t.props || {},
                a = n.children,
                l = i2(n, VM),
                o = r.props || {},
                s = o.children,
                c = i2(o, UM)
            return a && s ? pl(l, c) && p3(a, s) : !a && !s ? pl(l, c) : !1
        }
        return !1
    },
    u2 = function (t, r) {
        var n = [],
            a = {}
        return (
            J0(t).forEach(function (l, o) {
                if (GM(l)) n.push(l)
                else if (l) {
                    var s = Oa(l.type),
                        c = r[s] || {},
                        u = c.handler,
                        f = c.once
                    if (u && (!f || !a[s])) {
                        var p = u(l, s, o)
                        n.push(p), (a[s] = !0)
                    }
                }
            }),
            n
        )
    },
    qM = function (t) {
        var r = t && t.type
        return r && l2[r] ? l2[r] : null
    },
    KM = function (t, r) {
        return J0(r).indexOf(t)
    },
    YM = ['children', 'width', 'height', 'viewBox', 'className', 'style']
function XM(e, t) {
    if (e == null) return {}
    var r = ZM(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function ZM(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function lg(e) {
    var t = e.children,
        r = e.width,
        n = e.height,
        a = e.viewBox,
        l = e.className,
        o = e.style,
        s = XM(e, YM),
        c = a || { width: r, height: n, x: 0, y: 0 },
        u = He('recharts-surface', l)
    return d('svg', {
        ...ve(s, !0, 'svg'),
        className: u,
        width: r,
        height: n,
        style: o,
        viewBox: ''
            .concat(c.x, ' ')
            .concat(c.y, ' ')
            .concat(c.width, ' ')
            .concat(c.height),
        children: [
            i('title', { children: e.title }),
            i('desc', { children: e.desc }),
            t,
        ],
    })
}
var JM = ['children', 'className']
function QM(e, t) {
    if (e == null) return {}
    var r = eD(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function eD(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
var Be = K.forwardRef(function (e, t) {
        var r = e.children,
            n = e.className,
            a = QM(e, JM),
            l = He('recharts-layer', n)
        return i('g', { className: l, ...ve(a, !0), ref: t, children: r })
    }),
    tD = Kf
function rD() {
    ;(this.__data__ = new tD()), (this.size = 0)
}
var nD = rD
function aD(e) {
    var t = this.__data__,
        r = t.delete(e)
    return (this.size = t.size), r
}
var iD = aD
function lD(e) {
    return this.__data__.get(e)
}
var oD = lD
function sD(e) {
    return this.__data__.has(e)
}
var cD = sD,
    uD = Kf,
    dD = G0,
    fD = q0,
    pD = 200
function hD(e, t) {
    var r = this.__data__
    if (r instanceof uD) {
        var n = r.__data__
        if (!dD || n.length < pD - 1)
            return n.push([e, t]), (this.size = ++r.size), this
        r = this.__data__ = new fD(n)
    }
    return r.set(e, t), (this.size = r.size), this
}
var mD = hD,
    gD = Kf,
    vD = nD,
    yD = iD,
    bD = oD,
    xD = cD,
    wD = mD
function co(e) {
    var t = (this.__data__ = new gD(e))
    this.size = t.size
}
co.prototype.clear = vD
co.prototype.delete = yD
co.prototype.get = bD
co.prototype.has = xD
co.prototype.set = wD
var h3 = co,
    ND = '__lodash_hash_undefined__'
function SD(e) {
    return this.__data__.set(e, ND), this
}
var CD = SD
function PD(e) {
    return this.__data__.has(e)
}
var _D = PD,
    AD = q0,
    ED = CD,
    kD = _D
function ad(e) {
    var t = -1,
        r = e == null ? 0 : e.length
    for (this.__data__ = new AD(); ++t < r; ) this.add(e[t])
}
ad.prototype.add = ad.prototype.push = ED
ad.prototype.has = kD
var m3 = ad
function OD(e, t) {
    for (var r = -1, n = e == null ? 0 : e.length; ++r < n; )
        if (t(e[r], r, e)) return !0
    return !1
}
var g3 = OD
function TD(e, t) {
    return e.has(t)
}
var v3 = TD,
    MD = m3,
    DD = g3,
    $D = v3,
    ID = 1,
    RD = 2
function LD(e, t, r, n, a, l) {
    var o = r & ID,
        s = e.length,
        c = t.length
    if (s != c && !(o && c > s)) return !1
    var u = l.get(e),
        f = l.get(t)
    if (u && f) return u == t && f == e
    var p = -1,
        m = !0,
        v = r & RD ? new MD() : void 0
    for (l.set(e, t), l.set(t, e); ++p < s; ) {
        var b = e[p],
            h = t[p]
        if (n) var g = o ? n(h, b, p, t, e, l) : n(b, h, p, e, t, l)
        if (g !== void 0) {
            if (g) continue
            m = !1
            break
        }
        if (v) {
            if (
                !DD(t, function (x, w) {
                    if (!$D(v, w) && (b === x || a(b, x, r, n, l)))
                        return v.push(w)
                })
            ) {
                m = !1
                break
            }
        } else if (!(b === h || a(b, h, r, n, l))) {
            m = !1
            break
        }
    }
    return l.delete(e), l.delete(t), m
}
var y3 = LD,
    jD = An,
    FD = jD.Uint8Array,
    BD = FD
function zD(e) {
    var t = -1,
        r = Array(e.size)
    return (
        e.forEach(function (n, a) {
            r[++t] = [a, n]
        }),
        r
    )
}
var VD = zD
function UD(e) {
    var t = -1,
        r = Array(e.size)
    return (
        e.forEach(function (n) {
            r[++t] = n
        }),
        r
    )
}
var Q0 = UD,
    d2 = uc,
    f2 = BD,
    WD = H0,
    HD = y3,
    GD = VD,
    qD = Q0,
    KD = 1,
    YD = 2,
    XD = '[object Boolean]',
    ZD = '[object Date]',
    JD = '[object Error]',
    QD = '[object Map]',
    e$ = '[object Number]',
    t$ = '[object RegExp]',
    r$ = '[object Set]',
    n$ = '[object String]',
    a$ = '[object Symbol]',
    i$ = '[object ArrayBuffer]',
    l$ = '[object DataView]',
    p2 = d2 ? d2.prototype : void 0,
    vh = p2 ? p2.valueOf : void 0
function o$(e, t, r, n, a, l, o) {
    switch (r) {
        case l$:
            if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
                return !1
            ;(e = e.buffer), (t = t.buffer)
        case i$:
            return !(e.byteLength != t.byteLength || !l(new f2(e), new f2(t)))
        case XD:
        case ZD:
        case e$:
            return WD(+e, +t)
        case JD:
            return e.name == t.name && e.message == t.message
        case t$:
        case n$:
            return e == t + ''
        case QD:
            var s = GD
        case r$:
            var c = n & KD
            if ((s || (s = qD), e.size != t.size && !c)) return !1
            var u = o.get(e)
            if (u) return u == t
            ;(n |= YD), o.set(e, t)
            var f = HD(s(e), s(t), n, a, l, o)
            return o.delete(e), f
        case a$:
            if (vh) return vh.call(e) == vh.call(t)
    }
    return !1
}
var s$ = o$
function c$(e, t) {
    for (var r = -1, n = t.length, a = e.length; ++r < n; ) e[a + r] = t[r]
    return e
}
var b3 = c$,
    u$ = b3,
    d$ = Fe
function f$(e, t, r) {
    var n = t(e)
    return d$(e) ? n : u$(n, r(e))
}
var p$ = f$
function h$(e, t) {
    for (var r = -1, n = e == null ? 0 : e.length, a = 0, l = []; ++r < n; ) {
        var o = e[r]
        t(o, r, e) && (l[a++] = o)
    }
    return l
}
var m$ = h$
function g$() {
    return []
}
var v$ = g$,
    y$ = m$,
    b$ = v$,
    x$ = Object.prototype,
    w$ = x$.propertyIsEnumerable,
    h2 = Object.getOwnPropertySymbols,
    N$ = h2
        ? function (e) {
              return e == null
                  ? []
                  : ((e = Object(e)),
                    y$(h2(e), function (t) {
                        return w$.call(e, t)
                    }))
          }
        : b$,
    S$ = N$
function C$(e, t) {
    for (var r = -1, n = Array(e); ++r < e; ) n[r] = t(r)
    return n
}
var P$ = C$,
    _$ = ta,
    A$ = ra,
    E$ = '[object Arguments]'
function k$(e) {
    return A$(e) && _$(e) == E$
}
var O$ = k$,
    m2 = O$,
    T$ = ra,
    x3 = Object.prototype,
    M$ = x3.hasOwnProperty,
    D$ = x3.propertyIsEnumerable,
    $$ = m2(
        (function () {
            return arguments
        })()
    )
        ? m2
        : function (e) {
              return T$(e) && M$.call(e, 'callee') && !D$.call(e, 'callee')
          },
    ev = $$,
    id = { exports: {} }
function I$() {
    return !1
}
var R$ = I$
;(function (e, t) {
    var r = An,
        n = R$,
        a = t && !t.nodeType && t,
        l = a && !0 && e && !e.nodeType && e,
        o = l && l.exports === a,
        s = o ? r.Buffer : void 0,
        c = s ? s.isBuffer : void 0,
        u = c || n
    e.exports = u
})(id, id.exports)
var L$ = 9007199254740991,
    j$ = /^(?:0|[1-9]\d*)$/
function F$(e, t) {
    var r = typeof e
    return (
        (t = t == null ? L$ : t),
        !!t &&
            (r == 'number' || (r != 'symbol' && j$.test(e))) &&
            e > -1 &&
            e % 1 == 0 &&
            e < t
    )
}
var tv = F$,
    B$ = 9007199254740991
function z$(e) {
    return typeof e == 'number' && e > -1 && e % 1 == 0 && e <= B$
}
var rv = z$,
    V$ = ta,
    U$ = rv,
    W$ = ra,
    H$ = '[object Arguments]',
    G$ = '[object Array]',
    q$ = '[object Boolean]',
    K$ = '[object Date]',
    Y$ = '[object Error]',
    X$ = '[object Function]',
    Z$ = '[object Map]',
    J$ = '[object Number]',
    Q$ = '[object Object]',
    eI = '[object RegExp]',
    tI = '[object Set]',
    rI = '[object String]',
    nI = '[object WeakMap]',
    aI = '[object ArrayBuffer]',
    iI = '[object DataView]',
    lI = '[object Float32Array]',
    oI = '[object Float64Array]',
    sI = '[object Int8Array]',
    cI = '[object Int16Array]',
    uI = '[object Int32Array]',
    dI = '[object Uint8Array]',
    fI = '[object Uint8ClampedArray]',
    pI = '[object Uint16Array]',
    hI = '[object Uint32Array]',
    et = {}
et[lI] =
    et[oI] =
    et[sI] =
    et[cI] =
    et[uI] =
    et[dI] =
    et[fI] =
    et[pI] =
    et[hI] =
        !0
et[H$] =
    et[G$] =
    et[aI] =
    et[q$] =
    et[iI] =
    et[K$] =
    et[Y$] =
    et[X$] =
    et[Z$] =
    et[J$] =
    et[Q$] =
    et[eI] =
    et[tI] =
    et[rI] =
    et[nI] =
        !1
function mI(e) {
    return W$(e) && U$(e.length) && !!et[V$(e)]
}
var gI = mI
function vI(e) {
    return function (t) {
        return e(t)
    }
}
var w3 = vI,
    og = { exports: {} }
;(function (e, t) {
    var r = i3,
        n = t && !t.nodeType && t,
        a = n && !0 && e && !e.nodeType && e,
        l = a && a.exports === n,
        o = l && r.process,
        s = (function () {
            try {
                var c = a && a.require && a.require('util').types
                return c || (o && o.binding && o.binding('util'))
            } catch {}
        })()
    e.exports = s
})(og, og.exports)
var yI = gI,
    bI = w3,
    g2 = og.exports,
    v2 = g2 && g2.isTypedArray,
    xI = v2 ? bI(v2) : yI,
    N3 = xI,
    wI = P$,
    NI = ev,
    SI = Fe,
    CI = id.exports,
    PI = tv,
    _I = N3,
    AI = Object.prototype,
    EI = AI.hasOwnProperty
function kI(e, t) {
    var r = SI(e),
        n = !r && NI(e),
        a = !r && !n && CI(e),
        l = !r && !n && !a && _I(e),
        o = r || n || a || l,
        s = o ? wI(e.length, String) : [],
        c = s.length
    for (var u in e)
        (t || EI.call(e, u)) &&
            !(
                o &&
                (u == 'length' ||
                    (a && (u == 'offset' || u == 'parent')) ||
                    (l &&
                        (u == 'buffer' ||
                            u == 'byteLength' ||
                            u == 'byteOffset')) ||
                    PI(u, c))
            ) &&
            s.push(u)
    return s
}
var OI = kI,
    TI = Object.prototype
function MI(e) {
    var t = e && e.constructor,
        r = (typeof t == 'function' && t.prototype) || TI
    return e === r
}
var DI = MI
function $I(e, t) {
    return function (r) {
        return e(t(r))
    }
}
var S3 = $I,
    II = S3,
    RI = II(Object.keys, Object),
    LI = RI,
    jI = DI,
    FI = LI,
    BI = Object.prototype,
    zI = BI.hasOwnProperty
function VI(e) {
    if (!jI(e)) return FI(e)
    var t = []
    for (var r in Object(e)) zI.call(e, r) && r != 'constructor' && t.push(r)
    return t
}
var UI = VI,
    WI = pe,
    HI = rv
function GI(e) {
    return e != null && HI(e.length) && !WI(e)
}
var fc = GI,
    qI = OI,
    KI = UI,
    YI = fc
function XI(e) {
    return YI(e) ? qI(e) : KI(e)
}
var Jf = XI,
    ZI = p$,
    JI = S$,
    QI = Jf
function eR(e) {
    return ZI(e, QI, JI)
}
var tR = eR,
    y2 = tR,
    rR = 1,
    nR = Object.prototype,
    aR = nR.hasOwnProperty
function iR(e, t, r, n, a, l) {
    var o = r & rR,
        s = y2(e),
        c = s.length,
        u = y2(t),
        f = u.length
    if (c != f && !o) return !1
    for (var p = c; p--; ) {
        var m = s[p]
        if (!(o ? m in t : aR.call(t, m))) return !1
    }
    var v = l.get(e),
        b = l.get(t)
    if (v && b) return v == t && b == e
    var h = !0
    l.set(e, t), l.set(t, e)
    for (var g = o; ++p < c; ) {
        m = s[p]
        var x = e[m],
            w = t[m]
        if (n) var y = o ? n(w, x, m, t, e, l) : n(x, w, m, e, t, l)
        if (!(y === void 0 ? x === w || a(x, w, r, n, l) : y)) {
            h = !1
            break
        }
        g || (g = m == 'constructor')
    }
    if (h && !g) {
        var N = e.constructor,
            S = t.constructor
        N != S &&
            'constructor' in e &&
            'constructor' in t &&
            !(
                typeof N == 'function' &&
                N instanceof N &&
                typeof S == 'function' &&
                S instanceof S
            ) &&
            (h = !1)
    }
    return l.delete(e), l.delete(t), h
}
var lR = iR,
    oR = Mi,
    sR = An,
    cR = oR(sR, 'DataView'),
    uR = cR,
    dR = Mi,
    fR = An,
    pR = dR(fR, 'Promise'),
    hR = pR,
    mR = Mi,
    gR = An,
    vR = mR(gR, 'Set'),
    C3 = vR,
    yR = Mi,
    bR = An,
    xR = yR(bR, 'WeakMap'),
    wR = xR,
    sg = uR,
    cg = G0,
    ug = hR,
    dg = C3,
    fg = wR,
    P3 = ta,
    uo = o3,
    b2 = '[object Map]',
    NR = '[object Object]',
    x2 = '[object Promise]',
    w2 = '[object Set]',
    N2 = '[object WeakMap]',
    S2 = '[object DataView]',
    SR = uo(sg),
    CR = uo(cg),
    PR = uo(ug),
    _R = uo(dg),
    AR = uo(fg),
    ti = P3
;((sg && ti(new sg(new ArrayBuffer(1))) != S2) ||
    (cg && ti(new cg()) != b2) ||
    (ug && ti(ug.resolve()) != x2) ||
    (dg && ti(new dg()) != w2) ||
    (fg && ti(new fg()) != N2)) &&
    (ti = function (e) {
        var t = P3(e),
            r = t == NR ? e.constructor : void 0,
            n = r ? uo(r) : ''
        if (n)
            switch (n) {
                case SR:
                    return S2
                case CR:
                    return b2
                case PR:
                    return x2
                case _R:
                    return w2
                case AR:
                    return N2
            }
        return t
    })
var ER = ti,
    yh = h3,
    kR = y3,
    OR = s$,
    TR = lR,
    C2 = ER,
    P2 = Fe,
    _2 = id.exports,
    MR = N3,
    DR = 1,
    A2 = '[object Arguments]',
    E2 = '[object Array]',
    Wc = '[object Object]',
    $R = Object.prototype,
    k2 = $R.hasOwnProperty
function IR(e, t, r, n, a, l) {
    var o = P2(e),
        s = P2(t),
        c = o ? E2 : C2(e),
        u = s ? E2 : C2(t)
    ;(c = c == A2 ? Wc : c), (u = u == A2 ? Wc : u)
    var f = c == Wc,
        p = u == Wc,
        m = c == u
    if (m && _2(e)) {
        if (!_2(t)) return !1
        ;(o = !0), (f = !1)
    }
    if (m && !f)
        return (
            l || (l = new yh()),
            o || MR(e) ? kR(e, t, r, n, a, l) : OR(e, t, c, r, n, a, l)
        )
    if (!(r & DR)) {
        var v = f && k2.call(e, '__wrapped__'),
            b = p && k2.call(t, '__wrapped__')
        if (v || b) {
            var h = v ? e.value() : e,
                g = b ? t.value() : t
            return l || (l = new yh()), a(h, g, r, n, l)
        }
    }
    return m ? (l || (l = new yh()), TR(e, t, r, n, a, l)) : !1
}
var RR = IR,
    LR = RR,
    O2 = ra
function _3(e, t, r, n, a) {
    return e === t
        ? !0
        : e == null || t == null || (!O2(e) && !O2(t))
        ? e !== e && t !== t
        : LR(e, t, r, n, _3, a)
}
var nv = _3,
    jR = h3,
    FR = nv,
    BR = 1,
    zR = 2
function VR(e, t, r, n) {
    var a = r.length,
        l = a,
        o = !n
    if (e == null) return !l
    for (e = Object(e); a--; ) {
        var s = r[a]
        if (o && s[2] ? s[1] !== e[s[0]] : !(s[0] in e)) return !1
    }
    for (; ++a < l; ) {
        s = r[a]
        var c = s[0],
            u = e[c],
            f = s[1]
        if (o && s[2]) {
            if (u === void 0 && !(c in e)) return !1
        } else {
            var p = new jR()
            if (n) var m = n(u, f, c, e, t, p)
            if (!(m === void 0 ? FR(f, u, BR | zR, n, p) : m)) return !1
        }
    }
    return !0
}
var UR = VR,
    WR = Tr
function HR(e) {
    return e === e && !WR(e)
}
var A3 = HR,
    GR = A3,
    qR = Jf
function KR(e) {
    for (var t = qR(e), r = t.length; r--; ) {
        var n = t[r],
            a = e[n]
        t[r] = [n, a, GR(a)]
    }
    return t
}
var YR = KR
function XR(e, t) {
    return function (r) {
        return r == null ? !1 : r[e] === t && (t !== void 0 || e in Object(r))
    }
}
var E3 = XR,
    ZR = UR,
    JR = YR,
    QR = E3
function eL(e) {
    var t = JR(e)
    return t.length == 1 && t[0][2]
        ? QR(t[0][0], t[0][1])
        : function (r) {
              return r === e || ZR(r, e, t)
          }
}
var tL = eL
function rL(e, t) {
    return e != null && t in Object(e)
}
var nL = rL,
    aL = d3,
    iL = ev,
    lL = Fe,
    oL = tv,
    sL = rv,
    cL = Xf
function uL(e, t, r) {
    t = aL(t, e)
    for (var n = -1, a = t.length, l = !1; ++n < a; ) {
        var o = cL(t[n])
        if (!(l = e != null && r(e, o))) break
        e = e[o]
    }
    return l || ++n != a
        ? l
        : ((a = e == null ? 0 : e.length),
          !!a && sL(a) && oL(o, a) && (lL(e) || iL(e)))
}
var dL = uL,
    fL = nL,
    pL = dL
function hL(e, t) {
    return e != null && pL(e, t, fL)
}
var mL = hL,
    gL = nv,
    vL = hr,
    yL = mL,
    bL = W0,
    xL = A3,
    wL = E3,
    NL = Xf,
    SL = 1,
    CL = 2
function PL(e, t) {
    return bL(e) && xL(t)
        ? wL(NL(e), t)
        : function (r) {
              var n = vL(r, e)
              return n === void 0 && n === t ? yL(r, e) : gL(t, n, SL | CL)
          }
}
var _L = PL
function AL(e) {
    return e
}
var fo = AL
function EL(e) {
    return function (t) {
        return t == null ? void 0 : t[e]
    }
}
var kL = EL,
    OL = X0
function TL(e) {
    return function (t) {
        return OL(t, e)
    }
}
var ML = TL,
    DL = kL,
    $L = ML,
    IL = W0,
    RL = Xf
function LL(e) {
    return IL(e) ? DL(RL(e)) : $L(e)
}
var jL = LL,
    FL = tL,
    BL = _L,
    zL = fo,
    VL = Fe,
    UL = jL
function WL(e) {
    return typeof e == 'function'
        ? e
        : e == null
        ? zL
        : typeof e == 'object'
        ? VL(e)
            ? BL(e[0], e[1])
            : FL(e)
        : UL(e)
}
var En = WL
function HL(e, t, r, n) {
    for (var a = e.length, l = r + (n ? 1 : -1); n ? l-- : ++l < a; )
        if (t(e[l], l, e)) return l
    return -1
}
var k3 = HL
function GL(e) {
    return e !== e
}
var qL = GL
function KL(e, t, r) {
    for (var n = r - 1, a = e.length; ++n < a; ) if (e[n] === t) return n
    return -1
}
var YL = KL,
    XL = k3,
    ZL = qL,
    JL = YL
function QL(e, t, r) {
    return t === t ? JL(e, t, r) : XL(e, ZL, r)
}
var ej = QL,
    tj = ej
function rj(e, t) {
    var r = e == null ? 0 : e.length
    return !!r && tj(e, t, 0) > -1
}
var nj = rj
function aj(e, t, r) {
    for (var n = -1, a = e == null ? 0 : e.length; ++n < a; )
        if (r(t, e[n])) return !0
    return !1
}
var ij = aj
function lj() {}
var oj = lj,
    bh = C3,
    sj = oj,
    cj = Q0,
    uj = 1 / 0,
    dj =
        bh && 1 / cj(new bh([, -0]))[1] == uj
            ? function (e) {
                  return new bh(e)
              }
            : sj,
    fj = dj,
    pj = m3,
    hj = nj,
    mj = ij,
    gj = v3,
    vj = fj,
    yj = Q0,
    bj = 200
function xj(e, t, r) {
    var n = -1,
        a = hj,
        l = e.length,
        o = !0,
        s = [],
        c = s
    if (r) (o = !1), (a = mj)
    else if (l >= bj) {
        var u = t ? null : vj(e)
        if (u) return yj(u)
        ;(o = !1), (a = gj), (c = new pj())
    } else c = t ? [] : s
    e: for (; ++n < l; ) {
        var f = e[n],
            p = t ? t(f) : f
        if (((f = r || f !== 0 ? f : 0), o && p === p)) {
            for (var m = c.length; m--; ) if (c[m] === p) continue e
            t && c.push(p), s.push(f)
        } else a(c, p, r) || (c !== s && c.push(p), s.push(f))
    }
    return s
}
var wj = xj,
    Nj = En,
    Sj = wj
function Cj(e, t) {
    return e && e.length ? Sj(e, Nj(t)) : []
}
var ld = Cj
function Pj(e, t, r) {
    var n = -1,
        a = e.length
    t < 0 && (t = -t > a ? 0 : a + t),
        (r = r > a ? a : r),
        r < 0 && (r += a),
        (a = t > r ? 0 : (r - t) >>> 0),
        (t >>>= 0)
    for (var l = Array(a); ++n < a; ) l[n] = e[n + t]
    return l
}
var _j = Pj,
    Aj = _j
function Ej(e, t, r) {
    var n = e.length
    return (r = r === void 0 ? n : r), !t && r >= n ? e : Aj(e, t, r)
}
var kj = Ej,
    Oj = '\\ud800-\\udfff',
    Tj = '\\u0300-\\u036f',
    Mj = '\\ufe20-\\ufe2f',
    Dj = '\\u20d0-\\u20ff',
    $j = Tj + Mj + Dj,
    Ij = '\\ufe0e\\ufe0f',
    Rj = '\\u200d',
    Lj = RegExp('[' + Rj + Oj + $j + Ij + ']')
function jj(e) {
    return Lj.test(e)
}
var O3 = jj
function Fj(e) {
    return e.split('')
}
var Bj = Fj,
    T3 = '\\ud800-\\udfff',
    zj = '\\u0300-\\u036f',
    Vj = '\\ufe20-\\ufe2f',
    Uj = '\\u20d0-\\u20ff',
    Wj = zj + Vj + Uj,
    Hj = '\\ufe0e\\ufe0f',
    Gj = '[' + T3 + ']',
    pg = '[' + Wj + ']',
    hg = '\\ud83c[\\udffb-\\udfff]',
    qj = '(?:' + pg + '|' + hg + ')',
    M3 = '[^' + T3 + ']',
    D3 = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    $3 = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    Kj = '\\u200d',
    I3 = qj + '?',
    R3 = '[' + Hj + ']?',
    Yj = '(?:' + Kj + '(?:' + [M3, D3, $3].join('|') + ')' + R3 + I3 + ')*',
    Xj = R3 + I3 + Yj,
    Zj = '(?:' + [M3 + pg + '?', pg, D3, $3, Gj].join('|') + ')',
    Jj = RegExp(hg + '(?=' + hg + ')|' + Zj + Xj, 'g')
function Qj(e) {
    return e.match(Jj) || []
}
var eF = Qj,
    tF = Bj,
    rF = O3,
    nF = eF
function aF(e) {
    return rF(e) ? nF(e) : tF(e)
}
var iF = aF,
    lF = kj,
    oF = O3,
    sF = iF,
    cF = u3
function uF(e) {
    return function (t) {
        t = cF(t)
        var r = oF(t) ? sF(t) : void 0,
            n = r ? r[0] : t.charAt(0),
            a = r ? lF(r, 1).join('') : t.slice(1)
        return n[e]() + a
    }
}
var dF = uF,
    fF = dF,
    pF = fF('toUpperCase'),
    Qf = pF
function Xe(e) {
    return function () {
        return e
    }
}
const L3 = Math.cos,
    od = Math.sin,
    un = Math.sqrt,
    sd = Math.PI,
    ep = 2 * sd,
    mg = Math.PI,
    gg = 2 * mg,
    ri = 1e-6,
    hF = gg - ri
function j3(e) {
    this._ += e[0]
    for (let t = 1, r = e.length; t < r; ++t) this._ += arguments[t] + e[t]
}
function mF(e) {
    let t = Math.floor(e)
    if (!(t >= 0)) throw new Error(`invalid digits: ${e}`)
    if (t > 15) return j3
    const r = 10 ** t
    return function (n) {
        this._ += n[0]
        for (let a = 1, l = n.length; a < l; ++a)
            this._ += Math.round(arguments[a] * r) / r + n[a]
    }
}
class gF {
    constructor(t) {
        ;(this._x0 = this._y0 = this._x1 = this._y1 = null),
            (this._ = ''),
            (this._append = t == null ? j3 : mF(t))
    }
    moveTo(t, r) {
        this._append`M${(this._x0 = this._x1 = +t)},${(this._y0 = this._y1 =
            +r)}`
    }
    closePath() {
        this._x1 !== null &&
            ((this._x1 = this._x0), (this._y1 = this._y0), this._append`Z`)
    }
    lineTo(t, r) {
        this._append`L${(this._x1 = +t)},${(this._y1 = +r)}`
    }
    quadraticCurveTo(t, r, n, a) {
        this._append`Q${+t},${+r},${(this._x1 = +n)},${(this._y1 = +a)}`
    }
    bezierCurveTo(t, r, n, a, l, o) {
        this._append`C${+t},${+r},${+n},${+a},${(this._x1 = +l)},${(this._y1 =
            +o)}`
    }
    arcTo(t, r, n, a, l) {
        if (((t = +t), (r = +r), (n = +n), (a = +a), (l = +l), l < 0))
            throw new Error(`negative radius: ${l}`)
        let o = this._x1,
            s = this._y1,
            c = n - t,
            u = a - r,
            f = o - t,
            p = s - r,
            m = f * f + p * p
        if (this._x1 === null)
            this._append`M${(this._x1 = t)},${(this._y1 = r)}`
        else if (m > ri)
            if (!(Math.abs(p * c - u * f) > ri) || !l)
                this._append`L${(this._x1 = t)},${(this._y1 = r)}`
            else {
                let v = n - o,
                    b = a - s,
                    h = c * c + u * u,
                    g = v * v + b * b,
                    x = Math.sqrt(h),
                    w = Math.sqrt(m),
                    y =
                        l *
                        Math.tan(
                            (mg - Math.acos((h + m - g) / (2 * x * w))) / 2
                        ),
                    N = y / w,
                    S = y / x
                Math.abs(N - 1) > ri &&
                    this._append`L${t + N * f},${r + N * p}`,
                    this._append`A${l},${l},0,0,${+(
                        p * v >
                        f * b
                    )},${(this._x1 = t + S * c)},${(this._y1 = r + S * u)}`
            }
    }
    arc(t, r, n, a, l, o) {
        if (((t = +t), (r = +r), (n = +n), (o = !!o), n < 0))
            throw new Error(`negative radius: ${n}`)
        let s = n * Math.cos(a),
            c = n * Math.sin(a),
            u = t + s,
            f = r + c,
            p = 1 ^ o,
            m = o ? a - l : l - a
        this._x1 === null
            ? this._append`M${u},${f}`
            : (Math.abs(this._x1 - u) > ri || Math.abs(this._y1 - f) > ri) &&
              this._append`L${u},${f}`,
            n &&
                (m < 0 && (m = (m % gg) + gg),
                m > hF
                    ? this._append`A${n},${n},0,1,${p},${t - s},${
                          r - c
                      }A${n},${n},0,1,${p},${(this._x1 = u)},${(this._y1 = f)}`
                    : m > ri &&
                      this._append`A${n},${n},0,${+(m >= mg)},${p},${(this._x1 =
                          t + n * Math.cos(l))},${(this._y1 =
                          r + n * Math.sin(l))}`)
    }
    rect(t, r, n, a) {
        this._append`M${(this._x0 = this._x1 = +t)},${(this._y0 = this._y1 =
            +r)}h${(n = +n)}v${+a}h${-n}Z`
    }
    toString() {
        return this._
    }
}
function av(e) {
    let t = 3
    return (
        (e.digits = function (r) {
            if (!arguments.length) return t
            if (r == null) t = null
            else {
                const n = Math.floor(r)
                if (!(n >= 0)) throw new RangeError(`invalid digits: ${r}`)
                t = n
            }
            return e
        }),
        () => new gF(t)
    )
}
function iv(e) {
    return typeof e == 'object' && 'length' in e ? e : Array.from(e)
}
function F3(e) {
    this._context = e
}
F3.prototype = {
    areaStart: function () {
        this._line = 0
    },
    areaEnd: function () {
        this._line = NaN
    },
    lineStart: function () {
        this._point = 0
    },
    lineEnd: function () {
        ;(this._line || (this._line !== 0 && this._point === 1)) &&
            this._context.closePath(),
            (this._line = 1 - this._line)
    },
    point: function (e, t) {
        switch (((e = +e), (t = +t), this._point)) {
            case 0:
                ;(this._point = 1),
                    this._line
                        ? this._context.lineTo(e, t)
                        : this._context.moveTo(e, t)
                break
            case 1:
                this._point = 2
            default:
                this._context.lineTo(e, t)
                break
        }
    },
}
function tp(e) {
    return new F3(e)
}
function B3(e) {
    return e[0]
}
function z3(e) {
    return e[1]
}
function V3(e, t) {
    var r = Xe(!0),
        n = null,
        a = tp,
        l = null,
        o = av(s)
    ;(e = typeof e == 'function' ? e : e === void 0 ? B3 : Xe(e)),
        (t = typeof t == 'function' ? t : t === void 0 ? z3 : Xe(t))
    function s(c) {
        var u,
            f = (c = iv(c)).length,
            p,
            m = !1,
            v
        for (n == null && (l = a((v = o()))), u = 0; u <= f; ++u)
            !(u < f && r((p = c[u]), u, c)) === m &&
                ((m = !m) ? l.lineStart() : l.lineEnd()),
                m && l.point(+e(p, u, c), +t(p, u, c))
        if (v) return (l = null), v + '' || null
    }
    return (
        (s.x = function (c) {
            return arguments.length
                ? ((e = typeof c == 'function' ? c : Xe(+c)), s)
                : e
        }),
        (s.y = function (c) {
            return arguments.length
                ? ((t = typeof c == 'function' ? c : Xe(+c)), s)
                : t
        }),
        (s.defined = function (c) {
            return arguments.length
                ? ((r = typeof c == 'function' ? c : Xe(!!c)), s)
                : r
        }),
        (s.curve = function (c) {
            return arguments.length ? ((a = c), n != null && (l = a(n)), s) : a
        }),
        (s.context = function (c) {
            return arguments.length
                ? (c == null ? (n = l = null) : (l = a((n = c))), s)
                : n
        }),
        s
    )
}
function Hc(e, t, r) {
    var n = null,
        a = Xe(!0),
        l = null,
        o = tp,
        s = null,
        c = av(u)
    ;(e = typeof e == 'function' ? e : e === void 0 ? B3 : Xe(+e)),
        (t = typeof t == 'function' ? t : Xe(t === void 0 ? 0 : +t)),
        (r = typeof r == 'function' ? r : r === void 0 ? z3 : Xe(+r))
    function u(p) {
        var m,
            v,
            b,
            h = (p = iv(p)).length,
            g,
            x = !1,
            w,
            y = new Array(h),
            N = new Array(h)
        for (l == null && (s = o((w = c()))), m = 0; m <= h; ++m) {
            if (!(m < h && a((g = p[m]), m, p)) === x)
                if ((x = !x)) (v = m), s.areaStart(), s.lineStart()
                else {
                    for (s.lineEnd(), s.lineStart(), b = m - 1; b >= v; --b)
                        s.point(y[b], N[b])
                    s.lineEnd(), s.areaEnd()
                }
            x &&
                ((y[m] = +e(g, m, p)),
                (N[m] = +t(g, m, p)),
                s.point(n ? +n(g, m, p) : y[m], r ? +r(g, m, p) : N[m]))
        }
        if (w) return (s = null), w + '' || null
    }
    function f() {
        return V3().defined(a).curve(o).context(l)
    }
    return (
        (u.x = function (p) {
            return arguments.length
                ? ((e = typeof p == 'function' ? p : Xe(+p)), (n = null), u)
                : e
        }),
        (u.x0 = function (p) {
            return arguments.length
                ? ((e = typeof p == 'function' ? p : Xe(+p)), u)
                : e
        }),
        (u.x1 = function (p) {
            return arguments.length
                ? ((n = p == null ? null : typeof p == 'function' ? p : Xe(+p)),
                  u)
                : n
        }),
        (u.y = function (p) {
            return arguments.length
                ? ((t = typeof p == 'function' ? p : Xe(+p)), (r = null), u)
                : t
        }),
        (u.y0 = function (p) {
            return arguments.length
                ? ((t = typeof p == 'function' ? p : Xe(+p)), u)
                : t
        }),
        (u.y1 = function (p) {
            return arguments.length
                ? ((r = p == null ? null : typeof p == 'function' ? p : Xe(+p)),
                  u)
                : r
        }),
        (u.lineX0 = u.lineY0 =
            function () {
                return f().x(e).y(t)
            }),
        (u.lineY1 = function () {
            return f().x(e).y(r)
        }),
        (u.lineX1 = function () {
            return f().x(n).y(t)
        }),
        (u.defined = function (p) {
            return arguments.length
                ? ((a = typeof p == 'function' ? p : Xe(!!p)), u)
                : a
        }),
        (u.curve = function (p) {
            return arguments.length ? ((o = p), l != null && (s = o(l)), u) : o
        }),
        (u.context = function (p) {
            return arguments.length
                ? (p == null ? (l = s = null) : (s = o((l = p))), u)
                : l
        }),
        u
    )
}
const lv = {
        draw(e, t) {
            const r = un(t / sd)
            e.moveTo(r, 0), e.arc(0, 0, r, 0, ep)
        },
    },
    vF = {
        draw(e, t) {
            const r = un(t / 5) / 2
            e.moveTo(-3 * r, -r),
                e.lineTo(-r, -r),
                e.lineTo(-r, -3 * r),
                e.lineTo(r, -3 * r),
                e.lineTo(r, -r),
                e.lineTo(3 * r, -r),
                e.lineTo(3 * r, r),
                e.lineTo(r, r),
                e.lineTo(r, 3 * r),
                e.lineTo(-r, 3 * r),
                e.lineTo(-r, r),
                e.lineTo(-3 * r, r),
                e.closePath()
        },
    },
    U3 = un(1 / 3),
    yF = U3 * 2,
    bF = {
        draw(e, t) {
            const r = un(t / yF),
                n = r * U3
            e.moveTo(0, -r),
                e.lineTo(n, 0),
                e.lineTo(0, r),
                e.lineTo(-n, 0),
                e.closePath()
        },
    },
    xF = {
        draw(e, t) {
            const r = un(t),
                n = -r / 2
            e.rect(n, n, r, r)
        },
    },
    wF = 0.8908130915292852,
    W3 = od(sd / 10) / od((7 * sd) / 10),
    NF = od(ep / 10) * W3,
    SF = -L3(ep / 10) * W3,
    CF = {
        draw(e, t) {
            const r = un(t * wF),
                n = NF * r,
                a = SF * r
            e.moveTo(0, -r), e.lineTo(n, a)
            for (let l = 1; l < 5; ++l) {
                const o = (ep * l) / 5,
                    s = L3(o),
                    c = od(o)
                e.lineTo(c * r, -s * r), e.lineTo(s * n - c * a, c * n + s * a)
            }
            e.closePath()
        },
    },
    xh = un(3),
    PF = {
        draw(e, t) {
            const r = -un(t / (xh * 3))
            e.moveTo(0, r * 2),
                e.lineTo(-xh * r, -r),
                e.lineTo(xh * r, -r),
                e.closePath()
        },
    },
    Mr = -0.5,
    Dr = un(3) / 2,
    vg = 1 / un(12),
    _F = (vg / 2 + 1) * 3,
    AF = {
        draw(e, t) {
            const r = un(t / _F),
                n = r / 2,
                a = r * vg,
                l = n,
                o = r * vg + r,
                s = -l,
                c = o
            e.moveTo(n, a),
                e.lineTo(l, o),
                e.lineTo(s, c),
                e.lineTo(Mr * n - Dr * a, Dr * n + Mr * a),
                e.lineTo(Mr * l - Dr * o, Dr * l + Mr * o),
                e.lineTo(Mr * s - Dr * c, Dr * s + Mr * c),
                e.lineTo(Mr * n + Dr * a, Mr * a - Dr * n),
                e.lineTo(Mr * l + Dr * o, Mr * o - Dr * l),
                e.lineTo(Mr * s + Dr * c, Mr * c - Dr * s),
                e.closePath()
        },
    }
function EF(e, t) {
    let r = null,
        n = av(a)
    ;(e = typeof e == 'function' ? e : Xe(e || lv)),
        (t = typeof t == 'function' ? t : Xe(t === void 0 ? 64 : +t))
    function a() {
        let l
        if (
            (r || (r = l = n()),
            e.apply(this, arguments).draw(r, +t.apply(this, arguments)),
            l)
        )
            return (r = null), l + '' || null
    }
    return (
        (a.type = function (l) {
            return arguments.length
                ? ((e = typeof l == 'function' ? l : Xe(l)), a)
                : e
        }),
        (a.size = function (l) {
            return arguments.length
                ? ((t = typeof l == 'function' ? l : Xe(+l)), a)
                : t
        }),
        (a.context = function (l) {
            return arguments.length ? ((r = l == null ? null : l), a) : r
        }),
        a
    )
}
function cd() {}
function ud(e, t, r) {
    e._context.bezierCurveTo(
        (2 * e._x0 + e._x1) / 3,
        (2 * e._y0 + e._y1) / 3,
        (e._x0 + 2 * e._x1) / 3,
        (e._y0 + 2 * e._y1) / 3,
        (e._x0 + 4 * e._x1 + t) / 6,
        (e._y0 + 4 * e._y1 + r) / 6
    )
}
function H3(e) {
    this._context = e
}
H3.prototype = {
    areaStart: function () {
        this._line = 0
    },
    areaEnd: function () {
        this._line = NaN
    },
    lineStart: function () {
        ;(this._x0 = this._x1 = this._y0 = this._y1 = NaN), (this._point = 0)
    },
    lineEnd: function () {
        switch (this._point) {
            case 3:
                ud(this, this._x1, this._y1)
            case 2:
                this._context.lineTo(this._x1, this._y1)
                break
        }
        ;(this._line || (this._line !== 0 && this._point === 1)) &&
            this._context.closePath(),
            (this._line = 1 - this._line)
    },
    point: function (e, t) {
        switch (((e = +e), (t = +t), this._point)) {
            case 0:
                ;(this._point = 1),
                    this._line
                        ? this._context.lineTo(e, t)
                        : this._context.moveTo(e, t)
                break
            case 1:
                this._point = 2
                break
            case 2:
                ;(this._point = 3),
                    this._context.lineTo(
                        (5 * this._x0 + this._x1) / 6,
                        (5 * this._y0 + this._y1) / 6
                    )
            default:
                ud(this, e, t)
                break
        }
        ;(this._x0 = this._x1),
            (this._x1 = e),
            (this._y0 = this._y1),
            (this._y1 = t)
    },
}
function kF(e) {
    return new H3(e)
}
function G3(e) {
    this._context = e
}
G3.prototype = {
    areaStart: cd,
    areaEnd: cd,
    lineStart: function () {
        ;(this._x0 =
            this._x1 =
            this._x2 =
            this._x3 =
            this._x4 =
            this._y0 =
            this._y1 =
            this._y2 =
            this._y3 =
            this._y4 =
                NaN),
            (this._point = 0)
    },
    lineEnd: function () {
        switch (this._point) {
            case 1: {
                this._context.moveTo(this._x2, this._y2),
                    this._context.closePath()
                break
            }
            case 2: {
                this._context.moveTo(
                    (this._x2 + 2 * this._x3) / 3,
                    (this._y2 + 2 * this._y3) / 3
                ),
                    this._context.lineTo(
                        (this._x3 + 2 * this._x2) / 3,
                        (this._y3 + 2 * this._y2) / 3
                    ),
                    this._context.closePath()
                break
            }
            case 3: {
                this.point(this._x2, this._y2),
                    this.point(this._x3, this._y3),
                    this.point(this._x4, this._y4)
                break
            }
        }
    },
    point: function (e, t) {
        switch (((e = +e), (t = +t), this._point)) {
            case 0:
                ;(this._point = 1), (this._x2 = e), (this._y2 = t)
                break
            case 1:
                ;(this._point = 2), (this._x3 = e), (this._y3 = t)
                break
            case 2:
                ;(this._point = 3),
                    (this._x4 = e),
                    (this._y4 = t),
                    this._context.moveTo(
                        (this._x0 + 4 * this._x1 + e) / 6,
                        (this._y0 + 4 * this._y1 + t) / 6
                    )
                break
            default:
                ud(this, e, t)
                break
        }
        ;(this._x0 = this._x1),
            (this._x1 = e),
            (this._y0 = this._y1),
            (this._y1 = t)
    },
}
function OF(e) {
    return new G3(e)
}
function q3(e) {
    this._context = e
}
q3.prototype = {
    areaStart: function () {
        this._line = 0
    },
    areaEnd: function () {
        this._line = NaN
    },
    lineStart: function () {
        ;(this._x0 = this._x1 = this._y0 = this._y1 = NaN), (this._point = 0)
    },
    lineEnd: function () {
        ;(this._line || (this._line !== 0 && this._point === 3)) &&
            this._context.closePath(),
            (this._line = 1 - this._line)
    },
    point: function (e, t) {
        switch (((e = +e), (t = +t), this._point)) {
            case 0:
                this._point = 1
                break
            case 1:
                this._point = 2
                break
            case 2:
                this._point = 3
                var r = (this._x0 + 4 * this._x1 + e) / 6,
                    n = (this._y0 + 4 * this._y1 + t) / 6
                this._line
                    ? this._context.lineTo(r, n)
                    : this._context.moveTo(r, n)
                break
            case 3:
                this._point = 4
            default:
                ud(this, e, t)
                break
        }
        ;(this._x0 = this._x1),
            (this._x1 = e),
            (this._y0 = this._y1),
            (this._y1 = t)
    },
}
function TF(e) {
    return new q3(e)
}
function K3(e) {
    this._context = e
}
K3.prototype = {
    areaStart: cd,
    areaEnd: cd,
    lineStart: function () {
        this._point = 0
    },
    lineEnd: function () {
        this._point && this._context.closePath()
    },
    point: function (e, t) {
        ;(e = +e),
            (t = +t),
            this._point
                ? this._context.lineTo(e, t)
                : ((this._point = 1), this._context.moveTo(e, t))
    },
}
function MF(e) {
    return new K3(e)
}
function T2(e) {
    return e < 0 ? -1 : 1
}
function M2(e, t, r) {
    var n = e._x1 - e._x0,
        a = t - e._x1,
        l = (e._y1 - e._y0) / (n || (a < 0 && -0)),
        o = (r - e._y1) / (a || (n < 0 && -0)),
        s = (l * a + o * n) / (n + a)
    return (
        (T2(l) + T2(o)) *
            Math.min(Math.abs(l), Math.abs(o), 0.5 * Math.abs(s)) || 0
    )
}
function D2(e, t) {
    var r = e._x1 - e._x0
    return r ? ((3 * (e._y1 - e._y0)) / r - t) / 2 : t
}
function wh(e, t, r) {
    var n = e._x0,
        a = e._y0,
        l = e._x1,
        o = e._y1,
        s = (l - n) / 3
    e._context.bezierCurveTo(n + s, a + s * t, l - s, o - s * r, l, o)
}
function dd(e) {
    this._context = e
}
dd.prototype = {
    areaStart: function () {
        this._line = 0
    },
    areaEnd: function () {
        this._line = NaN
    },
    lineStart: function () {
        ;(this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN),
            (this._point = 0)
    },
    lineEnd: function () {
        switch (this._point) {
            case 2:
                this._context.lineTo(this._x1, this._y1)
                break
            case 3:
                wh(this, this._t0, D2(this, this._t0))
                break
        }
        ;(this._line || (this._line !== 0 && this._point === 1)) &&
            this._context.closePath(),
            (this._line = 1 - this._line)
    },
    point: function (e, t) {
        var r = NaN
        if (((e = +e), (t = +t), !(e === this._x1 && t === this._y1))) {
            switch (this._point) {
                case 0:
                    ;(this._point = 1),
                        this._line
                            ? this._context.lineTo(e, t)
                            : this._context.moveTo(e, t)
                    break
                case 1:
                    this._point = 2
                    break
                case 2:
                    ;(this._point = 3),
                        wh(this, D2(this, (r = M2(this, e, t))), r)
                    break
                default:
                    wh(this, this._t0, (r = M2(this, e, t)))
                    break
            }
            ;(this._x0 = this._x1),
                (this._x1 = e),
                (this._y0 = this._y1),
                (this._y1 = t),
                (this._t0 = r)
        }
    },
}
function Y3(e) {
    this._context = new X3(e)
}
;(Y3.prototype = Object.create(dd.prototype)).point = function (e, t) {
    dd.prototype.point.call(this, t, e)
}
function X3(e) {
    this._context = e
}
X3.prototype = {
    moveTo: function (e, t) {
        this._context.moveTo(t, e)
    },
    closePath: function () {
        this._context.closePath()
    },
    lineTo: function (e, t) {
        this._context.lineTo(t, e)
    },
    bezierCurveTo: function (e, t, r, n, a, l) {
        this._context.bezierCurveTo(t, e, n, r, l, a)
    },
}
function DF(e) {
    return new dd(e)
}
function $F(e) {
    return new Y3(e)
}
function Z3(e) {
    this._context = e
}
Z3.prototype = {
    areaStart: function () {
        this._line = 0
    },
    areaEnd: function () {
        this._line = NaN
    },
    lineStart: function () {
        ;(this._x = []), (this._y = [])
    },
    lineEnd: function () {
        var e = this._x,
            t = this._y,
            r = e.length
        if (r)
            if (
                (this._line
                    ? this._context.lineTo(e[0], t[0])
                    : this._context.moveTo(e[0], t[0]),
                r === 2)
            )
                this._context.lineTo(e[1], t[1])
            else
                for (var n = $2(e), a = $2(t), l = 0, o = 1; o < r; ++l, ++o)
                    this._context.bezierCurveTo(
                        n[0][l],
                        a[0][l],
                        n[1][l],
                        a[1][l],
                        e[o],
                        t[o]
                    )
        ;(this._line || (this._line !== 0 && r === 1)) &&
            this._context.closePath(),
            (this._line = 1 - this._line),
            (this._x = this._y = null)
    },
    point: function (e, t) {
        this._x.push(+e), this._y.push(+t)
    },
}
function $2(e) {
    var t,
        r = e.length - 1,
        n,
        a = new Array(r),
        l = new Array(r),
        o = new Array(r)
    for (a[0] = 0, l[0] = 2, o[0] = e[0] + 2 * e[1], t = 1; t < r - 1; ++t)
        (a[t] = 1), (l[t] = 4), (o[t] = 4 * e[t] + 2 * e[t + 1])
    for (
        a[r - 1] = 2, l[r - 1] = 7, o[r - 1] = 8 * e[r - 1] + e[r], t = 1;
        t < r;
        ++t
    )
        (n = a[t] / l[t - 1]), (l[t] -= n), (o[t] -= n * o[t - 1])
    for (a[r - 1] = o[r - 1] / l[r - 1], t = r - 2; t >= 0; --t)
        a[t] = (o[t] - a[t + 1]) / l[t]
    for (l[r - 1] = (e[r] + a[r - 1]) / 2, t = 0; t < r - 1; ++t)
        l[t] = 2 * e[t + 1] - a[t + 1]
    return [a, l]
}
function IF(e) {
    return new Z3(e)
}
function rp(e, t) {
    ;(this._context = e), (this._t = t)
}
rp.prototype = {
    areaStart: function () {
        this._line = 0
    },
    areaEnd: function () {
        this._line = NaN
    },
    lineStart: function () {
        ;(this._x = this._y = NaN), (this._point = 0)
    },
    lineEnd: function () {
        0 < this._t &&
            this._t < 1 &&
            this._point === 2 &&
            this._context.lineTo(this._x, this._y),
            (this._line || (this._line !== 0 && this._point === 1)) &&
                this._context.closePath(),
            this._line >= 0 &&
                ((this._t = 1 - this._t), (this._line = 1 - this._line))
    },
    point: function (e, t) {
        switch (((e = +e), (t = +t), this._point)) {
            case 0:
                ;(this._point = 1),
                    this._line
                        ? this._context.lineTo(e, t)
                        : this._context.moveTo(e, t)
                break
            case 1:
                this._point = 2
            default: {
                if (this._t <= 0)
                    this._context.lineTo(this._x, t), this._context.lineTo(e, t)
                else {
                    var r = this._x * (1 - this._t) + e * this._t
                    this._context.lineTo(r, this._y), this._context.lineTo(r, t)
                }
                break
            }
        }
        ;(this._x = e), (this._y = t)
    },
}
function RF(e) {
    return new rp(e, 0.5)
}
function LF(e) {
    return new rp(e, 0)
}
function jF(e) {
    return new rp(e, 1)
}
function Al(e, t) {
    if ((o = e.length) > 1)
        for (var r = 1, n, a, l = e[t[0]], o, s = l.length; r < o; ++r)
            for (a = l, l = e[t[r]], n = 0; n < s; ++n)
                l[n][1] += l[n][0] = isNaN(a[n][1]) ? a[n][0] : a[n][1]
}
function yg(e) {
    for (var t = e.length, r = new Array(t); --t >= 0; ) r[t] = t
    return r
}
function FF(e, t) {
    return e[t]
}
function BF(e) {
    const t = []
    return (t.key = e), t
}
function zF() {
    var e = Xe([]),
        t = yg,
        r = Al,
        n = FF
    function a(l) {
        var o = Array.from(e.apply(this, arguments), BF),
            s,
            c = o.length,
            u = -1,
            f
        for (const p of l)
            for (s = 0, ++u; s < c; ++s)
                (o[s][u] = [0, +n(p, o[s].key, u, l)]).data = p
        for (s = 0, f = iv(t(o)); s < c; ++s) o[f[s]].index = s
        return r(o, f), o
    }
    return (
        (a.keys = function (l) {
            return arguments.length
                ? ((e = typeof l == 'function' ? l : Xe(Array.from(l))), a)
                : e
        }),
        (a.value = function (l) {
            return arguments.length
                ? ((n = typeof l == 'function' ? l : Xe(+l)), a)
                : n
        }),
        (a.order = function (l) {
            return arguments.length
                ? ((t =
                      l == null
                          ? yg
                          : typeof l == 'function'
                          ? l
                          : Xe(Array.from(l))),
                  a)
                : t
        }),
        (a.offset = function (l) {
            return arguments.length ? ((r = l == null ? Al : l), a) : r
        }),
        a
    )
}
function VF(e, t) {
    if ((n = e.length) > 0) {
        for (var r, n, a = 0, l = e[0].length, o; a < l; ++a) {
            for (o = r = 0; r < n; ++r) o += e[r][a][1] || 0
            if (o) for (r = 0; r < n; ++r) e[r][a][1] /= o
        }
        Al(e, t)
    }
}
function UF(e, t) {
    if ((a = e.length) > 0) {
        for (var r = 0, n = e[t[0]], a, l = n.length; r < l; ++r) {
            for (var o = 0, s = 0; o < a; ++o) s += e[o][r][1] || 0
            n[r][1] += n[r][0] = -s / 2
        }
        Al(e, t)
    }
}
function WF(e, t) {
    if (!(!((o = e.length) > 0) || !((l = (a = e[t[0]]).length) > 0))) {
        for (var r = 0, n = 1, a, l, o; n < l; ++n) {
            for (var s = 0, c = 0, u = 0; s < o; ++s) {
                for (
                    var f = e[t[s]],
                        p = f[n][1] || 0,
                        m = f[n - 1][1] || 0,
                        v = (p - m) / 2,
                        b = 0;
                    b < s;
                    ++b
                ) {
                    var h = e[t[b]],
                        g = h[n][1] || 0,
                        x = h[n - 1][1] || 0
                    v += g - x
                }
                ;(c += p), (u += v * p)
            }
            ;(a[n - 1][1] += a[n - 1][0] = r), c && (r -= u / c)
        }
        ;(a[n - 1][1] += a[n - 1][0] = r), Al(e, t)
    }
}
function El(e) {
    return (
        (El =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        El(e)
    )
}
function HF(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function I2(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, Q3(n.key), n)
    }
}
function GF(e, t, r) {
    return (
        t && I2(e.prototype, t),
        r && I2(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function qF(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && bg(e, t)
}
function bg(e, t) {
    return (
        (bg = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        bg(e, t)
    )
}
function KF(e) {
    var t = ZF()
    return function () {
        var n = fd(e),
            a
        if (t) {
            var l = fd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return YF(this, a)
    }
}
function YF(e, t) {
    if (t && (El(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return XF(e)
}
function XF(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function ZF() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function fd(e) {
    return (
        (fd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        fd(e)
    )
}
function J3(e, t, r) {
    return (
        (t = Q3(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function Q3(e) {
    var t = JF(e, 'string')
    return El(t) === 'symbol' ? t : String(t)
}
function JF(e, t) {
    if (El(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (El(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var e5 = {
        symbolCircle: lv,
        symbolCross: vF,
        symbolDiamond: bF,
        symbolSquare: xF,
        symbolStar: CF,
        symbolTriangle: PF,
        symbolWye: AF,
    },
    QF = Math.PI / 180,
    eB = function (t) {
        var r = 'symbol'.concat(Qf(t))
        return e5[r] || lv
    },
    tB = function (t, r, n) {
        if (r === 'area') return t
        switch (n) {
            case 'cross':
                return (5 * t * t) / 9
            case 'diamond':
                return (0.5 * t * t) / Math.sqrt(3)
            case 'square':
                return t * t
            case 'star': {
                var a = 18 * QF
                return (
                    1.25 *
                    t *
                    t *
                    (Math.tan(a) - Math.tan(a * 2) * Math.pow(Math.tan(a), 2))
                )
            }
            case 'triangle':
                return (Math.sqrt(3) * t * t) / 4
            case 'wye':
                return ((21 - 10 * Math.sqrt(3)) * t * t) / 8
            default:
                return (Math.PI * t * t) / 4
        }
    },
    ov = (function (e) {
        qF(r, e)
        var t = KF(r)
        function r() {
            return HF(this, r), t.apply(this, arguments)
        }
        return (
            GF(r, [
                {
                    key: 'getPath',
                    value: function () {
                        var a = this.props,
                            l = a.size,
                            o = a.sizeType,
                            s = a.type,
                            c = eB(s),
                            u = EF().type(c).size(tB(l, o, s))
                        return u()
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.className,
                            o = a.cx,
                            s = a.cy,
                            c = a.size,
                            u = ve(this.props, !0)
                        return o === +o && s === +s && c === +c
                            ? i('path', {
                                  ...u,
                                  className: He('recharts-symbols', l),
                                  transform: 'translate('
                                      .concat(o, ', ')
                                      .concat(s, ')'),
                                  d: this.getPath(),
                              })
                            : null
                    },
                },
            ]),
            r
        )
    })(C.exports.PureComponent)
J3(ov, 'defaultProps', { type: 'circle', size: 64, sizeType: 'area' })
J3(ov, 'registerSymbol', function (e, t) {
    e5['symbol'.concat(Qf(e))] = t
})
function kl(e) {
    return (
        (kl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        kl(e)
    )
}
function R2(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function rB(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? R2(Object(r), !0).forEach(function (n) {
                  $s(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : R2(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function nB(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function L2(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, t5(n.key), n)
    }
}
function aB(e, t, r) {
    return (
        t && L2(e.prototype, t),
        r && L2(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function iB(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && xg(e, t)
}
function xg(e, t) {
    return (
        (xg = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        xg(e, t)
    )
}
function lB(e) {
    var t = cB()
    return function () {
        var n = pd(e),
            a
        if (t) {
            var l = pd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return oB(this, a)
    }
}
function oB(e, t) {
    if (t && (kl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return sB(e)
}
function sB(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function cB() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function pd(e) {
    return (
        (pd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        pd(e)
    )
}
function $s(e, t, r) {
    return (
        (t = t5(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function t5(e) {
    var t = uB(e, 'string')
    return kl(t) === 'symbol' ? t : String(t)
}
function uB(e, t) {
    if (kl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (kl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var $r = 32,
    sv = (function (e) {
        iB(r, e)
        var t = lB(r)
        function r() {
            return nB(this, r), t.apply(this, arguments)
        }
        return (
            aB(r, [
                {
                    key: 'renderIcon',
                    value: function (a) {
                        var l = this.props.inactiveColor,
                            o = $r / 2,
                            s = $r / 6,
                            c = $r / 3,
                            u = a.inactive ? l : a.color
                        if (a.type === 'plainline')
                            return i('line', {
                                strokeWidth: 4,
                                fill: 'none',
                                stroke: u,
                                strokeDasharray: a.payload.strokeDasharray,
                                x1: 0,
                                y1: o,
                                x2: $r,
                                y2: o,
                                className: 'recharts-legend-icon',
                            })
                        if (a.type === 'line')
                            return i('path', {
                                strokeWidth: 4,
                                fill: 'none',
                                stroke: u,
                                d: 'M0,'
                                    .concat(o, 'h')
                                    .concat(
                                        c,
                                        `
            A`
                                    )
                                    .concat(s, ',')
                                    .concat(s, ',0,1,1,')
                                    .concat(2 * c, ',')
                                    .concat(
                                        o,
                                        `
            H`
                                    )
                                    .concat($r, 'M')
                                    .concat(2 * c, ',')
                                    .concat(
                                        o,
                                        `
            A`
                                    )
                                    .concat(s, ',')
                                    .concat(s, ',0,1,1,')
                                    .concat(c, ',')
                                    .concat(o),
                                className: 'recharts-legend-icon',
                            })
                        if (a.type === 'rect')
                            return i('path', {
                                stroke: 'none',
                                fill: u,
                                d: 'M0,'
                                    .concat($r / 8, 'h')
                                    .concat($r, 'v')
                                    .concat(($r * 3) / 4, 'h')
                                    .concat(-$r, 'z'),
                                className: 'recharts-legend-icon',
                            })
                        if (K.isValidElement(a.legendIcon)) {
                            var f = rB({}, a)
                            return (
                                delete f.legendIcon,
                                K.cloneElement(a.legendIcon, f)
                            )
                        }
                        return i(ov, {
                            fill: u,
                            cx: o,
                            cy: o,
                            size: $r,
                            sizeType: 'diameter',
                            type: a.type,
                        })
                    },
                },
                {
                    key: 'renderItems',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.payload,
                            s = l.iconSize,
                            c = l.layout,
                            u = l.formatter,
                            f = l.inactiveColor,
                            p = { x: 0, y: 0, width: $r, height: $r },
                            m = {
                                display:
                                    c === 'horizontal'
                                        ? 'inline-block'
                                        : 'block',
                                marginRight: 10,
                            },
                            v = {
                                display: 'inline-block',
                                verticalAlign: 'middle',
                                marginRight: 4,
                            }
                        return o.map(function (b, h) {
                            var g,
                                x = b.formatter || u,
                                w = He(
                                    ((g = { 'recharts-legend-item': !0 }),
                                    $s(g, 'legend-item-'.concat(h), !0),
                                    $s(g, 'inactive', b.inactive),
                                    g)
                                )
                            if (b.type === 'none') return null
                            var y = b.inactive ? f : b.color
                            return d(
                                'li',
                                {
                                    className: w,
                                    style: m,
                                    ..._i(a.props, b, h),
                                    children: [
                                        i(lg, {
                                            width: s,
                                            height: s,
                                            viewBox: p,
                                            style: v,
                                            children: a.renderIcon(b),
                                        }),
                                        i('span', {
                                            className:
                                                'recharts-legend-item-text',
                                            style: { color: y },
                                            children: x
                                                ? x(b.value, b, h)
                                                : b.value,
                                        }),
                                    ],
                                },
                                'legend-item-'.concat(h)
                            )
                        })
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.payload,
                            o = a.layout,
                            s = a.align
                        if (!l || !l.length) return null
                        var c = {
                            padding: 0,
                            margin: 0,
                            textAlign: o === 'horizontal' ? s : 'left',
                        }
                        return i('ul', {
                            className: 'recharts-default-legend',
                            style: c,
                            children: this.renderItems(),
                        })
                    },
                },
            ]),
            r
        )
    })(C.exports.PureComponent)
$s(sv, 'displayName', 'Legend')
$s(sv, 'defaultProps', {
    iconSize: 14,
    layout: 'horizontal',
    align: 'center',
    verticalAlign: 'middle',
    inactiveColor: '#ccc',
})
function Ol(e) {
    return (
        (Ol =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Ol(e)
    )
}
var dB = ['ref']
function j2(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Fi(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? j2(Object(r), !0).forEach(function (n) {
                  np(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : j2(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function fB(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function F2(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, n5(n.key), n)
    }
}
function pB(e, t, r) {
    return (
        t && F2(e.prototype, t),
        r && F2(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function hB(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && wg(e, t)
}
function wg(e, t) {
    return (
        (wg = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        wg(e, t)
    )
}
function mB(e) {
    var t = vB()
    return function () {
        var n = hd(e),
            a
        if (t) {
            var l = hd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return gB(this, a)
    }
}
function gB(e, t) {
    if (t && (Ol(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return r5(e)
}
function r5(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function vB() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function hd(e) {
    return (
        (hd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        hd(e)
    )
}
function np(e, t, r) {
    return (
        (t = n5(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function n5(e) {
    var t = yB(e, 'string')
    return Ol(t) === 'symbol' ? t : String(t)
}
function yB(e, t) {
    if (Ol(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Ol(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function bB(e, t) {
    if (e == null) return {}
    var r = xB(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function xB(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function wB(e) {
    return e.value
}
function NB(e, t) {
    return e === !0 ? ld(t, wB) : pe(e) ? ld(t, e) : t
}
function SB(e, t) {
    if (K.isValidElement(e)) return K.cloneElement(e, t)
    if (pe(e)) return K.createElement(e, t)
    t.ref
    var r = bB(t, dB)
    return i(sv, { ...r })
}
var B2 = 1,
    Is = (function (e) {
        hB(r, e)
        var t = mB(r)
        function r() {
            var n
            fB(this, r)
            for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
                l[o] = arguments[o]
            return (
                (n = t.call.apply(t, [this].concat(l))),
                np(r5(n), 'state', { boxWidth: -1, boxHeight: -1 }),
                n
            )
        }
        return (
            pB(
                r,
                [
                    {
                        key: 'componentDidMount',
                        value: function () {
                            this.updateBBox()
                        },
                    },
                    {
                        key: 'componentDidUpdate',
                        value: function () {
                            this.updateBBox()
                        },
                    },
                    {
                        key: 'getBBox',
                        value: function () {
                            return this.wrapperNode &&
                                this.wrapperNode.getBoundingClientRect
                                ? this.wrapperNode.getBoundingClientRect()
                                : null
                        },
                    },
                    {
                        key: 'getBBoxSnapshot',
                        value: function () {
                            var a = this.state,
                                l = a.boxWidth,
                                o = a.boxHeight
                            return l >= 0 && o >= 0
                                ? { width: l, height: o }
                                : null
                        },
                    },
                    {
                        key: 'getDefaultPosition',
                        value: function (a) {
                            var l = this.props,
                                o = l.layout,
                                s = l.align,
                                c = l.verticalAlign,
                                u = l.margin,
                                f = l.chartWidth,
                                p = l.chartHeight,
                                m,
                                v
                            if (
                                !a ||
                                ((a.left === void 0 || a.left === null) &&
                                    (a.right === void 0 || a.right === null))
                            )
                                if (s === 'center' && o === 'vertical') {
                                    var b = this.getBBoxSnapshot() || {
                                        width: 0,
                                    }
                                    m = { left: ((f || 0) - b.width) / 2 }
                                } else
                                    m =
                                        s === 'right'
                                            ? { right: (u && u.right) || 0 }
                                            : { left: (u && u.left) || 0 }
                            if (
                                !a ||
                                ((a.top === void 0 || a.top === null) &&
                                    (a.bottom === void 0 || a.bottom === null))
                            )
                                if (c === 'middle') {
                                    var h = this.getBBoxSnapshot() || {
                                        height: 0,
                                    }
                                    v = { top: ((p || 0) - h.height) / 2 }
                                } else
                                    v =
                                        c === 'bottom'
                                            ? { bottom: (u && u.bottom) || 0 }
                                            : { top: (u && u.top) || 0 }
                            return Fi(Fi({}, m), v)
                        },
                    },
                    {
                        key: 'updateBBox',
                        value: function () {
                            var a = this.state,
                                l = a.boxWidth,
                                o = a.boxHeight,
                                s = this.props.onBBoxUpdate
                            if (
                                this.wrapperNode &&
                                this.wrapperNode.getBoundingClientRect
                            ) {
                                var c = this.wrapperNode.getBoundingClientRect()
                                ;(Math.abs(c.width - l) > B2 ||
                                    Math.abs(c.height - o) > B2) &&
                                    this.setState(
                                        {
                                            boxWidth: c.width,
                                            boxHeight: c.height,
                                        },
                                        function () {
                                            s && s(c)
                                        }
                                    )
                            } else
                                (l !== -1 || o !== -1) &&
                                    this.setState(
                                        { boxWidth: -1, boxHeight: -1 },
                                        function () {
                                            s && s(null)
                                        }
                                    )
                        },
                    },
                    {
                        key: 'render',
                        value: function () {
                            var a = this,
                                l = this.props,
                                o = l.content,
                                s = l.width,
                                c = l.height,
                                u = l.wrapperStyle,
                                f = l.payloadUniqBy,
                                p = l.payload,
                                m = Fi(
                                    Fi(
                                        {
                                            position: 'absolute',
                                            width: s || 'auto',
                                            height: c || 'auto',
                                        },
                                        this.getDefaultPosition(u)
                                    ),
                                    u
                                )
                            return i('div', {
                                className: 'recharts-legend-wrapper',
                                style: m,
                                ref: function (b) {
                                    a.wrapperNode = b
                                },
                                children: SB(
                                    o,
                                    Fi(
                                        Fi({}, this.props),
                                        {},
                                        { payload: NB(f, p) }
                                    )
                                ),
                            })
                        },
                    },
                ],
                [
                    {
                        key: 'getWithHeight',
                        value: function (a, l) {
                            var o = a.props.layout
                            return o === 'vertical' && J(a.props.height)
                                ? { height: a.props.height }
                                : o === 'horizontal'
                                ? { width: a.props.width || l }
                                : null
                        },
                    },
                ]
            ),
            r
        )
    })(C.exports.PureComponent)
np(Is, 'displayName', 'Legend')
np(Is, 'defaultProps', {
    iconSize: 14,
    layout: 'horizontal',
    align: 'center',
    verticalAlign: 'bottom',
})
var xe = { exports: {} },
    CB = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',
    PB = CB,
    _B = PB
function a5() {}
function i5() {}
i5.resetWarningCache = a5
var AB = function () {
    function e(n, a, l, o, s, c) {
        if (c !== _B) {
            var u = new Error(
                'Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types'
            )
            throw ((u.name = 'Invariant Violation'), u)
        }
    }
    e.isRequired = e
    function t() {
        return e
    }
    var r = {
        array: e,
        bigint: e,
        bool: e,
        func: e,
        number: e,
        object: e,
        string: e,
        symbol: e,
        any: e,
        arrayOf: t,
        element: e,
        elementType: e,
        instanceOf: t,
        node: e,
        objectOf: t,
        oneOf: t,
        oneOfType: t,
        shape: t,
        exact: t,
        checkPropTypes: i5,
        resetWarningCache: a5,
    }
    return (r.PropTypes = r), r
}
xe.exports = AB()
var EB = typeof WeakSet == 'function',
    z2 = Object.keys
function cv(e, t) {
    return e === t || (e !== e && t !== t)
}
function V2(e) {
    return e.constructor === Object || e.constructor == null
}
function U2(e) {
    return !!e && typeof e.then == 'function'
}
function W2(e) {
    return !!(e && e.$$typeof)
}
function kB() {
    var e = []
    return {
        add: function (t) {
            e.push(t)
        },
        has: function (t) {
            return e.indexOf(t) !== -1
        },
    }
}
var OB = (function (e) {
    return e
        ? function () {
              return new WeakSet()
          }
        : kB
})(EB)
function l5(e) {
    return function (r) {
        var n = e || r
        return function (l, o, s) {
            s === void 0 && (s = OB())
            var c = !!l && typeof l == 'object',
                u = !!o && typeof o == 'object'
            if (c || u) {
                var f = c && s.has(l),
                    p = u && s.has(o)
                if (f || p) return f && p
                c && s.add(l), u && s.add(o)
            }
            return n(l, o, s)
        }
    }
}
function TB(e, t, r, n) {
    var a = e.length
    if (t.length !== a) return !1
    for (; a-- > 0; ) if (!r(e[a], t[a], n)) return !1
    return !0
}
function MB(e, t, r, n) {
    var a = e.size === t.size
    if (a && e.size) {
        var l = {}
        e.forEach(function (o, s) {
            if (a) {
                var c = !1,
                    u = 0
                t.forEach(function (f, p) {
                    !c &&
                        !l[u] &&
                        ((c = r(s, p, n) && r(o, f, n)), c && (l[u] = !0)),
                        u++
                }),
                    (a = c)
            }
        })
    }
    return a
}
var DB = '_owner',
    $B = Function.prototype.bind.call(
        Function.prototype.call,
        Object.prototype.hasOwnProperty
    )
function H2(e, t, r, n) {
    var a = z2(e),
        l = a.length
    if (z2(t).length !== l) return !1
    if (l)
        for (var o = void 0; l-- > 0; ) {
            if (((o = a[l]), o === DB)) {
                var s = W2(e),
                    c = W2(t)
                if ((s || c) && s !== c) return !1
            }
            if (!$B(t, o) || !r(e[o], t[o], n)) return !1
        }
    return !0
}
function IB(e, t) {
    return (
        e.source === t.source &&
        e.global === t.global &&
        e.ignoreCase === t.ignoreCase &&
        e.multiline === t.multiline &&
        e.unicode === t.unicode &&
        e.sticky === t.sticky &&
        e.lastIndex === t.lastIndex
    )
}
function RB(e, t, r, n) {
    var a = e.size === t.size
    if (a && e.size) {
        var l = {}
        e.forEach(function (o) {
            if (a) {
                var s = !1,
                    c = 0
                t.forEach(function (u) {
                    !s && !l[c] && ((s = r(o, u, n)), s && (l[c] = !0)), c++
                }),
                    (a = s)
            }
        })
    }
    return a
}
var LB = typeof Map == 'function',
    jB = typeof Set == 'function'
function ap(e) {
    var t = typeof e == 'function' ? e(r) : r
    function r(n, a, l) {
        if (n === a) return !0
        if (n && a && typeof n == 'object' && typeof a == 'object') {
            if (V2(n) && V2(a)) return H2(n, a, t, l)
            var o = Array.isArray(n),
                s = Array.isArray(a)
            return o || s
                ? o === s && TB(n, a, t, l)
                : ((o = n instanceof Date),
                  (s = a instanceof Date),
                  o || s
                      ? o === s && cv(n.getTime(), a.getTime())
                      : ((o = n instanceof RegExp),
                        (s = a instanceof RegExp),
                        o || s
                            ? o === s && IB(n, a)
                            : U2(n) || U2(a)
                            ? n === a
                            : LB &&
                              ((o = n instanceof Map),
                              (s = a instanceof Map),
                              o || s)
                            ? o === s && MB(n, a, t, l)
                            : jB &&
                              ((o = n instanceof Set),
                              (s = a instanceof Set),
                              o || s)
                            ? o === s && RB(n, a, t, l)
                            : H2(n, a, t, l)))
        }
        return n !== n && a !== a
    }
    return r
}
var FB = ap()
ap(function () {
    return cv
})
ap(l5())
ap(l5(cv))
function G2(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        r = -1,
        n = function a(l) {
            r < 0 && (r = l),
                l - r > t ? (e(l), (r = -1)) : requestAnimationFrame(a)
        }
    requestAnimationFrame(n)
}
function vu(e) {
    return (
        typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
            ? (vu = function (r) {
                  return typeof r
              })
            : (vu = function (r) {
                  return r &&
                      typeof Symbol == 'function' &&
                      r.constructor === Symbol &&
                      r !== Symbol.prototype
                      ? 'symbol'
                      : typeof r
              }),
        vu(e)
    )
}
function BB(e) {
    return WB(e) || UB(e) || VB(e) || zB()
}
function zB() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function VB(e, t) {
    if (!!e) {
        if (typeof e == 'string') return q2(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return q2(e, t)
    }
}
function q2(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function UB(e) {
    if (typeof Symbol < 'u' && Symbol.iterator in Object(e))
        return Array.from(e)
}
function WB(e) {
    if (Array.isArray(e)) return e
}
function HB() {
    var e = {},
        t = function () {
            return null
        },
        r = !1,
        n = function a(l) {
            if (!r) {
                if (Array.isArray(l)) {
                    if (!l.length) return
                    var o = l,
                        s = BB(o),
                        c = s[0],
                        u = s.slice(1)
                    if (typeof c == 'number') {
                        G2(a.bind(null, u), c)
                        return
                    }
                    a(c), G2(a.bind(null, u))
                    return
                }
                vu(l) === 'object' && ((e = l), t(e)),
                    typeof l == 'function' && l()
            }
        }
    return {
        stop: function () {
            r = !0
        },
        start: function (l) {
            ;(r = !1), n(l)
        },
        subscribe: function (l) {
            return (
                (t = l),
                function () {
                    t = function () {
                        return null
                    }
                }
            )
        },
    }
}
function K2(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Tl(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? K2(Object(r), !0).forEach(function (n) {
                  md(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : K2(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function md(e, t, r) {
    return (
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
var GB = ['Webkit', 'Moz', 'O', 'ms'],
    qB = ['-webkit-', '-moz-', '-o-', '-ms-'],
    KB = ['transform', 'transformOrigin', 'transition'],
    YB = function (t, r) {
        return [Object.keys(t), Object.keys(r)].reduce(function (n, a) {
            return n.filter(function (l) {
                return a.includes(l)
            })
        })
    },
    XB = function (t) {
        return t
    },
    ZB = function (t) {
        return t.replace(/([A-Z])/g, function (r) {
            return '-'.concat(r.toLowerCase())
        })
    },
    JB = function (t, r) {
        if (KB.indexOf(t) === -1) return md({}, t, r)
        var n = t === 'transition',
            a = t.replace(/(\w)/, function (o) {
                return o.toUpperCase()
            }),
            l = r
        return GB.reduce(function (o, s, c) {
            return (
                n &&
                    (l = r.replace(
                        /(transform|transform-origin)/gim,
                        ''.concat(qB[c], '$1')
                    )),
                Tl(Tl({}, o), {}, md({}, s + a, l))
            )
        }, {})
    },
    is = function (t, r) {
        return Object.keys(r).reduce(function (n, a) {
            return Tl(Tl({}, n), {}, md({}, a, t(a, r[a])))
        }, {})
    },
    Ng = function (t) {
        return Object.keys(t).reduce(function (r, n) {
            return Tl(Tl({}, r), JB(n, r[n]))
        }, t)
    },
    Y2 = function (t, r, n) {
        return t
            .map(function (a) {
                return ''.concat(ZB(a), ' ').concat(r, 'ms ').concat(n)
            })
            .join(',')
    }
function QB(e, t) {
    return rz(e) || tz(e, t) || o5(e, t) || ez()
}
function ez() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function tz(e, t) {
    if (!(typeof Symbol > 'u' || !(Symbol.iterator in Object(e)))) {
        var r = [],
            n = !0,
            a = !1,
            l = void 0
        try {
            for (
                var o = e[Symbol.iterator](), s;
                !(n = (s = o.next()).done) &&
                (r.push(s.value), !(t && r.length === t));
                n = !0
            );
        } catch (c) {
            ;(a = !0), (l = c)
        } finally {
            try {
                !n && o.return != null && o.return()
            } finally {
                if (a) throw l
            }
        }
        return r
    }
}
function rz(e) {
    if (Array.isArray(e)) return e
}
function nz(e) {
    return lz(e) || iz(e) || o5(e) || az()
}
function az() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function o5(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Sg(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Sg(e, t)
    }
}
function iz(e) {
    if (typeof Symbol < 'u' && Symbol.iterator in Object(e))
        return Array.from(e)
}
function lz(e) {
    if (Array.isArray(e)) return Sg(e)
}
function Sg(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
var gd = 1e-4,
    s5 = function (t, r) {
        return [0, 3 * t, 3 * r - 6 * t, 3 * t - 3 * r + 1]
    },
    c5 = function (t, r) {
        return t
            .map(function (n, a) {
                return n * Math.pow(r, a)
            })
            .reduce(function (n, a) {
                return n + a
            })
    },
    X2 = function (t, r) {
        return function (n) {
            var a = s5(t, r)
            return c5(a, n)
        }
    },
    oz = function (t, r) {
        return function (n) {
            var a = s5(t, r),
                l = [].concat(
                    nz(
                        a
                            .map(function (o, s) {
                                return o * s
                            })
                            .slice(1)
                    ),
                    [0]
                )
            return c5(l, n)
        }
    },
    Z2 = function () {
        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
            r[n] = arguments[n]
        var a = r[0],
            l = r[1],
            o = r[2],
            s = r[3]
        if (r.length === 1)
            switch (r[0]) {
                case 'linear':
                    ;(a = 0), (l = 0), (o = 1), (s = 1)
                    break
                case 'ease':
                    ;(a = 0.25), (l = 0.1), (o = 0.25), (s = 1)
                    break
                case 'ease-in':
                    ;(a = 0.42), (l = 0), (o = 1), (s = 1)
                    break
                case 'ease-out':
                    ;(a = 0.42), (l = 0), (o = 0.58), (s = 1)
                    break
                case 'ease-in-out':
                    ;(a = 0), (l = 0), (o = 0.58), (s = 1)
                    break
                default: {
                    var c = r[0].split('(')
                    if (
                        c[0] === 'cubic-bezier' &&
                        c[1].split(')')[0].split(',').length === 4
                    ) {
                        var u = c[1]
                                .split(')')[0]
                                .split(',')
                                .map(function (g) {
                                    return parseFloat(g)
                                }),
                            f = QB(u, 4)
                        ;(a = f[0]), (l = f[1]), (o = f[2]), (s = f[3])
                    }
                }
            }
        var p = X2(a, o),
            m = X2(l, s),
            v = oz(a, o),
            b = function (x) {
                return x > 1 ? 1 : x < 0 ? 0 : x
            },
            h = function (x) {
                for (var w = x > 1 ? 1 : x, y = w, N = 0; N < 8; ++N) {
                    var S = p(y) - w,
                        P = v(y)
                    if (Math.abs(S - w) < gd || P < gd) return m(y)
                    y = b(y - S / P)
                }
                return m(y)
            }
        return (h.isStepper = !1), h
    },
    sz = function () {
        var t =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {},
            r = t.stiff,
            n = r === void 0 ? 100 : r,
            a = t.damping,
            l = a === void 0 ? 8 : a,
            o = t.dt,
            s = o === void 0 ? 17 : o,
            c = function (f, p, m) {
                var v = -(f - p) * n,
                    b = m * l,
                    h = m + ((v - b) * s) / 1e3,
                    g = (m * s) / 1e3 + f
                return Math.abs(g - p) < gd && Math.abs(h) < gd
                    ? [p, 0]
                    : [g, h]
            }
        return (c.isStepper = !0), (c.dt = s), c
    },
    cz = function () {
        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
            r[n] = arguments[n]
        var a = r[0]
        if (typeof a == 'string')
            switch (a) {
                case 'ease':
                case 'ease-in-out':
                case 'ease-out':
                case 'ease-in':
                case 'linear':
                    return Z2(a)
                case 'spring':
                    return sz()
                default:
                    if (a.split('(')[0] === 'cubic-bezier') return Z2(a)
            }
        return typeof a == 'function' ? a : null
    }
function J2(e) {
    return fz(e) || dz(e) || u5(e) || uz()
}
function uz() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function dz(e) {
    if (typeof Symbol < 'u' && Symbol.iterator in Object(e))
        return Array.from(e)
}
function fz(e) {
    if (Array.isArray(e)) return Pg(e)
}
function Q2(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Rt(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? Q2(Object(r), !0).forEach(function (n) {
                  Cg(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : Q2(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Cg(e, t, r) {
    return (
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function pz(e, t) {
    return gz(e) || mz(e, t) || u5(e, t) || hz()
}
function hz() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function u5(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Pg(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Pg(e, t)
    }
}
function Pg(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function mz(e, t) {
    if (!(typeof Symbol > 'u' || !(Symbol.iterator in Object(e)))) {
        var r = [],
            n = !0,
            a = !1,
            l = void 0
        try {
            for (
                var o = e[Symbol.iterator](), s;
                !(n = (s = o.next()).done) &&
                (r.push(s.value), !(t && r.length === t));
                n = !0
            );
        } catch (c) {
            ;(a = !0), (l = c)
        } finally {
            try {
                !n && o.return != null && o.return()
            } finally {
                if (a) throw l
            }
        }
        return r
    }
}
function gz(e) {
    if (Array.isArray(e)) return e
}
var vd = function (t, r, n) {
        return t + (r - t) * n
    },
    _g = function (t) {
        var r = t.from,
            n = t.to
        return r !== n
    },
    vz = function e(t, r, n) {
        var a = is(function (l, o) {
            if (_g(o)) {
                var s = t(o.from, o.to, o.velocity),
                    c = pz(s, 2),
                    u = c[0],
                    f = c[1]
                return Rt(Rt({}, o), {}, { from: u, velocity: f })
            }
            return o
        }, r)
        return n < 1
            ? is(function (l, o) {
                  return _g(o)
                      ? Rt(
                            Rt({}, o),
                            {},
                            {
                                velocity: vd(o.velocity, a[l].velocity, n),
                                from: vd(o.from, a[l].from, n),
                            }
                        )
                      : o
              }, r)
            : e(t, a, n - 1)
    }
const yz = function (e, t, r, n, a) {
    var l = YB(e, t),
        o = l.reduce(function (g, x) {
            return Rt(Rt({}, g), {}, Cg({}, x, [e[x], t[x]]))
        }, {}),
        s = l.reduce(function (g, x) {
            return Rt(
                Rt({}, g),
                {},
                Cg({}, x, { from: e[x], velocity: 0, to: t[x] })
            )
        }, {}),
        c = -1,
        u,
        f,
        p = function () {
            return null
        },
        m = function () {
            return is(function (x, w) {
                return w.from
            }, s)
        },
        v = function () {
            return !Object.values(s).filter(_g).length
        },
        b = function (x) {
            u || (u = x)
            var w = x - u,
                y = w / r.dt
            ;(s = vz(r, s, y)),
                a(Rt(Rt(Rt({}, e), t), m())),
                (u = x),
                v() || (c = requestAnimationFrame(p))
        },
        h = function (x) {
            f || (f = x)
            var w = (x - f) / n,
                y = is(function (S, P) {
                    return vd.apply(void 0, J2(P).concat([r(w)]))
                }, o)
            if ((a(Rt(Rt(Rt({}, e), t), y)), w < 1))
                c = requestAnimationFrame(p)
            else {
                var N = is(function (S, P) {
                    return vd.apply(void 0, J2(P).concat([r(1)]))
                }, o)
                a(Rt(Rt(Rt({}, e), t), N))
            }
        }
    return (
        (p = r.isStepper ? b : h),
        function () {
            return (
                requestAnimationFrame(p),
                function () {
                    cancelAnimationFrame(c)
                }
            )
        }
    )
}
function yu(e) {
    return (
        typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
            ? (yu = function (r) {
                  return typeof r
              })
            : (yu = function (r) {
                  return r &&
                      typeof Symbol == 'function' &&
                      r.constructor === Symbol &&
                      r !== Symbol.prototype
                      ? 'symbol'
                      : typeof r
              }),
        yu(e)
    )
}
function bz(e, t) {
    if (e == null) return {}
    var r = xz(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function xz(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function Nh(e) {
    return Cz(e) || Sz(e) || Nz(e) || wz()
}
function wz() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function Nz(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Ag(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Ag(e, t)
    }
}
function Sz(e) {
    if (typeof Symbol < 'u' && Symbol.iterator in Object(e))
        return Array.from(e)
}
function Cz(e) {
    if (Array.isArray(e)) return Ag(e)
}
function Ag(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function ex(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Qr(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? ex(Object(r), !0).forEach(function (n) {
                  Ho(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : ex(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Ho(e, t, r) {
    return (
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function Pz(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function tx(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n)
    }
}
function _z(e, t, r) {
    return t && tx(e.prototype, t), r && tx(e, r), e
}
function Az(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        t && Eg(e, t)
}
function Eg(e, t) {
    return (
        (Eg =
            Object.setPrototypeOf ||
            function (n, a) {
                return (n.__proto__ = a), n
            }),
        Eg(e, t)
    )
}
function Ez(e) {
    var t = kz()
    return function () {
        var n = yd(e),
            a
        if (t) {
            var l = yd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return kg(this, a)
    }
}
function kg(e, t) {
    return t && (yu(t) === 'object' || typeof t == 'function') ? t : Og(e)
}
function Og(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function kz() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function yd(e) {
    return (
        (yd = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        yd(e)
    )
}
var Ra = (function (e) {
    Az(r, e)
    var t = Ez(r)
    function r(n, a) {
        var l
        Pz(this, r), (l = t.call(this, n, a))
        var o = l.props,
            s = o.isActive,
            c = o.attributeName,
            u = o.from,
            f = o.to,
            p = o.steps,
            m = o.children
        if (
            ((l.handleStyleChange = l.handleStyleChange.bind(Og(l))),
            (l.changeStyle = l.changeStyle.bind(Og(l))),
            !s)
        )
            return (
                (l.state = { style: {} }),
                typeof m == 'function' && (l.state = { style: f }),
                kg(l)
            )
        if (p && p.length) l.state = { style: p[0].style }
        else if (u) {
            if (typeof m == 'function') return (l.state = { style: u }), kg(l)
            l.state = { style: c ? Ho({}, c, u) : u }
        } else l.state = { style: {} }
        return l
    }
    return (
        _z(r, [
            {
                key: 'componentDidMount',
                value: function () {
                    var a = this.props,
                        l = a.isActive,
                        o = a.canBegin
                    ;(this.mounted = !0),
                        !(!l || !o) && this.runAnimation(this.props)
                },
            },
            {
                key: 'componentDidUpdate',
                value: function (a) {
                    var l = this.props,
                        o = l.isActive,
                        s = l.canBegin,
                        c = l.attributeName,
                        u = l.shouldReAnimate
                    if (!!s) {
                        if (!o) {
                            var f = {
                                style: c
                                    ? Ho({}, c, this.props.to)
                                    : this.props.to,
                            }
                            this.state &&
                                this.state.style &&
                                ((c && this.state.style[c] !== this.props.to) ||
                                    (!c &&
                                        this.state.style !== this.props.to)) &&
                                this.setState(f)
                            return
                        }
                        if (
                            !(
                                FB(a.to, this.props.to) &&
                                a.canBegin &&
                                a.isActive
                            )
                        ) {
                            var p = !a.canBegin || !a.isActive
                            this.manager && this.manager.stop(),
                                this.stopJSAnimation && this.stopJSAnimation()
                            var m = p || u ? this.props.from : a.to
                            if (this.state && this.state.style) {
                                var v = { style: c ? Ho({}, c, m) : m }
                                ;((c && this.state.style[c] !== m) ||
                                    (!c && this.state.style !== m)) &&
                                    this.setState(v)
                            }
                            this.runAnimation(
                                Qr(
                                    Qr({}, this.props),
                                    {},
                                    { from: m, begin: 0 }
                                )
                            )
                        }
                    }
                },
            },
            {
                key: 'componentWillUnmount',
                value: function () {
                    ;(this.mounted = !1),
                        this.unSubscribe && this.unSubscribe(),
                        this.manager &&
                            (this.manager.stop(), (this.manager = null)),
                        this.stopJSAnimation && this.stopJSAnimation()
                },
            },
            {
                key: 'runJSAnimation',
                value: function (a) {
                    var l = this,
                        o = a.from,
                        s = a.to,
                        c = a.duration,
                        u = a.easing,
                        f = a.begin,
                        p = a.onAnimationEnd,
                        m = a.onAnimationStart,
                        v = yz(o, s, cz(u), c, this.changeStyle),
                        b = function () {
                            l.stopJSAnimation = v()
                        }
                    this.manager.start([m, f, b, c, p])
                },
            },
            {
                key: 'runStepAnimation',
                value: function (a) {
                    var l = this,
                        o = a.steps,
                        s = a.begin,
                        c = a.onAnimationStart,
                        u = o[0],
                        f = u.style,
                        p = u.duration,
                        m = p === void 0 ? 0 : p,
                        v = function (h, g, x) {
                            if (x === 0) return h
                            var w = g.duration,
                                y = g.easing,
                                N = y === void 0 ? 'ease' : y,
                                S = g.style,
                                P = g.properties,
                                E = g.onAnimationEnd,
                                k = x > 0 ? o[x - 1] : g,
                                M = P || Object.keys(S)
                            if (typeof N == 'function' || N === 'spring')
                                return [].concat(Nh(h), [
                                    l.runJSAnimation.bind(l, {
                                        from: k.style,
                                        to: S,
                                        duration: w,
                                        easing: N,
                                    }),
                                    w,
                                ])
                            var A = Y2(M, w, N),
                                _ = Qr(
                                    Qr(Qr({}, k.style), S),
                                    {},
                                    { transition: A }
                                )
                            return [].concat(Nh(h), [_, w, E]).filter(XB)
                        }
                    return this.manager.start(
                        [c].concat(Nh(o.reduce(v, [f, Math.max(m, s)])), [
                            a.onAnimationEnd,
                        ])
                    )
                },
            },
            {
                key: 'runAnimation',
                value: function (a) {
                    this.manager || (this.manager = HB())
                    var l = a.begin,
                        o = a.duration,
                        s = a.attributeName,
                        c = a.to,
                        u = a.easing,
                        f = a.onAnimationStart,
                        p = a.onAnimationEnd,
                        m = a.steps,
                        v = a.children,
                        b = this.manager
                    if (
                        ((this.unSubscribe = b.subscribe(
                            this.handleStyleChange
                        )),
                        typeof u == 'function' ||
                            typeof v == 'function' ||
                            u === 'spring')
                    ) {
                        this.runJSAnimation(a)
                        return
                    }
                    if (m.length > 1) {
                        this.runStepAnimation(a)
                        return
                    }
                    var h = s ? Ho({}, s, c) : c,
                        g = Y2(Object.keys(h), o, u)
                    b.start([f, l, Qr(Qr({}, h), {}, { transition: g }), o, p])
                },
            },
            {
                key: 'handleStyleChange',
                value: function (a) {
                    this.changeStyle(a)
                },
            },
            {
                key: 'changeStyle',
                value: function (a) {
                    this.mounted && this.setState({ style: a })
                },
            },
            {
                key: 'render',
                value: function () {
                    var a = this.props,
                        l = a.children
                    a.begin, a.duration, a.attributeName, a.easing
                    var o = a.isActive
                    a.steps,
                        a.from,
                        a.to,
                        a.canBegin,
                        a.onAnimationEnd,
                        a.shouldReAnimate,
                        a.onAnimationReStart
                    var s = bz(a, [
                            'children',
                            'begin',
                            'duration',
                            'attributeName',
                            'easing',
                            'isActive',
                            'steps',
                            'from',
                            'to',
                            'canBegin',
                            'onAnimationEnd',
                            'shouldReAnimate',
                            'onAnimationReStart',
                        ]),
                        c = C.exports.Children.count(l),
                        u = Ng(this.state.style)
                    if (typeof l == 'function') return l(u)
                    if (!o || c === 0) return l
                    var f = function (m) {
                        var v = m.props,
                            b = v.style,
                            h = b === void 0 ? {} : b,
                            g = v.className,
                            x = C.exports.cloneElement(
                                m,
                                Qr(
                                    Qr({}, s),
                                    {},
                                    { style: Qr(Qr({}, h), u), className: g }
                                )
                            )
                        return x
                    }
                    return c === 1
                        ? f(C.exports.Children.only(l))
                        : i('div', {
                              children: C.exports.Children.map(l, function (p) {
                                  return f(p)
                              }),
                          })
                },
            },
        ]),
        r
    )
})(C.exports.PureComponent)
Ra.displayName = 'Animate'
Ra.propTypes = {
    from: xe.exports.oneOfType([xe.exports.object, xe.exports.string]),
    to: xe.exports.oneOfType([xe.exports.object, xe.exports.string]),
    attributeName: xe.exports.string,
    duration: xe.exports.number,
    begin: xe.exports.number,
    easing: xe.exports.oneOfType([xe.exports.string, xe.exports.func]),
    steps: xe.exports.arrayOf(
        xe.exports.shape({
            duration: xe.exports.number.isRequired,
            style: xe.exports.object.isRequired,
            easing: xe.exports.oneOfType([
                xe.exports.oneOf([
                    'ease',
                    'ease-in',
                    'ease-out',
                    'ease-in-out',
                    'linear',
                ]),
                xe.exports.func,
            ]),
            properties: xe.exports.arrayOf('string'),
            onAnimationEnd: xe.exports.func,
        })
    ),
    children: xe.exports.oneOfType([xe.exports.node, xe.exports.func]),
    isActive: xe.exports.bool,
    canBegin: xe.exports.bool,
    onAnimationEnd: xe.exports.func,
    shouldReAnimate: xe.exports.bool,
    onAnimationStart: xe.exports.func,
    onAnimationReStart: xe.exports.func,
}
Ra.defaultProps = {
    begin: 0,
    duration: 1e3,
    from: '',
    to: '',
    attributeName: '',
    easing: 'ease',
    isActive: !0,
    canBegin: !0,
    steps: [],
    onAnimationEnd: function () {},
    onAnimationStart: function () {},
}
Number.isFinite === void 0 &&
    (Number.isFinite = function (e) {
        return typeof e == 'number' && isFinite(e)
    })
xe.exports.object, xe.exports.object, xe.exports.object, xe.exports.element
xe.exports.object,
    xe.exports.object,
    xe.exports.object,
    xe.exports.oneOfType([xe.exports.array, xe.exports.element]),
    xe.exports.any
var rx = uc,
    Oz = ev,
    Tz = Fe,
    nx = rx ? rx.isConcatSpreadable : void 0
function Mz(e) {
    return Tz(e) || Oz(e) || !!(nx && e && e[nx])
}
var Dz = Mz,
    $z = b3,
    Iz = Dz
function d5(e, t, r, n, a) {
    var l = -1,
        o = e.length
    for (r || (r = Iz), a || (a = []); ++l < o; ) {
        var s = e[l]
        t > 0 && r(s)
            ? t > 1
                ? d5(s, t - 1, r, n, a)
                : $z(a, s)
            : n || (a[a.length] = s)
    }
    return a
}
var f5 = d5
function Rz(e) {
    return function (t, r, n) {
        for (var a = -1, l = Object(t), o = n(t), s = o.length; s--; ) {
            var c = o[e ? s : ++a]
            if (r(l[c], c, l) === !1) break
        }
        return t
    }
}
var Lz = Rz,
    jz = Lz,
    Fz = jz(),
    Bz = Fz,
    zz = Bz,
    Vz = Jf
function Uz(e, t) {
    return e && zz(e, t, Vz)
}
var p5 = Uz,
    Wz = fc
function Hz(e, t) {
    return function (r, n) {
        if (r == null) return r
        if (!Wz(r)) return e(r, n)
        for (
            var a = r.length, l = t ? a : -1, o = Object(r);
            (t ? l-- : ++l < a) && n(o[l], l, o) !== !1;

        );
        return r
    }
}
var Gz = Hz,
    qz = p5,
    Kz = Gz,
    Yz = Kz(qz),
    uv = Yz,
    Xz = uv,
    Zz = fc
function Jz(e, t) {
    var r = -1,
        n = Zz(e) ? Array(e.length) : []
    return (
        Xz(e, function (a, l, o) {
            n[++r] = t(a, l, o)
        }),
        n
    )
}
var h5 = Jz
function Qz(e, t) {
    var r = e.length
    for (e.sort(t); r--; ) e[r] = e[r].value
    return e
}
var eV = Qz,
    ax = ao
function tV(e, t) {
    if (e !== t) {
        var r = e !== void 0,
            n = e === null,
            a = e === e,
            l = ax(e),
            o = t !== void 0,
            s = t === null,
            c = t === t,
            u = ax(t)
        if (
            (!s && !u && !l && e > t) ||
            (l && o && c && !s && !u) ||
            (n && o && c) ||
            (!r && c) ||
            !a
        )
            return 1
        if (
            (!n && !l && !u && e < t) ||
            (u && r && a && !n && !l) ||
            (s && r && a) ||
            (!o && a) ||
            !c
        )
            return -1
    }
    return 0
}
var rV = tV,
    nV = rV
function aV(e, t, r) {
    for (
        var n = -1, a = e.criteria, l = t.criteria, o = a.length, s = r.length;
        ++n < o;

    ) {
        var c = nV(a[n], l[n])
        if (c) {
            if (n >= s) return c
            var u = r[n]
            return c * (u == 'desc' ? -1 : 1)
        }
    }
    return e.index - t.index
}
var iV = aV,
    Sh = Y0,
    lV = X0,
    oV = En,
    sV = h5,
    cV = eV,
    uV = w3,
    dV = iV,
    fV = fo,
    pV = Fe
function hV(e, t, r) {
    t.length
        ? (t = Sh(t, function (l) {
              return pV(l)
                  ? function (o) {
                        return lV(o, l.length === 1 ? l[0] : l)
                    }
                  : l
          }))
        : (t = [fV])
    var n = -1
    t = Sh(t, uV(oV))
    var a = sV(e, function (l, o, s) {
        var c = Sh(t, function (u) {
            return u(l)
        })
        return { criteria: c, index: ++n, value: l }
    })
    return cV(a, function (l, o) {
        return dV(l, o, r)
    })
}
var mV = hV
function gV(e, t, r) {
    switch (r.length) {
        case 0:
            return e.call(t)
        case 1:
            return e.call(t, r[0])
        case 2:
            return e.call(t, r[0], r[1])
        case 3:
            return e.call(t, r[0], r[1], r[2])
    }
    return e.apply(t, r)
}
var vV = gV,
    yV = vV,
    ix = Math.max
function bV(e, t, r) {
    return (
        (t = ix(t === void 0 ? e.length - 1 : t, 0)),
        function () {
            for (
                var n = arguments,
                    a = -1,
                    l = ix(n.length - t, 0),
                    o = Array(l);
                ++a < l;

            )
                o[a] = n[t + a]
            a = -1
            for (var s = Array(t + 1); ++a < t; ) s[a] = n[a]
            return (s[t] = r(o)), yV(e, this, s)
        }
    )
}
var xV = bV
function wV(e) {
    return function () {
        return e
    }
}
var NV = wV,
    SV = Mi,
    CV = (function () {
        try {
            var e = SV(Object, 'defineProperty')
            return e({}, '', {}), e
        } catch {}
    })(),
    m5 = CV,
    PV = NV,
    lx = m5,
    _V = fo,
    AV = lx
        ? function (e, t) {
              return lx(e, 'toString', {
                  configurable: !0,
                  enumerable: !1,
                  value: PV(t),
                  writable: !0,
              })
          }
        : _V,
    EV = AV,
    kV = 800,
    OV = 16,
    TV = Date.now
function MV(e) {
    var t = 0,
        r = 0
    return function () {
        var n = TV(),
            a = OV - (n - r)
        if (((r = n), a > 0)) {
            if (++t >= kV) return arguments[0]
        } else t = 0
        return e.apply(void 0, arguments)
    }
}
var DV = MV,
    $V = EV,
    IV = DV,
    RV = IV($V),
    LV = RV,
    jV = fo,
    FV = xV,
    BV = LV
function zV(e, t) {
    return BV(FV(e, t, jV), e + '')
}
var VV = zV,
    UV = H0,
    WV = fc,
    HV = tv,
    GV = Tr
function qV(e, t, r) {
    if (!GV(r)) return !1
    var n = typeof t
    return (n == 'number' ? WV(r) && HV(t, r.length) : n == 'string' && t in r)
        ? UV(r[t], e)
        : !1
}
var ip = qV,
    KV = f5,
    YV = mV,
    XV = VV,
    ox = ip,
    ZV = XV(function (e, t) {
        if (e == null) return []
        var r = t.length
        return (
            r > 1 && ox(e, t[0], t[1])
                ? (t = [])
                : r > 2 && ox(t[0], t[1], t[2]) && (t = [t[0]]),
            YV(e, KV(t, 1), [])
        )
    }),
    dv = ZV
function Ml(e) {
    return (
        (Ml =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Ml(e)
    )
}
function JV(e, t) {
    return rU(e) || tU(e, t) || eU(e, t) || QV()
}
function QV() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function eU(e, t) {
    if (!!e) {
        if (typeof e == 'string') return sx(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return sx(e, t)
    }
}
function sx(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function tU(e, t) {
    var r =
        e == null
            ? null
            : (typeof Symbol < 'u' && e[Symbol.iterator]) || e['@@iterator']
    if (r != null) {
        var n,
            a,
            l,
            o,
            s = [],
            c = !0,
            u = !1
        try {
            if (((l = (r = r.call(e)).next), t === 0)) {
                if (Object(r) !== r) return
                c = !1
            } else
                for (
                    ;
                    !(c = (n = l.call(r)).done) &&
                    (s.push(n.value), s.length !== t);
                    c = !0
                );
        } catch (f) {
            ;(u = !0), (a = f)
        } finally {
            try {
                if (
                    !c &&
                    r.return != null &&
                    ((o = r.return()), Object(o) !== o)
                )
                    return
            } finally {
                if (u) throw a
            }
        }
        return s
    }
}
function rU(e) {
    if (Array.isArray(e)) return e
}
function cx(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Ch(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? cx(Object(r), !0).forEach(function (n) {
                  fv(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : cx(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function nU(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function ux(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, g5(n.key), n)
    }
}
function aU(e, t, r) {
    return (
        t && ux(e.prototype, t),
        r && ux(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function iU(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && Tg(e, t)
}
function Tg(e, t) {
    return (
        (Tg = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        Tg(e, t)
    )
}
function lU(e) {
    var t = cU()
    return function () {
        var n = bd(e),
            a
        if (t) {
            var l = bd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return oU(this, a)
    }
}
function oU(e, t) {
    if (t && (Ml(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return sU(e)
}
function sU(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function cU() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function bd(e) {
    return (
        (bd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        bd(e)
    )
}
function fv(e, t, r) {
    return (
        (t = g5(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function g5(e) {
    var t = uU(e, 'string')
    return Ml(t) === 'symbol' ? t : String(t)
}
function uU(e, t) {
    if (Ml(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Ml(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function dU(e) {
    return Fe(e) && Ct(e[0]) && Ct(e[1]) ? e.join(' ~ ') : e
}
var pv = (function (e) {
    iU(r, e)
    var t = lU(r)
    function r() {
        return nU(this, r), t.apply(this, arguments)
    }
    return (
        aU(r, [
            {
                key: 'renderContent',
                value: function () {
                    var a = this.props,
                        l = a.payload,
                        o = a.separator,
                        s = a.formatter,
                        c = a.itemStyle,
                        u = a.itemSorter
                    if (l && l.length) {
                        var f = { padding: 0, margin: 0 },
                            p = (u ? dv(l, u) : l).map(function (m, v) {
                                if (m.type === 'none') return null
                                var b = Ch(
                                        {
                                            display: 'block',
                                            paddingTop: 4,
                                            paddingBottom: 4,
                                            color: m.color || '#000',
                                        },
                                        c
                                    ),
                                    h = m.formatter || s || dU,
                                    g = m.value,
                                    x = m.name
                                if (h && g != null && x != null) {
                                    var w = h(g, x, m, v, l)
                                    if (Array.isArray(w)) {
                                        var y = w,
                                            N = JV(y, 2)
                                        ;(g = N[0]), (x = N[1])
                                    } else g = w
                                }
                                return d(
                                    'li',
                                    {
                                        className: 'recharts-tooltip-item',
                                        style: b,
                                        children: [
                                            Ct(x)
                                                ? i('span', {
                                                      className:
                                                          'recharts-tooltip-item-name',
                                                      children: x,
                                                  })
                                                : null,
                                            Ct(x)
                                                ? i('span', {
                                                      className:
                                                          'recharts-tooltip-item-separator',
                                                      children: o,
                                                  })
                                                : null,
                                            i('span', {
                                                className:
                                                    'recharts-tooltip-item-value',
                                                children: g,
                                            }),
                                            i('span', {
                                                className:
                                                    'recharts-tooltip-item-unit',
                                                children: m.unit || '',
                                            }),
                                        ],
                                    },
                                    'tooltip-item-'.concat(v)
                                )
                            })
                        return i('ul', {
                            className: 'recharts-tooltip-item-list',
                            style: f,
                            children: p,
                        })
                    }
                    return null
                },
            },
            {
                key: 'render',
                value: function () {
                    var a = this.props,
                        l = a.wrapperClassName,
                        o = a.contentStyle,
                        s = a.labelClassName,
                        c = a.labelStyle,
                        u = a.label,
                        f = a.labelFormatter,
                        p = a.payload,
                        m = Ch(
                            {
                                margin: 0,
                                padding: 10,
                                backgroundColor: '#fff',
                                border: '1px solid #ccc',
                                whiteSpace: 'nowrap',
                            },
                            o
                        ),
                        v = Ch({ margin: 0 }, c),
                        b = !ce(u),
                        h = b ? u : '',
                        g = He('recharts-default-tooltip', l),
                        x = He('recharts-tooltip-label', s)
                    return (
                        b && f && p !== void 0 && p !== null && (h = f(u, p)),
                        d('div', {
                            className: g,
                            style: m,
                            children: [
                                i('p', {
                                    className: x,
                                    style: v,
                                    children: K.isValidElement(h)
                                        ? h
                                        : ''.concat(h),
                                }),
                                this.renderContent(),
                            ],
                        })
                    )
                },
            },
        ]),
        r
    )
})(C.exports.PureComponent)
fv(pv, 'displayName', 'DefaultTooltipContent')
fv(pv, 'defaultProps', {
    separator: ' : ',
    contentStyle: {},
    itemStyle: {},
    labelStyle: {},
})
var fU = function () {
        return !(
            typeof window < 'u' &&
            window.document &&
            window.document.createElement &&
            window.setTimeout
        )
    },
    xn = {
        isSsr: fU(),
        get: function (t) {
            return xn[t]
        },
        set: function (t, r) {
            if (typeof t == 'string') xn[t] = r
            else {
                var n = Object.keys(t)
                n &&
                    n.length &&
                    n.forEach(function (a) {
                        xn[a] = t[a]
                    })
            }
        },
    }
function Dl(e) {
    return (
        (Dl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Dl(e)
    )
}
function dx(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function On(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? dx(Object(r), !0).forEach(function (n) {
                  $n(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : dx(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function pU(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function fx(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, v5(n.key), n)
    }
}
function hU(e, t, r) {
    return (
        t && fx(e.prototype, t),
        r && fx(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function mU(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && Mg(e, t)
}
function Mg(e, t) {
    return (
        (Mg = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        Mg(e, t)
    )
}
function gU(e) {
    var t = yU()
    return function () {
        var n = xd(e),
            a
        if (t) {
            var l = xd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return vU(this, a)
    }
}
function vU(e, t) {
    if (t && (Dl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return Dg(e)
}
function Dg(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function yU() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function xd(e) {
    return (
        (xd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        xd(e)
    )
}
function $n(e, t, r) {
    return (
        (t = v5(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function v5(e) {
    var t = bU(e, 'string')
    return Dl(t) === 'symbol' ? t : String(t)
}
function bU(e, t) {
    if (Dl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Dl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var To = 'recharts-tooltip-wrapper',
    px = 1
function xU(e) {
    return e.dataKey
}
function wU(e, t) {
    return e === !0 ? ld(t, xU) : pe(e) ? ld(t, e) : t
}
function NU(e, t) {
    return K.isValidElement(e)
        ? K.cloneElement(e, t)
        : pe(e)
        ? K.createElement(e, t)
        : i(pv, { ...t })
}
var jn = (function (e) {
    mU(r, e)
    var t = gU(r)
    function r() {
        var n
        pU(this, r)
        for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
            l[o] = arguments[o]
        return (
            (n = t.call.apply(t, [this].concat(l))),
            $n(Dg(n), 'state', {
                boxWidth: -1,
                boxHeight: -1,
                dismissed: !1,
                dismissedAtCoordinate: { x: 0, y: 0 },
            }),
            $n(Dg(n), 'getTranslate', function (s) {
                var c = s.key,
                    u = s.tooltipDimension,
                    f = s.viewBoxDimension,
                    p = n.props,
                    m = p.allowEscapeViewBox,
                    v = p.reverseDirection,
                    b = p.coordinate,
                    h = p.offset,
                    g = p.position,
                    x = p.viewBox
                if (g && J(g[c])) return g[c]
                var w = b[c] - u - h,
                    y = b[c] + h
                if (m[c]) return v[c] ? w : y
                if (v[c]) {
                    var N = w,
                        S = x[c]
                    return N < S ? Math.max(y, x[c]) : Math.max(w, x[c])
                }
                var P = y + u,
                    E = x[c] + f
                return P > E ? Math.max(w, x[c]) : Math.max(y, x[c])
            }),
            n
        )
    }
    return (
        hU(r, [
            {
                key: 'componentDidMount',
                value: function () {
                    this.updateBBox()
                },
            },
            {
                key: 'componentDidUpdate',
                value: function () {
                    this.updateBBox()
                },
            },
            {
                key: 'updateBBox',
                value: function () {
                    var a = this.state,
                        l = a.boxWidth,
                        o = a.boxHeight,
                        s = a.dismissed
                    if (
                        (s
                            ? (this.wrapperNode.blur(),
                              (this.props.coordinate.x !==
                                  this.state.dismissedAtCoordinate.x ||
                                  this.props.coordinate.y !==
                                      this.state.dismissedAtCoordinate.y) &&
                                  this.setState({ dismissed: !1 }))
                            : this.wrapperNode.focus({ preventScroll: !0 }),
                        this.wrapperNode &&
                            this.wrapperNode.getBoundingClientRect)
                    ) {
                        var c = this.wrapperNode.getBoundingClientRect()
                        ;(Math.abs(c.width - l) > px ||
                            Math.abs(c.height - o) > px) &&
                            this.setState({
                                boxWidth: c.width,
                                boxHeight: c.height,
                            })
                    } else
                        (l !== -1 || o !== -1) &&
                            this.setState({ boxWidth: -1, boxHeight: -1 })
                },
            },
            {
                key: 'render',
                value: function () {
                    var a,
                        l = this,
                        o = this.props,
                        s = o.payload,
                        c = o.isAnimationActive,
                        u = o.animationDuration,
                        f = o.animationEasing,
                        p = o.filterNull,
                        m = o.payloadUniqBy,
                        v = wU(
                            m,
                            p && s && s.length
                                ? s.filter(function (T) {
                                      return !ce(T.value)
                                  })
                                : s
                        ),
                        b = v && v.length,
                        h = this.props,
                        g = h.content,
                        x = h.viewBox,
                        w = h.coordinate,
                        y = h.position,
                        N = h.active,
                        S = h.wrapperStyle,
                        P = On(
                            {
                                pointerEvents: 'none',
                                visibility:
                                    !this.state.dismissed && N && b
                                        ? 'visible'
                                        : 'hidden',
                                position: 'absolute',
                                top: 0,
                                left: 0,
                            },
                            S
                        ),
                        E,
                        k
                    if (y && J(y.x) && J(y.y)) (E = y.x), (k = y.y)
                    else {
                        var M = this.state,
                            A = M.boxWidth,
                            _ = M.boxHeight
                        A > 0 && _ > 0 && w
                            ? ((E = this.getTranslate({
                                  key: 'x',
                                  tooltipDimension: A,
                                  viewBoxDimension: x.width,
                              })),
                              (k = this.getTranslate({
                                  key: 'y',
                                  tooltipDimension: _,
                                  viewBoxDimension: x.height,
                              })))
                            : (P.visibility = 'hidden')
                    }
                    ;(P = On(
                        On(
                            {},
                            Ng({
                                transform: this.props.useTranslate3d
                                    ? 'translate3d('
                                          .concat(E, 'px, ')
                                          .concat(k, 'px, 0)')
                                    : 'translate('
                                          .concat(E, 'px, ')
                                          .concat(k, 'px)'),
                            })
                        ),
                        P
                    )),
                        c &&
                            N &&
                            (P = On(
                                On(
                                    {},
                                    Ng({
                                        transition: 'transform '
                                            .concat(u, 'ms ')
                                            .concat(f),
                                    })
                                ),
                                P
                            ))
                    var O = He(
                        To,
                        ((a = {}),
                        $n(
                            a,
                            ''.concat(To, '-right'),
                            J(E) && w && J(w.x) && E >= w.x
                        ),
                        $n(
                            a,
                            ''.concat(To, '-left'),
                            J(E) && w && J(w.x) && E < w.x
                        ),
                        $n(
                            a,
                            ''.concat(To, '-bottom'),
                            J(k) && w && J(w.y) && k >= w.y
                        ),
                        $n(
                            a,
                            ''.concat(To, '-top'),
                            J(k) && w && J(w.y) && k < w.y
                        ),
                        a)
                    )
                    return i('div', {
                        tabIndex: -1,
                        role: 'dialog',
                        onKeyDown: function ($) {
                            $.key === 'Escape' &&
                                l.setState({
                                    dismissed: !0,
                                    dismissedAtCoordinate: On(
                                        On({}, l.state.dismissedAtCoordinate),
                                        {},
                                        {
                                            x: l.props.coordinate.x,
                                            y: l.props.coordinate.y,
                                        }
                                    ),
                                })
                        },
                        className: O,
                        style: P,
                        ref: function ($) {
                            l.wrapperNode = $
                        },
                        children: NU(
                            g,
                            On(On({}, this.props), {}, { payload: v })
                        ),
                    })
                },
            },
        ]),
        r
    )
})(C.exports.PureComponent)
$n(jn, 'displayName', 'Tooltip')
$n(jn, 'defaultProps', {
    active: !1,
    allowEscapeViewBox: { x: !1, y: !1 },
    reverseDirection: { x: !1, y: !1 },
    offset: 10,
    viewBox: { x1: 0, x2: 0, y1: 0, y2: 0 },
    coordinate: { x: 0, y: 0 },
    cursorStyle: {},
    separator: ' : ',
    wrapperStyle: {},
    contentStyle: {},
    itemStyle: {},
    labelStyle: {},
    cursor: !0,
    trigger: 'hover',
    isAnimationActive: !xn.isSsr,
    animationEasing: 'ease',
    animationDuration: 400,
    filterNull: !0,
    useTranslate3d: !1,
})
var SU = An,
    CU = function () {
        return SU.Date.now()
    },
    PU = CU,
    _U = /\s/
function AU(e) {
    for (var t = e.length; t-- && _U.test(e.charAt(t)); );
    return t
}
var EU = AU,
    kU = EU,
    OU = /^\s+/
function TU(e) {
    return e && e.slice(0, kU(e) + 1).replace(OU, '')
}
var MU = TU,
    DU = MU,
    hx = Tr,
    $U = ao,
    mx = 0 / 0,
    IU = /^[-+]0x[0-9a-f]+$/i,
    RU = /^0b[01]+$/i,
    LU = /^0o[0-7]+$/i,
    jU = parseInt
function FU(e) {
    if (typeof e == 'number') return e
    if ($U(e)) return mx
    if (hx(e)) {
        var t = typeof e.valueOf == 'function' ? e.valueOf() : e
        e = hx(t) ? t + '' : t
    }
    if (typeof e != 'string') return e === 0 ? e : +e
    e = DU(e)
    var r = RU.test(e)
    return r || LU.test(e) ? jU(e.slice(2), r ? 2 : 8) : IU.test(e) ? mx : +e
}
var y5 = FU,
    BU = Tr,
    Ph = PU,
    gx = y5,
    zU = 'Expected a function',
    VU = Math.max,
    UU = Math.min
function WU(e, t, r) {
    var n,
        a,
        l,
        o,
        s,
        c,
        u = 0,
        f = !1,
        p = !1,
        m = !0
    if (typeof e != 'function') throw new TypeError(zU)
    ;(t = gx(t) || 0),
        BU(r) &&
            ((f = !!r.leading),
            (p = 'maxWait' in r),
            (l = p ? VU(gx(r.maxWait) || 0, t) : l),
            (m = 'trailing' in r ? !!r.trailing : m))
    function v(P) {
        var E = n,
            k = a
        return (n = a = void 0), (u = P), (o = e.apply(k, E)), o
    }
    function b(P) {
        return (u = P), (s = setTimeout(x, t)), f ? v(P) : o
    }
    function h(P) {
        var E = P - c,
            k = P - u,
            M = t - E
        return p ? UU(M, l - k) : M
    }
    function g(P) {
        var E = P - c,
            k = P - u
        return c === void 0 || E >= t || E < 0 || (p && k >= l)
    }
    function x() {
        var P = Ph()
        if (g(P)) return w(P)
        s = setTimeout(x, h(P))
    }
    function w(P) {
        return (s = void 0), m && n ? v(P) : ((n = a = void 0), o)
    }
    function y() {
        s !== void 0 && clearTimeout(s), (u = 0), (n = c = a = s = void 0)
    }
    function N() {
        return s === void 0 ? o : w(Ph())
    }
    function S() {
        var P = Ph(),
            E = g(P)
        if (((n = arguments), (a = this), (c = P), E)) {
            if (s === void 0) return b(c)
            if (p) return clearTimeout(s), (s = setTimeout(x, t)), v(c)
        }
        return s === void 0 && (s = setTimeout(x, t)), o
    }
    return (S.cancel = y), (S.flush = N), S
}
var HU = WU,
    Rs = function (t, r) {
        for (
            var n = arguments.length, a = new Array(n > 2 ? n - 2 : 0), l = 2;
            l < n;
            l++
        )
            a[l - 2] = arguments[l]
    },
    pc = function (t) {
        return null
    }
pc.displayName = 'Cell'
var $g = { exports: {} },
    _h = '('.charCodeAt(0),
    Ah = ')'.charCodeAt(0),
    Gc = "'".charCodeAt(0),
    Eh = '"'.charCodeAt(0),
    kh = '\\'.charCodeAt(0),
    qc = '/'.charCodeAt(0),
    Oh = ','.charCodeAt(0),
    Th = ':'.charCodeAt(0),
    vx = '*'.charCodeAt(0),
    GU = function (e) {
        for (
            var t = [],
                r = e,
                n,
                a,
                l,
                o,
                s,
                c,
                u,
                f = 0,
                p = r.charCodeAt(f),
                m = r.length,
                v = [{ nodes: t }],
                b = 0,
                h,
                g = '',
                x = '',
                w = '';
            f < m;

        )
            if (p <= 32) {
                n = f
                do (n += 1), (p = r.charCodeAt(n))
                while (p <= 32)
                ;(o = r.slice(f, n)),
                    (l = t[t.length - 1]),
                    p === Ah && b
                        ? (w = o)
                        : l && l.type === 'div'
                        ? (l.after = o)
                        : p === Oh ||
                          p === Th ||
                          (p === qc && r.charCodeAt(n + 1) !== vx)
                        ? (x = o)
                        : t.push({ type: 'space', sourceIndex: f, value: o }),
                    (f = n)
            } else if (p === Gc || p === Eh) {
                ;(n = f),
                    (a = p === Gc ? "'" : '"'),
                    (o = { type: 'string', sourceIndex: f, quote: a })
                do
                    if (((s = !1), (n = r.indexOf(a, n + 1)), ~n))
                        for (c = n; r.charCodeAt(c - 1) === kh; )
                            (c -= 1), (s = !s)
                    else (r += a), (n = r.length - 1), (o.unclosed = !0)
                while (s)
                ;(o.value = r.slice(f + 1, n)),
                    t.push(o),
                    (f = n + 1),
                    (p = r.charCodeAt(f))
            } else if (p === qc && r.charCodeAt(f + 1) === vx)
                (o = { type: 'comment', sourceIndex: f }),
                    (n = r.indexOf('*/', f)),
                    n === -1 && ((o.unclosed = !0), (n = r.length)),
                    (o.value = r.slice(f + 2, n)),
                    t.push(o),
                    (f = n + 2),
                    (p = r.charCodeAt(f))
            else if (p === qc || p === Oh || p === Th)
                (o = r[f]),
                    t.push({
                        type: 'div',
                        sourceIndex: f - x.length,
                        value: o,
                        before: x,
                        after: '',
                    }),
                    (x = ''),
                    (f += 1),
                    (p = r.charCodeAt(f))
            else if (_h === p) {
                n = f
                do (n += 1), (p = r.charCodeAt(n))
                while (p <= 32)
                if (
                    ((o = {
                        type: 'function',
                        sourceIndex: f - g.length,
                        value: g,
                        before: r.slice(f + 1, n),
                    }),
                    (f = n),
                    g === 'url' && p !== Gc && p !== Eh)
                ) {
                    n -= 1
                    do
                        if (((s = !1), (n = r.indexOf(')', n + 1)), ~n))
                            for (c = n; r.charCodeAt(c - 1) === kh; )
                                (c -= 1), (s = !s)
                        else (r += ')'), (n = r.length - 1), (o.unclosed = !0)
                    while (s)
                    u = n
                    do (u -= 1), (p = r.charCodeAt(u))
                    while (p <= 32)
                    f !== u + 1
                        ? (o.nodes = [
                              {
                                  type: 'word',
                                  sourceIndex: f,
                                  value: r.slice(f, u + 1),
                              },
                          ])
                        : (o.nodes = []),
                        o.unclosed && u + 1 !== n
                            ? ((o.after = ''),
                              o.nodes.push({
                                  type: 'space',
                                  sourceIndex: u + 1,
                                  value: r.slice(u + 1, n),
                              }))
                            : (o.after = r.slice(u + 1, n)),
                        (f = n + 1),
                        (p = r.charCodeAt(f)),
                        t.push(o)
                } else
                    (b += 1),
                        (o.after = ''),
                        t.push(o),
                        v.push(o),
                        (t = o.nodes = []),
                        (h = o)
                g = ''
            } else if (Ah === p && b)
                (f += 1),
                    (p = r.charCodeAt(f)),
                    (h.after = w),
                    (w = ''),
                    (b -= 1),
                    v.pop(),
                    (h = v[b]),
                    (t = h.nodes)
            else {
                n = f
                do p === kh && (n += 1), (n += 1), (p = r.charCodeAt(n))
                while (
                    n < m &&
                    !(
                        p <= 32 ||
                        p === Gc ||
                        p === Eh ||
                        p === Oh ||
                        p === Th ||
                        p === qc ||
                        p === _h ||
                        (p === Ah && b)
                    )
                )
                ;(o = r.slice(f, n)),
                    _h === p
                        ? (g = o)
                        : t.push({ type: 'word', sourceIndex: f, value: o }),
                    (f = n)
            }
        for (f = v.length - 1; f; f -= 1) v[f].unclosed = !0
        return v[0].nodes
    },
    qU = function e(t, r, n) {
        var a, l, o, s
        for (a = 0, l = t.length; a < l; a += 1)
            (o = t[a]),
                n || (s = r(o, a, t)),
                s !== !1 &&
                    o.type === 'function' &&
                    Array.isArray(o.nodes) &&
                    e(o.nodes, r, n),
                n && r(o, a, t)
    }
function yx(e, t) {
    var r = e.type,
        n = e.value,
        a,
        l
    return t && (l = t(e)) !== void 0
        ? l
        : r === 'word' || r === 'space'
        ? n
        : r === 'string'
        ? ((a = e.quote || ''), a + n + (e.unclosed ? '' : a))
        : r === 'comment'
        ? '/*' + n + (e.unclosed ? '' : '*/')
        : r === 'div'
        ? (e.before || '') + n + (e.after || '')
        : Array.isArray(e.nodes)
        ? ((a = b5(e.nodes)),
          r !== 'function'
              ? a
              : n +
                '(' +
                (e.before || '') +
                a +
                (e.after || '') +
                (e.unclosed ? '' : ')'))
        : n
}
function b5(e, t) {
    var r, n
    if (Array.isArray(e)) {
        for (r = '', n = e.length - 1; ~n; n -= 1) r = yx(e[n], t) + r
        return r
    }
    return yx(e, t)
}
var KU = b5,
    Mh,
    bx
function YU() {
    if (bx) return Mh
    bx = 1
    var e = '-'.charCodeAt(0),
        t = '+'.charCodeAt(0),
        r = '.'.charCodeAt(0),
        n = 'e'.charCodeAt(0),
        a = 'E'.charCodeAt(0)
    return (
        (Mh = function (l) {
            for (var o = 0, s = l.length, c = !1, u = -1, f = !1, p; o < s; ) {
                if (((p = l.charCodeAt(o)), p >= 48 && p <= 57)) f = !0
                else if (p === n || p === a) {
                    if (u > -1) break
                    u = o
                } else if (p === r) {
                    if (c) break
                    c = !0
                } else if (p === t || p === e) {
                    if (o !== 0) break
                } else break
                o += 1
            }
            return (
                u + 1 === o && o--,
                f ? { number: l.slice(0, o), unit: l.slice(o) } : !1
            )
        }),
        Mh
    )
}
var XU = GU,
    x5 = qU,
    w5 = KU
function La(e) {
    return this instanceof La ? ((this.nodes = XU(e)), this) : new La(e)
}
La.prototype.toString = function () {
    return Array.isArray(this.nodes) ? w5(this.nodes) : ''
}
La.prototype.walk = function (e, t) {
    return x5(this.nodes, e, t), this
}
La.unit = YU()
La.walk = x5
La.stringify = w5
var ZU = La
function JU(e) {
    throw new Error(
        'Could not dynamically require "' +
            e +
            '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.'
    )
}
var N5 = {}
;(function (e) {
    var t = (function () {
        function r(m, v) {
            Object.defineProperty(this, 'name', {
                enumerable: !1,
                writable: !1,
                value: 'JisonParserError',
            }),
                m == null && (m = '???'),
                Object.defineProperty(this, 'message', {
                    enumerable: !1,
                    writable: !0,
                    value: m,
                }),
                (this.hash = v)
            var b
            if (v && v.exception instanceof Error) {
                var h = v.exception
                ;(this.message = h.message || m), (b = h.stack)
            }
            b ||
                (Error.hasOwnProperty('captureStackTrace')
                    ? Error.captureStackTrace(this, this.constructor)
                    : (b = new Error(m).stack)),
                b &&
                    Object.defineProperty(this, 'stack', {
                        enumerable: !1,
                        writable: !1,
                        value: b,
                    })
        }
        typeof Object.setPrototypeOf == 'function'
            ? Object.setPrototypeOf(r.prototype, Error.prototype)
            : (r.prototype = Object.create(Error.prototype)),
            (r.prototype.constructor = r),
            (r.prototype.name = 'JisonParserError')
        function n(m) {
            for (
                var v = [], b = m.pop, h = m.rule, g = 0, x = b.length;
                g < x;
                g++
            )
                v.push([b[g], h[g]])
            return v
        }
        function a(m) {
            for (
                var v = {}, b = m.idx, h = m.goto, g = 0, x = b.length;
                g < x;
                g++
            ) {
                var w = b[g]
                v[w] = h[g]
            }
            return v
        }
        function l(m) {
            for (
                var v = [],
                    b = m.len,
                    h = m.symbol,
                    g = m.type,
                    x = m.state,
                    w = m.mode,
                    y = m.goto,
                    N = 0,
                    S = b.length;
                N < S;
                N++
            ) {
                for (var P = b[N], E = {}, k = 0; k < P; k++) {
                    var M = h.shift()
                    switch (g.shift()) {
                        case 2:
                            E[M] = [w.shift(), y.shift()]
                            break
                        case 0:
                            E[M] = x.shift()
                            break
                        default:
                            E[M] = [3]
                    }
                }
                v.push(E)
            }
            return v
        }
        function o(m, v, b) {
            b = b || 0
            for (var h = 0; h < v; h++) this.push(m), (m += b)
        }
        function s(m, v) {
            for (m = this.length - m, v += m; m < v; m++) this.push(this[m])
        }
        function c(m) {
            for (var v = [], b = 0, h = m.length; b < h; b++) {
                var g = m[b]
                typeof g == 'function' ? (b++, g.apply(v, m[b])) : v.push(g)
            }
            return v
        }
        var u = {
            trace: function () {},
            JisonParserError: r,
            yy: {},
            options: {
                type: 'lalr',
                hasPartialLrUpgradeOnConflict: !0,
                errorRecoveryTokenDiscardCount: 3,
            },
            symbols_: {
                $accept: 0,
                $end: 1,
                ADD: 3,
                ANGLE: 16,
                CHS: 22,
                COMMA: 14,
                CSS_CPROP: 13,
                CSS_VAR: 12,
                DIV: 6,
                EMS: 20,
                EOF: 1,
                EXS: 21,
                FREQ: 18,
                LENGTH: 15,
                LPAREN: 7,
                MUL: 5,
                NESTED_CALC: 9,
                NUMBER: 11,
                PERCENTAGE: 28,
                PREFIX: 10,
                REMS: 23,
                RES: 19,
                RPAREN: 8,
                SUB: 4,
                TIME: 17,
                VHS: 24,
                VMAXS: 27,
                VMINS: 26,
                VWS: 25,
                css_value: 33,
                css_variable: 32,
                error: 2,
                expression: 29,
                math_expression: 30,
                value: 31,
            },
            terminals_: {
                1: 'EOF',
                2: 'error',
                3: 'ADD',
                4: 'SUB',
                5: 'MUL',
                6: 'DIV',
                7: 'LPAREN',
                8: 'RPAREN',
                9: 'NESTED_CALC',
                10: 'PREFIX',
                11: 'NUMBER',
                12: 'CSS_VAR',
                13: 'CSS_CPROP',
                14: 'COMMA',
                15: 'LENGTH',
                16: 'ANGLE',
                17: 'TIME',
                18: 'FREQ',
                19: 'RES',
                20: 'EMS',
                21: 'EXS',
                22: 'CHS',
                23: 'REMS',
                24: 'VHS',
                25: 'VWS',
                26: 'VMINS',
                27: 'VMAXS',
                28: 'PERCENTAGE',
            },
            TERROR: 2,
            EOF: 1,
            originalQuoteName: null,
            originalParseError: null,
            cleanupAfterParse: null,
            constructParseErrorInfo: null,
            yyMergeLocationInfo: null,
            __reentrant_call_depth: 0,
            __error_infos: [],
            __error_recovery_infos: [],
            quoteName: function (v) {
                return '"' + v + '"'
            },
            getSymbolName: function (v) {
                if (this.terminals_[v]) return this.terminals_[v]
                var b = this.symbols_
                for (var h in b) if (b[h] === v) return h
                return null
            },
            describeSymbol: function (v) {
                if (
                    v !== this.EOF &&
                    this.terminal_descriptions_ &&
                    this.terminal_descriptions_[v]
                )
                    return this.terminal_descriptions_[v]
                if (v === this.EOF) return 'end of input'
                var b = this.getSymbolName(v)
                return b ? this.quoteName(b) : null
            },
            collect_expected_token_set: function (v, b) {
                var h = this.TERROR,
                    g = [],
                    x = {}
                if (
                    !b &&
                    this.state_descriptions_ &&
                    this.state_descriptions_[v]
                )
                    return [this.state_descriptions_[v]]
                for (var w in this.table[v])
                    if (((w = +w), w !== h)) {
                        var y = b ? w : this.describeSymbol(w)
                        y && !x[y] && (g.push(y), (x[y] = !0))
                    }
                return g
            },
            productions_: n({
                pop: c([29, o, [30, 10], 31, 31, 32, 32, o, [33, 15]]),
                rule: c([
                    2,
                    o,
                    [3, 5],
                    4,
                    7,
                    o,
                    [1, 4],
                    2,
                    4,
                    6,
                    o,
                    [1, 14],
                    2,
                ]),
            }),
            performAction: function (v, b, h) {
                var g = this.yy
                switch ((g.parser, g.lexer, v)) {
                    case 0:
                        this.$ = h[b - 1]
                        break
                    case 1:
                        return (this.$ = h[b - 1]), h[b - 1]
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        this.$ = {
                            type: 'MathExpression',
                            operator: h[b - 1],
                            left: h[b - 2],
                            right: h[b],
                        }
                        break
                    case 6:
                        this.$ = h[b - 1]
                        break
                    case 7:
                        this.$ = { type: 'Calc', value: h[b - 1] }
                        break
                    case 8:
                        this.$ = {
                            type: 'Calc',
                            value: h[b - 1],
                            prefix: h[b - 5],
                        }
                        break
                    case 9:
                    case 10:
                    case 11:
                        this.$ = h[b]
                        break
                    case 12:
                        this.$ = { type: 'Value', value: parseFloat(h[b]) }
                        break
                    case 13:
                        this.$ = { type: 'Value', value: parseFloat(h[b]) * -1 }
                        break
                    case 14:
                        this.$ = { type: 'CssVariable', value: h[b - 1] }
                        break
                    case 15:
                        this.$ = {
                            type: 'CssVariable',
                            value: h[b - 3],
                            fallback: h[b - 1],
                        }
                        break
                    case 16:
                        this.$ = {
                            type: 'LengthValue',
                            value: parseFloat(h[b]),
                            unit: /[a-z]+/.exec(h[b])[0],
                        }
                        break
                    case 17:
                        this.$ = {
                            type: 'AngleValue',
                            value: parseFloat(h[b]),
                            unit: /[a-z]+/.exec(h[b])[0],
                        }
                        break
                    case 18:
                        this.$ = {
                            type: 'TimeValue',
                            value: parseFloat(h[b]),
                            unit: /[a-z]+/.exec(h[b])[0],
                        }
                        break
                    case 19:
                        this.$ = {
                            type: 'FrequencyValue',
                            value: parseFloat(h[b]),
                            unit: /[a-z]+/.exec(h[b])[0],
                        }
                        break
                    case 20:
                        this.$ = {
                            type: 'ResolutionValue',
                            value: parseFloat(h[b]),
                            unit: /[a-z]+/.exec(h[b])[0],
                        }
                        break
                    case 21:
                        this.$ = {
                            type: 'EmValue',
                            value: parseFloat(h[b]),
                            unit: 'em',
                        }
                        break
                    case 22:
                        this.$ = {
                            type: 'ExValue',
                            value: parseFloat(h[b]),
                            unit: 'ex',
                        }
                        break
                    case 23:
                        this.$ = {
                            type: 'ChValue',
                            value: parseFloat(h[b]),
                            unit: 'ch',
                        }
                        break
                    case 24:
                        this.$ = {
                            type: 'RemValue',
                            value: parseFloat(h[b]),
                            unit: 'rem',
                        }
                        break
                    case 25:
                        this.$ = {
                            type: 'VhValue',
                            value: parseFloat(h[b]),
                            unit: 'vh',
                        }
                        break
                    case 26:
                        this.$ = {
                            type: 'VwValue',
                            value: parseFloat(h[b]),
                            unit: 'vw',
                        }
                        break
                    case 27:
                        this.$ = {
                            type: 'VminValue',
                            value: parseFloat(h[b]),
                            unit: 'vmin',
                        }
                        break
                    case 28:
                        this.$ = {
                            type: 'VmaxValue',
                            value: parseFloat(h[b]),
                            unit: 'vmax',
                        }
                        break
                    case 29:
                        this.$ = {
                            type: 'PercentageValue',
                            value: parseFloat(h[b]),
                            unit: '%',
                        }
                        break
                    case 30:
                        var x = h[b]
                        ;(x.value *= -1), (this.$ = x)
                        break
                }
            },
            table: l({
                len: c([
                    24,
                    1,
                    5,
                    23,
                    1,
                    18,
                    o,
                    [0, 3],
                    1,
                    o,
                    [0, 16],
                    o,
                    [23, 4],
                    s,
                    [28, 3],
                    0,
                    0,
                    16,
                    1,
                    6,
                    6,
                    o,
                    [0, 3],
                    5,
                    1,
                    2,
                    s,
                    [37, 3],
                    s,
                    [20, 3],
                    5,
                    0,
                    0,
                ]),
                symbol: c([
                    4,
                    7,
                    9,
                    11,
                    12,
                    o,
                    [15, 19, 1],
                    1,
                    1,
                    o,
                    [3, 4, 1],
                    s,
                    [30, 19],
                    s,
                    [29, 4],
                    7,
                    4,
                    10,
                    11,
                    s,
                    [22, 14],
                    s,
                    [19, 3],
                    s,
                    [43, 22],
                    s,
                    [23, 69],
                    s,
                    [139, 4],
                    8,
                    s,
                    [51, 24],
                    4,
                    s,
                    [138, 15],
                    13,
                    s,
                    [186, 5],
                    8,
                    s,
                    [6, 6],
                    s,
                    [5, 5],
                    9,
                    8,
                    14,
                    s,
                    [159, 47],
                    s,
                    [60, 10],
                ]),
                type: c([
                    o,
                    [2, 19],
                    o,
                    [0, 5],
                    1,
                    o,
                    [2, 24],
                    o,
                    [0, 4],
                    s,
                    [22, 19],
                    s,
                    [43, 42],
                    s,
                    [23, 70],
                    s,
                    [28, 25],
                    s,
                    [45, 25],
                    s,
                    [113, 54],
                ]),
                state: c([
                    1,
                    2,
                    8,
                    6,
                    7,
                    30,
                    s,
                    [4, 3],
                    33,
                    37,
                    s,
                    [5, 3],
                    38,
                    s,
                    [4, 3],
                    39,
                    s,
                    [4, 3],
                    40,
                    s,
                    [4, 3],
                    42,
                    s,
                    [21, 4],
                    50,
                    s,
                    [5, 3],
                    51,
                    s,
                    [4, 3],
                ]),
                mode: c([
                    o,
                    [1, 179],
                    o,
                    [2, 3],
                    s,
                    [5, 5],
                    s,
                    [6, 4],
                    o,
                    [1, 57],
                ]),
                goto: c([
                    5,
                    3,
                    4,
                    24,
                    o,
                    [9, 15, 1],
                    o,
                    [25, 5, 1],
                    s,
                    [24, 19],
                    31,
                    35,
                    32,
                    34,
                    s,
                    [18, 14],
                    36,
                    s,
                    [38, 19],
                    s,
                    [19, 57],
                    s,
                    [118, 4],
                    41,
                    s,
                    [24, 19],
                    43,
                    35,
                    s,
                    [16, 14],
                    44,
                    o,
                    [2, 3],
                    28,
                    29,
                    2,
                    o,
                    [3, 3],
                    28,
                    29,
                    3,
                    s,
                    [53, 4],
                    o,
                    [45, 5, 1],
                    s,
                    [100, 42],
                    52,
                    s,
                    [5, 4],
                    53,
                ]),
            }),
            defaultActions: a({
                idx: c([
                    6,
                    7,
                    8,
                    o,
                    [10, 16, 1],
                    33,
                    34,
                    39,
                    40,
                    41,
                    45,
                    47,
                    52,
                    53,
                ]),
                goto: c([
                    9,
                    10,
                    11,
                    o,
                    [16, 14, 1],
                    12,
                    1,
                    30,
                    13,
                    o,
                    [4, 4, 1],
                    14,
                    15,
                    8,
                ]),
            }),
            parseError: function (v, b, h) {
                if (b.recoverable)
                    typeof this.trace == 'function' && this.trace(v),
                        b.destroy()
                else
                    throw (
                        (typeof this.trace == 'function' && this.trace(v),
                        h || (h = this.JisonParserError),
                        new h(v, b))
                    )
            },
            parse: function (v) {
                var b = this,
                    h = new Array(128),
                    g = new Array(128),
                    x = new Array(128),
                    w = this.table,
                    y = 0,
                    N = 0
                this.TERROR
                var S = this.EOF
                this.options.errorRecoveryTokenDiscardCount | 0
                var P = [0, 54],
                    E
                this.__lexer__
                    ? (E = this.__lexer__)
                    : (E = this.__lexer__ = Object.create(this.lexer))
                var k = {
                    parseError: void 0,
                    quoteName: void 0,
                    lexer: void 0,
                    parser: void 0,
                    pre_parse: void 0,
                    post_parse: void 0,
                    pre_lex: void 0,
                    post_lex: void 0,
                }
                typeof assert != 'function' || assert,
                    (this.yyGetSharedState = function () {
                        return k
                    })
                function M(ue, F) {
                    for (var q in F)
                        typeof ue[q] > 'u' &&
                            Object.prototype.hasOwnProperty.call(F, q) &&
                            (ue[q] = F[q])
                }
                M(k, this.yy),
                    (k.lexer = E),
                    (k.parser = this),
                    typeof k.parseError == 'function'
                        ? (this.parseError = function (F, q, te) {
                              return (
                                  te || (te = this.JisonParserError),
                                  k.parseError.call(this, F, q, te)
                              )
                          })
                        : (this.parseError = this.originalParseError),
                    typeof k.quoteName == 'function'
                        ? (this.quoteName = function (F) {
                              return k.quoteName.call(this, F)
                          })
                        : (this.quoteName = this.originalQuoteName),
                    (this.cleanupAfterParse = function (F, q, te) {
                        var z
                        if (q) {
                            var _e
                            ;(k.post_parse || this.post_parse) &&
                                (_e = this.constructParseErrorInfo(
                                    null,
                                    null,
                                    null,
                                    !1
                                )),
                                k.post_parse &&
                                    ((z = k.post_parse.call(this, k, F, _e)),
                                    typeof z < 'u' && (F = z)),
                                this.post_parse &&
                                    ((z = this.post_parse.call(this, k, F, _e)),
                                    typeof z < 'u' && (F = z)),
                                _e && _e.destroy && _e.destroy()
                        }
                        if (this.__reentrant_call_depth > 1) return F
                        if (
                            (E.cleanupAfterLex && E.cleanupAfterLex(te),
                            k &&
                                ((k.lexer = void 0),
                                (k.parser = void 0),
                                E.yy === k && (E.yy = void 0)),
                            (k = void 0),
                            (this.parseError = this.originalParseError),
                            (this.quoteName = this.originalQuoteName),
                            (h.length = 0),
                            (g.length = 0),
                            (x.length = 0),
                            (y = 0),
                            !te)
                        ) {
                            for (
                                var se = this.__error_infos.length - 1;
                                se >= 0;
                                se--
                            ) {
                                var Le = this.__error_infos[se]
                                Le &&
                                    typeof Le.destroy == 'function' &&
                                    Le.destroy()
                            }
                            this.__error_infos.length = 0
                        }
                        return F
                    }),
                    (this.constructParseErrorInfo = function (F, q, te, z) {
                        var _e = {
                            errStr: F,
                            exception: q,
                            text: E.match,
                            value: E.yytext,
                            token: this.describeSymbol(N) || N,
                            token_id: N,
                            line: E.yylineno,
                            expected: te,
                            recoverable: z,
                            state: T,
                            action: $,
                            new_state: G,
                            symbol_stack: h,
                            state_stack: g,
                            value_stack: x,
                            stack_pointer: y,
                            yy: k,
                            lexer: E,
                            parser: this,
                            destroy: function () {
                                var Le = !!this.recoverable
                                for (var Ye in this)
                                    this.hasOwnProperty(Ye) &&
                                        typeof Ye == 'object' &&
                                        (this[Ye] = void 0)
                                this.recoverable = Le
                            },
                        }
                        return this.__error_infos.push(_e), _e
                    })
                function A() {
                    var ue = E.lex()
                    return (
                        typeof ue != 'number' && (ue = b.symbols_[ue] || ue),
                        ue || S
                    )
                }
                function _() {
                    var ue = E.fastLex()
                    return (
                        typeof ue != 'number' && (ue = b.symbols_[ue] || ue),
                        ue || S
                    )
                }
                var O = A,
                    T,
                    $,
                    I,
                    j,
                    L = { $: !0, _$: void 0, yy: k },
                    D,
                    R,
                    V,
                    G,
                    ee = !1
                try {
                    if (
                        (this.__reentrant_call_depth++,
                        E.setInput(v, k),
                        typeof E.canIUse == 'function')
                    ) {
                        var Q = E.canIUse()
                        Q.fastLex && typeof _ == 'function' && (O = _)
                    }
                    for (
                        x[y] = null,
                            g[y] = 0,
                            h[y] = 0,
                            ++y,
                            this.pre_parse && this.pre_parse.call(this, k),
                            k.pre_parse && k.pre_parse.call(this, k),
                            G = g[y - 1];
                        ;

                    ) {
                        if (((T = G), this.defaultActions[T]))
                            ($ = 2), (G = this.defaultActions[T])
                        else if (
                            (N || (N = O()),
                            (j = (w[T] && w[T][N]) || P),
                            (G = j[1]),
                            ($ = j[0]),
                            !$)
                        ) {
                            var B,
                                X = this.describeSymbol(N) || N,
                                ge = this.collect_expected_token_set(T)
                            typeof E.yylineno == 'number'
                                ? (B =
                                      'Parse error on line ' +
                                      (E.yylineno + 1) +
                                      ': ')
                                : (B = 'Parse error: '),
                                typeof E.showPosition == 'function' &&
                                    (B +=
                                        `
` +
                                        E.showPosition(79 - 10, 10) +
                                        `
`),
                                ge.length
                                    ? (B +=
                                          'Expecting ' +
                                          ge.join(', ') +
                                          ', got unexpected ' +
                                          X)
                                    : (B += 'Unexpected ' + X),
                                (D = this.constructParseErrorInfo(
                                    B,
                                    null,
                                    ge,
                                    !1
                                )),
                                (I = this.parseError(
                                    D.errStr,
                                    D,
                                    this.JisonParserError
                                )),
                                typeof I < 'u' && (ee = I)
                            break
                        }
                        switch ($) {
                            default:
                                if ($ instanceof Array) {
                                    ;(D = this.constructParseErrorInfo(
                                        'Parse Error: multiple actions possible at state: ' +
                                            T +
                                            ', token: ' +
                                            N,
                                        null,
                                        null,
                                        !1
                                    )),
                                        (I = this.parseError(
                                            D.errStr,
                                            D,
                                            this.JisonParserError
                                        )),
                                        typeof I < 'u' && (ee = I)
                                    break
                                }
                                ;(D = this.constructParseErrorInfo(
                                    'Parsing halted. No viable error recovery approach available due to internal system failure.',
                                    null,
                                    null,
                                    !1
                                )),
                                    (I = this.parseError(
                                        D.errStr,
                                        D,
                                        this.JisonParserError
                                    )),
                                    typeof I < 'u' && (ee = I)
                                break
                            case 1:
                                ;(h[y] = N),
                                    (x[y] = E.yytext),
                                    (g[y] = G),
                                    ++y,
                                    (N = 0)
                                continue
                            case 2:
                                if (
                                    ((V = this.productions_[G - 1]),
                                    (R = V[1]),
                                    (I = this.performAction.call(
                                        L,
                                        G,
                                        y - 1,
                                        x
                                    )),
                                    typeof I < 'u')
                                ) {
                                    ee = I
                                    break
                                }
                                y -= R
                                var Pe = V[0]
                                ;(h[y] = Pe),
                                    (x[y] = L.$),
                                    (G = w[g[y - 1]][Pe]),
                                    (g[y] = G),
                                    ++y
                                continue
                            case 3:
                                y !== -2 &&
                                    ((ee = !0),
                                    y--,
                                    typeof x[y] < 'u' && (ee = x[y]))
                                break
                        }
                        break
                    }
                } catch (ue) {
                    if (ue instanceof this.JisonParserError) throw ue
                    if (
                        E &&
                        typeof E.JisonLexerError == 'function' &&
                        ue instanceof E.JisonLexerError
                    )
                        throw ue
                    ;(D = this.constructParseErrorInfo(
                        'Parsing aborted due to exception.',
                        ue,
                        null,
                        !1
                    )),
                        (ee = !1),
                        (I = this.parseError(
                            D.errStr,
                            D,
                            this.JisonParserError
                        )),
                        typeof I < 'u' && (ee = I)
                } finally {
                    ;(ee = this.cleanupAfterParse(ee, !0, !0)),
                        this.__reentrant_call_depth--
                }
                return ee
            },
        }
        ;(u.originalParseError = u.parseError),
            (u.originalQuoteName = u.quoteName)
        var f = (function () {
            function m(b, h) {
                Object.defineProperty(this, 'name', {
                    enumerable: !1,
                    writable: !1,
                    value: 'JisonLexerError',
                }),
                    b == null && (b = '???'),
                    Object.defineProperty(this, 'message', {
                        enumerable: !1,
                        writable: !0,
                        value: b,
                    }),
                    (this.hash = h)
                var g
                if (h && h.exception instanceof Error) {
                    var x = h.exception
                    ;(this.message = x.message || b), (g = x.stack)
                }
                g ||
                    (Error.hasOwnProperty('captureStackTrace')
                        ? Error.captureStackTrace(this, this.constructor)
                        : (g = new Error(b).stack)),
                    g &&
                        Object.defineProperty(this, 'stack', {
                            enumerable: !1,
                            writable: !1,
                            value: g,
                        })
            }
            typeof Object.setPrototypeOf == 'function'
                ? Object.setPrototypeOf(m.prototype, Error.prototype)
                : (m.prototype = Object.create(Error.prototype)),
                (m.prototype.constructor = m),
                (m.prototype.name = 'JisonLexerError')
            var v = {
                EOF: 1,
                ERROR: 2,
                __currentRuleSet__: null,
                __error_infos: [],
                __decompressed: !1,
                done: !1,
                _backtrack: !1,
                _input: '',
                _more: !1,
                _signaled_error_token: !1,
                conditionStack: [],
                match: '',
                matched: '',
                matches: !1,
                yytext: '',
                offset: 0,
                yyleng: 0,
                yylineno: 0,
                yylloc: null,
                constructLexErrorInfo: function (h, g, x) {
                    if (
                        ((h = '' + h),
                        x == null &&
                            (x = !(
                                h.indexOf(`
`) > 0 && h.indexOf('^') > 0
                            )),
                        this.yylloc && x)
                    ) {
                        if (typeof this.prettyPrintRange == 'function')
                            this.prettyPrintRange(this.yylloc),
                                /\n\s*$/.test(h) ||
                                    (h += `
`),
                                (h +=
                                    `
  Erroneous area:
` + this.prettyPrintRange(this.yylloc))
                        else if (typeof this.showPosition == 'function') {
                            var w = this.showPosition()
                            w &&
                                (h.length &&
                                h[h.length - 1] !==
                                    `
` &&
                                w[0] !==
                                    `
`
                                    ? (h +=
                                          `
` + w)
                                    : (h += w))
                        }
                    }
                    var y = {
                        errStr: h,
                        recoverable: !!g,
                        text: this.match,
                        token: null,
                        line: this.yylineno,
                        loc: this.yylloc,
                        yy: this.yy,
                        lexer: this,
                        destroy: function () {
                            var S = !!this.recoverable
                            for (var P in this)
                                this.hasOwnProperty(P) &&
                                    typeof P == 'object' &&
                                    (this[P] = void 0)
                            this.recoverable = S
                        },
                    }
                    return this.__error_infos.push(y), y
                },
                parseError: function (h, g, x) {
                    if ((x || (x = this.JisonLexerError), this.yy)) {
                        if (
                            this.yy.parser &&
                            typeof this.yy.parser.parseError == 'function'
                        )
                            return (
                                this.yy.parser.parseError.call(this, h, g, x) ||
                                this.ERROR
                            )
                        if (typeof this.yy.parseError == 'function')
                            return (
                                this.yy.parseError.call(this, h, g, x) ||
                                this.ERROR
                            )
                    }
                    throw new x(h, g)
                },
                yyerror: function (h) {
                    var g = ''
                    this.yylloc && (g = ' on line ' + (this.yylineno + 1))
                    var x = this.constructLexErrorInfo(
                            'Lexical error' + g + ': ' + h,
                            this.options.lexerErrorsAreRecoverable
                        ),
                        w = Array.prototype.slice.call(arguments, 1)
                    return (
                        w.length && (x.extra_error_attributes = w),
                        this.parseError(x.errStr, x, this.JisonLexerError) ||
                            this.ERROR
                    )
                },
                cleanupAfterLex: function (h) {
                    if ((this.setInput('', {}), !h)) {
                        for (
                            var g = this.__error_infos.length - 1;
                            g >= 0;
                            g--
                        ) {
                            var x = this.__error_infos[g]
                            x && typeof x.destroy == 'function' && x.destroy()
                        }
                        this.__error_infos.length = 0
                    }
                    return this
                },
                clear: function () {
                    ;(this.yytext = ''),
                        (this.yyleng = 0),
                        (this.match = ''),
                        (this.matches = !1),
                        (this._more = !1),
                        (this._backtrack = !1)
                    var h = this.yylloc ? this.yylloc.last_column : 0
                    this.yylloc = {
                        first_line: this.yylineno + 1,
                        first_column: h,
                        last_line: this.yylineno + 1,
                        last_column: h,
                        range: [this.offset, this.offset],
                    }
                },
                setInput: function (h, g) {
                    if (
                        ((this.yy = g || this.yy || {}), !this.__decompressed)
                    ) {
                        for (
                            var x = this.rules, w = 0, y = x.length;
                            w < y;
                            w++
                        ) {
                            var N = x[w]
                            typeof N == 'number' && (x[w] = x[N])
                        }
                        var S = this.conditions
                        for (var P in S) {
                            for (
                                var E = S[P],
                                    k = E.rules,
                                    y = k.length,
                                    M = new Array(y + 1),
                                    A = new Array(y + 1),
                                    w = 0;
                                w < y;
                                w++
                            ) {
                                var _ = k[w],
                                    N = x[_]
                                ;(M[w + 1] = N), (A[w + 1] = _)
                            }
                            ;(E.rules = A),
                                (E.__rule_regexes = M),
                                (E.__rule_count = y)
                        }
                        this.__decompressed = !0
                    }
                    return (
                        (this._input = h || ''),
                        this.clear(),
                        (this._signaled_error_token = !1),
                        (this.done = !1),
                        (this.yylineno = 0),
                        (this.matched = ''),
                        (this.conditionStack = ['INITIAL']),
                        (this.__currentRuleSet__ = null),
                        (this.yylloc = {
                            first_line: 1,
                            first_column: 0,
                            last_line: 1,
                            last_column: 0,
                            range: [0, 0],
                        }),
                        (this.offset = 0),
                        this
                    )
                },
                editRemainingInput: function (h, g) {
                    var x = h.call(this, this._input, g)
                    return (
                        typeof x != 'string'
                            ? x && (this._input = '' + x)
                            : (this._input = x),
                        this
                    )
                },
                input: function () {
                    if (!this._input) return null
                    var h = this._input[0]
                    ;(this.yytext += h),
                        this.yyleng++,
                        this.offset++,
                        (this.match += h),
                        (this.matched += h)
                    var g = 1,
                        x = !1
                    if (
                        h ===
                        `
`
                    )
                        x = !0
                    else if (h === '\r') {
                        x = !0
                        var w = this._input[1]
                        w ===
                            `
` &&
                            (g++,
                            (h += w),
                            (this.yytext += w),
                            this.yyleng++,
                            this.offset++,
                            (this.match += w),
                            (this.matched += w),
                            this.yylloc.range[1]++)
                    }
                    return (
                        x
                            ? (this.yylineno++,
                              this.yylloc.last_line++,
                              (this.yylloc.last_column = 0))
                            : this.yylloc.last_column++,
                        this.yylloc.range[1]++,
                        (this._input = this._input.slice(g)),
                        h
                    )
                },
                unput: function (h) {
                    var g = h.length,
                        x = h.split(/(?:\r\n?|\n)/g)
                    if (
                        ((this._input = h + this._input),
                        (this.yytext = this.yytext.substr(
                            0,
                            this.yytext.length - g
                        )),
                        (this.yyleng = this.yytext.length),
                        (this.offset -= g),
                        (this.match = this.match.substr(
                            0,
                            this.match.length - g
                        )),
                        (this.matched = this.matched.substr(
                            0,
                            this.matched.length - g
                        )),
                        x.length > 1)
                    ) {
                        ;(this.yylineno -= x.length - 1),
                            (this.yylloc.last_line = this.yylineno + 1)
                        var w = this.match,
                            y = w.split(/(?:\r\n?|\n)/g)
                        y.length === 1 &&
                            ((w = this.matched),
                            (y = w.split(/(?:\r\n?|\n)/g))),
                            (this.yylloc.last_column = y[y.length - 1].length)
                    } else this.yylloc.last_column -= g
                    return (
                        (this.yylloc.range[1] =
                            this.yylloc.range[0] + this.yyleng),
                        (this.done = !1),
                        this
                    )
                },
                more: function () {
                    return (this._more = !0), this
                },
                reject: function () {
                    if (this.options.backtrack_lexer) this._backtrack = !0
                    else {
                        var h = ''
                        this.yylloc && (h = ' on line ' + (this.yylineno + 1))
                        var g = this.constructLexErrorInfo(
                            'Lexical error' +
                                h +
                                ': You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).',
                            !1
                        )
                        this._signaled_error_token =
                            this.parseError(
                                g.errStr,
                                g,
                                this.JisonLexerError
                            ) || this.ERROR
                    }
                    return this
                },
                less: function (h) {
                    return this.unput(this.match.slice(h))
                },
                pastInput: function (h, g) {
                    var x = this.matched.substring(
                        0,
                        this.matched.length - this.match.length
                    )
                    h < 0 ? (h = x.length) : h || (h = 20),
                        g < 0 ? (g = x.length) : g || (g = 1),
                        (x = x.substr(-h * 2 - 2))
                    var w = x.replace(
                        /\r\n|\r/g,
                        `
`
                    ).split(`
`)
                    return (
                        (w = w.slice(-g)),
                        (x = w.join(`
`)),
                        x.length > h && (x = '...' + x.substr(-h)),
                        x
                    )
                },
                upcomingInput: function (h, g) {
                    var x = this.match
                    h < 0 ? (h = x.length + this._input.length) : h || (h = 20),
                        g < 0 ? (g = h) : g || (g = 1),
                        x.length < h * 2 + 2 &&
                            (x += this._input.substring(0, h * 2 + 2))
                    var w = x.replace(
                        /\r\n|\r/g,
                        `
`
                    ).split(`
`)
                    return (
                        (w = w.slice(0, g)),
                        (x = w.join(`
`)),
                        x.length > h && (x = x.substring(0, h) + '...'),
                        x
                    )
                },
                showPosition: function (h, g) {
                    var x = this.pastInput(h).replace(/\s/g, ' '),
                        w = new Array(x.length + 1).join('-')
                    return (
                        x +
                        this.upcomingInput(g).replace(/\s/g, ' ') +
                        `
` +
                        w +
                        '^'
                    )
                },
                deriveLocationInfo: function (h, g, x, w) {
                    var y = {
                        first_line: 1,
                        first_column: 0,
                        last_line: 1,
                        last_column: 0,
                        range: [0, 0],
                    }
                    return (
                        h &&
                            ((y.first_line = h.first_line | 0),
                            (y.last_line = h.last_line | 0),
                            (y.first_column = h.first_column | 0),
                            (y.last_column = h.last_column | 0),
                            h.range &&
                                ((y.range[0] = h.range[0] | 0),
                                (y.range[1] = h.range[1] | 0))),
                        (y.first_line <= 0 || y.last_line < y.first_line) &&
                            (y.first_line <= 0 &&
                                g &&
                                ((y.first_line = g.last_line | 0),
                                (y.first_column = g.last_column | 0),
                                g.range && (y.range[0] = h.range[1] | 0)),
                            (y.last_line <= 0 || y.last_line < y.first_line) &&
                                x &&
                                ((y.last_line = x.first_line | 0),
                                (y.last_column = x.first_column | 0),
                                x.range && (y.range[1] = h.range[0] | 0)),
                            y.first_line <= 0 &&
                                w &&
                                (y.last_line <= 0 ||
                                    w.last_line <= y.last_line) &&
                                ((y.first_line = w.first_line | 0),
                                (y.first_column = w.first_column | 0),
                                w.range && (y.range[0] = w.range[0] | 0)),
                            y.last_line <= 0 &&
                                w &&
                                (y.first_line <= 0 ||
                                    w.first_line >= y.first_line) &&
                                ((y.last_line = w.last_line | 0),
                                (y.last_column = w.last_column | 0),
                                w.range && (y.range[1] = w.range[1] | 0))),
                        y.last_line <= 0 &&
                            (y.first_line <= 0
                                ? ((y.first_line = this.yylloc.first_line),
                                  (y.last_line = this.yylloc.last_line),
                                  (y.first_column = this.yylloc.first_column),
                                  (y.last_column = this.yylloc.last_column),
                                  (y.range[0] = this.yylloc.range[0]),
                                  (y.range[1] = this.yylloc.range[1]))
                                : ((y.last_line = this.yylloc.last_line),
                                  (y.last_column = this.yylloc.last_column),
                                  (y.range[1] = this.yylloc.range[1]))),
                        y.first_line <= 0 &&
                            ((y.first_line = y.last_line),
                            (y.first_column = 0),
                            (y.range[1] = y.range[0])),
                        y.first_column < 0 && (y.first_column = 0),
                        y.last_column < 0 &&
                            (y.last_column =
                                y.first_column > 0 ? y.first_column : 80),
                        y
                    )
                },
                prettyPrintRange: function (h, g, x) {
                    h = this.deriveLocationInfo(h, g, x)
                    const w = 3,
                        y = 1,
                        N = 2
                    var S = this.matched + this._input,
                        P = S.split(`
`),
                        E = Math.max(1, g ? g.first_line : h.first_line - w),
                        k = Math.max(1, x ? x.last_line : h.last_line + y),
                        M = (1 + Math.log10(k | 1)) | 0,
                        A = new Array(M).join(' '),
                        _ = [],
                        O = P.slice(E - 1, k + 1).map(function (L, D) {
                            var R = D + E,
                                V = (A + R).substr(-M),
                                G = V + ': ' + L,
                                ee = new Array(M + 1).join('^'),
                                Q = 2 + 1,
                                B = 0
                            if (
                                (R === h.first_line
                                    ? ((Q += h.first_column),
                                      (B = Math.max(
                                          2,
                                          (R === h.last_line
                                              ? h.last_column
                                              : L.length) -
                                              h.first_column +
                                              1
                                      )))
                                    : R === h.last_line
                                    ? (B = Math.max(2, h.last_column + 1))
                                    : R > h.first_line &&
                                      R < h.last_line &&
                                      (B = Math.max(2, L.length + 1)),
                                B)
                            ) {
                                var X = new Array(Q).join('.'),
                                    ge = new Array(B).join('^')
                                ;(G +=
                                    `
` +
                                    ee +
                                    X +
                                    ge),
                                    L.trim().length > 0 && _.push(D)
                            }
                            return (G = G.replace(/\t/g, ' ')), G
                        })
                    if (_.length > 2 * N) {
                        var T = _[N - 1] + 1,
                            $ = _[_.length - N] - 1,
                            I =
                                new Array(M + 1).join(' ') +
                                '  (...continued...)'
                        ;(I +=
                            `
` +
                            new Array(M + 1).join('-') +
                            '  (---------------)'),
                            O.splice(T, $ - T + 1, I)
                    }
                    return O.join(`
`)
                },
                describeYYLLOC: function (h, g) {
                    var x = h.first_line,
                        w = h.last_line,
                        y = h.first_column,
                        N = h.last_column,
                        S = w - x,
                        P = N - y,
                        E
                    if (
                        (S === 0
                            ? ((E = 'line ' + x + ', '),
                              P <= 1
                                  ? (E += 'column ' + y)
                                  : (E += 'columns ' + y + ' .. ' + N))
                            : (E =
                                  'lines ' +
                                  x +
                                  '(column ' +
                                  y +
                                  ') .. ' +
                                  w +
                                  '(column ' +
                                  N +
                                  ')'),
                        h.range && g)
                    ) {
                        var k = h.range[0],
                            M = h.range[1] - 1
                        M <= k
                            ? (E += ' {String Offset: ' + k + '}')
                            : (E +=
                                  ' {String Offset range: ' +
                                  k +
                                  ' .. ' +
                                  M +
                                  '}')
                    }
                    return E
                },
                test_match: function (h, g) {
                    var x, w, y, N, S
                    if (
                        (this.options.backtrack_lexer &&
                            (y = {
                                yylineno: this.yylineno,
                                yylloc: {
                                    first_line: this.yylloc.first_line,
                                    last_line: this.yylloc.last_line,
                                    first_column: this.yylloc.first_column,
                                    last_column: this.yylloc.last_column,
                                    range: this.yylloc.range.slice(0),
                                },
                                yytext: this.yytext,
                                match: this.match,
                                matches: this.matches,
                                matched: this.matched,
                                yyleng: this.yyleng,
                                offset: this.offset,
                                _more: this._more,
                                _input: this._input,
                                yy: this.yy,
                                conditionStack: this.conditionStack.slice(0),
                                done: this.done,
                            }),
                        (N = h[0]),
                        (S = N.length),
                        (w = N.split(/(?:\r\n?|\n)/g)),
                        w.length > 1
                            ? ((this.yylineno += w.length - 1),
                              (this.yylloc.last_line = this.yylineno + 1),
                              (this.yylloc.last_column =
                                  w[w.length - 1].length))
                            : (this.yylloc.last_column += S),
                        (this.yytext += N),
                        (this.match += N),
                        (this.matched += N),
                        (this.matches = h),
                        (this.yyleng = this.yytext.length),
                        (this.yylloc.range[1] += S),
                        (this.offset += S),
                        (this._more = !1),
                        (this._backtrack = !1),
                        (this._input = this._input.slice(S)),
                        (x = this.performAction.call(
                            this,
                            this.yy,
                            g,
                            this.conditionStack[this.conditionStack.length - 1]
                        )),
                        this.done && this._input && (this.done = !1),
                        x)
                    )
                        return x
                    if (this._backtrack) {
                        for (var P in y) this[P] = y[P]
                        return (this.__currentRuleSet__ = null), !1
                    } else if (this._signaled_error_token)
                        return (
                            (x = this._signaled_error_token),
                            (this._signaled_error_token = !1),
                            x
                        )
                    return !1
                },
                next: function () {
                    if (this.done) return this.clear(), this.EOF
                    this._input || (this.done = !0)
                    var h, g, x, w
                    this._more || this.clear()
                    var y = this.__currentRuleSet__
                    if (
                        !y &&
                        ((y = this.__currentRuleSet__ = this._currentRules()),
                        !y || !y.rules)
                    ) {
                        var N = ''
                        this.options.trackPosition &&
                            (N = ' on line ' + (this.yylineno + 1))
                        var S = this.constructLexErrorInfo(
                            'Internal lexer engine error' +
                                N +
                                ': The lex grammar programmer pushed a non-existing condition name "' +
                                this.topState() +
                                '"; this is a fatal error and should be reported to the application programmer team!',
                            !1
                        )
                        return (
                            this.parseError(
                                S.errStr,
                                S,
                                this.JisonLexerError
                            ) || this.ERROR
                        )
                    }
                    for (
                        var P = y.rules,
                            E = y.__rule_regexes,
                            k = y.__rule_count,
                            M = 1;
                        M <= k;
                        M++
                    )
                        if (
                            ((x = this._input.match(E[M])),
                            x && (!g || x[0].length > g[0].length))
                        ) {
                            if (
                                ((g = x), (w = M), this.options.backtrack_lexer)
                            ) {
                                if (((h = this.test_match(x, P[M])), h !== !1))
                                    return h
                                if (this._backtrack) {
                                    g = void 0
                                    continue
                                } else return !1
                            } else if (!this.options.flex) break
                        }
                    if (g)
                        return (h = this.test_match(g, P[w])), h !== !1 ? h : !1
                    if (this._input) {
                        var N = ''
                        this.options.trackPosition &&
                            (N = ' on line ' + (this.yylineno + 1))
                        var S = this.constructLexErrorInfo(
                                'Lexical error' + N + ': Unrecognized text.',
                                this.options.lexerErrorsAreRecoverable
                            ),
                            A = this._input,
                            _ = this.topState(),
                            O = this.conditionStack.length
                        return (
                            (h =
                                this.parseError(
                                    S.errStr,
                                    S,
                                    this.JisonLexerError
                                ) || this.ERROR),
                            h === this.ERROR &&
                                !this.matches &&
                                A === this._input &&
                                _ === this.topState() &&
                                O === this.conditionStack.length &&
                                this.input(),
                            h
                        )
                    } else return (this.done = !0), this.clear(), this.EOF
                },
                lex: function () {
                    var h
                    for (
                        typeof this.pre_lex == 'function' &&
                            (h = this.pre_lex.call(this, 0)),
                            typeof this.options.pre_lex == 'function' &&
                                (h = this.options.pre_lex.call(this, h) || h),
                            this.yy &&
                                typeof this.yy.pre_lex == 'function' &&
                                (h = this.yy.pre_lex.call(this, h) || h);
                        !h;

                    )
                        h = this.next()
                    return (
                        this.yy &&
                            typeof this.yy.post_lex == 'function' &&
                            (h = this.yy.post_lex.call(this, h) || h),
                        typeof this.options.post_lex == 'function' &&
                            (h = this.options.post_lex.call(this, h) || h),
                        typeof this.post_lex == 'function' &&
                            (h = this.post_lex.call(this, h) || h),
                        h
                    )
                },
                fastLex: function () {
                    for (var h; !h; ) h = this.next()
                    return h
                },
                canIUse: function () {
                    var h = {
                        fastLex:
                            !(
                                typeof this.pre_lex == 'function' ||
                                typeof this.options.pre_lex == 'function' ||
                                (this.yy &&
                                    typeof this.yy.pre_lex == 'function') ||
                                (this.yy &&
                                    typeof this.yy.post_lex == 'function') ||
                                typeof this.options.post_lex == 'function' ||
                                typeof this.post_lex == 'function'
                            ) && typeof this.fastLex == 'function',
                    }
                    return h
                },
                begin: function (h) {
                    return this.pushState(h)
                },
                pushState: function (h) {
                    return (
                        this.conditionStack.push(h),
                        (this.__currentRuleSet__ = null),
                        this
                    )
                },
                popState: function () {
                    var h = this.conditionStack.length - 1
                    return h > 0
                        ? ((this.__currentRuleSet__ = null),
                          this.conditionStack.pop())
                        : this.conditionStack[0]
                },
                topState: function (h) {
                    return (
                        (h = this.conditionStack.length - 1 - Math.abs(h || 0)),
                        h >= 0 ? this.conditionStack[h] : 'INITIAL'
                    )
                },
                _currentRules: function () {
                    return this.conditionStack.length &&
                        this.conditionStack[this.conditionStack.length - 1]
                        ? this.conditions[
                              this.conditionStack[
                                  this.conditionStack.length - 1
                              ]
                          ]
                        : this.conditions.INITIAL
                },
                stateStackSize: function () {
                    return this.conditionStack.length
                },
                options: { trackPosition: !0 },
                JisonLexerError: m,
                performAction: function (h, g, x) {
                    switch (g) {
                        case 1:
                            break
                        default:
                            return this.simpleCaseActionClusters[g]
                    }
                },
                simpleCaseActionClusters: {
                    0: 13,
                    2: 5,
                    3: 6,
                    4: 3,
                    5: 4,
                    6: 15,
                    7: 15,
                    8: 15,
                    9: 15,
                    10: 15,
                    11: 15,
                    12: 16,
                    13: 16,
                    14: 16,
                    15: 16,
                    16: 17,
                    17: 17,
                    18: 18,
                    19: 18,
                    20: 19,
                    21: 19,
                    22: 19,
                    23: 20,
                    24: 21,
                    25: 22,
                    26: 23,
                    27: 25,
                    28: 24,
                    29: 26,
                    30: 27,
                    31: 28,
                    32: 11,
                    33: 9,
                    34: 12,
                    35: 10,
                    36: 7,
                    37: 8,
                    38: 14,
                    39: 1,
                },
                rules: [
                    /^(?:(--[\d\-A-Za-z]*))/,
                    /^(?:\s+)/,
                    /^(?:\*)/,
                    /^(?:\/)/,
                    /^(?:\+)/,
                    /^(?:-)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)px\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)cm\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)mm\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)in\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)pt\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)pc\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)deg\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)grad\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)rad\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)turn\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)s\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)ms\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)Hz\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)kHz\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)dpi\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)dpcm\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)dppx\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)em\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)ex\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)ch\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)rem\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)vw\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)vh\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)vmin\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)vmax\b)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)%)/,
                    /^(?:(\d+(\.\d*)?|\.\d+)\b)/,
                    /^(?:(calc))/,
                    /^(?:(var))/,
                    /^(?:([a-z]+))/,
                    /^(?:\()/,
                    /^(?:\))/,
                    /^(?:,)/,
                    /^(?:$)/,
                ],
                conditions: {
                    INITIAL: {
                        rules: [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                            15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                            28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        ],
                        inclusive: !0,
                    },
                },
            }
            return v
        })()
        u.lexer = f
        function p() {
            this.yy = {}
        }
        return (p.prototype = u), (u.Parser = p), new p()
    })()
    typeof JU < 'u' &&
        ((e.parser = t),
        (e.Parser = t.Parser),
        (e.parse = function () {
            return t.parse.apply(t, arguments)
        }))
})(N5)
var hc = {},
    Ig = { exports: {} },
    Dh = {
        px: {
            px: 1,
            cm: 96 / 2.54,
            mm: 96 / 25.4,
            in: 96,
            pt: 96 / 72,
            pc: 16,
        },
        cm: {
            px: 2.54 / 96,
            cm: 1,
            mm: 0.1,
            in: 2.54,
            pt: 2.54 / 72,
            pc: 2.54 / 6,
        },
        mm: {
            px: 25.4 / 96,
            cm: 10,
            mm: 1,
            in: 25.4,
            pt: 25.4 / 72,
            pc: 25.4 / 6,
        },
        in: {
            px: 1 / 96,
            cm: 1 / 2.54,
            mm: 1 / 25.4,
            in: 1,
            pt: 1 / 72,
            pc: 1 / 6,
        },
        pt: { px: 0.75, cm: 72 / 2.54, mm: 72 / 25.4, in: 72, pt: 1, pc: 12 },
        pc: {
            px: 6 / 96,
            cm: 6 / 2.54,
            mm: 6 / 25.4,
            in: 6,
            pt: 6 / 72,
            pc: 1,
        },
        deg: { deg: 1, grad: 0.9, rad: 180 / Math.PI, turn: 360 },
        grad: { deg: 400 / 360, grad: 1, rad: 200 / Math.PI, turn: 400 },
        rad: {
            deg: Math.PI / 180,
            grad: Math.PI / 200,
            rad: 1,
            turn: Math.PI * 2,
        },
        turn: { deg: 1 / 360, grad: 1 / 400, rad: 0.5 / Math.PI, turn: 1 },
        s: { s: 1, ms: 1 / 1e3 },
        ms: { s: 1e3, ms: 1 },
        Hz: { Hz: 1, kHz: 1e3 },
        kHz: { Hz: 1 / 1e3, kHz: 1 },
        dpi: { dpi: 1, dpcm: 1 / 2.54, dppx: 1 / 96 },
        dpcm: { dpi: 2.54, dpcm: 1, dppx: 2.54 / 96 },
        dppx: { dpi: 96, dpcm: 96 / 2.54, dppx: 1 },
    },
    QU = function (e, t, r, n) {
        if (!Dh.hasOwnProperty(r)) throw new Error('Cannot convert to ' + r)
        if (!Dh[r].hasOwnProperty(t))
            throw new Error('Cannot convert from ' + t + ' to ' + r)
        var a = Dh[r][t] * e
        return n !== !1
            ? ((n = Math.pow(10, parseInt(n) || 5)), Math.round(a * n) / n)
            : a
    }
;(function (e, t) {
    Object.defineProperty(t, '__esModule', { value: !0 })
    var r = QU,
        n = a(r)
    function a(s) {
        return s && s.__esModule ? s : { default: s }
    }
    function l(s, c, u) {
        switch (s.type) {
            case 'LengthValue':
            case 'AngleValue':
            case 'TimeValue':
            case 'FrequencyValue':
            case 'ResolutionValue':
                return o(s, c, u)
            default:
                return { left: s, right: c }
        }
    }
    function o(s, c, u) {
        return (
            c.type === s.type &&
                (c = {
                    type: s.type,
                    value: (0, n.default)(c.value, c.unit, s.unit, u),
                    unit: s.unit,
                }),
            { left: s, right: c }
        )
    }
    ;(t.default = l), (e.exports = t.default)
})(Ig, Ig.exports)
Object.defineProperty(hc, '__esModule', { value: !0 })
hc.flip = Rg
var eW = Ig.exports,
    $h = tW(eW)
function tW(e) {
    return e && e.__esModule ? e : { default: e }
}
function qt(e, t) {
    return e.type === 'MathExpression'
        ? lW(e, t)
        : e.type === 'Calc'
        ? qt(e.value, t)
        : e
}
function xx(e, t) {
    return e.type === t.type && e.value === t.value
}
function lr(e) {
    switch (e) {
        case 'LengthValue':
        case 'AngleValue':
        case 'TimeValue':
        case 'FrequencyValue':
        case 'ResolutionValue':
        case 'EmValue':
        case 'ExValue':
        case 'ChValue':
        case 'RemValue':
        case 'VhValue':
        case 'VwValue':
        case 'VminValue':
        case 'VmaxValue':
        case 'PercentageValue':
        case 'Value':
            return !0
    }
    return !1
}
function rW(e, t) {
    var r = (0, $h.default)(e.left, e.right, t),
        n = qt(r.left, t),
        a = qt(r.right, t)
    return (
        n.type === 'MathExpression' &&
            a.type === 'MathExpression' &&
            ((n.operator === '/' && a.operator === '*') ||
                (n.operator === '-' && a.operator === '+') ||
                (n.operator === '*' && a.operator === '/') ||
                (n.operator === '+' && a.operator === '-')) &&
            (xx(n.right, a.right)
                ? (r = (0, $h.default)(n.left, a.left, t))
                : xx(n.right, a.left) &&
                  (r = (0, $h.default)(n.left, a.right, t)),
            (n = qt(r.left, t)),
            (a = qt(r.right, t))),
        (e.left = n),
        (e.right = a),
        e
    )
}
function Rg(e) {
    return e === '+' ? '-' : '+'
}
function Lg(e) {
    return (
        lr(e.type)
            ? (e.value = -e.value)
            : e.type == 'MathExpression' &&
              ((e.left = Lg(e.left)), (e.right = Lg(e.right))),
        e
    )
}
function nW(e, t) {
    var r = e,
        n = r.left,
        a = r.right,
        l = r.operator
    if (n.type === 'CssVariable' || a.type === 'CssVariable') return e
    if (a.value === 0) return n
    if (n.value === 0 && l === '+') return a
    if (n.value === 0 && l === '-') return Lg(a)
    if (
        (n.type === a.type &&
            lr(n.type) &&
            ((e = Object.assign({}, n)),
            l === '+'
                ? (e.value = n.value + a.value)
                : (e.value = n.value - a.value)),
        lr(n.type) &&
            (a.operator === '+' || a.operator === '-') &&
            a.type === 'MathExpression')
    ) {
        if (n.type === a.left.type)
            return (
                (e = Object.assign({}, e)),
                (e.left = qt(
                    {
                        type: 'MathExpression',
                        operator: l,
                        left: n,
                        right: a.left,
                    },
                    t
                )),
                (e.right = a.right),
                (e.operator = l === '-' ? Rg(a.operator) : a.operator),
                qt(e, t)
            )
        if (n.type === a.right.type)
            return (
                (e = Object.assign({}, e)),
                (e.left = qt(
                    {
                        type: 'MathExpression',
                        operator: l === '-' ? Rg(a.operator) : a.operator,
                        left: n,
                        right: a.right,
                    },
                    t
                )),
                (e.right = a.left),
                qt(e, t)
            )
    }
    if (
        n.type === 'MathExpression' &&
        (n.operator === '+' || n.operator === '-') &&
        lr(a.type)
    ) {
        if (a.type === n.left.type)
            return (
                (e = Object.assign({}, n)),
                (e.left = qt(
                    {
                        type: 'MathExpression',
                        operator: l,
                        left: n.left,
                        right: a,
                    },
                    t
                )),
                qt(e, t)
            )
        if (a.type === n.right.type)
            return (
                (e = Object.assign({}, n)),
                n.operator === '-'
                    ? ((e.right = qt(
                          {
                              type: 'MathExpression',
                              operator: l === '-' ? '+' : '-',
                              left: a,
                              right: n.right,
                          },
                          t
                      )),
                      (e.operator = l === '-' ? '-' : '+'))
                    : (e.right = qt(
                          {
                              type: 'MathExpression',
                              operator: l,
                              left: n.right,
                              right: a,
                          },
                          t
                      )),
                e.right.value < 0 &&
                    ((e.right.value *= -1),
                    (e.operator = e.operator === '-' ? '+' : '-')),
                qt(e, t)
            )
    }
    return e
}
function aW(e, t) {
    if (!lr(e.right.type)) return e
    if (e.right.type !== 'Value')
        throw new Error(
            'Cannot divide by "' + e.right.unit + '", number expected'
        )
    if (e.right.value === 0) throw new Error('Cannot divide by zero')
    return e.left.type === 'MathExpression'
        ? lr(e.left.left.type) && lr(e.left.right.type)
            ? ((e.left.left.value /= e.right.value),
              (e.left.right.value /= e.right.value),
              qt(e.left, t))
            : e
        : lr(e.left.type)
        ? ((e.left.value /= e.right.value), e.left)
        : e
}
function iW(e) {
    if (e.left.type === 'MathExpression' && e.right.type === 'Value') {
        if (lr(e.left.left.type) && lr(e.left.right.type))
            return (
                (e.left.left.value *= e.right.value),
                (e.left.right.value *= e.right.value),
                e.left
            )
    } else {
        if (lr(e.left.type) && e.right.type === 'Value')
            return (e.left.value *= e.right.value), e.left
        if (e.left.type === 'Value' && e.right.type === 'MathExpression') {
            if (lr(e.right.left.type) && lr(e.right.right.type))
                return (
                    (e.right.left.value *= e.left.value),
                    (e.right.right.value *= e.left.value),
                    e.right
                )
        } else if (e.left.type === 'Value' && lr(e.right.type))
            return (e.right.value *= e.left.value), e.right
    }
    return e
}
function lW(e, t) {
    switch (((e = rW(e, t)), e.operator)) {
        case '+':
        case '-':
            return nW(e, t)
        case '/':
            return aW(e, t)
        case '*':
            return iW(e)
    }
    return e
}
hc.default = qt
var jg = { exports: {} }
;(function (e, t) {
    Object.defineProperty(t, '__esModule', { value: !0 }),
        (t.default = function (o, s, c) {
            var u = l(s, c)
            return s.type === 'MathExpression' && (u = o + '(' + u + ')'), u
        })
    var r = hc,
        n = { '*': 0, '/': 0, '+': 1, '-': 1 }
    function a(o, s) {
        if (s !== !1) {
            var c = Math.pow(10, s)
            return Math.round(o * c) / c
        }
        return o
    }
    function l(o, s) {
        switch (o.type) {
            case 'MathExpression': {
                var c = o.left,
                    u = o.right,
                    f = o.operator,
                    p = ''
                return (
                    c.type === 'MathExpression' && n[f] < n[c.operator]
                        ? (p += '(' + l(c, s) + ')')
                        : (p += l(c, s)),
                    (p += ' ' + o.operator + ' '),
                    u.type === 'MathExpression' && n[f] < n[u.operator]
                        ? (p += '(' + l(u, s) + ')')
                        : (u.type === 'MathExpression' &&
                              f === '-' &&
                              ['+', '-'].includes(u.operator) &&
                              (u.operator = (0, r.flip)(u.operator)),
                          (p += l(u, s))),
                    p
                )
            }
            case 'Value':
                return a(o.value, s)
            case 'CssVariable':
                return o.fallback
                    ? 'var(' + o.value + ', ' + l(o.fallback, s) + ')'
                    : 'var(' + o.value + ')'
            case 'Calc':
                return o.prefix
                    ? '-' + o.prefix + '-calc(' + l(o.value, s) + ')'
                    : 'calc(' + l(o.value, s) + ')'
            default:
                return a(o.value, s) + o.unit
        }
    }
    e.exports = t.default
})(jg, jg.exports)
;(function (e, t) {
    Object.defineProperty(t, '__esModule', { value: !0 })
    var r = ZU,
        n = u(r),
        a = N5,
        l = hc,
        o = u(l),
        s = jg.exports,
        c = u(s)
    function u(p) {
        return p && p.__esModule ? p : { default: p }
    }
    var f = /((?:\-[a-z]+\-)?calc)/
    ;(t.default = function (p) {
        var m =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5
        return (0, n.default)(p)
            .walk(function (v) {
                if (!(v.type !== 'function' || !f.test(v.value))) {
                    var b = n.default.stringify(v.nodes)
                    if (
                        !(b.indexOf('constant') >= 0 || b.indexOf('env') >= 0)
                    ) {
                        var h = a.parser.parse(b),
                            g = (0, o.default)(h, m)
                        ;(v.type = 'word'),
                            (v.value = (0, c.default)(v.value, g, m))
                    }
                }
            }, !0)
            .toString()
    }),
        (e.exports = t.default)
})($g, $g.exports)
const Ih = rN($g.exports)
function Ls(e) {
    return (
        (Ls =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Ls(e)
    )
}
function wx(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Nx(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? wx(Object(r), !0).forEach(function (n) {
                  oW(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : wx(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function oW(e, t, r) {
    return (
        (t = sW(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function sW(e) {
    var t = cW(e, 'string')
    return Ls(t) === 'symbol' ? t : String(t)
}
function cW(e, t) {
    if (Ls(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Ls(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function Sx(e) {
    return pW(e) || fW(e) || dW(e) || uW()
}
function uW() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function dW(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Fg(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Fg(e, t)
    }
}
function fW(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function pW(e) {
    if (Array.isArray(e)) return Fg(e)
}
function Fg(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
var Bi = { widthCache: {}, cacheCount: 0 },
    hW = 2e3,
    mW = {
        position: 'absolute',
        top: '-20000px',
        left: 0,
        padding: 0,
        margin: 0,
        border: 'none',
        whiteSpace: 'pre',
    },
    gW = [
        'minWidth',
        'maxWidth',
        'width',
        'minHeight',
        'maxHeight',
        'height',
        'top',
        'left',
        'fontSize',
        'lineHeight',
        'padding',
        'margin',
        'paddingLeft',
        'paddingRight',
        'paddingTop',
        'paddingBottom',
        'marginLeft',
        'marginRight',
        'marginTop',
        'marginBottom',
    ],
    Cx = 'recharts_measurement_span'
function vW(e, t) {
    return gW.indexOf(e) >= 0 && t === +t ? ''.concat(t, 'px') : t
}
function yW(e) {
    var t = e.split(''),
        r = t.reduce(function (n, a) {
            return a === a.toUpperCase()
                ? [].concat(Sx(n), ['-', a.toLowerCase()])
                : [].concat(Sx(n), [a])
        }, [])
    return r.join('')
}
var bW = function (t) {
        return Object.keys(t).reduce(function (r, n) {
            return ''.concat(r).concat(yW(n), ':').concat(vW(n, t[n]), ';')
        }, '')
    },
    si = function (t) {
        var r =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
        if (t == null || xn.isSsr) return { width: 0, height: 0 }
        var n = ''.concat(t),
            a = bW(r),
            l = ''.concat(n, '-').concat(a)
        if (Bi.widthCache[l]) return Bi.widthCache[l]
        try {
            var o = document.getElementById(Cx)
            o ||
                ((o = document.createElement('span')),
                o.setAttribute('id', Cx),
                o.setAttribute('aria-hidden', 'true'),
                document.body.appendChild(o))
            var s = Nx(Nx({}, mW), r)
            Object.keys(s).map(function (f) {
                return (o.style[f] = s[f]), f
            }),
                (o.textContent = n)
            var c = o.getBoundingClientRect(),
                u = { width: c.width, height: c.height }
            return (
                (Bi.widthCache[l] = u),
                ++Bi.cacheCount > hW &&
                    ((Bi.cacheCount = 0), (Bi.widthCache = {})),
                u
            )
        } catch {
            return { width: 0, height: 0 }
        }
    },
    xW = function (t) {
        var r = t.ownerDocument.documentElement,
            n = { top: 0, left: 0 }
        return (
            typeof t.getBoundingClientRect < 'u' &&
                (n = t.getBoundingClientRect()),
            {
                top: n.top + window.pageYOffset - r.clientTop,
                left: n.left + window.pageXOffset - r.clientLeft,
            }
        )
    },
    wW = function (t, r) {
        return {
            chartX: Math.round(t.pageX - r.left),
            chartY: Math.round(t.pageY - r.top),
        }
    },
    NW = [
        'dx',
        'dy',
        'textAnchor',
        'verticalAnchor',
        'scaleToFit',
        'angle',
        'lineHeight',
        'capHeight',
        'className',
        'breakAll',
    ]
function $l(e) {
    return (
        ($l =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        $l(e)
    )
}
function SW(e, t) {
    if (e == null) return {}
    var r = CW(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function CW(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function PW(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function Px(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, C5(n.key), n)
    }
}
function _W(e, t, r) {
    return (
        t && Px(e.prototype, t),
        r && Px(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function AW(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && Bg(e, t)
}
function Bg(e, t) {
    return (
        (Bg = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        Bg(e, t)
    )
}
function EW(e) {
    var t = OW()
    return function () {
        var n = wd(e),
            a
        if (t) {
            var l = wd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return kW(this, a)
    }
}
function kW(e, t) {
    if (t && ($l(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return S5(e)
}
function S5(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function OW() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function wd(e) {
    return (
        (wd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        wd(e)
    )
}
function _x(e, t) {
    return $W(e) || DW(e, t) || MW(e, t) || TW()
}
function TW() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function MW(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Ax(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Ax(e, t)
    }
}
function Ax(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function DW(e, t) {
    var r =
        e == null
            ? null
            : (typeof Symbol < 'u' && e[Symbol.iterator]) || e['@@iterator']
    if (r != null) {
        var n,
            a,
            l,
            o,
            s = [],
            c = !0,
            u = !1
        try {
            if (((l = (r = r.call(e)).next), t === 0)) {
                if (Object(r) !== r) return
                c = !1
            } else
                for (
                    ;
                    !(c = (n = l.call(r)).done) &&
                    (s.push(n.value), s.length !== t);
                    c = !0
                );
        } catch (f) {
            ;(u = !0), (a = f)
        } finally {
            try {
                if (
                    !c &&
                    r.return != null &&
                    ((o = r.return()), Object(o) !== o)
                )
                    return
            } finally {
                if (u) throw a
            }
        }
        return s
    }
}
function $W(e) {
    if (Array.isArray(e)) return e
}
function Ex(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function kx(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? Ex(Object(r), !0).forEach(function (n) {
                  hv(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : Ex(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function hv(e, t, r) {
    return (
        (t = C5(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function C5(e) {
    var t = IW(e, 'string')
    return $l(t) === 'symbol' ? t : String(t)
}
function IW(e, t) {
    if ($l(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if ($l(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var P5 = /[ \f\n\r\t\v\u2028\u2029]+/,
    _5 = function (t) {
        try {
            var r = []
            ce(t.children) ||
                (t.breakAll
                    ? (r = t.children.toString().split(''))
                    : (r = t.children.toString().split(P5)))
            var n = r.map(function (l) {
                    return { word: l, width: si(l, t.style).width }
                }),
                a = t.breakAll ? 0 : si('\xA0', t.style).width
            return { wordsWithComputedWidth: n, spaceWidth: a }
        } catch {
            return null
        }
    },
    RW = function (t, r, n, a, l) {
        var o = J(t.maxLines),
            s = t.children,
            c = function () {
                var _ =
                    arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : []
                return _.reduce(function (O, T) {
                    var $ = T.word,
                        I = T.width,
                        j = O[O.length - 1]
                    if (j && (a == null || l || j.width + I + n < a))
                        j.words.push($), (j.width += I + n)
                    else {
                        var L = { words: [$], width: I }
                        O.push(L)
                    }
                    return O
                }, [])
            },
            u = c(r),
            f = function (_) {
                return _.reduce(function (O, T) {
                    return O.width > T.width ? O : T
                })
            }
        if (!o) return u
        for (
            var p = '\u2026',
                m = function (_) {
                    var O = s.slice(0, _),
                        T = _5(
                            kx(kx({}, t), {}, { children: O + p })
                        ).wordsWithComputedWidth,
                        $ = c(T),
                        I = $.length > t.maxLines || f($).width > a
                    return [I, $]
                },
                v = 0,
                b = s.length - 1,
                h = 0,
                g;
            v <= b && h <= s.length - 1;

        ) {
            var x = Math.floor((v + b) / 2),
                w = x - 1,
                y = m(w),
                N = _x(y, 2),
                S = N[0],
                P = N[1],
                E = m(x),
                k = _x(E, 1),
                M = k[0]
            if ((!S && !M && (v = x + 1), S && M && (b = x - 1), !S && M)) {
                g = P
                break
            }
            h++
        }
        return g || u
    },
    Ox = function (t) {
        var r = ce(t) ? [] : t.toString().split(P5)
        return [{ words: r }]
    },
    LW = function (t, r) {
        if ((t.width || t.scaleToFit) && !xn.isSsr) {
            var n, a
            if (r) {
                var l = _5(t)
                if (l) {
                    var o = l.wordsWithComputedWidth,
                        s = l.spaceWidth
                    ;(n = o), (a = s)
                } else return Ox(t.children)
                return RW(t, n, a, t.width, t.scaleToFit)
            }
        }
        return Ox(t.children)
    },
    ja = (function (e) {
        AW(r, e)
        var t = EW(r)
        function r() {
            var n
            PW(this, r)
            for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
                l[o] = arguments[o]
            return (
                (n = t.call.apply(t, [this].concat(l))),
                hv(S5(n), 'state', {}),
                n
            )
        }
        return (
            _W(
                r,
                [
                    {
                        key: 'render',
                        value: function () {
                            var a = this.props,
                                l = a.dx,
                                o = a.dy,
                                s = a.textAnchor,
                                c = a.verticalAnchor,
                                u = a.scaleToFit,
                                f = a.angle,
                                p = a.lineHeight,
                                m = a.capHeight,
                                v = a.className,
                                b = a.breakAll,
                                h = SW(a, NW),
                                g = this.state.wordsByLines
                            if (!Ct(h.x) || !Ct(h.y)) return null
                            var x = h.x + (J(l) ? l : 0),
                                w = h.y + (J(o) ? o : 0),
                                y
                            switch (c) {
                                case 'start':
                                    y = Ih('calc('.concat(m, ')'))
                                    break
                                case 'middle':
                                    y = Ih(
                                        'calc('
                                            .concat((g.length - 1) / 2, ' * -')
                                            .concat(p, ' + (')
                                            .concat(m, ' / 2))')
                                    )
                                    break
                                default:
                                    y = Ih(
                                        'calc('
                                            .concat(g.length - 1, ' * -')
                                            .concat(p, ')')
                                    )
                                    break
                            }
                            var N = []
                            if (u) {
                                var S = g[0].width,
                                    P = this.props.width
                                N.push(
                                    'scale('.concat((J(P) ? P / S : 1) / S, ')')
                                )
                            }
                            return (
                                f &&
                                    N.push(
                                        'rotate('
                                            .concat(f, ', ')
                                            .concat(x, ', ')
                                            .concat(w, ')')
                                    ),
                                N.length && (h.transform = N.join(' ')),
                                i('text', {
                                    ...ve(h, !0),
                                    x,
                                    y: w,
                                    className: He('recharts-text', v),
                                    textAnchor: s,
                                    fill: h.fill.includes('url')
                                        ? r.defaultProps.fill
                                        : h.fill,
                                    children: g.map(function (E, k) {
                                        return i(
                                            'tspan',
                                            {
                                                x,
                                                dy: k === 0 ? y : p,
                                                children: E.words.join(
                                                    b ? '' : ' '
                                                ),
                                            },
                                            k
                                        )
                                    }),
                                })
                            )
                        },
                    },
                ],
                [
                    {
                        key: 'getDerivedStateFromProps',
                        value: function (a, l) {
                            if (
                                a.width !== l.prevWidth ||
                                a.scaleToFit !== l.prevScaleToFit ||
                                a.children !== l.prevChildren ||
                                a.style !== l.prevStyle ||
                                a.breakAll !== l.prevBreakAll
                            ) {
                                var o =
                                    a.children !== l.prevChildren ||
                                    a.style !== l.prevStyle ||
                                    a.breakAll !== l.prevBreakAll
                                return {
                                    prevWidth: a.width,
                                    prevScaleToFit: a.scaleToFit,
                                    prevChildren: a.children,
                                    prevStyle: a.style,
                                    wordsByLines: LW(a, o),
                                }
                            }
                            return null
                        },
                    },
                ]
            ),
            r
        )
    })(C.exports.Component)
hv(ja, 'defaultProps', {
    x: 0,
    y: 0,
    lineHeight: '1em',
    capHeight: '0.71em',
    scaleToFit: !1,
    textAnchor: 'start',
    verticalAnchor: 'end',
    fill: '#808080',
})
var jW = nv
function FW(e, t) {
    return jW(e, t)
}
var lp = FW,
    BW = ao
function zW(e, t, r) {
    for (var n = -1, a = e.length; ++n < a; ) {
        var l = e[n],
            o = t(l)
        if (o != null && (s === void 0 ? o === o && !BW(o) : r(o, s)))
            var s = o,
                c = l
    }
    return c
}
var op = zW
function VW(e, t) {
    return e > t
}
var A5 = VW,
    UW = op,
    WW = A5,
    HW = fo
function GW(e) {
    return e && e.length ? UW(e, HW, WW) : void 0
}
var sp = GW
function qW(e, t) {
    return e < t
}
var E5 = qW,
    KW = op,
    YW = E5,
    XW = fo
function ZW(e) {
    return e && e.length ? KW(e, XW, YW) : void 0
}
var cp = ZW,
    JW = Y0,
    QW = En,
    eH = h5,
    tH = Fe
function rH(e, t) {
    var r = tH(e) ? JW : eH
    return r(e, QW(t))
}
var nH = rH,
    aH = f5,
    iH = nH
function lH(e, t) {
    return aH(iH(e, t), 1)
}
var oH = lH
function Ta(e, t) {
    return e == null || t == null
        ? NaN
        : e < t
        ? -1
        : e > t
        ? 1
        : e >= t
        ? 0
        : NaN
}
function sH(e, t) {
    return e == null || t == null
        ? NaN
        : t < e
        ? -1
        : t > e
        ? 1
        : t >= e
        ? 0
        : NaN
}
function mv(e) {
    let t, r, n
    e.length !== 2
        ? ((t = Ta), (r = (s, c) => Ta(e(s), c)), (n = (s, c) => e(s) - c))
        : ((t = e === Ta || e === sH ? e : cH), (r = e), (n = e))
    function a(s, c, u = 0, f = s.length) {
        if (u < f) {
            if (t(c, c) !== 0) return f
            do {
                const p = (u + f) >>> 1
                r(s[p], c) < 0 ? (u = p + 1) : (f = p)
            } while (u < f)
        }
        return u
    }
    function l(s, c, u = 0, f = s.length) {
        if (u < f) {
            if (t(c, c) !== 0) return f
            do {
                const p = (u + f) >>> 1
                r(s[p], c) <= 0 ? (u = p + 1) : (f = p)
            } while (u < f)
        }
        return u
    }
    function o(s, c, u = 0, f = s.length) {
        const p = a(s, c, u, f - 1)
        return p > u && n(s[p - 1], c) > -n(s[p], c) ? p - 1 : p
    }
    return { left: a, center: o, right: l }
}
function cH() {
    return 0
}
function k5(e) {
    return e === null ? NaN : +e
}
function* uH(e, t) {
    if (t === void 0) for (let r of e) r != null && (r = +r) >= r && (yield r)
    else {
        let r = -1
        for (let n of e)
            (n = t(n, ++r, e)) != null && (n = +n) >= n && (yield n)
    }
}
const dH = mv(Ta),
    fH = dH.right
mv(k5).center
const mc = fH
class Tx extends Map {
    constructor(t, r = mH) {
        if (
            (super(),
            Object.defineProperties(this, {
                _intern: { value: new Map() },
                _key: { value: r },
            }),
            t != null)
        )
            for (const [n, a] of t) this.set(n, a)
    }
    get(t) {
        return super.get(Mx(this, t))
    }
    has(t) {
        return super.has(Mx(this, t))
    }
    set(t, r) {
        return super.set(pH(this, t), r)
    }
    delete(t) {
        return super.delete(hH(this, t))
    }
}
function Mx({ _intern: e, _key: t }, r) {
    const n = t(r)
    return e.has(n) ? e.get(n) : r
}
function pH({ _intern: e, _key: t }, r) {
    const n = t(r)
    return e.has(n) ? e.get(n) : (e.set(n, r), r)
}
function hH({ _intern: e, _key: t }, r) {
    const n = t(r)
    return e.has(n) && ((r = e.get(n)), e.delete(n)), r
}
function mH(e) {
    return e !== null && typeof e == 'object' ? e.valueOf() : e
}
function gH(e = Ta) {
    if (e === Ta) return O5
    if (typeof e != 'function') throw new TypeError('compare is not a function')
    return (t, r) => {
        const n = e(t, r)
        return n || n === 0 ? n : (e(r, r) === 0) - (e(t, t) === 0)
    }
}
function O5(e, t) {
    return (
        (e == null || !(e >= e)) - (t == null || !(t >= t)) ||
        (e < t ? -1 : e > t ? 1 : 0)
    )
}
const vH = Math.sqrt(50),
    yH = Math.sqrt(10),
    bH = Math.sqrt(2)
function Nd(e, t, r) {
    const n = (t - e) / Math.max(0, r),
        a = Math.floor(Math.log10(n)),
        l = n / Math.pow(10, a),
        o = l >= vH ? 10 : l >= yH ? 5 : l >= bH ? 2 : 1
    let s, c, u
    return (
        a < 0
            ? ((u = Math.pow(10, -a) / o),
              (s = Math.round(e * u)),
              (c = Math.round(t * u)),
              s / u < e && ++s,
              c / u > t && --c,
              (u = -u))
            : ((u = Math.pow(10, a) * o),
              (s = Math.round(e / u)),
              (c = Math.round(t / u)),
              s * u < e && ++s,
              c * u > t && --c),
        c < s && 0.5 <= r && r < 2 ? Nd(e, t, r * 2) : [s, c, u]
    )
}
function zg(e, t, r) {
    if (((t = +t), (e = +e), (r = +r), !(r > 0))) return []
    if (e === t) return [e]
    const n = t < e,
        [a, l, o] = n ? Nd(t, e, r) : Nd(e, t, r)
    if (!(l >= a)) return []
    const s = l - a + 1,
        c = new Array(s)
    if (n)
        if (o < 0) for (let u = 0; u < s; ++u) c[u] = (l - u) / -o
        else for (let u = 0; u < s; ++u) c[u] = (l - u) * o
    else if (o < 0) for (let u = 0; u < s; ++u) c[u] = (a + u) / -o
    else for (let u = 0; u < s; ++u) c[u] = (a + u) * o
    return c
}
function Vg(e, t, r) {
    return (t = +t), (e = +e), (r = +r), Nd(e, t, r)[2]
}
function Ug(e, t, r) {
    ;(t = +t), (e = +e), (r = +r)
    const n = t < e,
        a = n ? Vg(t, e, r) : Vg(e, t, r)
    return (n ? -1 : 1) * (a < 0 ? 1 / -a : a)
}
function Dx(e, t) {
    let r
    if (t === void 0)
        for (const n of e)
            n != null && (r < n || (r === void 0 && n >= n)) && (r = n)
    else {
        let n = -1
        for (let a of e)
            (a = t(a, ++n, e)) != null &&
                (r < a || (r === void 0 && a >= a)) &&
                (r = a)
    }
    return r
}
function $x(e, t) {
    let r
    if (t === void 0)
        for (const n of e)
            n != null && (r > n || (r === void 0 && n >= n)) && (r = n)
    else {
        let n = -1
        for (let a of e)
            (a = t(a, ++n, e)) != null &&
                (r > a || (r === void 0 && a >= a)) &&
                (r = a)
    }
    return r
}
function T5(e, t, r = 0, n = 1 / 0, a) {
    if (
        ((t = Math.floor(t)),
        (r = Math.floor(Math.max(0, r))),
        (n = Math.floor(Math.min(e.length - 1, n))),
        !(r <= t && t <= n))
    )
        return e
    for (a = a === void 0 ? O5 : gH(a); n > r; ) {
        if (n - r > 600) {
            const c = n - r + 1,
                u = t - r + 1,
                f = Math.log(c),
                p = 0.5 * Math.exp((2 * f) / 3),
                m =
                    0.5 *
                    Math.sqrt((f * p * (c - p)) / c) *
                    (u - c / 2 < 0 ? -1 : 1),
                v = Math.max(r, Math.floor(t - (u * p) / c + m)),
                b = Math.min(n, Math.floor(t + ((c - u) * p) / c + m))
            T5(e, t, v, b, a)
        }
        const l = e[t]
        let o = r,
            s = n
        for (Mo(e, r, t), a(e[n], l) > 0 && Mo(e, r, n); o < s; ) {
            for (Mo(e, o, s), ++o, --s; a(e[o], l) < 0; ) ++o
            for (; a(e[s], l) > 0; ) --s
        }
        a(e[r], l) === 0 ? Mo(e, r, s) : (++s, Mo(e, s, n)),
            s <= t && (r = s + 1),
            t <= s && (n = s - 1)
    }
    return e
}
function Mo(e, t, r) {
    const n = e[t]
    ;(e[t] = e[r]), (e[r] = n)
}
function xH(e, t, r) {
    if (
        ((e = Float64Array.from(uH(e, r))),
        !(!(n = e.length) || isNaN((t = +t))))
    ) {
        if (t <= 0 || n < 2) return $x(e)
        if (t >= 1) return Dx(e)
        var n,
            a = (n - 1) * t,
            l = Math.floor(a),
            o = Dx(T5(e, l).subarray(0, l + 1)),
            s = $x(e.subarray(l + 1))
        return o + (s - o) * (a - l)
    }
}
function wH(e, t, r = k5) {
    if (!(!(n = e.length) || isNaN((t = +t)))) {
        if (t <= 0 || n < 2) return +r(e[0], 0, e)
        if (t >= 1) return +r(e[n - 1], n - 1, e)
        var n,
            a = (n - 1) * t,
            l = Math.floor(a),
            o = +r(e[l], l, e),
            s = +r(e[l + 1], l + 1, e)
        return o + (s - o) * (a - l)
    }
}
function NH(e, t, r) {
    ;(e = +e),
        (t = +t),
        (r =
            (a = arguments.length) < 2 ? ((t = e), (e = 0), 1) : a < 3 ? 1 : +r)
    for (
        var n = -1,
            a = Math.max(0, Math.ceil((t - e) / r)) | 0,
            l = new Array(a);
        ++n < a;

    )
        l[n] = e + n * r
    return l
}
function Yr(e, t) {
    switch (arguments.length) {
        case 0:
            break
        case 1:
            this.range(e)
            break
        default:
            this.range(t).domain(e)
            break
    }
    return this
}
function na(e, t) {
    switch (arguments.length) {
        case 0:
            break
        case 1: {
            typeof e == 'function' ? this.interpolator(e) : this.range(e)
            break
        }
        default: {
            this.domain(e),
                typeof t == 'function' ? this.interpolator(t) : this.range(t)
            break
        }
    }
    return this
}
const Wg = Symbol('implicit')
function gv() {
    var e = new Tx(),
        t = [],
        r = [],
        n = Wg
    function a(l) {
        let o = e.get(l)
        if (o === void 0) {
            if (n !== Wg) return n
            e.set(l, (o = t.push(l) - 1))
        }
        return r[o % r.length]
    }
    return (
        (a.domain = function (l) {
            if (!arguments.length) return t.slice()
            ;(t = []), (e = new Tx())
            for (const o of l) e.has(o) || e.set(o, t.push(o) - 1)
            return a
        }),
        (a.range = function (l) {
            return arguments.length ? ((r = Array.from(l)), a) : r.slice()
        }),
        (a.unknown = function (l) {
            return arguments.length ? ((n = l), a) : n
        }),
        (a.copy = function () {
            return gv(t, r).unknown(n)
        }),
        Yr.apply(a, arguments),
        a
    )
}
function js() {
    var e = gv().unknown(void 0),
        t = e.domain,
        r = e.range,
        n = 0,
        a = 1,
        l,
        o,
        s = !1,
        c = 0,
        u = 0,
        f = 0.5
    delete e.unknown
    function p() {
        var m = t().length,
            v = a < n,
            b = v ? a : n,
            h = v ? n : a
        ;(l = (h - b) / Math.max(1, m - c + u * 2)),
            s && (l = Math.floor(l)),
            (b += (h - b - l * (m - c)) * f),
            (o = l * (1 - c)),
            s && ((b = Math.round(b)), (o = Math.round(o)))
        var g = NH(m).map(function (x) {
            return b + l * x
        })
        return r(v ? g.reverse() : g)
    }
    return (
        (e.domain = function (m) {
            return arguments.length ? (t(m), p()) : t()
        }),
        (e.range = function (m) {
            return arguments.length
                ? (([n, a] = m), (n = +n), (a = +a), p())
                : [n, a]
        }),
        (e.rangeRound = function (m) {
            return ([n, a] = m), (n = +n), (a = +a), (s = !0), p()
        }),
        (e.bandwidth = function () {
            return o
        }),
        (e.step = function () {
            return l
        }),
        (e.round = function (m) {
            return arguments.length ? ((s = !!m), p()) : s
        }),
        (e.padding = function (m) {
            return arguments.length ? ((c = Math.min(1, (u = +m))), p()) : c
        }),
        (e.paddingInner = function (m) {
            return arguments.length ? ((c = Math.min(1, m)), p()) : c
        }),
        (e.paddingOuter = function (m) {
            return arguments.length ? ((u = +m), p()) : u
        }),
        (e.align = function (m) {
            return arguments.length
                ? ((f = Math.max(0, Math.min(1, m))), p())
                : f
        }),
        (e.copy = function () {
            return js(t(), [n, a])
                .round(s)
                .paddingInner(c)
                .paddingOuter(u)
                .align(f)
        }),
        Yr.apply(p(), arguments)
    )
}
function M5(e) {
    var t = e.copy
    return (
        (e.padding = e.paddingOuter),
        delete e.paddingInner,
        delete e.paddingOuter,
        (e.copy = function () {
            return M5(t())
        }),
        e
    )
}
function ls() {
    return M5(js.apply(null, arguments).paddingInner(1))
}
function vv(e, t, r) {
    ;(e.prototype = t.prototype = r), (r.constructor = e)
}
function D5(e, t) {
    var r = Object.create(e.prototype)
    for (var n in t) r[n] = t[n]
    return r
}
function gc() {}
var Fs = 0.7,
    Sd = 1 / Fs,
    hl = '\\s*([+-]?\\d+)\\s*',
    Bs = '\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*',
    wn = '\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*',
    SH = /^#([0-9a-f]{3,8})$/,
    CH = new RegExp(`^rgb\\(${hl},${hl},${hl}\\)$`),
    PH = new RegExp(`^rgb\\(${wn},${wn},${wn}\\)$`),
    _H = new RegExp(`^rgba\\(${hl},${hl},${hl},${Bs}\\)$`),
    AH = new RegExp(`^rgba\\(${wn},${wn},${wn},${Bs}\\)$`),
    EH = new RegExp(`^hsl\\(${Bs},${wn},${wn}\\)$`),
    kH = new RegExp(`^hsla\\(${Bs},${wn},${wn},${Bs}\\)$`),
    Ix = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074,
    }
vv(gc, zs, {
    copy(e) {
        return Object.assign(new this.constructor(), this, e)
    },
    displayable() {
        return this.rgb().displayable()
    },
    hex: Rx,
    formatHex: Rx,
    formatHex8: OH,
    formatHsl: TH,
    formatRgb: Lx,
    toString: Lx,
})
function Rx() {
    return this.rgb().formatHex()
}
function OH() {
    return this.rgb().formatHex8()
}
function TH() {
    return $5(this).formatHsl()
}
function Lx() {
    return this.rgb().formatRgb()
}
function zs(e) {
    var t, r
    return (
        (e = (e + '').trim().toLowerCase()),
        (t = SH.exec(e))
            ? ((r = t[1].length),
              (t = parseInt(t[1], 16)),
              r === 6
                  ? jx(t)
                  : r === 3
                  ? new cr(
                        ((t >> 8) & 15) | ((t >> 4) & 240),
                        ((t >> 4) & 15) | (t & 240),
                        ((t & 15) << 4) | (t & 15),
                        1
                    )
                  : r === 8
                  ? Kc(
                        (t >> 24) & 255,
                        (t >> 16) & 255,
                        (t >> 8) & 255,
                        (t & 255) / 255
                    )
                  : r === 4
                  ? Kc(
                        ((t >> 12) & 15) | ((t >> 8) & 240),
                        ((t >> 8) & 15) | ((t >> 4) & 240),
                        ((t >> 4) & 15) | (t & 240),
                        (((t & 15) << 4) | (t & 15)) / 255
                    )
                  : null)
            : (t = CH.exec(e))
            ? new cr(t[1], t[2], t[3], 1)
            : (t = PH.exec(e))
            ? new cr(
                  (t[1] * 255) / 100,
                  (t[2] * 255) / 100,
                  (t[3] * 255) / 100,
                  1
              )
            : (t = _H.exec(e))
            ? Kc(t[1], t[2], t[3], t[4])
            : (t = AH.exec(e))
            ? Kc(
                  (t[1] * 255) / 100,
                  (t[2] * 255) / 100,
                  (t[3] * 255) / 100,
                  t[4]
              )
            : (t = EH.exec(e))
            ? zx(t[1], t[2] / 100, t[3] / 100, 1)
            : (t = kH.exec(e))
            ? zx(t[1], t[2] / 100, t[3] / 100, t[4])
            : Ix.hasOwnProperty(e)
            ? jx(Ix[e])
            : e === 'transparent'
            ? new cr(NaN, NaN, NaN, 0)
            : null
    )
}
function jx(e) {
    return new cr((e >> 16) & 255, (e >> 8) & 255, e & 255, 1)
}
function Kc(e, t, r, n) {
    return n <= 0 && (e = t = r = NaN), new cr(e, t, r, n)
}
function MH(e) {
    return (
        e instanceof gc || (e = zs(e)),
        e ? ((e = e.rgb()), new cr(e.r, e.g, e.b, e.opacity)) : new cr()
    )
}
function Hg(e, t, r, n) {
    return arguments.length === 1 ? MH(e) : new cr(e, t, r, n == null ? 1 : n)
}
function cr(e, t, r, n) {
    ;(this.r = +e), (this.g = +t), (this.b = +r), (this.opacity = +n)
}
vv(
    cr,
    Hg,
    D5(gc, {
        brighter(e) {
            return (
                (e = e == null ? Sd : Math.pow(Sd, e)),
                new cr(this.r * e, this.g * e, this.b * e, this.opacity)
            )
        },
        darker(e) {
            return (
                (e = e == null ? Fs : Math.pow(Fs, e)),
                new cr(this.r * e, this.g * e, this.b * e, this.opacity)
            )
        },
        rgb() {
            return this
        },
        clamp() {
            return new cr(yi(this.r), yi(this.g), yi(this.b), Cd(this.opacity))
        },
        displayable() {
            return (
                -0.5 <= this.r &&
                this.r < 255.5 &&
                -0.5 <= this.g &&
                this.g < 255.5 &&
                -0.5 <= this.b &&
                this.b < 255.5 &&
                0 <= this.opacity &&
                this.opacity <= 1
            )
        },
        hex: Fx,
        formatHex: Fx,
        formatHex8: DH,
        formatRgb: Bx,
        toString: Bx,
    })
)
function Fx() {
    return `#${hi(this.r)}${hi(this.g)}${hi(this.b)}`
}
function DH() {
    return `#${hi(this.r)}${hi(this.g)}${hi(this.b)}${hi(
        (isNaN(this.opacity) ? 1 : this.opacity) * 255
    )}`
}
function Bx() {
    const e = Cd(this.opacity)
    return `${e === 1 ? 'rgb(' : 'rgba('}${yi(this.r)}, ${yi(this.g)}, ${yi(
        this.b
    )}${e === 1 ? ')' : `, ${e})`}`
}
function Cd(e) {
    return isNaN(e) ? 1 : Math.max(0, Math.min(1, e))
}
function yi(e) {
    return Math.max(0, Math.min(255, Math.round(e) || 0))
}
function hi(e) {
    return (e = yi(e)), (e < 16 ? '0' : '') + e.toString(16)
}
function zx(e, t, r, n) {
    return (
        n <= 0
            ? (e = t = r = NaN)
            : r <= 0 || r >= 1
            ? (e = t = NaN)
            : t <= 0 && (e = NaN),
        new ln(e, t, r, n)
    )
}
function $5(e) {
    if (e instanceof ln) return new ln(e.h, e.s, e.l, e.opacity)
    if ((e instanceof gc || (e = zs(e)), !e)) return new ln()
    if (e instanceof ln) return e
    e = e.rgb()
    var t = e.r / 255,
        r = e.g / 255,
        n = e.b / 255,
        a = Math.min(t, r, n),
        l = Math.max(t, r, n),
        o = NaN,
        s = l - a,
        c = (l + a) / 2
    return (
        s
            ? (t === l
                  ? (o = (r - n) / s + (r < n) * 6)
                  : r === l
                  ? (o = (n - t) / s + 2)
                  : (o = (t - r) / s + 4),
              (s /= c < 0.5 ? l + a : 2 - l - a),
              (o *= 60))
            : (s = c > 0 && c < 1 ? 0 : o),
        new ln(o, s, c, e.opacity)
    )
}
function $H(e, t, r, n) {
    return arguments.length === 1 ? $5(e) : new ln(e, t, r, n == null ? 1 : n)
}
function ln(e, t, r, n) {
    ;(this.h = +e), (this.s = +t), (this.l = +r), (this.opacity = +n)
}
vv(
    ln,
    $H,
    D5(gc, {
        brighter(e) {
            return (
                (e = e == null ? Sd : Math.pow(Sd, e)),
                new ln(this.h, this.s, this.l * e, this.opacity)
            )
        },
        darker(e) {
            return (
                (e = e == null ? Fs : Math.pow(Fs, e)),
                new ln(this.h, this.s, this.l * e, this.opacity)
            )
        },
        rgb() {
            var e = (this.h % 360) + (this.h < 0) * 360,
                t = isNaN(e) || isNaN(this.s) ? 0 : this.s,
                r = this.l,
                n = r + (r < 0.5 ? r : 1 - r) * t,
                a = 2 * r - n
            return new cr(
                Rh(e >= 240 ? e - 240 : e + 120, a, n),
                Rh(e, a, n),
                Rh(e < 120 ? e + 240 : e - 120, a, n),
                this.opacity
            )
        },
        clamp() {
            return new ln(Vx(this.h), Yc(this.s), Yc(this.l), Cd(this.opacity))
        },
        displayable() {
            return (
                ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
                0 <= this.l &&
                this.l <= 1 &&
                0 <= this.opacity &&
                this.opacity <= 1
            )
        },
        formatHsl() {
            const e = Cd(this.opacity)
            return `${e === 1 ? 'hsl(' : 'hsla('}${Vx(this.h)}, ${
                Yc(this.s) * 100
            }%, ${Yc(this.l) * 100}%${e === 1 ? ')' : `, ${e})`}`
        },
    })
)
function Vx(e) {
    return (e = (e || 0) % 360), e < 0 ? e + 360 : e
}
function Yc(e) {
    return Math.max(0, Math.min(1, e || 0))
}
function Rh(e, t, r) {
    return (
        (e < 60
            ? t + ((r - t) * e) / 60
            : e < 180
            ? r
            : e < 240
            ? t + ((r - t) * (240 - e)) / 60
            : t) * 255
    )
}
const yv = (e) => () => e
function IH(e, t) {
    return function (r) {
        return e + r * t
    }
}
function RH(e, t, r) {
    return (
        (e = Math.pow(e, r)),
        (t = Math.pow(t, r) - e),
        (r = 1 / r),
        function (n) {
            return Math.pow(e + n * t, r)
        }
    )
}
function LH(e) {
    return (e = +e) == 1
        ? I5
        : function (t, r) {
              return r - t ? RH(t, r, e) : yv(isNaN(t) ? r : t)
          }
}
function I5(e, t) {
    var r = t - e
    return r ? IH(e, r) : yv(isNaN(e) ? t : e)
}
const Ux = (function e(t) {
    var r = LH(t)
    function n(a, l) {
        var o = r((a = Hg(a)).r, (l = Hg(l)).r),
            s = r(a.g, l.g),
            c = r(a.b, l.b),
            u = I5(a.opacity, l.opacity)
        return function (f) {
            return (
                (a.r = o(f)),
                (a.g = s(f)),
                (a.b = c(f)),
                (a.opacity = u(f)),
                a + ''
            )
        }
    }
    return (n.gamma = e), n
})(1)
function jH(e, t) {
    t || (t = [])
    var r = e ? Math.min(t.length, e.length) : 0,
        n = t.slice(),
        a
    return function (l) {
        for (a = 0; a < r; ++a) n[a] = e[a] * (1 - l) + t[a] * l
        return n
    }
}
function FH(e) {
    return ArrayBuffer.isView(e) && !(e instanceof DataView)
}
function BH(e, t) {
    var r = t ? t.length : 0,
        n = e ? Math.min(r, e.length) : 0,
        a = new Array(n),
        l = new Array(r),
        o
    for (o = 0; o < n; ++o) a[o] = po(e[o], t[o])
    for (; o < r; ++o) l[o] = t[o]
    return function (s) {
        for (o = 0; o < n; ++o) l[o] = a[o](s)
        return l
    }
}
function zH(e, t) {
    var r = new Date()
    return (
        (e = +e),
        (t = +t),
        function (n) {
            return r.setTime(e * (1 - n) + t * n), r
        }
    )
}
function Pd(e, t) {
    return (
        (e = +e),
        (t = +t),
        function (r) {
            return e * (1 - r) + t * r
        }
    )
}
function VH(e, t) {
    var r = {},
        n = {},
        a
    ;(e === null || typeof e != 'object') && (e = {}),
        (t === null || typeof t != 'object') && (t = {})
    for (a in t) a in e ? (r[a] = po(e[a], t[a])) : (n[a] = t[a])
    return function (l) {
        for (a in r) n[a] = r[a](l)
        return n
    }
}
var Gg = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    Lh = new RegExp(Gg.source, 'g')
function UH(e) {
    return function () {
        return e
    }
}
function WH(e) {
    return function (t) {
        return e(t) + ''
    }
}
function HH(e, t) {
    var r = (Gg.lastIndex = Lh.lastIndex = 0),
        n,
        a,
        l,
        o = -1,
        s = [],
        c = []
    for (e = e + '', t = t + ''; (n = Gg.exec(e)) && (a = Lh.exec(t)); )
        (l = a.index) > r &&
            ((l = t.slice(r, l)), s[o] ? (s[o] += l) : (s[++o] = l)),
            (n = n[0]) === (a = a[0])
                ? s[o]
                    ? (s[o] += a)
                    : (s[++o] = a)
                : ((s[++o] = null), c.push({ i: o, x: Pd(n, a) })),
            (r = Lh.lastIndex)
    return (
        r < t.length && ((l = t.slice(r)), s[o] ? (s[o] += l) : (s[++o] = l)),
        s.length < 2
            ? c[0]
                ? WH(c[0].x)
                : UH(t)
            : ((t = c.length),
              function (u) {
                  for (var f = 0, p; f < t; ++f) s[(p = c[f]).i] = p.x(u)
                  return s.join('')
              })
    )
}
function po(e, t) {
    var r = typeof t,
        n
    return t == null || r === 'boolean'
        ? yv(t)
        : (r === 'number'
              ? Pd
              : r === 'string'
              ? (n = zs(t))
                  ? ((t = n), Ux)
                  : HH
              : t instanceof zs
              ? Ux
              : t instanceof Date
              ? zH
              : FH(t)
              ? jH
              : Array.isArray(t)
              ? BH
              : (typeof t.valueOf != 'function' &&
                    typeof t.toString != 'function') ||
                isNaN(t)
              ? VH
              : Pd)(e, t)
}
function bv(e, t) {
    return (
        (e = +e),
        (t = +t),
        function (r) {
            return Math.round(e * (1 - r) + t * r)
        }
    )
}
function GH(e, t) {
    t === void 0 && ((t = e), (e = po))
    for (
        var r = 0, n = t.length - 1, a = t[0], l = new Array(n < 0 ? 0 : n);
        r < n;

    )
        l[r] = e(a, (a = t[++r]))
    return function (o) {
        var s = Math.max(0, Math.min(n - 1, Math.floor((o *= n))))
        return l[s](o - s)
    }
}
function qH(e) {
    return function () {
        return e
    }
}
function _d(e) {
    return +e
}
var Wx = [0, 1]
function tr(e) {
    return e
}
function qg(e, t) {
    return (t -= e = +e)
        ? function (r) {
              return (r - e) / t
          }
        : qH(isNaN(t) ? NaN : 0.5)
}
function KH(e, t) {
    var r
    return (
        e > t && ((r = e), (e = t), (t = r)),
        function (n) {
            return Math.max(e, Math.min(t, n))
        }
    )
}
function YH(e, t, r) {
    var n = e[0],
        a = e[1],
        l = t[0],
        o = t[1]
    return (
        a < n
            ? ((n = qg(a, n)), (l = r(o, l)))
            : ((n = qg(n, a)), (l = r(l, o))),
        function (s) {
            return l(n(s))
        }
    )
}
function XH(e, t, r) {
    var n = Math.min(e.length, t.length) - 1,
        a = new Array(n),
        l = new Array(n),
        o = -1
    for (
        e[n] < e[0] && ((e = e.slice().reverse()), (t = t.slice().reverse()));
        ++o < n;

    )
        (a[o] = qg(e[o], e[o + 1])), (l[o] = r(t[o], t[o + 1]))
    return function (s) {
        var c = mc(e, s, 1, n) - 1
        return l[c](a[c](s))
    }
}
function vc(e, t) {
    return t
        .domain(e.domain())
        .range(e.range())
        .interpolate(e.interpolate())
        .clamp(e.clamp())
        .unknown(e.unknown())
}
function up() {
    var e = Wx,
        t = Wx,
        r = po,
        n,
        a,
        l,
        o = tr,
        s,
        c,
        u
    function f() {
        var m = Math.min(e.length, t.length)
        return (
            o !== tr && (o = KH(e[0], e[m - 1])),
            (s = m > 2 ? XH : YH),
            (c = u = null),
            p
        )
    }
    function p(m) {
        return m == null || isNaN((m = +m))
            ? l
            : (c || (c = s(e.map(n), t, r)))(n(o(m)))
    }
    return (
        (p.invert = function (m) {
            return o(a((u || (u = s(t, e.map(n), Pd)))(m)))
        }),
        (p.domain = function (m) {
            return arguments.length ? ((e = Array.from(m, _d)), f()) : e.slice()
        }),
        (p.range = function (m) {
            return arguments.length ? ((t = Array.from(m)), f()) : t.slice()
        }),
        (p.rangeRound = function (m) {
            return (t = Array.from(m)), (r = bv), f()
        }),
        (p.clamp = function (m) {
            return arguments.length ? ((o = m ? !0 : tr), f()) : o !== tr
        }),
        (p.interpolate = function (m) {
            return arguments.length ? ((r = m), f()) : r
        }),
        (p.unknown = function (m) {
            return arguments.length ? ((l = m), p) : l
        }),
        function (m, v) {
            return (n = m), (a = v), f()
        }
    )
}
function xv() {
    return up()(tr, tr)
}
function ZH(e) {
    return Math.abs((e = Math.round(e))) >= 1e21
        ? e.toLocaleString('en').replace(/,/g, '')
        : e.toString(10)
}
function Ad(e, t) {
    if (
        (r = (e = t ? e.toExponential(t - 1) : e.toExponential()).indexOf(
            'e'
        )) < 0
    )
        return null
    var r,
        n = e.slice(0, r)
    return [n.length > 1 ? n[0] + n.slice(2) : n, +e.slice(r + 1)]
}
function Il(e) {
    return (e = Ad(Math.abs(e))), e ? e[1] : NaN
}
function JH(e, t) {
    return function (r, n) {
        for (
            var a = r.length, l = [], o = 0, s = e[0], c = 0;
            a > 0 &&
            s > 0 &&
            (c + s + 1 > n && (s = Math.max(1, n - c)),
            l.push(r.substring((a -= s), a + s)),
            !((c += s + 1) > n));

        )
            s = e[(o = (o + 1) % e.length)]
        return l.reverse().join(t)
    }
}
function QH(e) {
    return function (t) {
        return t.replace(/[0-9]/g, function (r) {
            return e[+r]
        })
    }
}
var eG =
    /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i
function Vs(e) {
    if (!(t = eG.exec(e))) throw new Error('invalid format: ' + e)
    var t
    return new wv({
        fill: t[1],
        align: t[2],
        sign: t[3],
        symbol: t[4],
        zero: t[5],
        width: t[6],
        comma: t[7],
        precision: t[8] && t[8].slice(1),
        trim: t[9],
        type: t[10],
    })
}
Vs.prototype = wv.prototype
function wv(e) {
    ;(this.fill = e.fill === void 0 ? ' ' : e.fill + ''),
        (this.align = e.align === void 0 ? '>' : e.align + ''),
        (this.sign = e.sign === void 0 ? '-' : e.sign + ''),
        (this.symbol = e.symbol === void 0 ? '' : e.symbol + ''),
        (this.zero = !!e.zero),
        (this.width = e.width === void 0 ? void 0 : +e.width),
        (this.comma = !!e.comma),
        (this.precision = e.precision === void 0 ? void 0 : +e.precision),
        (this.trim = !!e.trim),
        (this.type = e.type === void 0 ? '' : e.type + '')
}
wv.prototype.toString = function () {
    return (
        this.fill +
        this.align +
        this.sign +
        this.symbol +
        (this.zero ? '0' : '') +
        (this.width === void 0 ? '' : Math.max(1, this.width | 0)) +
        (this.comma ? ',' : '') +
        (this.precision === void 0
            ? ''
            : '.' + Math.max(0, this.precision | 0)) +
        (this.trim ? '~' : '') +
        this.type
    )
}
function tG(e) {
    e: for (var t = e.length, r = 1, n = -1, a; r < t; ++r)
        switch (e[r]) {
            case '.':
                n = a = r
                break
            case '0':
                n === 0 && (n = r), (a = r)
                break
            default:
                if (!+e[r]) break e
                n > 0 && (n = 0)
                break
        }
    return n > 0 ? e.slice(0, n) + e.slice(a + 1) : e
}
var R5
function rG(e, t) {
    var r = Ad(e, t)
    if (!r) return e + ''
    var n = r[0],
        a = r[1],
        l = a - (R5 = Math.max(-8, Math.min(8, Math.floor(a / 3))) * 3) + 1,
        o = n.length
    return l === o
        ? n
        : l > o
        ? n + new Array(l - o + 1).join('0')
        : l > 0
        ? n.slice(0, l) + '.' + n.slice(l)
        : '0.' + new Array(1 - l).join('0') + Ad(e, Math.max(0, t + l - 1))[0]
}
function Hx(e, t) {
    var r = Ad(e, t)
    if (!r) return e + ''
    var n = r[0],
        a = r[1]
    return a < 0
        ? '0.' + new Array(-a).join('0') + n
        : n.length > a + 1
        ? n.slice(0, a + 1) + '.' + n.slice(a + 1)
        : n + new Array(a - n.length + 2).join('0')
}
const Gx = {
    '%': (e, t) => (e * 100).toFixed(t),
    b: (e) => Math.round(e).toString(2),
    c: (e) => e + '',
    d: ZH,
    e: (e, t) => e.toExponential(t),
    f: (e, t) => e.toFixed(t),
    g: (e, t) => e.toPrecision(t),
    o: (e) => Math.round(e).toString(8),
    p: (e, t) => Hx(e * 100, t),
    r: Hx,
    s: rG,
    X: (e) => Math.round(e).toString(16).toUpperCase(),
    x: (e) => Math.round(e).toString(16),
}
function qx(e) {
    return e
}
var Kx = Array.prototype.map,
    Yx = [
        'y',
        'z',
        'a',
        'f',
        'p',
        'n',
        '\xB5',
        'm',
        '',
        'k',
        'M',
        'G',
        'T',
        'P',
        'E',
        'Z',
        'Y',
    ]
function nG(e) {
    var t =
            e.grouping === void 0 || e.thousands === void 0
                ? qx
                : JH(Kx.call(e.grouping, Number), e.thousands + ''),
        r = e.currency === void 0 ? '' : e.currency[0] + '',
        n = e.currency === void 0 ? '' : e.currency[1] + '',
        a = e.decimal === void 0 ? '.' : e.decimal + '',
        l = e.numerals === void 0 ? qx : QH(Kx.call(e.numerals, String)),
        o = e.percent === void 0 ? '%' : e.percent + '',
        s = e.minus === void 0 ? '\u2212' : e.minus + '',
        c = e.nan === void 0 ? 'NaN' : e.nan + ''
    function u(p) {
        p = Vs(p)
        var m = p.fill,
            v = p.align,
            b = p.sign,
            h = p.symbol,
            g = p.zero,
            x = p.width,
            w = p.comma,
            y = p.precision,
            N = p.trim,
            S = p.type
        S === 'n'
            ? ((w = !0), (S = 'g'))
            : Gx[S] || (y === void 0 && (y = 12), (N = !0), (S = 'g')),
            (g || (m === '0' && v === '=')) && ((g = !0), (m = '0'), (v = '='))
        var P =
                h === '$'
                    ? r
                    : h === '#' && /[boxX]/.test(S)
                    ? '0' + S.toLowerCase()
                    : '',
            E = h === '$' ? n : /[%p]/.test(S) ? o : '',
            k = Gx[S],
            M = /[defgprs%]/.test(S)
        y =
            y === void 0
                ? 6
                : /[gprs]/.test(S)
                ? Math.max(1, Math.min(21, y))
                : Math.max(0, Math.min(20, y))
        function A(_) {
            var O = P,
                T = E,
                $,
                I,
                j
            if (S === 'c') (T = k(_) + T), (_ = '')
            else {
                _ = +_
                var L = _ < 0 || 1 / _ < 0
                if (
                    ((_ = isNaN(_) ? c : k(Math.abs(_), y)),
                    N && (_ = tG(_)),
                    L && +_ == 0 && b !== '+' && (L = !1),
                    (O =
                        (L
                            ? b === '('
                                ? b
                                : s
                            : b === '-' || b === '('
                            ? ''
                            : b) + O),
                    (T =
                        (S === 's' ? Yx[8 + R5 / 3] : '') +
                        T +
                        (L && b === '(' ? ')' : '')),
                    M)
                ) {
                    for ($ = -1, I = _.length; ++$ < I; )
                        if (((j = _.charCodeAt($)), 48 > j || j > 57)) {
                            ;(T =
                                (j === 46 ? a + _.slice($ + 1) : _.slice($)) +
                                T),
                                (_ = _.slice(0, $))
                            break
                        }
                }
            }
            w && !g && (_ = t(_, 1 / 0))
            var D = O.length + _.length + T.length,
                R = D < x ? new Array(x - D + 1).join(m) : ''
            switch (
                (w &&
                    g &&
                    ((_ = t(R + _, R.length ? x - T.length : 1 / 0)), (R = '')),
                v)
            ) {
                case '<':
                    _ = O + _ + T + R
                    break
                case '=':
                    _ = O + R + _ + T
                    break
                case '^':
                    _ = R.slice(0, (D = R.length >> 1)) + O + _ + T + R.slice(D)
                    break
                default:
                    _ = R + O + _ + T
                    break
            }
            return l(_)
        }
        return (
            (A.toString = function () {
                return p + ''
            }),
            A
        )
    }
    function f(p, m) {
        var v = u(((p = Vs(p)), (p.type = 'f'), p)),
            b = Math.max(-8, Math.min(8, Math.floor(Il(m) / 3))) * 3,
            h = Math.pow(10, -b),
            g = Yx[8 + b / 3]
        return function (x) {
            return v(h * x) + g
        }
    }
    return { format: u, formatPrefix: f }
}
var Xc, Nv, L5
aG({ thousands: ',', grouping: [3], currency: ['$', ''] })
function aG(e) {
    return (Xc = nG(e)), (Nv = Xc.format), (L5 = Xc.formatPrefix), Xc
}
function iG(e) {
    return Math.max(0, -Il(Math.abs(e)))
}
function lG(e, t) {
    return Math.max(
        0,
        Math.max(-8, Math.min(8, Math.floor(Il(t) / 3))) * 3 - Il(Math.abs(e))
    )
}
function oG(e, t) {
    return (
        (e = Math.abs(e)), (t = Math.abs(t) - e), Math.max(0, Il(t) - Il(e)) + 1
    )
}
function j5(e, t, r, n) {
    var a = Ug(e, t, r),
        l
    switch (((n = Vs(n == null ? ',f' : n)), n.type)) {
        case 's': {
            var o = Math.max(Math.abs(e), Math.abs(t))
            return (
                n.precision == null &&
                    !isNaN((l = lG(a, o))) &&
                    (n.precision = l),
                L5(n, o)
            )
        }
        case '':
        case 'e':
        case 'g':
        case 'p':
        case 'r': {
            n.precision == null &&
                !isNaN((l = oG(a, Math.max(Math.abs(e), Math.abs(t))))) &&
                (n.precision = l - (n.type === 'e'))
            break
        }
        case 'f':
        case '%': {
            n.precision == null &&
                !isNaN((l = iG(a))) &&
                (n.precision = l - (n.type === '%') * 2)
            break
        }
    }
    return Nv(n)
}
function Ga(e) {
    var t = e.domain
    return (
        (e.ticks = function (r) {
            var n = t()
            return zg(n[0], n[n.length - 1], r == null ? 10 : r)
        }),
        (e.tickFormat = function (r, n) {
            var a = t()
            return j5(a[0], a[a.length - 1], r == null ? 10 : r, n)
        }),
        (e.nice = function (r) {
            r == null && (r = 10)
            var n = t(),
                a = 0,
                l = n.length - 1,
                o = n[a],
                s = n[l],
                c,
                u,
                f = 10
            for (
                s < o && ((u = o), (o = s), (s = u), (u = a), (a = l), (l = u));
                f-- > 0;

            ) {
                if (((u = Vg(o, s, r)), u === c))
                    return (n[a] = o), (n[l] = s), t(n)
                if (u > 0)
                    (o = Math.floor(o / u) * u), (s = Math.ceil(s / u) * u)
                else if (u < 0)
                    (o = Math.ceil(o * u) / u), (s = Math.floor(s * u) / u)
                else break
                c = u
            }
            return e
        }),
        e
    )
}
function Ed() {
    var e = xv()
    return (
        (e.copy = function () {
            return vc(e, Ed())
        }),
        Yr.apply(e, arguments),
        Ga(e)
    )
}
function F5(e) {
    var t
    function r(n) {
        return n == null || isNaN((n = +n)) ? t : n
    }
    return (
        (r.invert = r),
        (r.domain = r.range =
            function (n) {
                return arguments.length
                    ? ((e = Array.from(n, _d)), r)
                    : e.slice()
            }),
        (r.unknown = function (n) {
            return arguments.length ? ((t = n), r) : t
        }),
        (r.copy = function () {
            return F5(e).unknown(t)
        }),
        (e = arguments.length ? Array.from(e, _d) : [0, 1]),
        Ga(r)
    )
}
function B5(e, t) {
    e = e.slice()
    var r = 0,
        n = e.length - 1,
        a = e[r],
        l = e[n],
        o
    return (
        l < a && ((o = r), (r = n), (n = o), (o = a), (a = l), (l = o)),
        (e[r] = t.floor(a)),
        (e[n] = t.ceil(l)),
        e
    )
}
function Xx(e) {
    return Math.log(e)
}
function Zx(e) {
    return Math.exp(e)
}
function sG(e) {
    return -Math.log(-e)
}
function cG(e) {
    return -Math.exp(-e)
}
function uG(e) {
    return isFinite(e) ? +('1e' + e) : e < 0 ? 0 : e
}
function dG(e) {
    return e === 10 ? uG : e === Math.E ? Math.exp : (t) => Math.pow(e, t)
}
function fG(e) {
    return e === Math.E
        ? Math.log
        : (e === 10 && Math.log10) ||
              (e === 2 && Math.log2) ||
              ((e = Math.log(e)), (t) => Math.log(t) / e)
}
function Jx(e) {
    return (t, r) => -e(-t, r)
}
function Sv(e) {
    const t = e(Xx, Zx),
        r = t.domain
    let n = 10,
        a,
        l
    function o() {
        return (
            (a = fG(n)),
            (l = dG(n)),
            r()[0] < 0 ? ((a = Jx(a)), (l = Jx(l)), e(sG, cG)) : e(Xx, Zx),
            t
        )
    }
    return (
        (t.base = function (s) {
            return arguments.length ? ((n = +s), o()) : n
        }),
        (t.domain = function (s) {
            return arguments.length ? (r(s), o()) : r()
        }),
        (t.ticks = (s) => {
            const c = r()
            let u = c[0],
                f = c[c.length - 1]
            const p = f < u
            p && ([u, f] = [f, u])
            let m = a(u),
                v = a(f),
                b,
                h
            const g = s == null ? 10 : +s
            let x = []
            if (!(n % 1) && v - m < g) {
                if (((m = Math.floor(m)), (v = Math.ceil(v)), u > 0)) {
                    for (; m <= v; ++m)
                        for (b = 1; b < n; ++b)
                            if (
                                ((h = m < 0 ? b / l(-m) : b * l(m)), !(h < u))
                            ) {
                                if (h > f) break
                                x.push(h)
                            }
                } else
                    for (; m <= v; ++m)
                        for (b = n - 1; b >= 1; --b)
                            if (
                                ((h = m > 0 ? b / l(-m) : b * l(m)), !(h < u))
                            ) {
                                if (h > f) break
                                x.push(h)
                            }
                x.length * 2 < g && (x = zg(u, f, g))
            } else x = zg(m, v, Math.min(v - m, g)).map(l)
            return p ? x.reverse() : x
        }),
        (t.tickFormat = (s, c) => {
            if (
                (s == null && (s = 10),
                c == null && (c = n === 10 ? 's' : ','),
                typeof c != 'function' &&
                    (!(n % 1) && (c = Vs(c)).precision == null && (c.trim = !0),
                    (c = Nv(c))),
                s === 1 / 0)
            )
                return c
            const u = Math.max(1, (n * s) / t.ticks().length)
            return (f) => {
                let p = f / l(Math.round(a(f)))
                return p * n < n - 0.5 && (p *= n), p <= u ? c(f) : ''
            }
        }),
        (t.nice = () =>
            r(
                B5(r(), {
                    floor: (s) => l(Math.floor(a(s))),
                    ceil: (s) => l(Math.ceil(a(s))),
                })
            )),
        t
    )
}
function z5() {
    const e = Sv(up()).domain([1, 10])
    return (
        (e.copy = () => vc(e, z5()).base(e.base())), Yr.apply(e, arguments), e
    )
}
function Qx(e) {
    return function (t) {
        return Math.sign(t) * Math.log1p(Math.abs(t / e))
    }
}
function e4(e) {
    return function (t) {
        return Math.sign(t) * Math.expm1(Math.abs(t)) * e
    }
}
function Cv(e) {
    var t = 1,
        r = e(Qx(t), e4(t))
    return (
        (r.constant = function (n) {
            return arguments.length ? e(Qx((t = +n)), e4(t)) : t
        }),
        Ga(r)
    )
}
function V5() {
    var e = Cv(up())
    return (
        (e.copy = function () {
            return vc(e, V5()).constant(e.constant())
        }),
        Yr.apply(e, arguments)
    )
}
function t4(e) {
    return function (t) {
        return t < 0 ? -Math.pow(-t, e) : Math.pow(t, e)
    }
}
function pG(e) {
    return e < 0 ? -Math.sqrt(-e) : Math.sqrt(e)
}
function hG(e) {
    return e < 0 ? -e * e : e * e
}
function Pv(e) {
    var t = e(tr, tr),
        r = 1
    function n() {
        return r === 1 ? e(tr, tr) : r === 0.5 ? e(pG, hG) : e(t4(r), t4(1 / r))
    }
    return (
        (t.exponent = function (a) {
            return arguments.length ? ((r = +a), n()) : r
        }),
        Ga(t)
    )
}
function _v() {
    var e = Pv(up())
    return (
        (e.copy = function () {
            return vc(e, _v()).exponent(e.exponent())
        }),
        Yr.apply(e, arguments),
        e
    )
}
function mG() {
    return _v.apply(null, arguments).exponent(0.5)
}
function r4(e) {
    return Math.sign(e) * e * e
}
function gG(e) {
    return Math.sign(e) * Math.sqrt(Math.abs(e))
}
function U5() {
    var e = xv(),
        t = [0, 1],
        r = !1,
        n
    function a(l) {
        var o = gG(e(l))
        return isNaN(o) ? n : r ? Math.round(o) : o
    }
    return (
        (a.invert = function (l) {
            return e.invert(r4(l))
        }),
        (a.domain = function (l) {
            return arguments.length ? (e.domain(l), a) : e.domain()
        }),
        (a.range = function (l) {
            return arguments.length
                ? (e.range((t = Array.from(l, _d)).map(r4)), a)
                : t.slice()
        }),
        (a.rangeRound = function (l) {
            return a.range(l).round(!0)
        }),
        (a.round = function (l) {
            return arguments.length ? ((r = !!l), a) : r
        }),
        (a.clamp = function (l) {
            return arguments.length ? (e.clamp(l), a) : e.clamp()
        }),
        (a.unknown = function (l) {
            return arguments.length ? ((n = l), a) : n
        }),
        (a.copy = function () {
            return U5(e.domain(), t).round(r).clamp(e.clamp()).unknown(n)
        }),
        Yr.apply(a, arguments),
        Ga(a)
    )
}
function W5() {
    var e = [],
        t = [],
        r = [],
        n
    function a() {
        var o = 0,
            s = Math.max(1, t.length)
        for (r = new Array(s - 1); ++o < s; ) r[o - 1] = wH(e, o / s)
        return l
    }
    function l(o) {
        return o == null || isNaN((o = +o)) ? n : t[mc(r, o)]
    }
    return (
        (l.invertExtent = function (o) {
            var s = t.indexOf(o)
            return s < 0
                ? [NaN, NaN]
                : [
                      s > 0 ? r[s - 1] : e[0],
                      s < r.length ? r[s] : e[e.length - 1],
                  ]
        }),
        (l.domain = function (o) {
            if (!arguments.length) return e.slice()
            e = []
            for (let s of o) s != null && !isNaN((s = +s)) && e.push(s)
            return e.sort(Ta), a()
        }),
        (l.range = function (o) {
            return arguments.length ? ((t = Array.from(o)), a()) : t.slice()
        }),
        (l.unknown = function (o) {
            return arguments.length ? ((n = o), l) : n
        }),
        (l.quantiles = function () {
            return r.slice()
        }),
        (l.copy = function () {
            return W5().domain(e).range(t).unknown(n)
        }),
        Yr.apply(l, arguments)
    )
}
function H5() {
    var e = 0,
        t = 1,
        r = 1,
        n = [0.5],
        a = [0, 1],
        l
    function o(c) {
        return c != null && c <= c ? a[mc(n, c, 0, r)] : l
    }
    function s() {
        var c = -1
        for (n = new Array(r); ++c < r; )
            n[c] = ((c + 1) * t - (c - r) * e) / (r + 1)
        return o
    }
    return (
        (o.domain = function (c) {
            return arguments.length
                ? (([e, t] = c), (e = +e), (t = +t), s())
                : [e, t]
        }),
        (o.range = function (c) {
            return arguments.length
                ? ((r = (a = Array.from(c)).length - 1), s())
                : a.slice()
        }),
        (o.invertExtent = function (c) {
            var u = a.indexOf(c)
            return u < 0
                ? [NaN, NaN]
                : u < 1
                ? [e, n[0]]
                : u >= r
                ? [n[r - 1], t]
                : [n[u - 1], n[u]]
        }),
        (o.unknown = function (c) {
            return arguments.length && (l = c), o
        }),
        (o.thresholds = function () {
            return n.slice()
        }),
        (o.copy = function () {
            return H5().domain([e, t]).range(a).unknown(l)
        }),
        Yr.apply(Ga(o), arguments)
    )
}
function G5() {
    var e = [0.5],
        t = [0, 1],
        r,
        n = 1
    function a(l) {
        return l != null && l <= l ? t[mc(e, l, 0, n)] : r
    }
    return (
        (a.domain = function (l) {
            return arguments.length
                ? ((e = Array.from(l)),
                  (n = Math.min(e.length, t.length - 1)),
                  a)
                : e.slice()
        }),
        (a.range = function (l) {
            return arguments.length
                ? ((t = Array.from(l)),
                  (n = Math.min(e.length, t.length - 1)),
                  a)
                : t.slice()
        }),
        (a.invertExtent = function (l) {
            var o = t.indexOf(l)
            return [e[o - 1], e[o]]
        }),
        (a.unknown = function (l) {
            return arguments.length ? ((r = l), a) : r
        }),
        (a.copy = function () {
            return G5().domain(e).range(t).unknown(r)
        }),
        Yr.apply(a, arguments)
    )
}
const jh = new Date(),
    Fh = new Date()
function _t(e, t, r, n) {
    function a(l) {
        return e((l = arguments.length === 0 ? new Date() : new Date(+l))), l
    }
    return (
        (a.floor = (l) => (e((l = new Date(+l))), l)),
        (a.ceil = (l) => (e((l = new Date(l - 1))), t(l, 1), e(l), l)),
        (a.round = (l) => {
            const o = a(l),
                s = a.ceil(l)
            return l - o < s - l ? o : s
        }),
        (a.offset = (l, o) => (
            t((l = new Date(+l)), o == null ? 1 : Math.floor(o)), l
        )),
        (a.range = (l, o, s) => {
            const c = []
            if (
                ((l = a.ceil(l)),
                (s = s == null ? 1 : Math.floor(s)),
                !(l < o) || !(s > 0))
            )
                return c
            let u
            do c.push((u = new Date(+l))), t(l, s), e(l)
            while (u < l && l < o)
            return c
        }),
        (a.filter = (l) =>
            _t(
                (o) => {
                    if (o >= o) for (; e(o), !l(o); ) o.setTime(o - 1)
                },
                (o, s) => {
                    if (o >= o)
                        if (s < 0) for (; ++s <= 0; ) for (; t(o, -1), !l(o); );
                        else for (; --s >= 0; ) for (; t(o, 1), !l(o); );
                }
            )),
        r &&
            ((a.count = (l, o) => (
                jh.setTime(+l),
                Fh.setTime(+o),
                e(jh),
                e(Fh),
                Math.floor(r(jh, Fh))
            )),
            (a.every = (l) => (
                (l = Math.floor(l)),
                !isFinite(l) || !(l > 0)
                    ? null
                    : l > 1
                    ? a.filter(
                          n
                              ? (o) => n(o) % l === 0
                              : (o) => a.count(0, o) % l === 0
                      )
                    : a
            ))),
        a
    )
}
const kd = _t(
    () => {},
    (e, t) => {
        e.setTime(+e + t)
    },
    (e, t) => t - e
)
kd.every = (e) => (
    (e = Math.floor(e)),
    !isFinite(e) || !(e > 0)
        ? null
        : e > 1
        ? _t(
              (t) => {
                  t.setTime(Math.floor(t / e) * e)
              },
              (t, r) => {
                  t.setTime(+t + r * e)
              },
              (t, r) => (r - t) / e
          )
        : kd
)
kd.range
const Fn = 1e3,
    zr = Fn * 60,
    Bn = zr * 60,
    Xn = Bn * 24,
    Av = Xn * 7,
    n4 = Xn * 30,
    Bh = Xn * 365,
    mi = _t(
        (e) => {
            e.setTime(e - e.getMilliseconds())
        },
        (e, t) => {
            e.setTime(+e + t * Fn)
        },
        (e, t) => (t - e) / Fn,
        (e) => e.getUTCSeconds()
    )
mi.range
const Ev = _t(
    (e) => {
        e.setTime(e - e.getMilliseconds() - e.getSeconds() * Fn)
    },
    (e, t) => {
        e.setTime(+e + t * zr)
    },
    (e, t) => (t - e) / zr,
    (e) => e.getMinutes()
)
Ev.range
const kv = _t(
    (e) => {
        e.setUTCSeconds(0, 0)
    },
    (e, t) => {
        e.setTime(+e + t * zr)
    },
    (e, t) => (t - e) / zr,
    (e) => e.getUTCMinutes()
)
kv.range
const Ov = _t(
    (e) => {
        e.setTime(
            e - e.getMilliseconds() - e.getSeconds() * Fn - e.getMinutes() * zr
        )
    },
    (e, t) => {
        e.setTime(+e + t * Bn)
    },
    (e, t) => (t - e) / Bn,
    (e) => e.getHours()
)
Ov.range
const Tv = _t(
    (e) => {
        e.setUTCMinutes(0, 0, 0)
    },
    (e, t) => {
        e.setTime(+e + t * Bn)
    },
    (e, t) => (t - e) / Bn,
    (e) => e.getUTCHours()
)
Tv.range
const yc = _t(
    (e) => e.setHours(0, 0, 0, 0),
    (e, t) => e.setDate(e.getDate() + t),
    (e, t) =>
        (t - e - (t.getTimezoneOffset() - e.getTimezoneOffset()) * zr) / Xn,
    (e) => e.getDate() - 1
)
yc.range
const dp = _t(
    (e) => {
        e.setUTCHours(0, 0, 0, 0)
    },
    (e, t) => {
        e.setUTCDate(e.getUTCDate() + t)
    },
    (e, t) => (t - e) / Xn,
    (e) => e.getUTCDate() - 1
)
dp.range
const q5 = _t(
    (e) => {
        e.setUTCHours(0, 0, 0, 0)
    },
    (e, t) => {
        e.setUTCDate(e.getUTCDate() + t)
    },
    (e, t) => (t - e) / Xn,
    (e) => Math.floor(e / Xn)
)
q5.range
function Di(e) {
    return _t(
        (t) => {
            t.setDate(t.getDate() - ((t.getDay() + 7 - e) % 7)),
                t.setHours(0, 0, 0, 0)
        },
        (t, r) => {
            t.setDate(t.getDate() + r * 7)
        },
        (t, r) =>
            (r - t - (r.getTimezoneOffset() - t.getTimezoneOffset()) * zr) / Av
    )
}
const fp = Di(0),
    Od = Di(1),
    vG = Di(2),
    yG = Di(3),
    Rl = Di(4),
    bG = Di(5),
    xG = Di(6)
fp.range
Od.range
vG.range
yG.range
Rl.range
bG.range
xG.range
function $i(e) {
    return _t(
        (t) => {
            t.setUTCDate(t.getUTCDate() - ((t.getUTCDay() + 7 - e) % 7)),
                t.setUTCHours(0, 0, 0, 0)
        },
        (t, r) => {
            t.setUTCDate(t.getUTCDate() + r * 7)
        },
        (t, r) => (r - t) / Av
    )
}
const pp = $i(0),
    Td = $i(1),
    wG = $i(2),
    NG = $i(3),
    Ll = $i(4),
    SG = $i(5),
    CG = $i(6)
pp.range
Td.range
wG.range
NG.range
Ll.range
SG.range
CG.range
const Mv = _t(
    (e) => {
        e.setDate(1), e.setHours(0, 0, 0, 0)
    },
    (e, t) => {
        e.setMonth(e.getMonth() + t)
    },
    (e, t) =>
        t.getMonth() - e.getMonth() + (t.getFullYear() - e.getFullYear()) * 12,
    (e) => e.getMonth()
)
Mv.range
const Dv = _t(
    (e) => {
        e.setUTCDate(1), e.setUTCHours(0, 0, 0, 0)
    },
    (e, t) => {
        e.setUTCMonth(e.getUTCMonth() + t)
    },
    (e, t) =>
        t.getUTCMonth() -
        e.getUTCMonth() +
        (t.getUTCFullYear() - e.getUTCFullYear()) * 12,
    (e) => e.getUTCMonth()
)
Dv.range
const Zn = _t(
    (e) => {
        e.setMonth(0, 1), e.setHours(0, 0, 0, 0)
    },
    (e, t) => {
        e.setFullYear(e.getFullYear() + t)
    },
    (e, t) => t.getFullYear() - e.getFullYear(),
    (e) => e.getFullYear()
)
Zn.every = (e) =>
    !isFinite((e = Math.floor(e))) || !(e > 0)
        ? null
        : _t(
              (t) => {
                  t.setFullYear(Math.floor(t.getFullYear() / e) * e),
                      t.setMonth(0, 1),
                      t.setHours(0, 0, 0, 0)
              },
              (t, r) => {
                  t.setFullYear(t.getFullYear() + r * e)
              }
          )
Zn.range
const Jn = _t(
    (e) => {
        e.setUTCMonth(0, 1), e.setUTCHours(0, 0, 0, 0)
    },
    (e, t) => {
        e.setUTCFullYear(e.getUTCFullYear() + t)
    },
    (e, t) => t.getUTCFullYear() - e.getUTCFullYear(),
    (e) => e.getUTCFullYear()
)
Jn.every = (e) =>
    !isFinite((e = Math.floor(e))) || !(e > 0)
        ? null
        : _t(
              (t) => {
                  t.setUTCFullYear(Math.floor(t.getUTCFullYear() / e) * e),
                      t.setUTCMonth(0, 1),
                      t.setUTCHours(0, 0, 0, 0)
              },
              (t, r) => {
                  t.setUTCFullYear(t.getUTCFullYear() + r * e)
              }
          )
Jn.range
function K5(e, t, r, n, a, l) {
    const o = [
        [mi, 1, Fn],
        [mi, 5, 5 * Fn],
        [mi, 15, 15 * Fn],
        [mi, 30, 30 * Fn],
        [l, 1, zr],
        [l, 5, 5 * zr],
        [l, 15, 15 * zr],
        [l, 30, 30 * zr],
        [a, 1, Bn],
        [a, 3, 3 * Bn],
        [a, 6, 6 * Bn],
        [a, 12, 12 * Bn],
        [n, 1, Xn],
        [n, 2, 2 * Xn],
        [r, 1, Av],
        [t, 1, n4],
        [t, 3, 3 * n4],
        [e, 1, Bh],
    ]
    function s(u, f, p) {
        const m = f < u
        m && ([u, f] = [f, u])
        const v = p && typeof p.range == 'function' ? p : c(u, f, p),
            b = v ? v.range(u, +f + 1) : []
        return m ? b.reverse() : b
    }
    function c(u, f, p) {
        const m = Math.abs(f - u) / p,
            v = mv(([, , g]) => g).right(o, m)
        if (v === o.length) return e.every(Ug(u / Bh, f / Bh, p))
        if (v === 0) return kd.every(Math.max(Ug(u, f, p), 1))
        const [b, h] = o[m / o[v - 1][2] < o[v][2] / m ? v - 1 : v]
        return b.every(h)
    }
    return [s, c]
}
const [PG, _G] = K5(Jn, Dv, pp, q5, Tv, kv),
    [AG, EG] = K5(Zn, Mv, fp, yc, Ov, Ev)
function zh(e) {
    if (0 <= e.y && e.y < 100) {
        var t = new Date(-1, e.m, e.d, e.H, e.M, e.S, e.L)
        return t.setFullYear(e.y), t
    }
    return new Date(e.y, e.m, e.d, e.H, e.M, e.S, e.L)
}
function Vh(e) {
    if (0 <= e.y && e.y < 100) {
        var t = new Date(Date.UTC(-1, e.m, e.d, e.H, e.M, e.S, e.L))
        return t.setUTCFullYear(e.y), t
    }
    return new Date(Date.UTC(e.y, e.m, e.d, e.H, e.M, e.S, e.L))
}
function Do(e, t, r) {
    return { y: e, m: t, d: r, H: 0, M: 0, S: 0, L: 0 }
}
function kG(e) {
    var t = e.dateTime,
        r = e.date,
        n = e.time,
        a = e.periods,
        l = e.days,
        o = e.shortDays,
        s = e.months,
        c = e.shortMonths,
        u = $o(a),
        f = Io(a),
        p = $o(l),
        m = Io(l),
        v = $o(o),
        b = Io(o),
        h = $o(s),
        g = Io(s),
        x = $o(c),
        w = Io(c),
        y = {
            a: L,
            A: D,
            b: R,
            B: V,
            c: null,
            d: c4,
            e: c4,
            f: JG,
            g: sq,
            G: uq,
            H: YG,
            I: XG,
            j: ZG,
            L: Y5,
            m: QG,
            M: eq,
            p: G,
            q: ee,
            Q: f4,
            s: p4,
            S: tq,
            u: rq,
            U: nq,
            V: aq,
            w: iq,
            W: lq,
            x: null,
            X: null,
            y: oq,
            Y: cq,
            Z: dq,
            '%': d4,
        },
        N = {
            a: Q,
            A: B,
            b: X,
            B: ge,
            c: null,
            d: u4,
            e: u4,
            f: mq,
            g: Pq,
            G: Aq,
            H: fq,
            I: pq,
            j: hq,
            L: Z5,
            m: gq,
            M: vq,
            p: Pe,
            q: ue,
            Q: f4,
            s: p4,
            S: yq,
            u: bq,
            U: xq,
            V: wq,
            w: Nq,
            W: Sq,
            x: null,
            X: null,
            y: Cq,
            Y: _q,
            Z: Eq,
            '%': d4,
        },
        S = {
            a: A,
            A: _,
            b: O,
            B: T,
            c: $,
            d: o4,
            e: o4,
            f: HG,
            g: l4,
            G: i4,
            H: s4,
            I: s4,
            j: zG,
            L: WG,
            m: BG,
            M: VG,
            p: M,
            q: FG,
            Q: qG,
            s: KG,
            S: UG,
            u: $G,
            U: IG,
            V: RG,
            w: DG,
            W: LG,
            x: I,
            X: j,
            y: l4,
            Y: i4,
            Z: jG,
            '%': GG,
        }
    ;(y.x = P(r, y)),
        (y.X = P(n, y)),
        (y.c = P(t, y)),
        (N.x = P(r, N)),
        (N.X = P(n, N)),
        (N.c = P(t, N))
    function P(F, q) {
        return function (te) {
            var z = [],
                _e = -1,
                se = 0,
                Le = F.length,
                Ye,
                ht,
                U
            for (te instanceof Date || (te = new Date(+te)); ++_e < Le; )
                F.charCodeAt(_e) === 37 &&
                    (z.push(F.slice(se, _e)),
                    (ht = a4[(Ye = F.charAt(++_e))]) != null
                        ? (Ye = F.charAt(++_e))
                        : (ht = Ye === 'e' ? ' ' : '0'),
                    (U = q[Ye]) && (Ye = U(te, ht)),
                    z.push(Ye),
                    (se = _e + 1))
            return z.push(F.slice(se, _e)), z.join('')
        }
    }
    function E(F, q) {
        return function (te) {
            var z = Do(1900, void 0, 1),
                _e = k(z, F, (te += ''), 0),
                se,
                Le
            if (_e != te.length) return null
            if ('Q' in z) return new Date(z.Q)
            if ('s' in z) return new Date(z.s * 1e3 + ('L' in z ? z.L : 0))
            if (
                (q && !('Z' in z) && (z.Z = 0),
                'p' in z && (z.H = (z.H % 12) + z.p * 12),
                z.m === void 0 && (z.m = 'q' in z ? z.q : 0),
                'V' in z)
            ) {
                if (z.V < 1 || z.V > 53) return null
                'w' in z || (z.w = 1),
                    'Z' in z
                        ? ((se = Vh(Do(z.y, 0, 1))),
                          (Le = se.getUTCDay()),
                          (se = Le > 4 || Le === 0 ? Td.ceil(se) : Td(se)),
                          (se = dp.offset(se, (z.V - 1) * 7)),
                          (z.y = se.getUTCFullYear()),
                          (z.m = se.getUTCMonth()),
                          (z.d = se.getUTCDate() + ((z.w + 6) % 7)))
                        : ((se = zh(Do(z.y, 0, 1))),
                          (Le = se.getDay()),
                          (se = Le > 4 || Le === 0 ? Od.ceil(se) : Od(se)),
                          (se = yc.offset(se, (z.V - 1) * 7)),
                          (z.y = se.getFullYear()),
                          (z.m = se.getMonth()),
                          (z.d = se.getDate() + ((z.w + 6) % 7)))
            } else
                ('W' in z || 'U' in z) &&
                    ('w' in z || (z.w = 'u' in z ? z.u % 7 : 'W' in z ? 1 : 0),
                    (Le =
                        'Z' in z
                            ? Vh(Do(z.y, 0, 1)).getUTCDay()
                            : zh(Do(z.y, 0, 1)).getDay()),
                    (z.m = 0),
                    (z.d =
                        'W' in z
                            ? ((z.w + 6) % 7) + z.W * 7 - ((Le + 5) % 7)
                            : z.w + z.U * 7 - ((Le + 6) % 7)))
            return 'Z' in z
                ? ((z.H += (z.Z / 100) | 0), (z.M += z.Z % 100), Vh(z))
                : zh(z)
        }
    }
    function k(F, q, te, z) {
        for (var _e = 0, se = q.length, Le = te.length, Ye, ht; _e < se; ) {
            if (z >= Le) return -1
            if (((Ye = q.charCodeAt(_e++)), Ye === 37)) {
                if (
                    ((Ye = q.charAt(_e++)),
                    (ht = S[Ye in a4 ? q.charAt(_e++) : Ye]),
                    !ht || (z = ht(F, te, z)) < 0)
                )
                    return -1
            } else if (Ye != te.charCodeAt(z++)) return -1
        }
        return z
    }
    function M(F, q, te) {
        var z = u.exec(q.slice(te))
        return z ? ((F.p = f.get(z[0].toLowerCase())), te + z[0].length) : -1
    }
    function A(F, q, te) {
        var z = v.exec(q.slice(te))
        return z ? ((F.w = b.get(z[0].toLowerCase())), te + z[0].length) : -1
    }
    function _(F, q, te) {
        var z = p.exec(q.slice(te))
        return z ? ((F.w = m.get(z[0].toLowerCase())), te + z[0].length) : -1
    }
    function O(F, q, te) {
        var z = x.exec(q.slice(te))
        return z ? ((F.m = w.get(z[0].toLowerCase())), te + z[0].length) : -1
    }
    function T(F, q, te) {
        var z = h.exec(q.slice(te))
        return z ? ((F.m = g.get(z[0].toLowerCase())), te + z[0].length) : -1
    }
    function $(F, q, te) {
        return k(F, t, q, te)
    }
    function I(F, q, te) {
        return k(F, r, q, te)
    }
    function j(F, q, te) {
        return k(F, n, q, te)
    }
    function L(F) {
        return o[F.getDay()]
    }
    function D(F) {
        return l[F.getDay()]
    }
    function R(F) {
        return c[F.getMonth()]
    }
    function V(F) {
        return s[F.getMonth()]
    }
    function G(F) {
        return a[+(F.getHours() >= 12)]
    }
    function ee(F) {
        return 1 + ~~(F.getMonth() / 3)
    }
    function Q(F) {
        return o[F.getUTCDay()]
    }
    function B(F) {
        return l[F.getUTCDay()]
    }
    function X(F) {
        return c[F.getUTCMonth()]
    }
    function ge(F) {
        return s[F.getUTCMonth()]
    }
    function Pe(F) {
        return a[+(F.getUTCHours() >= 12)]
    }
    function ue(F) {
        return 1 + ~~(F.getUTCMonth() / 3)
    }
    return {
        format: function (F) {
            var q = P((F += ''), y)
            return (
                (q.toString = function () {
                    return F
                }),
                q
            )
        },
        parse: function (F) {
            var q = E((F += ''), !1)
            return (
                (q.toString = function () {
                    return F
                }),
                q
            )
        },
        utcFormat: function (F) {
            var q = P((F += ''), N)
            return (
                (q.toString = function () {
                    return F
                }),
                q
            )
        },
        utcParse: function (F) {
            var q = E((F += ''), !0)
            return (
                (q.toString = function () {
                    return F
                }),
                q
            )
        },
    }
}
var a4 = { '-': '', _: ' ', 0: '0' },
    Dt = /^\s*\d+/,
    OG = /^%/,
    TG = /[\\^$*+?|[\]().{}]/g
function Re(e, t, r) {
    var n = e < 0 ? '-' : '',
        a = (n ? -e : e) + '',
        l = a.length
    return n + (l < r ? new Array(r - l + 1).join(t) + a : a)
}
function MG(e) {
    return e.replace(TG, '\\$&')
}
function $o(e) {
    return new RegExp('^(?:' + e.map(MG).join('|') + ')', 'i')
}
function Io(e) {
    return new Map(e.map((t, r) => [t.toLowerCase(), r]))
}
function DG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 1))
    return n ? ((e.w = +n[0]), r + n[0].length) : -1
}
function $G(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 1))
    return n ? ((e.u = +n[0]), r + n[0].length) : -1
}
function IG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.U = +n[0]), r + n[0].length) : -1
}
function RG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.V = +n[0]), r + n[0].length) : -1
}
function LG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.W = +n[0]), r + n[0].length) : -1
}
function i4(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 4))
    return n ? ((e.y = +n[0]), r + n[0].length) : -1
}
function l4(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3)), r + n[0].length) : -1
}
function jG(e, t, r) {
    var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(r, r + 6))
    return n
        ? ((e.Z = n[1] ? 0 : -(n[2] + (n[3] || '00'))), r + n[0].length)
        : -1
}
function FG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 1))
    return n ? ((e.q = n[0] * 3 - 3), r + n[0].length) : -1
}
function BG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.m = n[0] - 1), r + n[0].length) : -1
}
function o4(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.d = +n[0]), r + n[0].length) : -1
}
function zG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 3))
    return n ? ((e.m = 0), (e.d = +n[0]), r + n[0].length) : -1
}
function s4(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.H = +n[0]), r + n[0].length) : -1
}
function VG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.M = +n[0]), r + n[0].length) : -1
}
function UG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 2))
    return n ? ((e.S = +n[0]), r + n[0].length) : -1
}
function WG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 3))
    return n ? ((e.L = +n[0]), r + n[0].length) : -1
}
function HG(e, t, r) {
    var n = Dt.exec(t.slice(r, r + 6))
    return n ? ((e.L = Math.floor(n[0] / 1e3)), r + n[0].length) : -1
}
function GG(e, t, r) {
    var n = OG.exec(t.slice(r, r + 1))
    return n ? r + n[0].length : -1
}
function qG(e, t, r) {
    var n = Dt.exec(t.slice(r))
    return n ? ((e.Q = +n[0]), r + n[0].length) : -1
}
function KG(e, t, r) {
    var n = Dt.exec(t.slice(r))
    return n ? ((e.s = +n[0]), r + n[0].length) : -1
}
function c4(e, t) {
    return Re(e.getDate(), t, 2)
}
function YG(e, t) {
    return Re(e.getHours(), t, 2)
}
function XG(e, t) {
    return Re(e.getHours() % 12 || 12, t, 2)
}
function ZG(e, t) {
    return Re(1 + yc.count(Zn(e), e), t, 3)
}
function Y5(e, t) {
    return Re(e.getMilliseconds(), t, 3)
}
function JG(e, t) {
    return Y5(e, t) + '000'
}
function QG(e, t) {
    return Re(e.getMonth() + 1, t, 2)
}
function eq(e, t) {
    return Re(e.getMinutes(), t, 2)
}
function tq(e, t) {
    return Re(e.getSeconds(), t, 2)
}
function rq(e) {
    var t = e.getDay()
    return t === 0 ? 7 : t
}
function nq(e, t) {
    return Re(fp.count(Zn(e) - 1, e), t, 2)
}
function X5(e) {
    var t = e.getDay()
    return t >= 4 || t === 0 ? Rl(e) : Rl.ceil(e)
}
function aq(e, t) {
    return (e = X5(e)), Re(Rl.count(Zn(e), e) + (Zn(e).getDay() === 4), t, 2)
}
function iq(e) {
    return e.getDay()
}
function lq(e, t) {
    return Re(Od.count(Zn(e) - 1, e), t, 2)
}
function oq(e, t) {
    return Re(e.getFullYear() % 100, t, 2)
}
function sq(e, t) {
    return (e = X5(e)), Re(e.getFullYear() % 100, t, 2)
}
function cq(e, t) {
    return Re(e.getFullYear() % 1e4, t, 4)
}
function uq(e, t) {
    var r = e.getDay()
    return (
        (e = r >= 4 || r === 0 ? Rl(e) : Rl.ceil(e)),
        Re(e.getFullYear() % 1e4, t, 4)
    )
}
function dq(e) {
    var t = e.getTimezoneOffset()
    return (
        (t > 0 ? '-' : ((t *= -1), '+')) +
        Re((t / 60) | 0, '0', 2) +
        Re(t % 60, '0', 2)
    )
}
function u4(e, t) {
    return Re(e.getUTCDate(), t, 2)
}
function fq(e, t) {
    return Re(e.getUTCHours(), t, 2)
}
function pq(e, t) {
    return Re(e.getUTCHours() % 12 || 12, t, 2)
}
function hq(e, t) {
    return Re(1 + dp.count(Jn(e), e), t, 3)
}
function Z5(e, t) {
    return Re(e.getUTCMilliseconds(), t, 3)
}
function mq(e, t) {
    return Z5(e, t) + '000'
}
function gq(e, t) {
    return Re(e.getUTCMonth() + 1, t, 2)
}
function vq(e, t) {
    return Re(e.getUTCMinutes(), t, 2)
}
function yq(e, t) {
    return Re(e.getUTCSeconds(), t, 2)
}
function bq(e) {
    var t = e.getUTCDay()
    return t === 0 ? 7 : t
}
function xq(e, t) {
    return Re(pp.count(Jn(e) - 1, e), t, 2)
}
function J5(e) {
    var t = e.getUTCDay()
    return t >= 4 || t === 0 ? Ll(e) : Ll.ceil(e)
}
function wq(e, t) {
    return (e = J5(e)), Re(Ll.count(Jn(e), e) + (Jn(e).getUTCDay() === 4), t, 2)
}
function Nq(e) {
    return e.getUTCDay()
}
function Sq(e, t) {
    return Re(Td.count(Jn(e) - 1, e), t, 2)
}
function Cq(e, t) {
    return Re(e.getUTCFullYear() % 100, t, 2)
}
function Pq(e, t) {
    return (e = J5(e)), Re(e.getUTCFullYear() % 100, t, 2)
}
function _q(e, t) {
    return Re(e.getUTCFullYear() % 1e4, t, 4)
}
function Aq(e, t) {
    var r = e.getUTCDay()
    return (
        (e = r >= 4 || r === 0 ? Ll(e) : Ll.ceil(e)),
        Re(e.getUTCFullYear() % 1e4, t, 4)
    )
}
function Eq() {
    return '+0000'
}
function d4() {
    return '%'
}
function f4(e) {
    return +e
}
function p4(e) {
    return Math.floor(+e / 1e3)
}
var zi, Q5, e6
kq({
    dateTime: '%x, %X',
    date: '%-m/%-d/%Y',
    time: '%-I:%M:%S %p',
    periods: ['AM', 'PM'],
    days: [
        'Sunday',
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday',
    ],
    shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
    months: [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December',
    ],
    shortMonths: [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec',
    ],
})
function kq(e) {
    return (
        (zi = kG(e)),
        (Q5 = zi.format),
        zi.parse,
        (e6 = zi.utcFormat),
        zi.utcParse,
        zi
    )
}
function Oq(e) {
    return new Date(e)
}
function Tq(e) {
    return e instanceof Date ? +e : +new Date(+e)
}
function $v(e, t, r, n, a, l, o, s, c, u) {
    var f = xv(),
        p = f.invert,
        m = f.domain,
        v = u('.%L'),
        b = u(':%S'),
        h = u('%I:%M'),
        g = u('%I %p'),
        x = u('%a %d'),
        w = u('%b %d'),
        y = u('%B'),
        N = u('%Y')
    function S(P) {
        return (
            c(P) < P
                ? v
                : s(P) < P
                ? b
                : o(P) < P
                ? h
                : l(P) < P
                ? g
                : n(P) < P
                ? a(P) < P
                    ? x
                    : w
                : r(P) < P
                ? y
                : N
        )(P)
    }
    return (
        (f.invert = function (P) {
            return new Date(p(P))
        }),
        (f.domain = function (P) {
            return arguments.length ? m(Array.from(P, Tq)) : m().map(Oq)
        }),
        (f.ticks = function (P) {
            var E = m()
            return e(E[0], E[E.length - 1], P == null ? 10 : P)
        }),
        (f.tickFormat = function (P, E) {
            return E == null ? S : u(E)
        }),
        (f.nice = function (P) {
            var E = m()
            return (
                (!P || typeof P.range != 'function') &&
                    (P = t(E[0], E[E.length - 1], P == null ? 10 : P)),
                P ? m(B5(E, P)) : f
            )
        }),
        (f.copy = function () {
            return vc(f, $v(e, t, r, n, a, l, o, s, c, u))
        }),
        f
    )
}
function Mq() {
    return Yr.apply(
        $v(AG, EG, Zn, Mv, fp, yc, Ov, Ev, mi, Q5).domain([
            new Date(2e3, 0, 1),
            new Date(2e3, 0, 2),
        ]),
        arguments
    )
}
function Dq() {
    return Yr.apply(
        $v(PG, _G, Jn, Dv, pp, dp, Tv, kv, mi, e6).domain([
            Date.UTC(2e3, 0, 1),
            Date.UTC(2e3, 0, 2),
        ]),
        arguments
    )
}
function hp() {
    var e = 0,
        t = 1,
        r,
        n,
        a,
        l,
        o = tr,
        s = !1,
        c
    function u(p) {
        return p == null || isNaN((p = +p))
            ? c
            : o(
                  a === 0
                      ? 0.5
                      : ((p = (l(p) - r) * a),
                        s ? Math.max(0, Math.min(1, p)) : p)
              )
    }
    ;(u.domain = function (p) {
        return arguments.length
            ? (([e, t] = p),
              (r = l((e = +e))),
              (n = l((t = +t))),
              (a = r === n ? 0 : 1 / (n - r)),
              u)
            : [e, t]
    }),
        (u.clamp = function (p) {
            return arguments.length ? ((s = !!p), u) : s
        }),
        (u.interpolator = function (p) {
            return arguments.length ? ((o = p), u) : o
        })
    function f(p) {
        return function (m) {
            var v, b
            return arguments.length
                ? (([v, b] = m), (o = p(v, b)), u)
                : [o(0), o(1)]
        }
    }
    return (
        (u.range = f(po)),
        (u.rangeRound = f(bv)),
        (u.unknown = function (p) {
            return arguments.length ? ((c = p), u) : c
        }),
        function (p) {
            return (
                (l = p),
                (r = p(e)),
                (n = p(t)),
                (a = r === n ? 0 : 1 / (n - r)),
                u
            )
        }
    )
}
function qa(e, t) {
    return t
        .domain(e.domain())
        .interpolator(e.interpolator())
        .clamp(e.clamp())
        .unknown(e.unknown())
}
function t6() {
    var e = Ga(hp()(tr))
    return (
        (e.copy = function () {
            return qa(e, t6())
        }),
        na.apply(e, arguments)
    )
}
function r6() {
    var e = Sv(hp()).domain([1, 10])
    return (
        (e.copy = function () {
            return qa(e, r6()).base(e.base())
        }),
        na.apply(e, arguments)
    )
}
function n6() {
    var e = Cv(hp())
    return (
        (e.copy = function () {
            return qa(e, n6()).constant(e.constant())
        }),
        na.apply(e, arguments)
    )
}
function Iv() {
    var e = Pv(hp())
    return (
        (e.copy = function () {
            return qa(e, Iv()).exponent(e.exponent())
        }),
        na.apply(e, arguments)
    )
}
function $q() {
    return Iv.apply(null, arguments).exponent(0.5)
}
function a6() {
    var e = [],
        t = tr
    function r(n) {
        if (n != null && !isNaN((n = +n)))
            return t((mc(e, n, 1) - 1) / (e.length - 1))
    }
    return (
        (r.domain = function (n) {
            if (!arguments.length) return e.slice()
            e = []
            for (let a of n) a != null && !isNaN((a = +a)) && e.push(a)
            return e.sort(Ta), r
        }),
        (r.interpolator = function (n) {
            return arguments.length ? ((t = n), r) : t
        }),
        (r.range = function () {
            return e.map((n, a) => t(a / (e.length - 1)))
        }),
        (r.quantiles = function (n) {
            return Array.from({ length: n + 1 }, (a, l) => xH(e, l / n))
        }),
        (r.copy = function () {
            return a6(t).domain(e)
        }),
        na.apply(r, arguments)
    )
}
function mp() {
    var e = 0,
        t = 0.5,
        r = 1,
        n = 1,
        a,
        l,
        o,
        s,
        c,
        u = tr,
        f,
        p = !1,
        m
    function v(h) {
        return isNaN((h = +h))
            ? m
            : ((h = 0.5 + ((h = +f(h)) - l) * (n * h < n * l ? s : c)),
              u(p ? Math.max(0, Math.min(1, h)) : h))
    }
    ;(v.domain = function (h) {
        return arguments.length
            ? (([e, t, r] = h),
              (a = f((e = +e))),
              (l = f((t = +t))),
              (o = f((r = +r))),
              (s = a === l ? 0 : 0.5 / (l - a)),
              (c = l === o ? 0 : 0.5 / (o - l)),
              (n = l < a ? -1 : 1),
              v)
            : [e, t, r]
    }),
        (v.clamp = function (h) {
            return arguments.length ? ((p = !!h), v) : p
        }),
        (v.interpolator = function (h) {
            return arguments.length ? ((u = h), v) : u
        })
    function b(h) {
        return function (g) {
            var x, w, y
            return arguments.length
                ? (([x, w, y] = g), (u = GH(h, [x, w, y])), v)
                : [u(0), u(0.5), u(1)]
        }
    }
    return (
        (v.range = b(po)),
        (v.rangeRound = b(bv)),
        (v.unknown = function (h) {
            return arguments.length ? ((m = h), v) : m
        }),
        function (h) {
            return (
                (f = h),
                (a = h(e)),
                (l = h(t)),
                (o = h(r)),
                (s = a === l ? 0 : 0.5 / (l - a)),
                (c = l === o ? 0 : 0.5 / (o - l)),
                (n = l < a ? -1 : 1),
                v
            )
        }
    )
}
function i6() {
    var e = Ga(mp()(tr))
    return (
        (e.copy = function () {
            return qa(e, i6())
        }),
        na.apply(e, arguments)
    )
}
function l6() {
    var e = Sv(mp()).domain([0.1, 1, 10])
    return (
        (e.copy = function () {
            return qa(e, l6()).base(e.base())
        }),
        na.apply(e, arguments)
    )
}
function o6() {
    var e = Cv(mp())
    return (
        (e.copy = function () {
            return qa(e, o6()).constant(e.constant())
        }),
        na.apply(e, arguments)
    )
}
function Rv() {
    var e = Pv(mp())
    return (
        (e.copy = function () {
            return qa(e, Rv()).exponent(e.exponent())
        }),
        na.apply(e, arguments)
    )
}
function Iq() {
    return Rv.apply(null, arguments).exponent(0.5)
}
const h4 = Object.freeze(
    Object.defineProperty(
        {
            __proto__: null,
            scaleBand: js,
            scalePoint: ls,
            scaleIdentity: F5,
            scaleLinear: Ed,
            scaleLog: z5,
            scaleSymlog: V5,
            scaleOrdinal: gv,
            scaleImplicit: Wg,
            scalePow: _v,
            scaleSqrt: mG,
            scaleRadial: U5,
            scaleQuantile: W5,
            scaleQuantize: H5,
            scaleThreshold: G5,
            scaleTime: Mq,
            scaleUtc: Dq,
            scaleSequential: t6,
            scaleSequentialLog: r6,
            scaleSequentialPow: Iv,
            scaleSequentialSqrt: $q,
            scaleSequentialSymlog: n6,
            scaleSequentialQuantile: a6,
            scaleDiverging: i6,
            scaleDivergingLog: l6,
            scaleDivergingPow: Rv,
            scaleDivergingSqrt: Iq,
            scaleDivergingSymlog: o6,
            tickFormat: j5,
        },
        Symbol.toStringTag,
        { value: 'Module' }
    )
)
var ho = 1e9,
    Rq = {
        precision: 20,
        rounding: 4,
        toExpNeg: -7,
        toExpPos: 21,
        LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286',
    },
    jv,
    st = !0,
    qr = '[DecimalError] ',
    bi = qr + 'Invalid argument: ',
    Lv = qr + 'Exponent out of range: ',
    mo = Math.floor,
    ni = Math.pow,
    Lq = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
    wr,
    kt = 1e7,
    tt = 7,
    s6 = 9007199254740991,
    Md = mo(s6 / tt),
    ie = {}
ie.absoluteValue = ie.abs = function () {
    var e = new this.constructor(this)
    return e.s && (e.s = 1), e
}
ie.comparedTo = ie.cmp = function (e) {
    var t,
        r,
        n,
        a,
        l = this
    if (((e = new l.constructor(e)), l.s !== e.s)) return l.s || -e.s
    if (l.e !== e.e) return (l.e > e.e) ^ (l.s < 0) ? 1 : -1
    for (n = l.d.length, a = e.d.length, t = 0, r = n < a ? n : a; t < r; ++t)
        if (l.d[t] !== e.d[t]) return (l.d[t] > e.d[t]) ^ (l.s < 0) ? 1 : -1
    return n === a ? 0 : (n > a) ^ (l.s < 0) ? 1 : -1
}
ie.decimalPlaces = ie.dp = function () {
    var e = this,
        t = e.d.length - 1,
        r = (t - e.e) * tt
    if (((t = e.d[t]), t)) for (; t % 10 == 0; t /= 10) r--
    return r < 0 ? 0 : r
}
ie.dividedBy = ie.div = function (e) {
    return Un(this, new this.constructor(e))
}
ie.dividedToIntegerBy = ie.idiv = function (e) {
    var t = this,
        r = t.constructor
    return Ke(Un(t, new r(e), 0, 1), r.precision)
}
ie.equals = ie.eq = function (e) {
    return !this.cmp(e)
}
ie.exponent = function () {
    return bt(this)
}
ie.greaterThan = ie.gt = function (e) {
    return this.cmp(e) > 0
}
ie.greaterThanOrEqualTo = ie.gte = function (e) {
    return this.cmp(e) >= 0
}
ie.isInteger = ie.isint = function () {
    return this.e > this.d.length - 2
}
ie.isNegative = ie.isneg = function () {
    return this.s < 0
}
ie.isPositive = ie.ispos = function () {
    return this.s > 0
}
ie.isZero = function () {
    return this.s === 0
}
ie.lessThan = ie.lt = function (e) {
    return this.cmp(e) < 0
}
ie.lessThanOrEqualTo = ie.lte = function (e) {
    return this.cmp(e) < 1
}
ie.logarithm = ie.log = function (e) {
    var t,
        r = this,
        n = r.constructor,
        a = n.precision,
        l = a + 5
    if (e === void 0) e = new n(10)
    else if (((e = new n(e)), e.s < 1 || e.eq(wr))) throw Error(qr + 'NaN')
    if (r.s < 1) throw Error(qr + (r.s ? 'NaN' : '-Infinity'))
    return r.eq(wr)
        ? new n(0)
        : ((st = !1), (t = Un(Us(r, l), Us(e, l), l)), (st = !0), Ke(t, a))
}
ie.minus = ie.sub = function (e) {
    var t = this
    return (
        (e = new t.constructor(e)),
        t.s == e.s ? d6(t, e) : c6(t, ((e.s = -e.s), e))
    )
}
ie.modulo = ie.mod = function (e) {
    var t,
        r = this,
        n = r.constructor,
        a = n.precision
    if (((e = new n(e)), !e.s)) throw Error(qr + 'NaN')
    return r.s
        ? ((st = !1), (t = Un(r, e, 0, 1).times(e)), (st = !0), r.minus(t))
        : Ke(new n(r), a)
}
ie.naturalExponential = ie.exp = function () {
    return u6(this)
}
ie.naturalLogarithm = ie.ln = function () {
    return Us(this)
}
ie.negated = ie.neg = function () {
    var e = new this.constructor(this)
    return (e.s = -e.s || 0), e
}
ie.plus = ie.add = function (e) {
    var t = this
    return (
        (e = new t.constructor(e)),
        t.s == e.s ? c6(t, e) : d6(t, ((e.s = -e.s), e))
    )
}
ie.precision = ie.sd = function (e) {
    var t,
        r,
        n,
        a = this
    if (e !== void 0 && e !== !!e && e !== 1 && e !== 0) throw Error(bi + e)
    if (
        ((t = bt(a) + 1),
        (n = a.d.length - 1),
        (r = n * tt + 1),
        (n = a.d[n]),
        n)
    ) {
        for (; n % 10 == 0; n /= 10) r--
        for (n = a.d[0]; n >= 10; n /= 10) r++
    }
    return e && t > r ? t : r
}
ie.squareRoot = ie.sqrt = function () {
    var e,
        t,
        r,
        n,
        a,
        l,
        o,
        s = this,
        c = s.constructor
    if (s.s < 1) {
        if (!s.s) return new c(0)
        throw Error(qr + 'NaN')
    }
    for (
        e = bt(s),
            st = !1,
            a = Math.sqrt(+s),
            a == 0 || a == 1 / 0
                ? ((t = gn(s.d)),
                  (t.length + e) % 2 == 0 && (t += '0'),
                  (a = Math.sqrt(t)),
                  (e = mo((e + 1) / 2) - (e < 0 || e % 2)),
                  a == 1 / 0
                      ? (t = '5e' + e)
                      : ((t = a.toExponential()),
                        (t = t.slice(0, t.indexOf('e') + 1) + e)),
                  (n = new c(t)))
                : (n = new c(a.toString())),
            r = c.precision,
            a = o = r + 3;
        ;

    )
        if (
            ((l = n),
            (n = l.plus(Un(s, l, o + 2)).times(0.5)),
            gn(l.d).slice(0, o) === (t = gn(n.d)).slice(0, o))
        ) {
            if (((t = t.slice(o - 3, o + 1)), a == o && t == '4999')) {
                if ((Ke(l, r + 1, 0), l.times(l).eq(s))) {
                    n = l
                    break
                }
            } else if (t != '9999') break
            o += 4
        }
    return (st = !0), Ke(n, r)
}
ie.times = ie.mul = function (e) {
    var t,
        r,
        n,
        a,
        l,
        o,
        s,
        c,
        u,
        f = this,
        p = f.constructor,
        m = f.d,
        v = (e = new p(e)).d
    if (!f.s || !e.s) return new p(0)
    for (
        e.s *= f.s,
            r = f.e + e.e,
            c = m.length,
            u = v.length,
            c < u && ((l = m), (m = v), (v = l), (o = c), (c = u), (u = o)),
            l = [],
            o = c + u,
            n = o;
        n--;

    )
        l.push(0)
    for (n = u; --n >= 0; ) {
        for (t = 0, a = c + n; a > n; )
            (s = l[a] + v[n] * m[a - n - 1] + t),
                (l[a--] = s % kt | 0),
                (t = (s / kt) | 0)
        l[a] = (l[a] + t) % kt | 0
    }
    for (; !l[--o]; ) l.pop()
    return (
        t ? ++r : l.shift(), (e.d = l), (e.e = r), st ? Ke(e, p.precision) : e
    )
}
ie.toDecimalPlaces = ie.todp = function (e, t) {
    var r = this,
        n = r.constructor
    return (
        (r = new n(r)),
        e === void 0
            ? r
            : (Pn(e, 0, ho),
              t === void 0 ? (t = n.rounding) : Pn(t, 0, 8),
              Ke(r, e + bt(r) + 1, t))
    )
}
ie.toExponential = function (e, t) {
    var r,
        n = this,
        a = n.constructor
    return (
        e === void 0
            ? (r = Ai(n, !0))
            : (Pn(e, 0, ho),
              t === void 0 ? (t = a.rounding) : Pn(t, 0, 8),
              (n = Ke(new a(n), e + 1, t)),
              (r = Ai(n, !0, e + 1))),
        r
    )
}
ie.toFixed = function (e, t) {
    var r,
        n,
        a = this,
        l = a.constructor
    return e === void 0
        ? Ai(a)
        : (Pn(e, 0, ho),
          t === void 0 ? (t = l.rounding) : Pn(t, 0, 8),
          (n = Ke(new l(a), e + bt(a) + 1, t)),
          (r = Ai(n.abs(), !1, e + bt(n) + 1)),
          a.isneg() && !a.isZero() ? '-' + r : r)
}
ie.toInteger = ie.toint = function () {
    var e = this,
        t = e.constructor
    return Ke(new t(e), bt(e) + 1, t.rounding)
}
ie.toNumber = function () {
    return +this
}
ie.toPower = ie.pow = function (e) {
    var t,
        r,
        n,
        a,
        l,
        o,
        s = this,
        c = s.constructor,
        u = 12,
        f = +(e = new c(e))
    if (!e.s) return new c(wr)
    if (((s = new c(s)), !s.s)) {
        if (e.s < 1) throw Error(qr + 'Infinity')
        return s
    }
    if (s.eq(wr)) return s
    if (((n = c.precision), e.eq(wr))) return Ke(s, n)
    if (((t = e.e), (r = e.d.length - 1), (o = t >= r), (l = s.s), o)) {
        if ((r = f < 0 ? -f : f) <= s6) {
            for (
                a = new c(wr), t = Math.ceil(n / tt + 4), st = !1;
                r % 2 && ((a = a.times(s)), g4(a.d, t)),
                    (r = mo(r / 2)),
                    r !== 0;

            )
                (s = s.times(s)), g4(s.d, t)
            return (st = !0), e.s < 0 ? new c(wr).div(a) : Ke(a, n)
        }
    } else if (l < 0) throw Error(qr + 'NaN')
    return (
        (l = l < 0 && e.d[Math.max(t, r)] & 1 ? -1 : 1),
        (s.s = 1),
        (st = !1),
        (a = e.times(Us(s, n + u))),
        (st = !0),
        (a = u6(a)),
        (a.s = l),
        a
    )
}
ie.toPrecision = function (e, t) {
    var r,
        n,
        a = this,
        l = a.constructor
    return (
        e === void 0
            ? ((r = bt(a)), (n = Ai(a, r <= l.toExpNeg || r >= l.toExpPos)))
            : (Pn(e, 1, ho),
              t === void 0 ? (t = l.rounding) : Pn(t, 0, 8),
              (a = Ke(new l(a), e, t)),
              (r = bt(a)),
              (n = Ai(a, e <= r || r <= l.toExpNeg, e))),
        n
    )
}
ie.toSignificantDigits = ie.tosd = function (e, t) {
    var r = this,
        n = r.constructor
    return (
        e === void 0
            ? ((e = n.precision), (t = n.rounding))
            : (Pn(e, 1, ho), t === void 0 ? (t = n.rounding) : Pn(t, 0, 8)),
        Ke(new n(r), e, t)
    )
}
ie.toString =
    ie.valueOf =
    ie.val =
    ie.toJSON =
    ie[Symbol.for('nodejs.util.inspect.custom')] =
        function () {
            var e = this,
                t = bt(e),
                r = e.constructor
            return Ai(e, t <= r.toExpNeg || t >= r.toExpPos)
        }
function c6(e, t) {
    var r,
        n,
        a,
        l,
        o,
        s,
        c,
        u,
        f = e.constructor,
        p = f.precision
    if (!e.s || !t.s) return t.s || (t = new f(e)), st ? Ke(t, p) : t
    if (
        ((c = e.d),
        (u = t.d),
        (o = e.e),
        (a = t.e),
        (c = c.slice()),
        (l = o - a),
        l)
    ) {
        for (
            l < 0
                ? ((n = c), (l = -l), (s = u.length))
                : ((n = u), (a = o), (s = c.length)),
                o = Math.ceil(p / tt),
                s = o > s ? o + 1 : s + 1,
                l > s && ((l = s), (n.length = 1)),
                n.reverse();
            l--;

        )
            n.push(0)
        n.reverse()
    }
    for (
        s = c.length,
            l = u.length,
            s - l < 0 && ((l = s), (n = u), (u = c), (c = n)),
            r = 0;
        l;

    )
        (r = ((c[--l] = c[l] + u[l] + r) / kt) | 0), (c[l] %= kt)
    for (r && (c.unshift(r), ++a), s = c.length; c[--s] == 0; ) c.pop()
    return (t.d = c), (t.e = a), st ? Ke(t, p) : t
}
function Pn(e, t, r) {
    if (e !== ~~e || e < t || e > r) throw Error(bi + e)
}
function gn(e) {
    var t,
        r,
        n,
        a = e.length - 1,
        l = '',
        o = e[0]
    if (a > 0) {
        for (l += o, t = 1; t < a; t++)
            (n = e[t] + ''), (r = tt - n.length), r && (l += ca(r)), (l += n)
        ;(o = e[t]), (n = o + ''), (r = tt - n.length), r && (l += ca(r))
    } else if (o === 0) return '0'
    for (; o % 10 === 0; ) o /= 10
    return l + o
}
var Un = (function () {
    function e(n, a) {
        var l,
            o = 0,
            s = n.length
        for (n = n.slice(); s--; )
            (l = n[s] * a + o), (n[s] = l % kt | 0), (o = (l / kt) | 0)
        return o && n.unshift(o), n
    }
    function t(n, a, l, o) {
        var s, c
        if (l != o) c = l > o ? 1 : -1
        else
            for (s = c = 0; s < l; s++)
                if (n[s] != a[s]) {
                    c = n[s] > a[s] ? 1 : -1
                    break
                }
        return c
    }
    function r(n, a, l) {
        for (var o = 0; l--; )
            (n[l] -= o),
                (o = n[l] < a[l] ? 1 : 0),
                (n[l] = o * kt + n[l] - a[l])
        for (; !n[0] && n.length > 1; ) n.shift()
    }
    return function (n, a, l, o) {
        var s,
            c,
            u,
            f,
            p,
            m,
            v,
            b,
            h,
            g,
            x,
            w,
            y,
            N,
            S,
            P,
            E,
            k,
            M = n.constructor,
            A = n.s == a.s ? 1 : -1,
            _ = n.d,
            O = a.d
        if (!n.s) return new M(n)
        if (!a.s) throw Error(qr + 'Division by zero')
        for (
            c = n.e - a.e,
                E = O.length,
                S = _.length,
                v = new M(A),
                b = v.d = [],
                u = 0;
            O[u] == (_[u] || 0);

        )
            ++u
        if (
            (O[u] > (_[u] || 0) && --c,
            l == null
                ? (w = l = M.precision)
                : o
                ? (w = l + (bt(n) - bt(a)) + 1)
                : (w = l),
            w < 0)
        )
            return new M(0)
        if (((w = (w / tt + 2) | 0), (u = 0), E == 1))
            for (f = 0, O = O[0], w++; (u < S || f) && w--; u++)
                (y = f * kt + (_[u] || 0)),
                    (b[u] = (y / O) | 0),
                    (f = y % O | 0)
        else {
            for (
                f = (kt / (O[0] + 1)) | 0,
                    f > 1 &&
                        ((O = e(O, f)),
                        (_ = e(_, f)),
                        (E = O.length),
                        (S = _.length)),
                    N = E,
                    h = _.slice(0, E),
                    g = h.length;
                g < E;

            )
                h[g++] = 0
            ;(k = O.slice()), k.unshift(0), (P = O[0]), O[1] >= kt / 2 && ++P
            do
                (f = 0),
                    (s = t(O, h, E, g)),
                    s < 0
                        ? ((x = h[0]),
                          E != g && (x = x * kt + (h[1] || 0)),
                          (f = (x / P) | 0),
                          f > 1
                              ? (f >= kt && (f = kt - 1),
                                (p = e(O, f)),
                                (m = p.length),
                                (g = h.length),
                                (s = t(p, h, m, g)),
                                s == 1 && (f--, r(p, E < m ? k : O, m)))
                              : (f == 0 && (s = f = 1), (p = O.slice())),
                          (m = p.length),
                          m < g && p.unshift(0),
                          r(h, p, g),
                          s == -1 &&
                              ((g = h.length),
                              (s = t(O, h, E, g)),
                              s < 1 && (f++, r(h, E < g ? k : O, g))),
                          (g = h.length))
                        : s === 0 && (f++, (h = [0])),
                    (b[u++] = f),
                    s && h[0] ? (h[g++] = _[N] || 0) : ((h = [_[N]]), (g = 1))
            while ((N++ < S || h[0] !== void 0) && w--)
        }
        return b[0] || b.shift(), (v.e = c), Ke(v, o ? l + bt(v) + 1 : l)
    }
})()
function u6(e, t) {
    var r,
        n,
        a,
        l,
        o,
        s,
        c = 0,
        u = 0,
        f = e.constructor,
        p = f.precision
    if (bt(e) > 16) throw Error(Lv + bt(e))
    if (!e.s) return new f(wr)
    for (
        t == null ? ((st = !1), (s = p)) : (s = t), o = new f(0.03125);
        e.abs().gte(0.1);

    )
        (e = e.times(o)), (u += 5)
    for (
        n = ((Math.log(ni(2, u)) / Math.LN10) * 2 + 5) | 0,
            s += n,
            r = a = l = new f(wr),
            f.precision = s;
        ;

    ) {
        if (
            ((a = Ke(a.times(e), s)),
            (r = r.times(++c)),
            (o = l.plus(Un(a, r, s))),
            gn(o.d).slice(0, s) === gn(l.d).slice(0, s))
        ) {
            for (; u--; ) l = Ke(l.times(l), s)
            return (f.precision = p), t == null ? ((st = !0), Ke(l, p)) : l
        }
        l = o
    }
}
function bt(e) {
    for (var t = e.e * tt, r = e.d[0]; r >= 10; r /= 10) t++
    return t
}
function Uh(e, t, r) {
    if (t > e.LN10.sd())
        throw (
            ((st = !0),
            r && (e.precision = r),
            Error(qr + 'LN10 precision limit exceeded'))
        )
    return Ke(new e(e.LN10), t)
}
function ca(e) {
    for (var t = ''; e--; ) t += '0'
    return t
}
function Us(e, t) {
    var r,
        n,
        a,
        l,
        o,
        s,
        c,
        u,
        f,
        p = 1,
        m = 10,
        v = e,
        b = v.d,
        h = v.constructor,
        g = h.precision
    if (v.s < 1) throw Error(qr + (v.s ? 'NaN' : '-Infinity'))
    if (v.eq(wr)) return new h(0)
    if ((t == null ? ((st = !1), (u = g)) : (u = t), v.eq(10)))
        return t == null && (st = !0), Uh(h, u)
    if (
        ((u += m),
        (h.precision = u),
        (r = gn(b)),
        (n = r.charAt(0)),
        (l = bt(v)),
        Math.abs(l) < 15e14)
    ) {
        for (; (n < 7 && n != 1) || (n == 1 && r.charAt(1) > 3); )
            (v = v.times(e)), (r = gn(v.d)), (n = r.charAt(0)), p++
        ;(l = bt(v)),
            n > 1
                ? ((v = new h('0.' + r)), l++)
                : (v = new h(n + '.' + r.slice(1)))
    } else
        return (
            (c = Uh(h, u + 2, g).times(l + '')),
            (v = Us(new h(n + '.' + r.slice(1)), u - m).plus(c)),
            (h.precision = g),
            t == null ? ((st = !0), Ke(v, g)) : v
        )
    for (
        s = o = v = Un(v.minus(wr), v.plus(wr), u),
            f = Ke(v.times(v), u),
            a = 3;
        ;

    ) {
        if (
            ((o = Ke(o.times(f), u)),
            (c = s.plus(Un(o, new h(a), u))),
            gn(c.d).slice(0, u) === gn(s.d).slice(0, u))
        )
            return (
                (s = s.times(2)),
                l !== 0 && (s = s.plus(Uh(h, u + 2, g).times(l + ''))),
                (s = Un(s, new h(p), u)),
                (h.precision = g),
                t == null ? ((st = !0), Ke(s, g)) : s
            )
        ;(s = c), (a += 2)
    }
}
function m4(e, t) {
    var r, n, a
    for (
        (r = t.indexOf('.')) > -1 && (t = t.replace('.', '')),
            (n = t.search(/e/i)) > 0
                ? (r < 0 && (r = n),
                  (r += +t.slice(n + 1)),
                  (t = t.substring(0, n)))
                : r < 0 && (r = t.length),
            n = 0;
        t.charCodeAt(n) === 48;

    )
        ++n
    for (a = t.length; t.charCodeAt(a - 1) === 48; ) --a
    if (((t = t.slice(n, a)), t)) {
        if (
            ((a -= n),
            (r = r - n - 1),
            (e.e = mo(r / tt)),
            (e.d = []),
            (n = (r + 1) % tt),
            r < 0 && (n += tt),
            n < a)
        ) {
            for (n && e.d.push(+t.slice(0, n)), a -= tt; n < a; )
                e.d.push(+t.slice(n, (n += tt)))
            ;(t = t.slice(n)), (n = tt - t.length)
        } else n -= a
        for (; n--; ) t += '0'
        if ((e.d.push(+t), st && (e.e > Md || e.e < -Md))) throw Error(Lv + r)
    } else (e.s = 0), (e.e = 0), (e.d = [0])
    return e
}
function Ke(e, t, r) {
    var n,
        a,
        l,
        o,
        s,
        c,
        u,
        f,
        p = e.d
    for (o = 1, l = p[0]; l >= 10; l /= 10) o++
    if (((n = t - o), n < 0)) (n += tt), (a = t), (u = p[(f = 0)])
    else {
        if (((f = Math.ceil((n + 1) / tt)), (l = p.length), f >= l)) return e
        for (u = l = p[f], o = 1; l >= 10; l /= 10) o++
        ;(n %= tt), (a = n - tt + o)
    }
    if (
        (r !== void 0 &&
            ((l = ni(10, o - a - 1)),
            (s = (u / l) % 10 | 0),
            (c = t < 0 || p[f + 1] !== void 0 || u % l),
            (c =
                r < 4
                    ? (s || c) && (r == 0 || r == (e.s < 0 ? 3 : 2))
                    : s > 5 ||
                      (s == 5 &&
                          (r == 4 ||
                              c ||
                              (r == 6 &&
                                  (n > 0
                                      ? a > 0
                                          ? u / ni(10, o - a)
                                          : 0
                                      : p[f - 1]) %
                                      10 &
                                      1) ||
                              r == (e.s < 0 ? 8 : 7))))),
        t < 1 || !p[0])
    )
        return (
            c
                ? ((l = bt(e)),
                  (p.length = 1),
                  (t = t - l - 1),
                  (p[0] = ni(10, (tt - (t % tt)) % tt)),
                  (e.e = mo(-t / tt) || 0))
                : ((p.length = 1), (p[0] = e.e = e.s = 0)),
            e
        )
    if (
        (n == 0
            ? ((p.length = f), (l = 1), f--)
            : ((p.length = f + 1),
              (l = ni(10, tt - n)),
              (p[f] = a > 0 ? ((u / ni(10, o - a)) % ni(10, a) | 0) * l : 0)),
        c)
    )
        for (;;)
            if (f == 0) {
                ;(p[0] += l) == kt && ((p[0] = 1), ++e.e)
                break
            } else {
                if (((p[f] += l), p[f] != kt)) break
                ;(p[f--] = 0), (l = 1)
            }
    for (n = p.length; p[--n] === 0; ) p.pop()
    if (st && (e.e > Md || e.e < -Md)) throw Error(Lv + bt(e))
    return e
}
function d6(e, t) {
    var r,
        n,
        a,
        l,
        o,
        s,
        c,
        u,
        f,
        p,
        m = e.constructor,
        v = m.precision
    if (!e.s || !t.s)
        return t.s ? (t.s = -t.s) : (t = new m(e)), st ? Ke(t, v) : t
    if (
        ((c = e.d),
        (p = t.d),
        (n = t.e),
        (u = e.e),
        (c = c.slice()),
        (o = u - n),
        o)
    ) {
        for (
            f = o < 0,
                f
                    ? ((r = c), (o = -o), (s = p.length))
                    : ((r = p), (n = u), (s = c.length)),
                a = Math.max(Math.ceil(v / tt), s) + 2,
                o > a && ((o = a), (r.length = 1)),
                r.reverse(),
                a = o;
            a--;

        )
            r.push(0)
        r.reverse()
    } else {
        for (
            a = c.length, s = p.length, f = a < s, f && (s = a), a = 0;
            a < s;
            a++
        )
            if (c[a] != p[a]) {
                f = c[a] < p[a]
                break
            }
        o = 0
    }
    for (
        f && ((r = c), (c = p), (p = r), (t.s = -t.s)),
            s = c.length,
            a = p.length - s;
        a > 0;
        --a
    )
        c[s++] = 0
    for (a = p.length; a > o; ) {
        if (c[--a] < p[a]) {
            for (l = a; l && c[--l] === 0; ) c[l] = kt - 1
            --c[l], (c[a] += kt)
        }
        c[a] -= p[a]
    }
    for (; c[--s] === 0; ) c.pop()
    for (; c[0] === 0; c.shift()) --n
    return c[0] ? ((t.d = c), (t.e = n), st ? Ke(t, v) : t) : new m(0)
}
function Ai(e, t, r) {
    var n,
        a = bt(e),
        l = gn(e.d),
        o = l.length
    return (
        t
            ? (r && (n = r - o) > 0
                  ? (l = l.charAt(0) + '.' + l.slice(1) + ca(n))
                  : o > 1 && (l = l.charAt(0) + '.' + l.slice(1)),
              (l = l + (a < 0 ? 'e' : 'e+') + a))
            : a < 0
            ? ((l = '0.' + ca(-a - 1) + l),
              r && (n = r - o) > 0 && (l += ca(n)))
            : a >= o
            ? ((l += ca(a + 1 - o)),
              r && (n = r - a - 1) > 0 && (l = l + '.' + ca(n)))
            : ((n = a + 1) < o && (l = l.slice(0, n) + '.' + l.slice(n)),
              r &&
                  (n = r - o) > 0 &&
                  (a + 1 === o && (l += '.'), (l += ca(n)))),
        e.s < 0 ? '-' + l : l
    )
}
function g4(e, t) {
    if (e.length > t) return (e.length = t), !0
}
function f6(e) {
    var t, r, n
    function a(l) {
        var o = this
        if (!(o instanceof a)) return new a(l)
        if (((o.constructor = a), l instanceof a)) {
            ;(o.s = l.s), (o.e = l.e), (o.d = (l = l.d) ? l.slice() : l)
            return
        }
        if (typeof l == 'number') {
            if (l * 0 !== 0) throw Error(bi + l)
            if (l > 0) o.s = 1
            else if (l < 0) (l = -l), (o.s = -1)
            else {
                ;(o.s = 0), (o.e = 0), (o.d = [0])
                return
            }
            if (l === ~~l && l < 1e7) {
                ;(o.e = 0), (o.d = [l])
                return
            }
            return m4(o, l.toString())
        } else if (typeof l != 'string') throw Error(bi + l)
        if (
            (l.charCodeAt(0) === 45
                ? ((l = l.slice(1)), (o.s = -1))
                : (o.s = 1),
            Lq.test(l))
        )
            m4(o, l)
        else throw Error(bi + l)
    }
    if (
        ((a.prototype = ie),
        (a.ROUND_UP = 0),
        (a.ROUND_DOWN = 1),
        (a.ROUND_CEIL = 2),
        (a.ROUND_FLOOR = 3),
        (a.ROUND_HALF_UP = 4),
        (a.ROUND_HALF_DOWN = 5),
        (a.ROUND_HALF_EVEN = 6),
        (a.ROUND_HALF_CEIL = 7),
        (a.ROUND_HALF_FLOOR = 8),
        (a.clone = f6),
        (a.config = a.set = jq),
        e === void 0 && (e = {}),
        e)
    )
        for (
            n = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'],
                t = 0;
            t < n.length;

        )
            e.hasOwnProperty((r = n[t++])) || (e[r] = this[r])
    return a.config(e), a
}
function jq(e) {
    if (!e || typeof e != 'object') throw Error(qr + 'Object expected')
    var t,
        r,
        n,
        a = [
            'precision',
            1,
            ho,
            'rounding',
            0,
            8,
            'toExpNeg',
            -1 / 0,
            0,
            'toExpPos',
            0,
            1 / 0,
        ]
    for (t = 0; t < a.length; t += 3)
        if ((n = e[(r = a[t])]) !== void 0)
            if (mo(n) === n && n >= a[t + 1] && n <= a[t + 2]) this[r] = n
            else throw Error(bi + r + ': ' + n)
    if ((n = e[(r = 'LN10')]) !== void 0)
        if (n == Math.LN10) this[r] = new this(n)
        else throw Error(bi + r + ': ' + n)
    return this
}
var jv = f6(Rq)
wr = new jv(1)
const We = jv
function Fq(e) {
    return Uq(e) || Vq(e) || zq(e) || Bq()
}
function Bq() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function zq(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Kg(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Kg(e, t)
    }
}
function Vq(e) {
    if (typeof Symbol < 'u' && Symbol.iterator in Object(e))
        return Array.from(e)
}
function Uq(e) {
    if (Array.isArray(e)) return Kg(e)
}
function Kg(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
var Wq = function (t) {
        return t
    },
    p6 = { '@@functional/placeholder': !0 },
    h6 = function (t) {
        return t === p6
    },
    v4 = function (t) {
        return function r() {
            return arguments.length === 0 ||
                (arguments.length === 1 &&
                    h6(arguments.length <= 0 ? void 0 : arguments[0]))
                ? r
                : t.apply(void 0, arguments)
        }
    },
    Hq = function e(t, r) {
        return t === 1
            ? r
            : v4(function () {
                  for (
                      var n = arguments.length, a = new Array(n), l = 0;
                      l < n;
                      l++
                  )
                      a[l] = arguments[l]
                  var o = a.filter(function (s) {
                      return s !== p6
                  }).length
                  return o >= t
                      ? r.apply(void 0, a)
                      : e(
                            t - o,
                            v4(function () {
                                for (
                                    var s = arguments.length,
                                        c = new Array(s),
                                        u = 0;
                                    u < s;
                                    u++
                                )
                                    c[u] = arguments[u]
                                var f = a.map(function (p) {
                                    return h6(p) ? c.shift() : p
                                })
                                return r.apply(void 0, Fq(f).concat(c))
                            })
                        )
              })
    },
    gp = function (t) {
        return Hq(t.length, t)
    },
    Yg = function (t, r) {
        for (var n = [], a = t; a < r; ++a) n[a - t] = a
        return n
    },
    Gq = gp(function (e, t) {
        return Array.isArray(t)
            ? t.map(e)
            : Object.keys(t)
                  .map(function (r) {
                      return t[r]
                  })
                  .map(e)
    }),
    qq = function () {
        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
            r[n] = arguments[n]
        if (!r.length) return Wq
        var a = r.reverse(),
            l = a[0],
            o = a.slice(1)
        return function () {
            return o.reduce(function (s, c) {
                return c(s)
            }, l.apply(void 0, arguments))
        }
    },
    Xg = function (t) {
        return Array.isArray(t) ? t.reverse() : t.split('').reverse.join('')
    },
    m6 = function (t) {
        var r = null,
            n = null
        return function () {
            for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
                l[o] = arguments[o]
            return (
                (r &&
                    l.every(function (s, c) {
                        return s === r[c]
                    })) ||
                    ((r = l), (n = t.apply(void 0, l))),
                n
            )
        }
    }
function Kq(e) {
    var t
    return (
        e === 0
            ? (t = 1)
            : (t = Math.floor(new We(e).abs().log(10).toNumber()) + 1),
        t
    )
}
function Yq(e, t, r) {
    for (var n = new We(e), a = 0, l = []; n.lt(t) && a < 1e5; )
        l.push(n.toNumber()), (n = n.add(r)), a++
    return l
}
var Xq = gp(function (e, t, r) {
        var n = +e,
            a = +t
        return n + r * (a - n)
    }),
    Zq = gp(function (e, t, r) {
        var n = t - +e
        return (n = n || 1 / 0), (r - e) / n
    }),
    Jq = gp(function (e, t, r) {
        var n = t - +e
        return (n = n || 1 / 0), Math.max(0, Math.min(1, (r - e) / n))
    })
const vp = {
    rangeStep: Yq,
    getDigitCount: Kq,
    interpolateNumber: Xq,
    uninterpolateNumber: Zq,
    uninterpolateTruncation: Jq,
}
function Zg(e) {
    return tK(e) || eK(e) || g6(e) || Qq()
}
function Qq() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function eK(e) {
    if (typeof Symbol < 'u' && Symbol.iterator in Object(e))
        return Array.from(e)
}
function tK(e) {
    if (Array.isArray(e)) return Jg(e)
}
function Ws(e, t) {
    return aK(e) || nK(e, t) || g6(e, t) || rK()
}
function rK() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function g6(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Jg(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Jg(e, t)
    }
}
function Jg(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function nK(e, t) {
    if (!(typeof Symbol > 'u' || !(Symbol.iterator in Object(e)))) {
        var r = [],
            n = !0,
            a = !1,
            l = void 0
        try {
            for (
                var o = e[Symbol.iterator](), s;
                !(n = (s = o.next()).done) &&
                (r.push(s.value), !(t && r.length === t));
                n = !0
            );
        } catch (c) {
            ;(a = !0), (l = c)
        } finally {
            try {
                !n && o.return != null && o.return()
            } finally {
                if (a) throw l
            }
        }
        return r
    }
}
function aK(e) {
    if (Array.isArray(e)) return e
}
function v6(e) {
    var t = Ws(e, 2),
        r = t[0],
        n = t[1],
        a = r,
        l = n
    return r > n && ((a = n), (l = r)), [a, l]
}
function y6(e, t, r) {
    if (e.lte(0)) return new We(0)
    var n = vp.getDigitCount(e.toNumber()),
        a = new We(10).pow(n),
        l = e.div(a),
        o = n !== 1 ? 0.05 : 0.1,
        s = new We(Math.ceil(l.div(o).toNumber())).add(r).mul(o),
        c = s.mul(a)
    return t ? c : new We(Math.ceil(c))
}
function iK(e, t, r) {
    var n = 1,
        a = new We(e)
    if (!a.isint() && r) {
        var l = Math.abs(e)
        l < 1
            ? ((n = new We(10).pow(vp.getDigitCount(e) - 1)),
              (a = new We(Math.floor(a.div(n).toNumber())).mul(n)))
            : l > 1 && (a = new We(Math.floor(e)))
    } else
        e === 0
            ? (a = new We(Math.floor((t - 1) / 2)))
            : r || (a = new We(Math.floor(e)))
    var o = Math.floor((t - 1) / 2),
        s = qq(
            Gq(function (c) {
                return a.add(new We(c - o).mul(n)).toNumber()
            }),
            Yg
        )
    return s(0, t)
}
function b6(e, t, r, n) {
    var a = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0
    if (!Number.isFinite((t - e) / (r - 1)))
        return { step: new We(0), tickMin: new We(0), tickMax: new We(0) }
    var l = y6(new We(t).sub(e).div(r - 1), n, a),
        o
    e <= 0 && t >= 0
        ? (o = new We(0))
        : ((o = new We(e).add(t).div(2)), (o = o.sub(new We(o).mod(l))))
    var s = Math.ceil(o.sub(e).div(l).toNumber()),
        c = Math.ceil(new We(t).sub(o).div(l).toNumber()),
        u = s + c + 1
    return u > r
        ? b6(e, t, r, n, a + 1)
        : (u < r &&
              ((c = t > 0 ? c + (r - u) : c), (s = t > 0 ? s : s + (r - u))),
          {
              step: l,
              tickMin: o.sub(new We(s).mul(l)),
              tickMax: o.add(new We(c).mul(l)),
          })
}
function lK(e) {
    var t = Ws(e, 2),
        r = t[0],
        n = t[1],
        a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 6,
        l = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
        o = Math.max(a, 2),
        s = v6([r, n]),
        c = Ws(s, 2),
        u = c[0],
        f = c[1]
    if (u === -1 / 0 || f === 1 / 0) {
        var p =
            f === 1 / 0
                ? [u].concat(
                      Zg(
                          Yg(0, a - 1).map(function () {
                              return 1 / 0
                          })
                      )
                  )
                : [].concat(
                      Zg(
                          Yg(0, a - 1).map(function () {
                              return -1 / 0
                          })
                      ),
                      [f]
                  )
        return r > n ? Xg(p) : p
    }
    if (u === f) return iK(u, a, l)
    var m = b6(u, f, o, l),
        v = m.step,
        b = m.tickMin,
        h = m.tickMax,
        g = vp.rangeStep(b, h.add(new We(0.1).mul(v)), v)
    return r > n ? Xg(g) : g
}
function oK(e, t) {
    var r = Ws(e, 2),
        n = r[0],
        a = r[1],
        l = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
        o = v6([n, a]),
        s = Ws(o, 2),
        c = s[0],
        u = s[1]
    if (c === -1 / 0 || u === 1 / 0) return [n, a]
    if (c === u) return [c]
    var f = Math.max(t, 2),
        p = y6(new We(u).sub(c).div(f - 1), l, 0),
        m = [].concat(
            Zg(vp.rangeStep(new We(c), new We(u).sub(new We(0.99).mul(p)), p)),
            [u]
        )
    return n > a ? Xg(m) : m
}
var sK = m6(lK),
    cK = m6(oK),
    uK = [
        'offset',
        'layout',
        'width',
        'dataKey',
        'data',
        'dataPointFormatter',
        'xAxis',
        'yAxis',
    ]
function dK(e, t) {
    return mK(e) || hK(e, t) || pK(e, t) || fK()
}
function fK() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function pK(e, t) {
    if (!!e) {
        if (typeof e == 'string') return y4(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return y4(e, t)
    }
}
function y4(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function hK(e, t) {
    var r =
        e == null
            ? null
            : (typeof Symbol < 'u' && e[Symbol.iterator]) || e['@@iterator']
    if (r != null) {
        var n,
            a,
            l,
            o,
            s = [],
            c = !0,
            u = !1
        try {
            if (((l = (r = r.call(e)).next), t === 0)) {
                if (Object(r) !== r) return
                c = !1
            } else
                for (
                    ;
                    !(c = (n = l.call(r)).done) &&
                    (s.push(n.value), s.length !== t);
                    c = !0
                );
        } catch (f) {
            ;(u = !0), (a = f)
        } finally {
            try {
                if (
                    !c &&
                    r.return != null &&
                    ((o = r.return()), Object(o) !== o)
                )
                    return
            } finally {
                if (u) throw a
            }
        }
        return s
    }
}
function mK(e) {
    if (Array.isArray(e)) return e
}
function gK(e, t) {
    if (e == null) return {}
    var r = vK(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function vK(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function bc(e) {
    var t = e.offset,
        r = e.layout,
        n = e.width,
        a = e.dataKey,
        l = e.data,
        o = e.dataPointFormatter,
        s = e.xAxis,
        c = e.yAxis,
        u = gK(e, uK),
        f = ve(u),
        p = l.map(function (m, v) {
            var b = o(m, a),
                h = b.x,
                g = b.y,
                x = b.value,
                w = b.errorVal
            if (!w) return null
            var y = [],
                N,
                S
            if (Array.isArray(w)) {
                var P = dK(w, 2)
                ;(N = P[0]), (S = P[1])
            } else N = S = w
            if (r === 'vertical') {
                var E = s.scale,
                    k = g + t,
                    M = k + n,
                    A = k - n,
                    _ = E(x - N),
                    O = E(x + S)
                y.push({ x1: O, y1: M, x2: O, y2: A }),
                    y.push({ x1: _, y1: k, x2: O, y2: k }),
                    y.push({ x1: _, y1: M, x2: _, y2: A })
            } else if (r === 'horizontal') {
                var T = c.scale,
                    $ = h + t,
                    I = $ - n,
                    j = $ + n,
                    L = T(x - N),
                    D = T(x + S)
                y.push({ x1: I, y1: D, x2: j, y2: D }),
                    y.push({ x1: $, y1: L, x2: $, y2: D }),
                    y.push({ x1: I, y1: L, x2: j, y2: L })
            }
            return i(
                Be,
                {
                    className: 'recharts-errorBar',
                    ...f,
                    children: y.map(function (R, V) {
                        return C.exports.createElement('line', {
                            ...R,
                            key: 'line-'.concat(V),
                        })
                    }),
                },
                'bar-'.concat(v)
            )
        })
    return i(Be, { className: 'recharts-errorBars', children: p })
}
bc.defaultProps = {
    stroke: 'black',
    strokeWidth: 1.5,
    width: 5,
    offset: 0,
    layout: 'horizontal',
}
bc.displayName = 'ErrorBar'
function Hs(e) {
    return (
        (Hs =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Hs(e)
    )
}
function b4(e) {
    return wK(e) || xK(e) || bK(e) || yK()
}
function yK() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function bK(e, t) {
    if (!!e) {
        if (typeof e == 'string') return Qg(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return Qg(e, t)
    }
}
function xK(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function wK(e) {
    if (Array.isArray(e)) return Qg(e)
}
function Qg(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function x4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function er(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? x4(Object(r), !0).forEach(function (n) {
                  ml(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : x4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function ml(e, t, r) {
    return (
        (t = NK(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function NK(e) {
    var t = SK(e, 'string')
    return Hs(t) === 'symbol' ? t : String(t)
}
function SK(e, t) {
    if (Hs(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Hs(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function Nt(e, t, r) {
    return ce(e) || ce(t) ? r : Ct(t) ? hr(e, t, r) : pe(t) ? t(e) : r
}
function Dd(e, t, r, n) {
    var a = oH(e, function (s) {
        return Nt(s, t)
    })
    if (r === 'number') {
        var l = a.filter(function (s) {
            return J(s) || parseFloat(s)
        })
        return l.length ? [cp(l), sp(l)] : [1 / 0, -1 / 0]
    }
    var o = n
        ? a.filter(function (s) {
              return !ce(s)
          })
        : a
    return o.map(function (s) {
        return Ct(s) || s instanceof Date ? s : ''
    })
}
var CK = function (t) {
        var r,
            n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : [],
            a = arguments.length > 2 ? arguments[2] : void 0,
            l = arguments.length > 3 ? arguments[3] : void 0,
            o = -1,
            s =
                (r = n == null ? void 0 : n.length) !== null && r !== void 0
                    ? r
                    : 0
        if (s <= 1) return 0
        if (
            l &&
            l.axisType === 'angleAxis' &&
            Math.abs(Math.abs(l.range[1] - l.range[0]) - 360) <= 1e-6
        )
            for (var c = l.range, u = 0; u < s; u++) {
                var f = u > 0 ? a[u - 1].coordinate : a[s - 1].coordinate,
                    p = a[u].coordinate,
                    m = u >= s - 1 ? a[0].coordinate : a[u + 1].coordinate,
                    v = void 0
                if (Yt(p - f) !== Yt(m - p)) {
                    var b = []
                    if (Yt(m - p) === Yt(c[1] - c[0])) {
                        v = m
                        var h = p + c[1] - c[0]
                        ;(b[0] = Math.min(h, (h + f) / 2)),
                            (b[1] = Math.max(h, (h + f) / 2))
                    } else {
                        v = f
                        var g = m + c[1] - c[0]
                        ;(b[0] = Math.min(p, (g + p) / 2)),
                            (b[1] = Math.max(p, (g + p) / 2))
                    }
                    var x = [Math.min(p, (v + p) / 2), Math.max(p, (v + p) / 2)]
                    if ((t > x[0] && t <= x[1]) || (t >= b[0] && t <= b[1])) {
                        o = a[u].index
                        break
                    }
                } else {
                    var w = Math.min(f, m),
                        y = Math.max(f, m)
                    if (t > (w + p) / 2 && t <= (y + p) / 2) {
                        o = a[u].index
                        break
                    }
                }
            }
        else
            for (var N = 0; N < s; N++)
                if (
                    (N === 0 &&
                        t <= (n[N].coordinate + n[N + 1].coordinate) / 2) ||
                    (N > 0 &&
                        N < s - 1 &&
                        t > (n[N].coordinate + n[N - 1].coordinate) / 2 &&
                        t <= (n[N].coordinate + n[N + 1].coordinate) / 2) ||
                    (N === s - 1 &&
                        t > (n[N].coordinate + n[N - 1].coordinate) / 2)
                ) {
                    o = n[N].index
                    break
                }
        return o
    },
    Fv = function (t) {
        var r = t,
            n = r.type.displayName,
            a = t.props,
            l = a.stroke,
            o = a.fill,
            s
        switch (n) {
            case 'Line':
                s = l
                break
            case 'Area':
            case 'Radar':
                s = l && l !== 'none' ? l : o
                break
            default:
                s = o
                break
        }
        return s
    },
    x6 = function (t) {
        var r = t.children,
            n = t.formattedGraphicalItems,
            a = t.legendWidth,
            l = t.legendContent,
            o = Ln(r, Is)
        if (!o) return null
        var s
        return (
            o.props && o.props.payload
                ? (s = o.props && o.props.payload)
                : l === 'children'
                ? (s = (n || []).reduce(function (c, u) {
                      var f = u.item,
                          p = u.props,
                          m = p.sectors || p.data || []
                      return c.concat(
                          m.map(function (v) {
                              return {
                                  type: o.props.iconType || f.props.legendType,
                                  value: v.name,
                                  color: v.fill,
                                  payload: v,
                              }
                          })
                      )
                  }, []))
                : (s = (n || []).map(function (c) {
                      var u = c.item,
                          f = u.props,
                          p = f.dataKey,
                          m = f.name,
                          v = f.legendType,
                          b = f.hide
                      return {
                          inactive: b,
                          dataKey: p,
                          type: o.props.iconType || v || 'square',
                          color: Fv(u),
                          value: m || p,
                          payload: u.props,
                      }
                  })),
            er(
                er(er({}, o.props), Is.getWithHeight(o, a)),
                {},
                { payload: s, item: o }
            )
        )
    },
    PK = function (t) {
        var r = t.barSize,
            n = t.stackGroups,
            a = n === void 0 ? {} : n
        if (!a) return {}
        for (var l = {}, o = Object.keys(a), s = 0, c = o.length; s < c; s++)
            for (
                var u = a[o[s]].stackGroups,
                    f = Object.keys(u),
                    p = 0,
                    m = f.length;
                p < m;
                p++
            ) {
                var v = u[f[p]],
                    b = v.items,
                    h = v.cateAxisId,
                    g = b.filter(function (y) {
                        return Oa(y.type).indexOf('Bar') >= 0
                    })
                if (g && g.length) {
                    var x = g[0].props.barSize,
                        w = g[0].props[h]
                    l[w] || (l[w] = []),
                        l[w].push({
                            item: g[0],
                            stackList: g.slice(1),
                            barSize: ce(x) ? r : x,
                        })
                }
            }
        return l
    },
    _K = function (t) {
        var r = t.barGap,
            n = t.barCategoryGap,
            a = t.bandSize,
            l = t.sizeList,
            o = l === void 0 ? [] : l,
            s = t.maxBarSize,
            c = o.length
        if (c < 1) return null
        var u = sr(r, a, 0, !0),
            f
        if (o[0].barSize === +o[0].barSize) {
            var p = !1,
                m = a / c,
                v = o.reduce(function (y, N) {
                    return y + N.barSize || 0
                }, 0)
            ;(v += (c - 1) * u),
                v >= a && ((v -= (c - 1) * u), (u = 0)),
                v >= a && m > 0 && ((p = !0), (m *= 0.9), (v = c * m))
            var b = ((a - v) / 2) >> 0,
                h = { offset: b - u, size: 0 }
            f = o.reduce(function (y, N) {
                var S = [].concat(b4(y), [
                    {
                        item: N.item,
                        position: {
                            offset: h.offset + h.size + u,
                            size: p ? m : N.barSize,
                        },
                    },
                ])
                return (
                    (h = S[S.length - 1].position),
                    N.stackList &&
                        N.stackList.length &&
                        N.stackList.forEach(function (P) {
                            S.push({ item: P, position: h })
                        }),
                    S
                )
            }, [])
        } else {
            var g = sr(n, a, 0, !0)
            a - 2 * g - (c - 1) * u <= 0 && (u = 0)
            var x = (a - 2 * g - (c - 1) * u) / c
            x > 1 && (x >>= 0)
            var w = s === +s ? Math.min(x, s) : x
            f = o.reduce(function (y, N, S) {
                var P = [].concat(b4(y), [
                    {
                        item: N.item,
                        position: {
                            offset: g + (x + u) * S + (x - w) / 2,
                            size: w,
                        },
                    },
                ])
                return (
                    N.stackList &&
                        N.stackList.length &&
                        N.stackList.forEach(function (E) {
                            P.push({
                                item: E,
                                position: P[P.length - 1].position,
                            })
                        }),
                    P
                )
            }, [])
        }
        return f
    },
    AK = function (t, r, n, a) {
        var l = n.children,
            o = n.width,
            s = n.margin,
            c = o - (s.left || 0) - (s.right || 0),
            u = x6({ children: l, legendWidth: c }),
            f = t
        if (u) {
            var p = a || {},
                m = u.align,
                v = u.verticalAlign,
                b = u.layout
            ;(b === 'vertical' || (b === 'horizontal' && v === 'middle')) &&
                J(t[m]) &&
                (f = er(er({}, t), {}, ml({}, m, f[m] + (p.width || 0)))),
                (b === 'horizontal' || (b === 'vertical' && m === 'center')) &&
                    J(t[v]) &&
                    (f = er(er({}, t), {}, ml({}, v, f[v] + (p.height || 0))))
        }
        return f
    },
    EK = function (t, r, n) {
        return ce(r)
            ? !0
            : t === 'horizontal'
            ? r === 'yAxis'
            : t === 'vertical' || n === 'x'
            ? r === 'xAxis'
            : n === 'y'
            ? r === 'yAxis'
            : !0
    },
    w6 = function (t, r, n, a, l) {
        var o = r.props.children,
            s = Cr(o, bc).filter(function (u) {
                return EK(a, l, u.props.direction)
            })
        if (s && s.length) {
            var c = s.map(function (u) {
                return u.props.dataKey
            })
            return t.reduce(
                function (u, f) {
                    var p = Nt(f, n, 0),
                        m = Fe(p) ? [cp(p), sp(p)] : [p, p],
                        v = c.reduce(
                            function (b, h) {
                                var g = Nt(f, h, 0),
                                    x = m[0] - Math.abs(Fe(g) ? g[0] : g),
                                    w = m[1] + Math.abs(Fe(g) ? g[1] : g)
                                return [Math.min(x, b[0]), Math.max(w, b[1])]
                            },
                            [1 / 0, -1 / 0]
                        )
                    return [Math.min(v[0], u[0]), Math.max(v[1], u[1])]
                },
                [1 / 0, -1 / 0]
            )
        }
        return null
    },
    kK = function (t, r, n, a, l) {
        var o = r
            .map(function (s) {
                return w6(t, s, n, l, a)
            })
            .filter(function (s) {
                return !ce(s)
            })
        return o && o.length
            ? o.reduce(
                  function (s, c) {
                      return [Math.min(s[0], c[0]), Math.max(s[1], c[1])]
                  },
                  [1 / 0, -1 / 0]
              )
            : null
    },
    N6 = function (t, r, n, a, l) {
        var o = r.map(function (c) {
            var u = c.props.dataKey
            return (n === 'number' && u && w6(t, c, u, a)) || Dd(t, u, n, l)
        })
        if (n === 'number')
            return o.reduce(
                function (c, u) {
                    return [Math.min(c[0], u[0]), Math.max(c[1], u[1])]
                },
                [1 / 0, -1 / 0]
            )
        var s = {}
        return o.reduce(function (c, u) {
            for (var f = 0, p = u.length; f < p; f++)
                s[u[f]] || ((s[u[f]] = !0), c.push(u[f]))
            return c
        }, [])
    },
    S6 = function (t, r) {
        return (
            (t === 'horizontal' && r === 'xAxis') ||
            (t === 'vertical' && r === 'yAxis') ||
            (t === 'centric' && r === 'angleAxis') ||
            (t === 'radial' && r === 'radiusAxis')
        )
    },
    w4 = function (t, r, n) {
        var a,
            l,
            o = t.map(function (s) {
                return (
                    s.coordinate === r && (a = !0),
                    s.coordinate === n && (l = !0),
                    s.coordinate
                )
            })
        return a || o.push(r), l || o.push(n), o
    },
    la = function (t, r, n) {
        if (!t) return null
        var a = t.scale,
            l = t.duplicateDomain,
            o = t.type,
            s = t.range,
            c = t.realScaleType === 'scaleBand' ? a.bandwidth() / 2 : 2,
            u =
                (r || n) && o === 'category' && a.bandwidth
                    ? a.bandwidth() / c
                    : 0
        return (
            (u = t.axisType === 'angleAxis' ? Yt(s[0] - s[1]) * 2 * u : u),
            r && (t.ticks || t.niceTicks)
                ? (t.ticks || t.niceTicks).map(function (f) {
                      var p = l ? l.indexOf(f) : f
                      return { coordinate: a(p) + u, value: f, offset: u }
                  })
                : t.isCategorical && t.categoricalDomain
                ? t.categoricalDomain.map(function (f, p) {
                      return {
                          coordinate: a(f) + u,
                          value: f,
                          index: p,
                          offset: u,
                      }
                  })
                : a.ticks && !n
                ? a.ticks(t.tickCount).map(function (f) {
                      return { coordinate: a(f) + u, value: f, offset: u }
                  })
                : a.domain().map(function (f, p) {
                      return {
                          coordinate: a(f) + u,
                          value: l ? l[f] : f,
                          index: p,
                          offset: u,
                      }
                  })
        )
    },
    Zc = function (t, r, n) {
        var a
        return (
            pe(n) ? (a = n) : pe(r) && (a = r),
            pe(t) || a
                ? function (l, o, s, c) {
                      pe(t) && t(l, o, s, c), pe(a) && a(l, o, s, c)
                  }
                : null
        )
    },
    C6 = function (t, r, n) {
        var a = t.scale,
            l = t.type,
            o = t.layout,
            s = t.axisType
        if (a === 'auto')
            return o === 'radial' && s === 'radiusAxis'
                ? { scale: js(), realScaleType: 'band' }
                : o === 'radial' && s === 'angleAxis'
                ? { scale: Ed(), realScaleType: 'linear' }
                : l === 'category' &&
                  r &&
                  (r.indexOf('LineChart') >= 0 ||
                      r.indexOf('AreaChart') >= 0 ||
                      (r.indexOf('ComposedChart') >= 0 && !n))
                ? { scale: ls(), realScaleType: 'point' }
                : l === 'category'
                ? { scale: js(), realScaleType: 'band' }
                : { scale: Ed(), realScaleType: 'linear' }
        if (dc(a)) {
            var c = 'scale'.concat(Qf(a))
            return {
                scale: (h4[c] || ls)(),
                realScaleType: h4[c] ? c : 'point',
            }
        }
        return pe(a) ? { scale: a } : { scale: ls(), realScaleType: 'point' }
    },
    N4 = 1e-4,
    P6 = function (t) {
        var r = t.domain()
        if (!(!r || r.length <= 2)) {
            var n = r.length,
                a = t.range(),
                l = Math.min(a[0], a[1]) - N4,
                o = Math.max(a[0], a[1]) + N4,
                s = t(r[0]),
                c = t(r[n - 1])
            ;(s < l || s > o || c < l || c > o) && t.domain([r[0], r[n - 1]])
        }
    },
    OK = function (t, r) {
        if (!t) return null
        for (var n = 0, a = t.length; n < a; n++)
            if (t[n].item === r) return t[n].position
        return null
    },
    TK = function (t, r) {
        if (!r || r.length !== 2 || !J(r[0]) || !J(r[1])) return t
        var n = Math.min(r[0], r[1]),
            a = Math.max(r[0], r[1]),
            l = [t[0], t[1]]
        return (
            (!J(t[0]) || t[0] < n) && (l[0] = n),
            (!J(t[1]) || t[1] > a) && (l[1] = a),
            l[0] > a && (l[0] = a),
            l[1] < n && (l[1] = n),
            l
        )
    },
    MK = function (t) {
        var r = t.length
        if (!(r <= 0))
            for (var n = 0, a = t[0].length; n < a; ++n)
                for (var l = 0, o = 0, s = 0; s < r; ++s) {
                    var c = Zf(t[s][n][1]) ? t[s][n][0] : t[s][n][1]
                    c >= 0
                        ? ((t[s][n][0] = l),
                          (t[s][n][1] = l + c),
                          (l = t[s][n][1]))
                        : ((t[s][n][0] = o),
                          (t[s][n][1] = o + c),
                          (o = t[s][n][1]))
                }
    },
    DK = function (t) {
        var r = t.length
        if (!(r <= 0))
            for (var n = 0, a = t[0].length; n < a; ++n)
                for (var l = 0, o = 0; o < r; ++o) {
                    var s = Zf(t[o][n][1]) ? t[o][n][0] : t[o][n][1]
                    s >= 0
                        ? ((t[o][n][0] = l),
                          (t[o][n][1] = l + s),
                          (l = t[o][n][1]))
                        : ((t[o][n][0] = 0), (t[o][n][1] = 0))
                }
    },
    $K = {
        sign: MK,
        expand: VF,
        none: Al,
        silhouette: UF,
        wiggle: WF,
        positive: DK,
    },
    IK = function (t, r, n) {
        var a = r.map(function (o) {
                return o.props.dataKey
            }),
            l = zF()
                .keys(a)
                .value(function (o, s) {
                    return +Nt(o, s, 0)
                })
                .order(yg)
                .offset($K[n])
        return l(t)
    },
    RK = function (t, r, n, a, l, o) {
        if (!t) return null
        var s = o ? r.reverse() : r,
            c = s.reduce(function (u, f) {
                var p = f.props,
                    m = p.stackId,
                    v = p.hide
                if (v) return u
                var b = f.props[n],
                    h = u[b] || { hasStack: !1, stackGroups: {} }
                if (Ct(m)) {
                    var g = h.stackGroups[m] || {
                        numericAxisId: n,
                        cateAxisId: a,
                        items: [],
                    }
                    g.items.push(f), (h.hasStack = !0), (h.stackGroups[m] = g)
                } else h.stackGroups[so('_stackId_')] = { numericAxisId: n, cateAxisId: a, items: [f] }
                return er(er({}, u), {}, ml({}, b, h))
            }, {})
        return Object.keys(c).reduce(function (u, f) {
            var p = c[f]
            return (
                p.hasStack &&
                    (p.stackGroups = Object.keys(p.stackGroups).reduce(
                        function (m, v) {
                            var b = p.stackGroups[v]
                            return er(
                                er({}, m),
                                {},
                                ml({}, v, {
                                    numericAxisId: n,
                                    cateAxisId: a,
                                    items: b.items,
                                    stackedData: IK(t, b.items, l),
                                })
                            )
                        },
                        {}
                    )),
                er(er({}, u), {}, ml({}, f, p))
            )
        }, {})
    },
    _6 = function (t, r) {
        var n = r.realScaleType,
            a = r.type,
            l = r.tickCount,
            o = r.originalDomain,
            s = r.allowDecimals,
            c = n || r.scale
        if (c !== 'auto' && c !== 'linear') return null
        if (l && a === 'number' && o && (o[0] === 'auto' || o[1] === 'auto')) {
            var u = t.domain()
            if (!u.length) return null
            var f = sK(u, l, s)
            return t.domain([cp(f), sp(f)]), { niceTicks: f }
        }
        if (l && a === 'number') {
            var p = t.domain(),
                m = cK(p, l, s)
            return { niceTicks: m }
        }
        return null
    },
    S4 = function (t) {
        var r = t.axis,
            n = t.ticks,
            a = t.bandSize,
            l = t.entry,
            o = t.index,
            s = t.dataKey
        if (r.type === 'category') {
            if (!r.allowDuplicatedCategory && r.dataKey && !ce(l[r.dataKey])) {
                var c = rd(n, 'value', l[r.dataKey])
                if (c) return c.coordinate + a / 2
            }
            return n[o] ? n[o].coordinate + a / 2 : null
        }
        var u = Nt(l, ce(s) ? r.dataKey : s)
        return ce(u) ? null : r.scale(u)
    },
    C4 = function (t) {
        var r = t.axis,
            n = t.ticks,
            a = t.offset,
            l = t.bandSize,
            o = t.entry,
            s = t.index
        if (r.type === 'category') return n[s] ? n[s].coordinate + a : null
        var c = Nt(o, r.dataKey, r.domain[s])
        return ce(c) ? null : r.scale(c) - l / 2 + a
    },
    LK = function (t) {
        var r = t.numericAxis,
            n = r.scale.domain()
        if (r.type === 'number') {
            var a = Math.min(n[0], n[1]),
                l = Math.max(n[0], n[1])
            return a <= 0 && l >= 0 ? 0 : l < 0 ? l : a
        }
        return n[0]
    },
    jK = function (t, r) {
        var n = t.props.stackId
        if (Ct(n)) {
            var a = r[n]
            if (a && a.items.length) {
                for (var l = -1, o = 0, s = a.items.length; o < s; o++)
                    if (a.items[o] === t) {
                        l = o
                        break
                    }
                return l >= 0 ? a.stackedData[l] : null
            }
        }
        return null
    },
    FK = function (t) {
        return t.reduce(
            function (r, n) {
                return [
                    cp(n.concat([r[0]]).filter(J)),
                    sp(n.concat([r[1]]).filter(J)),
                ]
            },
            [1 / 0, -1 / 0]
        )
    },
    A6 = function (t, r, n) {
        return Object.keys(t)
            .reduce(
                function (a, l) {
                    var o = t[l],
                        s = o.stackedData,
                        c = s.reduce(
                            function (u, f) {
                                var p = FK(f.slice(r, n + 1))
                                return [
                                    Math.min(u[0], p[0]),
                                    Math.max(u[1], p[1]),
                                ]
                            },
                            [1 / 0, -1 / 0]
                        )
                    return [Math.min(c[0], a[0]), Math.max(c[1], a[1])]
                },
                [1 / 0, -1 / 0]
            )
            .map(function (a) {
                return a === 1 / 0 || a === -1 / 0 ? 0 : a
            })
    },
    P4 = /^dataMin[\s]*-[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/,
    _4 = /^dataMax[\s]*\+[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/,
    E6 = function (t, r, n) {
        if (pe(t)) return t(r, n)
        if (!Fe(t)) return r
        var a = []
        if (J(t[0])) a[0] = n ? t[0] : Math.min(t[0], r[0])
        else if (P4.test(t[0])) {
            var l = +P4.exec(t[0])[1]
            a[0] = r[0] - l
        } else pe(t[0]) ? (a[0] = t[0](r[0])) : (a[0] = r[0])
        if (J(t[1])) a[1] = n ? t[1] : Math.max(t[1], r[1])
        else if (_4.test(t[1])) {
            var o = +_4.exec(t[1])[1]
            a[1] = r[1] + o
        } else pe(t[1]) ? (a[1] = t[1](r[1])) : (a[1] = r[1])
        return a
    },
    $d = function (t, r, n) {
        if (t && t.scale && t.scale.bandwidth) {
            var a = t.scale.bandwidth()
            if (!n || a > 0) return a
        }
        if (t && r && r.length >= 2) {
            for (
                var l = dv(r, function (p) {
                        return p.coordinate
                    }),
                    o = 1 / 0,
                    s = 1,
                    c = l.length;
                s < c;
                s++
            ) {
                var u = l[s],
                    f = l[s - 1]
                o = Math.min((u.coordinate || 0) - (f.coordinate || 0), o)
            }
            return o === 1 / 0 ? 0 : o
        }
        return n ? void 0 : 0
    },
    A4 = function (t, r, n) {
        return !t || !t.length || lp(t, hr(n, 'type.defaultProps.domain'))
            ? r
            : t
    },
    k6 = function (t, r) {
        var n = t.props,
            a = n.dataKey,
            l = n.name,
            o = n.unit,
            s = n.formatter,
            c = n.tooltipType,
            u = n.chartType
        return er(
            er({}, ve(t)),
            {},
            {
                dataKey: a,
                unit: o,
                formatter: s,
                name: l || a,
                color: Fv(t),
                value: Nt(r, a),
                type: c,
                payload: r,
                chartType: u,
            }
        )
    }
function Gs(e) {
    return (
        (Gs =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Gs(e)
    )
}
function E4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Mn(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? E4(Object(r), !0).forEach(function (n) {
                  O6(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : E4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function O6(e, t, r) {
    return (
        (t = BK(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function BK(e) {
    var t = zK(e, 'string')
    return Gs(t) === 'symbol' ? t : String(t)
}
function zK(e, t) {
    if (Gs(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Gs(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function VK(e, t) {
    return GK(e) || HK(e, t) || WK(e, t) || UK()
}
function UK() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function WK(e, t) {
    if (!!e) {
        if (typeof e == 'string') return k4(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return k4(e, t)
    }
}
function k4(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function HK(e, t) {
    var r =
        e == null
            ? null
            : (typeof Symbol < 'u' && e[Symbol.iterator]) || e['@@iterator']
    if (r != null) {
        var n,
            a,
            l,
            o,
            s = [],
            c = !0,
            u = !1
        try {
            if (((l = (r = r.call(e)).next), t === 0)) {
                if (Object(r) !== r) return
                c = !1
            } else
                for (
                    ;
                    !(c = (n = l.call(r)).done) &&
                    (s.push(n.value), s.length !== t);
                    c = !0
                );
        } catch (f) {
            ;(u = !0), (a = f)
        } finally {
            try {
                if (
                    !c &&
                    r.return != null &&
                    ((o = r.return()), Object(o) !== o)
                )
                    return
            } finally {
                if (u) throw a
            }
        }
        return s
    }
}
function GK(e) {
    if (Array.isArray(e)) return e
}
var Id = Math.PI / 180,
    qK = function (t) {
        return (t * 180) / Math.PI
    },
    Je = function (t, r, n, a) {
        return { x: t + Math.cos(-Id * a) * n, y: r + Math.sin(-Id * a) * n }
    },
    T6 = function (t, r) {
        var n =
            arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : { top: 0, right: 0, bottom: 0, left: 0 }
        return (
            Math.min(
                Math.abs(t - (n.left || 0) - (n.right || 0)),
                Math.abs(r - (n.top || 0) - (n.bottom || 0))
            ) / 2
        )
    },
    KK = function (t, r, n, a, l) {
        var o = t.width,
            s = t.height,
            c = t.startAngle,
            u = t.endAngle,
            f = sr(t.cx, o, o / 2),
            p = sr(t.cy, s, s / 2),
            m = T6(o, s, n),
            v = sr(t.innerRadius, m, 0),
            b = sr(t.outerRadius, m, m * 0.8),
            h = Object.keys(r)
        return h.reduce(function (g, x) {
            var w = r[x],
                y = w.domain,
                N = w.reversed,
                S
            if (ce(w.range))
                a === 'angleAxis'
                    ? (S = [c, u])
                    : a === 'radiusAxis' && (S = [v, b]),
                    N && (S = [S[1], S[0]])
            else {
                S = w.range
                var P = S,
                    E = VK(P, 2)
                ;(c = E[0]), (u = E[1])
            }
            var k = C6(w, l),
                M = k.realScaleType,
                A = k.scale
            A.domain(y).range(S), P6(A)
            var _ = _6(A, Mn(Mn({}, w), {}, { realScaleType: M })),
                O = Mn(
                    Mn(Mn({}, w), _),
                    {},
                    {
                        range: S,
                        radius: b,
                        realScaleType: M,
                        scale: A,
                        cx: f,
                        cy: p,
                        innerRadius: v,
                        outerRadius: b,
                        startAngle: c,
                        endAngle: u,
                    }
                )
            return Mn(Mn({}, g), {}, O6({}, x, O))
        }, {})
    },
    YK = function (t, r) {
        var n = t.x,
            a = t.y,
            l = r.x,
            o = r.y
        return Math.sqrt(Math.pow(n - l, 2) + Math.pow(a - o, 2))
    },
    XK = function (t, r) {
        var n = t.x,
            a = t.y,
            l = r.cx,
            o = r.cy,
            s = YK({ x: n, y: a }, { x: l, y: o })
        if (s <= 0) return { radius: s }
        var c = (n - l) / s,
            u = Math.acos(c)
        return (
            a > o && (u = 2 * Math.PI - u),
            { radius: s, angle: qK(u), angleInRadian: u }
        )
    },
    ZK = function (t) {
        var r = t.startAngle,
            n = t.endAngle,
            a = Math.floor(r / 360),
            l = Math.floor(n / 360),
            o = Math.min(a, l)
        return { startAngle: r - o * 360, endAngle: n - o * 360 }
    },
    JK = function (t, r) {
        var n = r.startAngle,
            a = r.endAngle,
            l = Math.floor(n / 360),
            o = Math.floor(a / 360),
            s = Math.min(l, o)
        return t + s * 360
    },
    O4 = function (t, r) {
        var n = t.x,
            a = t.y,
            l = XK({ x: n, y: a }, r),
            o = l.radius,
            s = l.angle,
            c = r.innerRadius,
            u = r.outerRadius
        if (o < c || o > u) return !1
        if (o === 0) return !0
        var f = ZK(r),
            p = f.startAngle,
            m = f.endAngle,
            v = s,
            b
        if (p <= m) {
            for (; v > m; ) v -= 360
            for (; v < p; ) v += 360
            b = v >= p && v <= m
        } else {
            for (; v > p; ) v -= 360
            for (; v < m; ) v += 360
            b = v >= m && v <= p
        }
        return b ? Mn(Mn({}, r), {}, { radius: o, angle: JK(v, r) }) : null
    }
function qs(e) {
    return (
        (qs =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        qs(e)
    )
}
function QK(e) {
    return nY(e) || rY(e) || tY(e) || eY()
}
function eY() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function tY(e, t) {
    if (!!e) {
        if (typeof e == 'string') return e1(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return e1(e, t)
    }
}
function rY(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function nY(e) {
    if (Array.isArray(e)) return e1(e)
}
function e1(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function T4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function At(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? T4(Object(r), !0).forEach(function (n) {
                  aY(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : T4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function aY(e, t, r) {
    return (
        (t = iY(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function iY(e) {
    var t = lY(e, 'string')
    return qs(t) === 'symbol' ? t : String(t)
}
function lY(e, t) {
    if (qs(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (qs(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var oY = function (t) {
        var r = t.value,
            n = t.formatter,
            a = ce(t.children) ? r : t.children
        return pe(n) ? n(a) : a
    },
    sY = function (t, r) {
        var n = Yt(r - t),
            a = Math.min(Math.abs(r - t), 360)
        return n * a
    },
    cY = function (t, r, n) {
        var a = t.position,
            l = t.viewBox,
            o = t.offset,
            s = t.className,
            c = l,
            u = c.cx,
            f = c.cy,
            p = c.innerRadius,
            m = c.outerRadius,
            v = c.startAngle,
            b = c.endAngle,
            h = c.clockWise,
            g = (p + m) / 2,
            x = sY(v, b),
            w = x >= 0 ? 1 : -1,
            y,
            N
        a === 'insideStart'
            ? ((y = v + w * o), (N = h))
            : a === 'insideEnd'
            ? ((y = b - w * o), (N = !h))
            : a === 'end' && ((y = b + w * o), (N = h)),
            (N = x <= 0 ? N : !N)
        var S = Je(u, f, g, y),
            P = Je(u, f, g, y + (N ? 1 : -1) * 359),
            E = 'M'
                .concat(S.x, ',')
                .concat(
                    S.y,
                    `
    A`
                )
                .concat(g, ',')
                .concat(g, ',0,1,')
                .concat(
                    N ? 0 : 1,
                    `,
    `
                )
                .concat(P.x, ',')
                .concat(P.y),
            k = ce(t.id) ? so('recharts-radial-line-') : t.id
        return d('text', {
            ...n,
            dominantBaseline: 'central',
            className: He('recharts-radial-bar-label', s),
            children: [
                i('defs', { children: i('path', { id: k, d: E }) }),
                i('textPath', { xlinkHref: '#'.concat(k), children: r }),
            ],
        })
    },
    uY = function (t) {
        var r = t.viewBox,
            n = t.offset,
            a = t.position,
            l = r,
            o = l.cx,
            s = l.cy,
            c = l.innerRadius,
            u = l.outerRadius,
            f = l.startAngle,
            p = l.endAngle,
            m = (f + p) / 2
        if (a === 'outside') {
            var v = Je(o, s, u + n, m),
                b = v.x,
                h = v.y
            return {
                x: b,
                y: h,
                textAnchor: b >= o ? 'start' : 'end',
                verticalAnchor: 'middle',
            }
        }
        if (a === 'center')
            return {
                x: o,
                y: s,
                textAnchor: 'middle',
                verticalAnchor: 'middle',
            }
        if (a === 'centerTop')
            return { x: o, y: s, textAnchor: 'middle', verticalAnchor: 'start' }
        if (a === 'centerBottom')
            return { x: o, y: s, textAnchor: 'middle', verticalAnchor: 'end' }
        var g = (c + u) / 2,
            x = Je(o, s, g, m),
            w = x.x,
            y = x.y
        return { x: w, y, textAnchor: 'middle', verticalAnchor: 'middle' }
    },
    dY = function (t) {
        var r = t.viewBox,
            n = t.parentViewBox,
            a = t.offset,
            l = t.position,
            o = r,
            s = o.x,
            c = o.y,
            u = o.width,
            f = o.height,
            p = f >= 0 ? 1 : -1,
            m = p * a,
            v = p > 0 ? 'end' : 'start',
            b = p > 0 ? 'start' : 'end',
            h = u >= 0 ? 1 : -1,
            g = h * a,
            x = h > 0 ? 'end' : 'start',
            w = h > 0 ? 'start' : 'end'
        if (l === 'top') {
            var y = {
                x: s + u / 2,
                y: c - p * a,
                textAnchor: 'middle',
                verticalAnchor: v,
            }
            return At(
                At({}, y),
                n ? { height: Math.max(c - n.y, 0), width: u } : {}
            )
        }
        if (l === 'bottom') {
            var N = {
                x: s + u / 2,
                y: c + f + m,
                textAnchor: 'middle',
                verticalAnchor: b,
            }
            return At(
                At({}, N),
                n
                    ? {
                          height: Math.max(n.y + n.height - (c + f), 0),
                          width: u,
                      }
                    : {}
            )
        }
        if (l === 'left') {
            var S = {
                x: s - g,
                y: c + f / 2,
                textAnchor: x,
                verticalAnchor: 'middle',
            }
            return At(
                At({}, S),
                n ? { width: Math.max(S.x - n.x, 0), height: f } : {}
            )
        }
        if (l === 'right') {
            var P = {
                x: s + u + g,
                y: c + f / 2,
                textAnchor: w,
                verticalAnchor: 'middle',
            }
            return At(
                At({}, P),
                n ? { width: Math.max(n.x + n.width - P.x, 0), height: f } : {}
            )
        }
        var E = n ? { width: u, height: f } : {}
        return l === 'insideLeft'
            ? At(
                  {
                      x: s + g,
                      y: c + f / 2,
                      textAnchor: w,
                      verticalAnchor: 'middle',
                  },
                  E
              )
            : l === 'insideRight'
            ? At(
                  {
                      x: s + u - g,
                      y: c + f / 2,
                      textAnchor: x,
                      verticalAnchor: 'middle',
                  },
                  E
              )
            : l === 'insideTop'
            ? At(
                  {
                      x: s + u / 2,
                      y: c + m,
                      textAnchor: 'middle',
                      verticalAnchor: b,
                  },
                  E
              )
            : l === 'insideBottom'
            ? At(
                  {
                      x: s + u / 2,
                      y: c + f - m,
                      textAnchor: 'middle',
                      verticalAnchor: v,
                  },
                  E
              )
            : l === 'insideTopLeft'
            ? At({ x: s + g, y: c + m, textAnchor: w, verticalAnchor: b }, E)
            : l === 'insideTopRight'
            ? At(
                  { x: s + u - g, y: c + m, textAnchor: x, verticalAnchor: b },
                  E
              )
            : l === 'insideBottomLeft'
            ? At(
                  { x: s + g, y: c + f - m, textAnchor: w, verticalAnchor: v },
                  E
              )
            : l === 'insideBottomRight'
            ? At(
                  {
                      x: s + u - g,
                      y: c + f - m,
                      textAnchor: x,
                      verticalAnchor: v,
                  },
                  E
              )
            : Tr(l) && (J(l.x) || ag(l.x)) && (J(l.y) || ag(l.y))
            ? At(
                  {
                      x: s + sr(l.x, u),
                      y: c + sr(l.y, f),
                      textAnchor: 'end',
                      verticalAnchor: 'end',
                  },
                  E
              )
            : At(
                  {
                      x: s + u / 2,
                      y: c + f / 2,
                      textAnchor: 'middle',
                      verticalAnchor: 'middle',
                  },
                  E
              )
    },
    fY = function (t) {
        return J(t.cx)
    }
function wt(e) {
    var t = e.viewBox,
        r = e.position,
        n = e.value,
        a = e.children,
        l = e.content,
        o = e.className,
        s = o === void 0 ? '' : o,
        c = e.textBreakAll
    if (!t || (ce(n) && ce(a) && !C.exports.isValidElement(l) && !pe(l)))
        return null
    if (C.exports.isValidElement(l)) return C.exports.cloneElement(l, e)
    var u
    if (pe(l)) {
        if (((u = C.exports.createElement(l, e)), C.exports.isValidElement(u)))
            return u
    } else u = oY(e)
    var f = fY(t),
        p = ve(e, !0)
    if (f && (r === 'insideStart' || r === 'insideEnd' || r === 'end'))
        return cY(e, u, p)
    var m = f ? uY(e) : dY(e)
    return i(ja, {
        className: He('recharts-label', s),
        ...p,
        ...m,
        breakAll: c,
        children: u,
    })
}
wt.displayName = 'Label'
wt.defaultProps = { offset: 5 }
var M6 = function (t) {
        var r = t.cx,
            n = t.cy,
            a = t.angle,
            l = t.startAngle,
            o = t.endAngle,
            s = t.r,
            c = t.radius,
            u = t.innerRadius,
            f = t.outerRadius,
            p = t.x,
            m = t.y,
            v = t.top,
            b = t.left,
            h = t.width,
            g = t.height,
            x = t.clockWise,
            w = t.labelViewBox
        if (w) return w
        if (J(h) && J(g)) {
            if (J(p) && J(m)) return { x: p, y: m, width: h, height: g }
            if (J(v) && J(b)) return { x: v, y: b, width: h, height: g }
        }
        return J(p) && J(m)
            ? { x: p, y: m, width: 0, height: 0 }
            : J(r) && J(n)
            ? {
                  cx: r,
                  cy: n,
                  startAngle: l || a || 0,
                  endAngle: o || a || 0,
                  innerRadius: u || 0,
                  outerRadius: f || c || s || 0,
                  clockWise: x,
              }
            : t.viewBox
            ? t.viewBox
            : {}
    },
    pY = function (t, r) {
        return t
            ? t === !0
                ? i(wt, { viewBox: r }, 'label-implicit')
                : Ct(t)
                ? i(wt, { viewBox: r, value: t }, 'label-implicit')
                : C.exports.isValidElement(t)
                ? t.type === wt
                    ? C.exports.cloneElement(t, {
                          key: 'label-implicit',
                          viewBox: r,
                      })
                    : i(wt, { content: t, viewBox: r }, 'label-implicit')
                : pe(t)
                ? i(wt, { content: t, viewBox: r }, 'label-implicit')
                : Tr(t)
                ? C.exports.createElement(wt, {
                      viewBox: r,
                      ...t,
                      key: 'label-implicit',
                  })
                : null
            : null
    },
    hY = function (t, r) {
        var n =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0
        if (!t || (!t.children && n && !t.label)) return null
        var a = t.children,
            l = M6(t),
            o = Cr(a, wt).map(function (c, u) {
                return C.exports.cloneElement(c, {
                    viewBox: r || l,
                    key: 'label-'.concat(u),
                })
            })
        if (!n) return o
        var s = pY(t.label, r || l)
        return [s].concat(QK(o))
    }
wt.parseViewBox = M6
wt.renderCallByParent = hY
function mY(e) {
    var t = e == null ? 0 : e.length
    return t ? e[t - 1] : void 0
}
var gY = mY
function Ks(e) {
    return (
        (Ks =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Ks(e)
    )
}
var vY = ['data', 'valueAccessor', 'dataKey', 'clockWise', 'id', 'textBreakAll']
function yY(e) {
    return NY(e) || wY(e) || xY(e) || bY()
}
function bY() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function xY(e, t) {
    if (!!e) {
        if (typeof e == 'string') return t1(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return t1(e, t)
    }
}
function wY(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function NY(e) {
    if (Array.isArray(e)) return t1(e)
}
function t1(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function M4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function D4(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? M4(Object(r), !0).forEach(function (n) {
                  SY(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : M4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function SY(e, t, r) {
    return (
        (t = CY(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function CY(e) {
    var t = PY(e, 'string')
    return Ks(t) === 'symbol' ? t : String(t)
}
function PY(e, t) {
    if (Ks(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Ks(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function _Y(e, t) {
    if (e == null) return {}
    var r = AY(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function AY(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
var EY = {
    valueAccessor: function (t) {
        return Fe(t.value) ? gY(t.value) : t.value
    },
}
function Nn(e) {
    var t = e.data,
        r = e.valueAccessor,
        n = e.dataKey,
        a = e.clockWise,
        l = e.id,
        o = e.textBreakAll,
        s = _Y(e, vY)
    return !t || !t.length
        ? null
        : i(Be, {
              className: 'recharts-label-list',
              children: t.map(function (c, u) {
                  var f = ce(n) ? r(c, u) : Nt(c && c.payload, n),
                      p = ce(l) ? {} : { id: ''.concat(l, '-').concat(u) }
                  return C.exports.createElement(wt, {
                      ...ve(c, !0),
                      ...s,
                      ...p,
                      parentViewBox: c.parentViewBox,
                      index: u,
                      value: f,
                      textBreakAll: o,
                      viewBox: wt.parseViewBox(
                          ce(a) ? c : D4(D4({}, c), {}, { clockWise: a })
                      ),
                      key: 'label-'.concat(u),
                  })
              }),
          })
}
Nn.displayName = 'LabelList'
function kY(e, t) {
    return e
        ? e === !0
            ? i(Nn, { data: t }, 'labelList-implicit')
            : K.isValidElement(e) || pe(e)
            ? i(Nn, { data: t, content: e }, 'labelList-implicit')
            : Tr(e)
            ? C.exports.createElement(Nn, {
                  data: t,
                  ...e,
                  key: 'labelList-implicit',
              })
            : null
        : null
}
function OY(e, t) {
    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0
    if (!e || (!e.children && r && !e.label)) return null
    var n = e.children,
        a = Cr(n, Nn).map(function (o, s) {
            return C.exports.cloneElement(o, {
                data: t,
                key: 'labelList-'.concat(s),
            })
        })
    if (!r) return a
    var l = kY(e.label, t)
    return [l].concat(yY(a))
}
Nn.renderCallByParent = OY
Nn.defaultProps = EY
function jl(e) {
    return (
        (jl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        jl(e)
    )
}
function TY(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function $4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, D6(n.key), n)
    }
}
function MY(e, t, r) {
    return (
        t && $4(e.prototype, t),
        r && $4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function DY(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && r1(e, t)
}
function r1(e, t) {
    return (
        (r1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        r1(e, t)
    )
}
function $Y(e) {
    var t = LY()
    return function () {
        var n = Rd(e),
            a
        if (t) {
            var l = Rd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return IY(this, a)
    }
}
function IY(e, t) {
    if (t && (jl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return RY(e)
}
function RY(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function LY() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Rd(e) {
    return (
        (Rd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Rd(e)
    )
}
function jY(e, t, r) {
    return (
        (t = D6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function D6(e) {
    var t = FY(e, 'string')
    return jl(t) === 'symbol' ? t : String(t)
}
function FY(e, t) {
    if (jl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (jl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var BY = function (t, r) {
        var n = Yt(r - t),
            a = Math.min(Math.abs(r - t), 359.999)
        return n * a
    },
    Jc = function (t) {
        var r = t.cx,
            n = t.cy,
            a = t.radius,
            l = t.angle,
            o = t.sign,
            s = t.isExternal,
            c = t.cornerRadius,
            u = t.cornerIsExternal,
            f = c * (s ? 1 : -1) + a,
            p = Math.asin(c / f) / Id,
            m = u ? l : l + o * p,
            v = Je(r, n, f, m),
            b = Je(r, n, a, m),
            h = u ? l - o * p : l,
            g = Je(r, n, f * Math.cos(p * Id), h)
        return { center: v, circleTangency: b, lineTangency: g, theta: p }
    },
    $6 = function (t) {
        var r = t.cx,
            n = t.cy,
            a = t.innerRadius,
            l = t.outerRadius,
            o = t.startAngle,
            s = t.endAngle,
            c = BY(o, s),
            u = o + c,
            f = Je(r, n, l, o),
            p = Je(r, n, l, u),
            m = 'M '
                .concat(f.x, ',')
                .concat(
                    f.y,
                    `
    A `
                )
                .concat(l, ',')
                .concat(
                    l,
                    `,0,
    `
                )
                .concat(+(Math.abs(c) > 180), ',')
                .concat(
                    +(o > u),
                    `,
    `
                )
                .concat(p.x, ',')
                .concat(
                    p.y,
                    `
  `
                )
        if (a > 0) {
            var v = Je(r, n, a, o),
                b = Je(r, n, a, u)
            m += 'L '
                .concat(b.x, ',')
                .concat(
                    b.y,
                    `
            A `
                )
                .concat(a, ',')
                .concat(
                    a,
                    `,0,
            `
                )
                .concat(+(Math.abs(c) > 180), ',')
                .concat(
                    +(o <= u),
                    `,
            `
                )
                .concat(v.x, ',')
                .concat(v.y, ' Z')
        } else m += 'L '.concat(r, ',').concat(n, ' Z')
        return m
    },
    zY = function (t) {
        var r = t.cx,
            n = t.cy,
            a = t.innerRadius,
            l = t.outerRadius,
            o = t.cornerRadius,
            s = t.forceCornerRadius,
            c = t.cornerIsExternal,
            u = t.startAngle,
            f = t.endAngle,
            p = Yt(f - u),
            m = Jc({
                cx: r,
                cy: n,
                radius: l,
                angle: u,
                sign: p,
                cornerRadius: o,
                cornerIsExternal: c,
            }),
            v = m.circleTangency,
            b = m.lineTangency,
            h = m.theta,
            g = Jc({
                cx: r,
                cy: n,
                radius: l,
                angle: f,
                sign: -p,
                cornerRadius: o,
                cornerIsExternal: c,
            }),
            x = g.circleTangency,
            w = g.lineTangency,
            y = g.theta,
            N = c ? Math.abs(u - f) : Math.abs(u - f) - h - y
        if (N < 0)
            return s
                ? 'M '
                      .concat(b.x, ',')
                      .concat(
                          b.y,
                          `
        a`
                      )
                      .concat(o, ',')
                      .concat(o, ',0,0,1,')
                      .concat(
                          o * 2,
                          `,0
        a`
                      )
                      .concat(o, ',')
                      .concat(o, ',0,0,1,')
                      .concat(
                          -o * 2,
                          `,0
      `
                      )
                : $6({
                      cx: r,
                      cy: n,
                      innerRadius: a,
                      outerRadius: l,
                      startAngle: u,
                      endAngle: f,
                  })
        var S = 'M '
            .concat(b.x, ',')
            .concat(
                b.y,
                `
    A`
            )
            .concat(o, ',')
            .concat(o, ',0,0,')
            .concat(+(p < 0), ',')
            .concat(v.x, ',')
            .concat(
                v.y,
                `
    A`
            )
            .concat(l, ',')
            .concat(l, ',0,')
            .concat(+(N > 180), ',')
            .concat(+(p < 0), ',')
            .concat(x.x, ',')
            .concat(
                x.y,
                `
    A`
            )
            .concat(o, ',')
            .concat(o, ',0,0,')
            .concat(+(p < 0), ',')
            .concat(w.x, ',')
            .concat(
                w.y,
                `
  `
            )
        if (a > 0) {
            var P = Jc({
                    cx: r,
                    cy: n,
                    radius: a,
                    angle: u,
                    sign: p,
                    isExternal: !0,
                    cornerRadius: o,
                    cornerIsExternal: c,
                }),
                E = P.circleTangency,
                k = P.lineTangency,
                M = P.theta,
                A = Jc({
                    cx: r,
                    cy: n,
                    radius: a,
                    angle: f,
                    sign: -p,
                    isExternal: !0,
                    cornerRadius: o,
                    cornerIsExternal: c,
                }),
                _ = A.circleTangency,
                O = A.lineTangency,
                T = A.theta,
                $ = c ? Math.abs(u - f) : Math.abs(u - f) - M - T
            if ($ < 0 && o === 0)
                return ''.concat(S, 'L').concat(r, ',').concat(n, 'Z')
            S += 'L'
                .concat(O.x, ',')
                .concat(
                    O.y,
                    `
      A`
                )
                .concat(o, ',')
                .concat(o, ',0,0,')
                .concat(+(p < 0), ',')
                .concat(_.x, ',')
                .concat(
                    _.y,
                    `
      A`
                )
                .concat(a, ',')
                .concat(a, ',0,')
                .concat(+($ > 180), ',')
                .concat(+(p > 0), ',')
                .concat(E.x, ',')
                .concat(
                    E.y,
                    `
      A`
                )
                .concat(o, ',')
                .concat(o, ',0,0,')
                .concat(+(p < 0), ',')
                .concat(k.x, ',')
                .concat(k.y, 'Z')
        } else S += 'L'.concat(r, ',').concat(n, 'Z')
        return S
    },
    Ld = (function (e) {
        DY(r, e)
        var t = $Y(r)
        function r() {
            return TY(this, r), t.apply(this, arguments)
        }
        return (
            MY(r, [
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.cx,
                            o = a.cy,
                            s = a.innerRadius,
                            c = a.outerRadius,
                            u = a.cornerRadius,
                            f = a.forceCornerRadius,
                            p = a.cornerIsExternal,
                            m = a.startAngle,
                            v = a.endAngle,
                            b = a.className
                        if (c < s || m === v) return null
                        var h = He('recharts-sector', b),
                            g = c - s,
                            x = sr(u, g, 0, !0),
                            w
                        return (
                            x > 0 && Math.abs(m - v) < 360
                                ? (w = zY({
                                      cx: l,
                                      cy: o,
                                      innerRadius: s,
                                      outerRadius: c,
                                      cornerRadius: Math.min(x, g / 2),
                                      forceCornerRadius: f,
                                      cornerIsExternal: p,
                                      startAngle: m,
                                      endAngle: v,
                                  }))
                                : (w = $6({
                                      cx: l,
                                      cy: o,
                                      innerRadius: s,
                                      outerRadius: c,
                                      startAngle: m,
                                      endAngle: v,
                                  })),
                            i('path', {
                                ...ve(this.props, !0),
                                className: h,
                                d: w,
                                role: 'img',
                            })
                        )
                    },
                },
            ]),
            r
        )
    })(C.exports.PureComponent)
jY(Ld, 'defaultProps', {
    cx: 0,
    cy: 0,
    innerRadius: 0,
    outerRadius: 0,
    startAngle: 0,
    endAngle: 0,
    cornerRadius: 0,
    forceCornerRadius: !1,
    cornerIsExternal: !1,
})
function Fl(e) {
    return (
        (Fl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Fl(e)
    )
}
function I4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function R4(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? I4(Object(r), !0).forEach(function (n) {
                  I6(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : I4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function VY(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function L4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, R6(n.key), n)
    }
}
function UY(e, t, r) {
    return (
        t && L4(e.prototype, t),
        r && L4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function WY(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && n1(e, t)
}
function n1(e, t) {
    return (
        (n1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        n1(e, t)
    )
}
function HY(e) {
    var t = KY()
    return function () {
        var n = jd(e),
            a
        if (t) {
            var l = jd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return GY(this, a)
    }
}
function GY(e, t) {
    if (t && (Fl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return qY(e)
}
function qY(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function KY() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function jd(e) {
    return (
        (jd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        jd(e)
    )
}
function I6(e, t, r) {
    return (
        (t = R6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function R6(e) {
    var t = YY(e, 'string')
    return Fl(t) === 'symbol' ? t : String(t)
}
function YY(e, t) {
    if (Fl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Fl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var j4 = {
        curveBasisClosed: OF,
        curveBasisOpen: TF,
        curveBasis: kF,
        curveLinearClosed: MF,
        curveLinear: tp,
        curveMonotoneX: DF,
        curveMonotoneY: $F,
        curveNatural: IF,
        curveStep: RF,
        curveStepAfter: jF,
        curveStepBefore: LF,
    },
    Qc = function (t) {
        return t.x === +t.x && t.y === +t.y
    },
    Ro = function (t) {
        return t.x
    },
    Lo = function (t) {
        return t.y
    },
    XY = function (t, r) {
        if (pe(t)) return t
        var n = 'curve'.concat(Qf(t))
        return n === 'curveMonotone' && r
            ? j4[''.concat(n).concat(r === 'vertical' ? 'Y' : 'X')]
            : j4[n] || tp
    },
    Ys = (function (e) {
        WY(r, e)
        var t = HY(r)
        function r() {
            return VY(this, r), t.apply(this, arguments)
        }
        return (
            UY(r, [
                {
                    key: 'getPath',
                    value: function () {
                        var a = this.props,
                            l = a.type,
                            o = a.points,
                            s = a.baseLine,
                            c = a.layout,
                            u = a.connectNulls,
                            f = XY(l, c),
                            p = u
                                ? o.filter(function (h) {
                                      return Qc(h)
                                  })
                                : o,
                            m
                        if (Fe(s)) {
                            var v = u
                                    ? s.filter(function (h) {
                                          return Qc(h)
                                      })
                                    : s,
                                b = p.map(function (h, g) {
                                    return R4(R4({}, h), {}, { base: v[g] })
                                })
                            return (
                                c === 'vertical'
                                    ? (m = Hc()
                                          .y(Lo)
                                          .x1(Ro)
                                          .x0(function (h) {
                                              return h.base.x
                                          }))
                                    : (m = Hc()
                                          .x(Ro)
                                          .y1(Lo)
                                          .y0(function (h) {
                                              return h.base.y
                                          })),
                                m.defined(Qc).curve(f),
                                m(b)
                            )
                        }
                        return (
                            c === 'vertical' && J(s)
                                ? (m = Hc().y(Lo).x1(Ro).x0(s))
                                : J(s)
                                ? (m = Hc().x(Ro).y1(Lo).y0(s))
                                : (m = V3().x(Ro).y(Lo)),
                            m.defined(Qc).curve(f),
                            m(p)
                        )
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.className,
                            o = a.points,
                            s = a.path,
                            c = a.pathRef
                        if ((!o || !o.length) && !s) return null
                        var u = o && o.length ? this.getPath() : s
                        return i('path', {
                            ...ve(this.props),
                            ...nd(this.props),
                            className: He('recharts-curve', l),
                            d: u,
                            ref: c,
                        })
                    },
                },
            ]),
            r
        )
    })(C.exports.PureComponent)
I6(Ys, 'defaultProps', { type: 'linear', points: [], connectNulls: !1 })
function Bl(e) {
    return (
        (Bl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Bl(e)
    )
}
function ZY(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function F4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, F6(n.key), n)
    }
}
function JY(e, t, r) {
    return (
        t && F4(e.prototype, t),
        r && F4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function QY(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && a1(e, t)
}
function a1(e, t) {
    return (
        (a1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        a1(e, t)
    )
}
function eX(e) {
    var t = rX()
    return function () {
        var n = Fd(e),
            a
        if (t) {
            var l = Fd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return tX(this, a)
    }
}
function tX(e, t) {
    if (t && (Bl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return L6(e)
}
function L6(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function rX() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Fd(e) {
    return (
        (Fd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Fd(e)
    )
}
function j6(e, t, r) {
    return (
        (t = F6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function F6(e) {
    var t = nX(e, 'string')
    return Bl(t) === 'symbol' ? t : String(t)
}
function nX(e, t) {
    if (Bl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Bl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var B4 = function (t, r, n, a, l) {
        var o = Math.min(Math.abs(n) / 2, Math.abs(a) / 2),
            s = a >= 0 ? 1 : -1,
            c = n >= 0 ? 1 : -1,
            u = (a >= 0 && n >= 0) || (a < 0 && n < 0) ? 1 : 0,
            f
        if (o > 0 && l instanceof Array) {
            for (var p = [0, 0, 0, 0], m = 0, v = 4; m < v; m++)
                p[m] = l[m] > o ? o : l[m]
            ;(f = 'M'.concat(t, ',').concat(r + s * p[0])),
                p[0] > 0 &&
                    (f += 'A '
                        .concat(p[0], ',')
                        .concat(p[0], ',0,0,')
                        .concat(u, ',')
                        .concat(t + c * p[0], ',')
                        .concat(r)),
                (f += 'L '.concat(t + n - c * p[1], ',').concat(r)),
                p[1] > 0 &&
                    (f += 'A '
                        .concat(p[1], ',')
                        .concat(p[1], ',0,0,')
                        .concat(
                            u,
                            `,
        `
                        )
                        .concat(t + n, ',')
                        .concat(r + s * p[1])),
                (f += 'L '.concat(t + n, ',').concat(r + a - s * p[2])),
                p[2] > 0 &&
                    (f += 'A '
                        .concat(p[2], ',')
                        .concat(p[2], ',0,0,')
                        .concat(
                            u,
                            `,
        `
                        )
                        .concat(t + n - c * p[2], ',')
                        .concat(r + a)),
                (f += 'L '.concat(t + c * p[3], ',').concat(r + a)),
                p[3] > 0 &&
                    (f += 'A '
                        .concat(p[3], ',')
                        .concat(p[3], ',0,0,')
                        .concat(
                            u,
                            `,
        `
                        )
                        .concat(t, ',')
                        .concat(r + a - s * p[3])),
                (f += 'Z')
        } else if (o > 0 && l === +l && l > 0) {
            var b = Math.min(o, l)
            f = 'M '
                .concat(t, ',')
                .concat(
                    r + s * b,
                    `
            A `
                )
                .concat(b, ',')
                .concat(b, ',0,0,')
                .concat(u, ',')
                .concat(t + c * b, ',')
                .concat(
                    r,
                    `
            L `
                )
                .concat(t + n - c * b, ',')
                .concat(
                    r,
                    `
            A `
                )
                .concat(b, ',')
                .concat(b, ',0,0,')
                .concat(u, ',')
                .concat(t + n, ',')
                .concat(
                    r + s * b,
                    `
            L `
                )
                .concat(t + n, ',')
                .concat(
                    r + a - s * b,
                    `
            A `
                )
                .concat(b, ',')
                .concat(b, ',0,0,')
                .concat(u, ',')
                .concat(t + n - c * b, ',')
                .concat(
                    r + a,
                    `
            L `
                )
                .concat(t + c * b, ',')
                .concat(
                    r + a,
                    `
            A `
                )
                .concat(b, ',')
                .concat(b, ',0,0,')
                .concat(u, ',')
                .concat(t, ',')
                .concat(r + a - s * b, ' Z')
        } else
            f = 'M '
                .concat(t, ',')
                .concat(r, ' h ')
                .concat(n, ' v ')
                .concat(a, ' h ')
                .concat(-n, ' Z')
        return f
    },
    aX = function (t, r) {
        if (!t || !r) return !1
        var n = t.x,
            a = t.y,
            l = r.x,
            o = r.y,
            s = r.width,
            c = r.height
        if (Math.abs(s) > 0 && Math.abs(c) > 0) {
            var u = Math.min(l, l + s),
                f = Math.max(l, l + s),
                p = Math.min(o, o + c),
                m = Math.max(o, o + c)
            return n >= u && n <= f && a >= p && a <= m
        }
        return !1
    },
    yp = (function (e) {
        QY(r, e)
        var t = eX(r)
        function r() {
            var n
            ZY(this, r)
            for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
                l[o] = arguments[o]
            return (
                (n = t.call.apply(t, [this].concat(l))),
                j6(L6(n), 'state', { totalLength: -1 }),
                n
            )
        }
        return (
            JY(r, [
                {
                    key: 'componentDidMount',
                    value: function () {
                        if (this.node && this.node.getTotalLength)
                            try {
                                var a = this.node.getTotalLength()
                                a && this.setState({ totalLength: a })
                            } catch {}
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.x,
                            s = l.y,
                            c = l.width,
                            u = l.height,
                            f = l.radius,
                            p = l.className,
                            m = this.state.totalLength,
                            v = this.props,
                            b = v.animationEasing,
                            h = v.animationDuration,
                            g = v.animationBegin,
                            x = v.isAnimationActive,
                            w = v.isUpdateAnimationActive
                        if (
                            o !== +o ||
                            s !== +s ||
                            c !== +c ||
                            u !== +u ||
                            c === 0 ||
                            u === 0
                        )
                            return null
                        var y = He('recharts-rectangle', p)
                        return w
                            ? i(Ra, {
                                  canBegin: m > 0,
                                  from: { width: c, height: u, x: o, y: s },
                                  to: { width: c, height: u, x: o, y: s },
                                  duration: h,
                                  animationEasing: b,
                                  isActive: w,
                                  children: function (N) {
                                      var S = N.width,
                                          P = N.height,
                                          E = N.x,
                                          k = N.y
                                      return i(Ra, {
                                          canBegin: m > 0,
                                          from: '0px '.concat(
                                              m === -1 ? 1 : m,
                                              'px'
                                          ),
                                          to: ''.concat(m, 'px 0px'),
                                          attributeName: 'strokeDasharray',
                                          begin: g,
                                          duration: h,
                                          isActive: x,
                                          easing: b,
                                          children: i('path', {
                                              ...ve(a.props, !0),
                                              className: y,
                                              d: B4(E, k, S, P, f),
                                              ref: function (A) {
                                                  a.node = A
                                              },
                                          }),
                                      })
                                  },
                              })
                            : i('path', {
                                  ...ve(this.props, !0),
                                  className: y,
                                  d: B4(o, s, c, u, f),
                              })
                    },
                },
            ]),
            r
        )
    })(C.exports.PureComponent)
j6(yp, 'defaultProps', {
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    radius: 0,
    isAnimationActive: !1,
    isUpdateAnimationActive: !1,
    animationBegin: 0,
    animationDuration: 1500,
    animationEasing: 'ease',
})
function zl(e) {
    return (
        (zl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        zl(e)
    )
}
var iX = ['points', 'className', 'baseLinePoints', 'connectNulls']
function lX(e, t) {
    if (e == null) return {}
    var r = oX(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function oX(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function sX(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function z4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, uX(n.key), n)
    }
}
function cX(e, t, r) {
    return (
        t && z4(e.prototype, t),
        r && z4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function uX(e) {
    var t = dX(e, 'string')
    return zl(t) === 'symbol' ? t : String(t)
}
function dX(e, t) {
    if (zl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (zl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function fX(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && i1(e, t)
}
function i1(e, t) {
    return (
        (i1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        i1(e, t)
    )
}
function pX(e) {
    var t = gX()
    return function () {
        var n = Bd(e),
            a
        if (t) {
            var l = Bd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return hX(this, a)
    }
}
function hX(e, t) {
    if (t && (zl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return mX(e)
}
function mX(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function gX() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Bd(e) {
    return (
        (Bd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Bd(e)
    )
}
function V4(e) {
    return xX(e) || bX(e) || yX(e) || vX()
}
function vX() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function yX(e, t) {
    if (!!e) {
        if (typeof e == 'string') return l1(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return l1(e, t)
    }
}
function bX(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function xX(e) {
    if (Array.isArray(e)) return l1(e)
}
function l1(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
var U4 = function (t) {
        return t && t.x === +t.x && t.y === +t.y
    },
    wX = function () {
        var t =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : [],
            r = [[]]
        return (
            t.forEach(function (n) {
                U4(n)
                    ? r[r.length - 1].push(n)
                    : r[r.length - 1].length > 0 && r.push([])
            }),
            U4(t[0]) && r[r.length - 1].push(t[0]),
            r[r.length - 1].length <= 0 && (r = r.slice(0, -1)),
            r
        )
    },
    os = function (t, r) {
        var n = wX(t)
        r &&
            (n = [
                n.reduce(function (l, o) {
                    return [].concat(V4(l), V4(o))
                }, []),
            ])
        var a = n
            .map(function (l) {
                return l.reduce(function (o, s, c) {
                    return ''
                        .concat(o)
                        .concat(c === 0 ? 'M' : 'L')
                        .concat(s.x, ',')
                        .concat(s.y)
                }, '')
            })
            .join('')
        return n.length === 1 ? ''.concat(a, 'Z') : a
    },
    NX = function (t, r, n) {
        var a = os(t, n)
        return ''
            .concat(a.slice(-1) === 'Z' ? a.slice(0, -1) : a, 'L')
            .concat(os(r.reverse(), n).slice(1))
    },
    SX = (function (e) {
        fX(r, e)
        var t = pX(r)
        function r() {
            return sX(this, r), t.apply(this, arguments)
        }
        return (
            cX(r, [
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.points,
                            o = a.className,
                            s = a.baseLinePoints,
                            c = a.connectNulls,
                            u = lX(a, iX)
                        if (!l || !l.length) return null
                        var f = He('recharts-polygon', o)
                        if (s && s.length) {
                            var p = u.stroke && u.stroke !== 'none',
                                m = NX(l, s, c)
                            return d('g', {
                                className: f,
                                children: [
                                    i('path', {
                                        ...ve(u, !0),
                                        fill:
                                            m.slice(-1) === 'Z'
                                                ? u.fill
                                                : 'none',
                                        stroke: 'none',
                                        d: m,
                                    }),
                                    p
                                        ? i('path', {
                                              ...ve(u, !0),
                                              fill: 'none',
                                              d: os(l, c),
                                          })
                                        : null,
                                    p
                                        ? i('path', {
                                              ...ve(u, !0),
                                              fill: 'none',
                                              d: os(s, c),
                                          })
                                        : null,
                                ],
                            })
                        }
                        var v = os(l, c)
                        return i('path', {
                            ...ve(u, !0),
                            fill: v.slice(-1) === 'Z' ? u.fill : 'none',
                            className: f,
                            d: v,
                        })
                    },
                },
            ]),
            r
        )
    })(C.exports.PureComponent)
function Vl(e) {
    return (
        (Vl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Vl(e)
    )
}
function CX(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function W4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, _X(n.key), n)
    }
}
function PX(e, t, r) {
    return (
        t && W4(e.prototype, t),
        r && W4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function _X(e) {
    var t = AX(e, 'string')
    return Vl(t) === 'symbol' ? t : String(t)
}
function AX(e, t) {
    if (Vl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Vl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function EX(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && o1(e, t)
}
function o1(e, t) {
    return (
        (o1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        o1(e, t)
    )
}
function kX(e) {
    var t = MX()
    return function () {
        var n = zd(e),
            a
        if (t) {
            var l = zd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return OX(this, a)
    }
}
function OX(e, t) {
    if (t && (Vl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return TX(e)
}
function TX(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function MX() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function zd(e) {
    return (
        (zd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        zd(e)
    )
}
var bp = (function (e) {
    EX(r, e)
    var t = kX(r)
    function r() {
        return CX(this, r), t.apply(this, arguments)
    }
    return (
        PX(r, [
            {
                key: 'render',
                value: function () {
                    var a = this.props,
                        l = a.cx,
                        o = a.cy,
                        s = a.r,
                        c = a.className,
                        u = He('recharts-dot', c)
                    return l === +l && o === +o && s === +s
                        ? i('circle', {
                              ...ve(this.props),
                              ...nd(this.props),
                              className: u,
                              cx: l,
                              cy: o,
                              r: s,
                          })
                        : null
                },
            },
        ]),
        r
    )
})(C.exports.PureComponent)
function Ul(e) {
    return (
        (Ul =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Ul(e)
    )
}
function DX(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function H4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, B6(n.key), n)
    }
}
function $X(e, t, r) {
    return (
        t && H4(e.prototype, t),
        r && H4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function IX(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && s1(e, t)
}
function s1(e, t) {
    return (
        (s1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        s1(e, t)
    )
}
function RX(e) {
    var t = FX()
    return function () {
        var n = Vd(e),
            a
        if (t) {
            var l = Vd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return LX(this, a)
    }
}
function LX(e, t) {
    if (t && (Ul(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return jX(e)
}
function jX(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function FX() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Vd(e) {
    return (
        (Vd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Vd(e)
    )
}
function BX(e, t, r) {
    return (
        (t = B6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function B6(e) {
    var t = zX(e, 'string')
    return Ul(t) === 'symbol' ? t : String(t)
}
function zX(e, t) {
    if (Ul(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Ul(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var z6 = (function (e) {
    IX(r, e)
    var t = RX(r)
    function r() {
        return DX(this, r), t.apply(this, arguments)
    }
    return (
        $X(
            r,
            [
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.x,
                            o = a.y,
                            s = a.width,
                            c = a.height,
                            u = a.top,
                            f = a.left,
                            p = a.className
                        return !J(l) ||
                            !J(o) ||
                            !J(s) ||
                            !J(c) ||
                            !J(u) ||
                            !J(f)
                            ? null
                            : i('path', {
                                  ...ve(this.props, !0),
                                  className: He('recharts-cross', p),
                                  d: r.getPath(l, o, s, c, u, f),
                              })
                    },
                },
            ],
            [
                {
                    key: 'getPath',
                    value: function (a, l, o, s, c, u) {
                        return 'M'
                            .concat(a, ',')
                            .concat(c, 'v')
                            .concat(s, 'M')
                            .concat(u, ',')
                            .concat(l, 'h')
                            .concat(o)
                    },
                },
            ]
        ),
        r
    )
})(C.exports.PureComponent)
BX(z6, 'defaultProps', { x: 0, y: 0, top: 0, left: 0, width: 0, height: 0 })
var VX = op,
    UX = En,
    WX = E5
function HX(e, t) {
    return e && e.length ? VX(e, UX(t), WX) : void 0
}
var GX = HX,
    qX = op,
    KX = A5,
    YX = En
function XX(e, t) {
    return e && e.length ? qX(e, YX(t), KX) : void 0
}
var ZX = XX,
    JX = ['cx', 'cy', 'angle', 'ticks', 'axisLine'],
    QX = ['ticks', 'tick', 'angle', 'tickFormatter', 'stroke']
function Wl(e) {
    return (
        (Wl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Wl(e)
    )
}
function G4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Xa(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? G4(Object(r), !0).forEach(function (n) {
                  xp(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : G4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function q4(e, t) {
    if (e == null) return {}
    var r = eZ(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function eZ(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function tZ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function K4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, V6(n.key), n)
    }
}
function rZ(e, t, r) {
    return (
        t && K4(e.prototype, t),
        r && K4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function nZ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && c1(e, t)
}
function c1(e, t) {
    return (
        (c1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        c1(e, t)
    )
}
function aZ(e) {
    var t = oZ()
    return function () {
        var n = Ud(e),
            a
        if (t) {
            var l = Ud(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return iZ(this, a)
    }
}
function iZ(e, t) {
    if (t && (Wl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return lZ(e)
}
function lZ(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function oZ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Ud(e) {
    return (
        (Ud = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Ud(e)
    )
}
function xp(e, t, r) {
    return (
        (t = V6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function V6(e) {
    var t = sZ(e, 'string')
    return Wl(t) === 'symbol' ? t : String(t)
}
function sZ(e, t) {
    if (Wl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Wl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var wp = (function (e) {
    nZ(r, e)
    var t = aZ(r)
    function r() {
        return tZ(this, r), t.apply(this, arguments)
    }
    return (
        rZ(
            r,
            [
                {
                    key: 'getTickValueCoord',
                    value: function (a) {
                        var l = a.coordinate,
                            o = this.props,
                            s = o.angle,
                            c = o.cx,
                            u = o.cy
                        return Je(c, u, l, s)
                    },
                },
                {
                    key: 'getTickTextAnchor',
                    value: function () {
                        var a = this.props.orientation,
                            l
                        switch (a) {
                            case 'left':
                                l = 'end'
                                break
                            case 'right':
                                l = 'start'
                                break
                            default:
                                l = 'middle'
                                break
                        }
                        return l
                    },
                },
                {
                    key: 'getViewBox',
                    value: function () {
                        var a = this.props,
                            l = a.cx,
                            o = a.cy,
                            s = a.angle,
                            c = a.ticks,
                            u = ZX(c, function (p) {
                                return p.coordinate || 0
                            }),
                            f = GX(c, function (p) {
                                return p.coordinate || 0
                            })
                        return {
                            cx: l,
                            cy: o,
                            startAngle: s,
                            endAngle: s,
                            innerRadius: f.coordinate || 0,
                            outerRadius: u.coordinate || 0,
                        }
                    },
                },
                {
                    key: 'renderAxisLine',
                    value: function () {
                        var a = this.props,
                            l = a.cx,
                            o = a.cy,
                            s = a.angle,
                            c = a.ticks,
                            u = a.axisLine,
                            f = q4(a, JX),
                            p = c.reduce(
                                function (h, g) {
                                    return [
                                        Math.min(h[0], g.coordinate),
                                        Math.max(h[1], g.coordinate),
                                    ]
                                },
                                [1 / 0, -1 / 0]
                            ),
                            m = Je(l, o, p[0], s),
                            v = Je(l, o, p[1], s),
                            b = Xa(
                                Xa(Xa({}, ve(f)), {}, { fill: 'none' }, ve(u)),
                                {},
                                { x1: m.x, y1: m.y, x2: v.x, y2: v.y }
                            )
                        return i('line', {
                            className: 'recharts-polar-radius-axis-line',
                            ...b,
                        })
                    },
                },
                {
                    key: 'renderTicks',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.ticks,
                            s = l.tick,
                            c = l.angle,
                            u = l.tickFormatter,
                            f = l.stroke,
                            p = q4(l, QX),
                            m = this.getTickTextAnchor(),
                            v = ve(p),
                            b = ve(s),
                            h = o.map(function (g, x) {
                                var w = a.getTickValueCoord(g),
                                    y = Xa(
                                        Xa(
                                            Xa(
                                                Xa(
                                                    {
                                                        textAnchor: m,
                                                        transform: 'rotate('
                                                            .concat(
                                                                90 - c,
                                                                ', '
                                                            )
                                                            .concat(w.x, ', ')
                                                            .concat(w.y, ')'),
                                                    },
                                                    v
                                                ),
                                                {},
                                                { stroke: 'none', fill: f },
                                                b
                                            ),
                                            {},
                                            { index: x },
                                            w
                                        ),
                                        {},
                                        { payload: g }
                                    )
                                return i(
                                    Be,
                                    {
                                        className:
                                            'recharts-polar-radius-axis-tick',
                                        ..._i(a.props, g, x),
                                        children: r.renderTickItem(
                                            s,
                                            y,
                                            u ? u(g.value, x) : g.value
                                        ),
                                    },
                                    'tick-'.concat(x)
                                )
                            })
                        return i(Be, {
                            className: 'recharts-polar-radius-axis-ticks',
                            children: h,
                        })
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.ticks,
                            o = a.axisLine,
                            s = a.tick
                        return !l || !l.length
                            ? null
                            : d(Be, {
                                  className: 'recharts-polar-radius-axis',
                                  children: [
                                      o && this.renderAxisLine(),
                                      s && this.renderTicks(),
                                      wt.renderCallByParent(
                                          this.props,
                                          this.getViewBox()
                                      ),
                                  ],
                              })
                    },
                },
            ],
            [
                {
                    key: 'renderTickItem',
                    value: function (a, l, o) {
                        var s
                        return (
                            K.isValidElement(a)
                                ? (s = K.cloneElement(a, l))
                                : pe(a)
                                ? (s = a(l))
                                : (s = i(ja, {
                                      ...l,
                                      className:
                                          'recharts-polar-radius-axis-tick-value',
                                      children: o,
                                  })),
                            s
                        )
                    },
                },
            ]
        ),
        r
    )
})(C.exports.PureComponent)
xp(wp, 'displayName', 'PolarRadiusAxis')
xp(wp, 'axisType', 'radiusAxis')
xp(wp, 'defaultProps', {
    type: 'number',
    radiusAxisId: 0,
    cx: 0,
    cy: 0,
    angle: 0,
    orientation: 'right',
    stroke: '#ccc',
    axisLine: !0,
    tick: !0,
    tickCount: 5,
    domain: [0, 'auto'],
    allowDataOverflow: !1,
    scale: 'auto',
    allowDuplicatedCategory: !0,
})
function Hl(e) {
    return (
        (Hl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Hl(e)
    )
}
function Y4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Za(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? Y4(Object(r), !0).forEach(function (n) {
                  Np(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : Y4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function cZ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function X4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, U6(n.key), n)
    }
}
function uZ(e, t, r) {
    return (
        t && X4(e.prototype, t),
        r && X4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function dZ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && u1(e, t)
}
function u1(e, t) {
    return (
        (u1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        u1(e, t)
    )
}
function fZ(e) {
    var t = mZ()
    return function () {
        var n = Wd(e),
            a
        if (t) {
            var l = Wd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return pZ(this, a)
    }
}
function pZ(e, t) {
    if (t && (Hl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return hZ(e)
}
function hZ(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function mZ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Wd(e) {
    return (
        (Wd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Wd(e)
    )
}
function Np(e, t, r) {
    return (
        (t = U6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function U6(e) {
    var t = gZ(e, 'string')
    return Hl(t) === 'symbol' ? t : String(t)
}
function gZ(e, t) {
    if (Hl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Hl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var vZ = Math.PI / 180,
    Z4 = 1e-5,
    Sp = (function (e) {
        dZ(r, e)
        var t = fZ(r)
        function r() {
            return cZ(this, r), t.apply(this, arguments)
        }
        return (
            uZ(
                r,
                [
                    {
                        key: 'getTickLineCoord',
                        value: function (a) {
                            var l = this.props,
                                o = l.cx,
                                s = l.cy,
                                c = l.radius,
                                u = l.orientation,
                                f = l.tickSize,
                                p = f || 8,
                                m = Je(o, s, c, a.coordinate),
                                v = Je(
                                    o,
                                    s,
                                    c + (u === 'inner' ? -1 : 1) * p,
                                    a.coordinate
                                )
                            return { x1: m.x, y1: m.y, x2: v.x, y2: v.y }
                        },
                    },
                    {
                        key: 'getTickTextAnchor',
                        value: function (a) {
                            var l = this.props.orientation,
                                o = Math.cos(-a.coordinate * vZ),
                                s
                            return (
                                o > Z4
                                    ? (s = l === 'outer' ? 'start' : 'end')
                                    : o < -Z4
                                    ? (s = l === 'outer' ? 'end' : 'start')
                                    : (s = 'middle'),
                                s
                            )
                        },
                    },
                    {
                        key: 'renderAxisLine',
                        value: function () {
                            var a = this.props,
                                l = a.cx,
                                o = a.cy,
                                s = a.radius,
                                c = a.axisLine,
                                u = a.axisLineType,
                                f = Za(
                                    Za({}, ve(this.props)),
                                    {},
                                    { fill: 'none' },
                                    ve(c)
                                )
                            if (u === 'circle')
                                return i(bp, {
                                    className: 'recharts-polar-angle-axis-line',
                                    ...f,
                                    cx: l,
                                    cy: o,
                                    r: s,
                                })
                            var p = this.props.ticks,
                                m = p.map(function (v) {
                                    return Je(l, o, s, v.coordinate)
                                })
                            return i(SX, {
                                className: 'recharts-polar-angle-axis-line',
                                ...f,
                                points: m,
                            })
                        },
                    },
                    {
                        key: 'renderTicks',
                        value: function () {
                            var a = this,
                                l = this.props,
                                o = l.ticks,
                                s = l.tick,
                                c = l.tickLine,
                                u = l.tickFormatter,
                                f = l.stroke,
                                p = ve(this.props),
                                m = ve(s),
                                v = Za(Za({}, p), {}, { fill: 'none' }, ve(c)),
                                b = o.map(function (h, g) {
                                    var x = a.getTickLineCoord(h),
                                        w = a.getTickTextAnchor(h),
                                        y = Za(
                                            Za(
                                                Za({ textAnchor: w }, p),
                                                {},
                                                { stroke: 'none', fill: f },
                                                m
                                            ),
                                            {},
                                            {
                                                index: g,
                                                payload: h,
                                                x: x.x2,
                                                y: x.y2,
                                            }
                                        )
                                    return d(
                                        Be,
                                        {
                                            className:
                                                'recharts-polar-angle-axis-tick',
                                            ..._i(a.props, h, g),
                                            children: [
                                                c &&
                                                    i('line', {
                                                        className:
                                                            'recharts-polar-angle-axis-tick-line',
                                                        ...v,
                                                        ...x,
                                                    }),
                                                s &&
                                                    r.renderTickItem(
                                                        s,
                                                        y,
                                                        u
                                                            ? u(h.value, g)
                                                            : h.value
                                                    ),
                                            ],
                                        },
                                        'tick-'.concat(g)
                                    )
                                })
                            return i(Be, {
                                className: 'recharts-polar-angle-axis-ticks',
                                children: b,
                            })
                        },
                    },
                    {
                        key: 'render',
                        value: function () {
                            var a = this.props,
                                l = a.ticks,
                                o = a.radius,
                                s = a.axisLine
                            return o <= 0 || !l || !l.length
                                ? null
                                : d(Be, {
                                      className: 'recharts-polar-angle-axis',
                                      children: [
                                          s && this.renderAxisLine(),
                                          this.renderTicks(),
                                      ],
                                  })
                        },
                    },
                ],
                [
                    {
                        key: 'renderTickItem',
                        value: function (a, l, o) {
                            var s
                            return (
                                K.isValidElement(a)
                                    ? (s = K.cloneElement(a, l))
                                    : pe(a)
                                    ? (s = a(l))
                                    : (s = i(ja, {
                                          ...l,
                                          className:
                                              'recharts-polar-angle-axis-tick-value',
                                          children: o,
                                      })),
                                s
                            )
                        },
                    },
                ]
            ),
            r
        )
    })(C.exports.PureComponent)
Np(Sp, 'displayName', 'PolarAngleAxis')
Np(Sp, 'axisType', 'angleAxis')
Np(Sp, 'defaultProps', {
    type: 'category',
    angleAxisId: 0,
    scale: 'auto',
    cx: 0,
    cy: 0,
    domain: [0, 'auto'],
    orientation: 'outer',
    axisLine: !0,
    tickLine: !0,
    tickSize: 8,
    tick: !0,
    hide: !1,
    allowDuplicatedCategory: !0,
})
var yZ = S3,
    bZ = yZ(Object.getPrototypeOf, Object),
    xZ = bZ,
    wZ = ta,
    NZ = xZ,
    SZ = ra,
    CZ = '[object Object]',
    PZ = Function.prototype,
    _Z = Object.prototype,
    W6 = PZ.toString,
    AZ = _Z.hasOwnProperty,
    EZ = W6.call(Object)
function kZ(e) {
    if (!SZ(e) || wZ(e) != CZ) return !1
    var t = NZ(e)
    if (t === null) return !0
    var r = AZ.call(t, 'constructor') && t.constructor
    return typeof r == 'function' && r instanceof r && W6.call(r) == EZ
}
var OZ = kZ
function Gl(e) {
    return (
        (Gl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Gl(e)
    )
}
function J4(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function it(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? J4(Object(r), !0).forEach(function (n) {
                  Fr(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : J4(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function TZ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function Q4(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, H6(n.key), n)
    }
}
function MZ(e, t, r) {
    return (
        t && Q4(e.prototype, t),
        r && Q4(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function DZ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && d1(e, t)
}
function d1(e, t) {
    return (
        (d1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        d1(e, t)
    )
}
function $Z(e) {
    var t = RZ()
    return function () {
        var n = Hd(e),
            a
        if (t) {
            var l = Hd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return IZ(this, a)
    }
}
function IZ(e, t) {
    if (t && (Gl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return Wi(e)
}
function Wi(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function RZ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Hd(e) {
    return (
        (Hd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Hd(e)
    )
}
function Fr(e, t, r) {
    return (
        (t = H6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function H6(e) {
    var t = LZ(e, 'string')
    return Gl(t) === 'symbol' ? t : String(t)
}
function LZ(e, t) {
    if (Gl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Gl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var Vr = (function (e) {
    DZ(r, e)
    var t = $Z(r)
    function r(n) {
        var a
        return (
            TZ(this, r),
            (a = t.call(this, n)),
            Fr(Wi(a), 'pieRef', null),
            Fr(Wi(a), 'sectorRefs', []),
            Fr(Wi(a), 'id', so('recharts-pie-')),
            Fr(Wi(a), 'handleAnimationEnd', function () {
                var l = a.props.onAnimationEnd
                a.setState({ isAnimationFinished: !0 }), pe(l) && l()
            }),
            Fr(Wi(a), 'handleAnimationStart', function () {
                var l = a.props.onAnimationStart
                a.setState({ isAnimationFinished: !1 }), pe(l) && l()
            }),
            (a.state = {
                isAnimationFinished: !n.isAnimationActive,
                prevIsAnimationActive: n.isAnimationActive,
                prevAnimationId: n.animationId,
                sectorToFocus: 0,
            }),
            a
        )
    }
    return (
        MZ(
            r,
            [
                {
                    key: 'isActiveIndex',
                    value: function (a) {
                        var l = this.props.activeIndex
                        return Array.isArray(l) ? l.indexOf(a) !== -1 : a === l
                    },
                },
                {
                    key: 'hasActiveIndex',
                    value: function () {
                        var a = this.props.activeIndex
                        return Array.isArray(a) ? a.length !== 0 : a || a === 0
                    },
                },
                {
                    key: 'renderLabels',
                    value: function (a) {
                        var l = this.props.isAnimationActive
                        if (l && !this.state.isAnimationFinished) return null
                        var o = this.props,
                            s = o.label,
                            c = o.labelLine,
                            u = o.dataKey,
                            f = o.valueKey,
                            p = ve(this.props),
                            m = ve(s),
                            v = ve(c),
                            b = (s && s.offsetRadius) || 20,
                            h = a.map(function (g, x) {
                                var w = (g.startAngle + g.endAngle) / 2,
                                    y = Je(g.cx, g.cy, g.outerRadius + b, w),
                                    N = it(
                                        it(
                                            it(it({}, p), g),
                                            {},
                                            { stroke: 'none' },
                                            m
                                        ),
                                        {},
                                        {
                                            index: x,
                                            textAnchor: r.getTextAnchor(
                                                y.x,
                                                g.cx
                                            ),
                                        },
                                        y
                                    ),
                                    S = it(
                                        it(
                                            it(it({}, p), g),
                                            {},
                                            { fill: 'none', stroke: g.fill },
                                            v
                                        ),
                                        {},
                                        {
                                            index: x,
                                            points: [
                                                Je(
                                                    g.cx,
                                                    g.cy,
                                                    g.outerRadius,
                                                    w
                                                ),
                                                y,
                                            ],
                                            key: 'line',
                                        }
                                    ),
                                    P = u
                                return (
                                    ce(u) && ce(f)
                                        ? (P = 'value')
                                        : ce(u) && (P = f),
                                    d(
                                        Be,
                                        {
                                            children: [
                                                c &&
                                                    r.renderLabelLineItem(c, S),
                                                r.renderLabelItem(
                                                    s,
                                                    N,
                                                    Nt(g, P)
                                                ),
                                            ],
                                        },
                                        'label-'.concat(x)
                                    )
                                )
                            })
                        return i(Be, {
                            className: 'recharts-pie-labels',
                            children: h,
                        })
                    },
                },
                {
                    key: 'renderSectorsStatically',
                    value: function (a) {
                        var l = this,
                            o = this.props,
                            s = o.activeShape,
                            c = o.blendStroke,
                            u = o.inactiveShape
                        return a.map(function (f, p) {
                            var m = u && l.hasActiveIndex() ? u : null,
                                v = l.isActiveIndex(p) ? s : m,
                                b = it(
                                    it({}, f),
                                    {},
                                    { stroke: c ? f.fill : f.stroke }
                                )
                            return C.exports.createElement(
                                Be,
                                {
                                    ref: function (g) {
                                        g &&
                                            !l.sectorRefs.includes(g) &&
                                            l.sectorRefs.push(g)
                                    },
                                    tabIndex: -1,
                                    className: 'recharts-pie-sector',
                                    ..._i(l.props, f, p),
                                    key: 'sector-'.concat(p),
                                },
                                r.renderSectorItem(v, b)
                            )
                        })
                    },
                },
                {
                    key: 'renderSectorsWithAnimation',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.sectors,
                            s = l.isAnimationActive,
                            c = l.animationBegin,
                            u = l.animationDuration,
                            f = l.animationEasing,
                            p = l.animationId,
                            m = this.state,
                            v = m.prevSectors,
                            b = m.prevIsAnimationActive
                        return i(
                            Ra,
                            {
                                begin: c,
                                duration: u,
                                isActive: s,
                                easing: f,
                                from: { t: 0 },
                                to: { t: 1 },
                                onAnimationStart: this.handleAnimationStart,
                                onAnimationEnd: this.handleAnimationEnd,
                                children: function (h) {
                                    var g = h.t,
                                        x = [],
                                        w = o && o[0],
                                        y = w.startAngle
                                    return (
                                        o.forEach(function (N, S) {
                                            var P = v && v[S],
                                                E =
                                                    S > 0
                                                        ? hr(
                                                              N,
                                                              'paddingAngle',
                                                              0
                                                          )
                                                        : 0
                                            if (P) {
                                                var k = xr(
                                                        P.endAngle -
                                                            P.startAngle,
                                                        N.endAngle -
                                                            N.startAngle
                                                    ),
                                                    M = it(
                                                        it({}, N),
                                                        {},
                                                        {
                                                            startAngle: y + E,
                                                            endAngle:
                                                                y + k(g) + E,
                                                        }
                                                    )
                                                x.push(M), (y = M.endAngle)
                                            } else {
                                                var A = N.endAngle,
                                                    _ = N.startAngle,
                                                    O = xr(0, A - _),
                                                    T = O(g),
                                                    $ = it(
                                                        it({}, N),
                                                        {},
                                                        {
                                                            startAngle: y + E,
                                                            endAngle: y + T + E,
                                                        }
                                                    )
                                                x.push($), (y = $.endAngle)
                                            }
                                        }),
                                        i(Be, {
                                            children:
                                                a.renderSectorsStatically(x),
                                        })
                                    )
                                },
                            },
                            'pie-'.concat(p, '-').concat(b)
                        )
                    },
                },
                {
                    key: 'attachKeyboardHandlers',
                    value: function (a) {
                        var l = this
                        a.onkeydown = function (o) {
                            if (!o.altKey)
                                switch (o.key) {
                                    case 'ArrowLeft': {
                                        var s =
                                            ++l.state.sectorToFocus %
                                            l.sectorRefs.length
                                        l.sectorRefs[s].focus(),
                                            l.setState({ sectorToFocus: s })
                                        break
                                    }
                                    case 'ArrowRight': {
                                        var c =
                                            --l.state.sectorToFocus < 0
                                                ? l.sectorRefs.length - 1
                                                : l.state.sectorToFocus %
                                                  l.sectorRefs.length
                                        l.sectorRefs[c].focus(),
                                            l.setState({ sectorToFocus: c })
                                        break
                                    }
                                    case 'Escape': {
                                        l.sectorRefs[
                                            l.state.sectorToFocus
                                        ].blur(),
                                            l.setState({ sectorToFocus: 0 })
                                        break
                                    }
                                }
                        }
                    },
                },
                {
                    key: 'renderSectors',
                    value: function () {
                        var a = this.props,
                            l = a.sectors,
                            o = a.isAnimationActive,
                            s = this.state.prevSectors
                        return o && l && l.length && (!s || !lp(s, l))
                            ? this.renderSectorsWithAnimation()
                            : this.renderSectorsStatically(l)
                    },
                },
                {
                    key: 'componentDidMount',
                    value: function () {
                        this.pieRef && this.attachKeyboardHandlers(this.pieRef)
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.hide,
                            s = l.sectors,
                            c = l.className,
                            u = l.label,
                            f = l.cx,
                            p = l.cy,
                            m = l.innerRadius,
                            v = l.outerRadius,
                            b = l.isAnimationActive,
                            h = this.state.isAnimationFinished
                        if (
                            o ||
                            !s ||
                            !s.length ||
                            !J(f) ||
                            !J(p) ||
                            !J(m) ||
                            !J(v)
                        )
                            return null
                        var g = He('recharts-pie', c)
                        return d(Be, {
                            tabIndex: 0,
                            className: g,
                            ref: function (w) {
                                a.pieRef = w
                            },
                            children: [
                                this.renderSectors(),
                                u && this.renderLabels(s),
                                wt.renderCallByParent(this.props, null, !1),
                                (!b || h) &&
                                    Nn.renderCallByParent(this.props, s, !1),
                            ],
                        })
                    },
                },
            ],
            [
                {
                    key: 'getDerivedStateFromProps',
                    value: function (a, l) {
                        return l.prevIsAnimationActive !== a.isAnimationActive
                            ? {
                                  prevIsAnimationActive: a.isAnimationActive,
                                  prevAnimationId: a.animationId,
                                  curSectors: a.sectors,
                                  prevSectors: [],
                                  isAnimationFinished: !0,
                              }
                            : a.isAnimationActive &&
                              a.animationId !== l.prevAnimationId
                            ? {
                                  prevAnimationId: a.animationId,
                                  curSectors: a.sectors,
                                  prevSectors: l.curSectors,
                                  isAnimationFinished: !0,
                              }
                            : a.sectors !== l.curSectors
                            ? { curSectors: a.sectors, isAnimationFinished: !0 }
                            : null
                    },
                },
                {
                    key: 'getTextAnchor',
                    value: function (a, l) {
                        return a > l ? 'start' : a < l ? 'end' : 'middle'
                    },
                },
                {
                    key: 'renderLabelLineItem',
                    value: function (a, l) {
                        return K.isValidElement(a)
                            ? K.cloneElement(a, l)
                            : pe(a)
                            ? a(l)
                            : i(Ys, {
                                  ...l,
                                  type: 'linear',
                                  className: 'recharts-pie-label-line',
                              })
                    },
                },
                {
                    key: 'renderLabelItem',
                    value: function (a, l, o) {
                        if (K.isValidElement(a)) return K.cloneElement(a, l)
                        var s = o
                        return pe(a) && ((s = a(l)), K.isValidElement(s))
                            ? s
                            : i(ja, {
                                  ...l,
                                  alignmentBaseline: 'middle',
                                  className: 'recharts-pie-label-text',
                                  children: s,
                              })
                    },
                },
                {
                    key: 'renderSectorItem',
                    value: function (a, l) {
                        return K.isValidElement(a)
                            ? K.cloneElement(a, l)
                            : pe(a)
                            ? a(l)
                            : OZ(a)
                            ? i(Ld, { tabIndex: -1, ...l, ...a })
                            : i(Ld, { tabIndex: -1, ...l })
                    },
                },
            ]
        ),
        r
    )
})(C.exports.PureComponent)
Fr(Vr, 'displayName', 'Pie')
Fr(Vr, 'defaultProps', {
    stroke: '#fff',
    fill: '#808080',
    legendType: 'rect',
    cx: '50%',
    cy: '50%',
    startAngle: 0,
    endAngle: 360,
    innerRadius: 0,
    outerRadius: '80%',
    paddingAngle: 0,
    labelLine: !0,
    hide: !1,
    minAngle: 0,
    isAnimationActive: !xn.isSsr,
    animationBegin: 400,
    animationDuration: 1500,
    animationEasing: 'ease',
    nameKey: 'name',
    blendStroke: !1,
})
Fr(Vr, 'parseDeltaAngle', function (e, t) {
    var r = Yt(t - e),
        n = Math.min(Math.abs(t - e), 360)
    return r * n
})
Fr(Vr, 'getRealPieData', function (e) {
    var t = e.props,
        r = t.data,
        n = t.children,
        a = ve(e.props),
        l = Cr(n, pc)
    return r && r.length
        ? r.map(function (o, s) {
              return it(it(it({ payload: o }, a), o), l && l[s] && l[s].props)
          })
        : l && l.length
        ? l.map(function (o) {
              return it(it({}, a), o.props)
          })
        : []
})
Fr(Vr, 'parseCoordinateOfPie', function (e, t) {
    var r = t.top,
        n = t.left,
        a = t.width,
        l = t.height,
        o = T6(a, l),
        s = n + sr(e.props.cx, a, a / 2),
        c = r + sr(e.props.cy, l, l / 2),
        u = sr(e.props.innerRadius, o, 0),
        f = sr(e.props.outerRadius, o, o * 0.8),
        p = e.props.maxRadius || Math.sqrt(a * a + l * l) / 2
    return { cx: s, cy: c, innerRadius: u, outerRadius: f, maxRadius: p }
})
Fr(Vr, 'getComposedData', function (e) {
    var t = e.item,
        r = e.offset,
        n = Vr.getRealPieData(t)
    if (!n || !n.length) return null
    var a = t.props,
        l = a.cornerRadius,
        o = a.startAngle,
        s = a.endAngle,
        c = a.paddingAngle,
        u = a.dataKey,
        f = a.nameKey,
        p = a.valueKey,
        m = a.tooltipType,
        v = Math.abs(t.props.minAngle),
        b = Vr.parseCoordinateOfPie(t, r),
        h = Vr.parseDeltaAngle(o, s),
        g = Math.abs(h),
        x = u
    ce(u) && ce(p)
        ? (Rs(
              !1,
              `Use "dataKey" to specify the value of pie,
      the props "valueKey" will be deprecated in 1.1.0`
          ),
          (x = 'value'))
        : ce(u) &&
          (Rs(
              !1,
              `Use "dataKey" to specify the value of pie,
      the props "valueKey" will be deprecated in 1.1.0`
          ),
          (x = p))
    var w = n.filter(function (k) {
            return Nt(k, x, 0) !== 0
        }).length,
        y = (g >= 360 ? w : w - 1) * c,
        N = g - w * v - y,
        S = n.reduce(function (k, M) {
            var A = Nt(M, x, 0)
            return k + (J(A) ? A : 0)
        }, 0),
        P
    if (S > 0) {
        var E
        P = n.map(function (k, M) {
            var A = Nt(k, x, 0),
                _ = Nt(k, f, M),
                O = (J(A) ? A : 0) / S,
                T
            M ? (T = E.endAngle + Yt(h) * c * (A !== 0 ? 1 : 0)) : (T = o)
            var $ = T + Yt(h) * ((A !== 0 ? v : 0) + O * N),
                I = (T + $) / 2,
                j = (b.innerRadius + b.outerRadius) / 2,
                L = [{ name: _, value: A, payload: k, dataKey: x, type: m }],
                D = Je(b.cx, b.cy, j, I)
            return (
                (E = it(
                    it(
                        it(
                            {
                                percent: O,
                                cornerRadius: l,
                                name: _,
                                tooltipPayload: L,
                                midAngle: I,
                                middleRadius: j,
                                tooltipPosition: D,
                            },
                            k
                        ),
                        b
                    ),
                    {},
                    {
                        value: Nt(k, x),
                        startAngle: T,
                        endAngle: $,
                        payload: k,
                        paddingAngle: Yt(h) * c,
                    }
                )),
                E
            )
        })
    }
    return it(it({}, b), {}, { sectors: P, data: n })
})
var jZ = Math.ceil,
    FZ = Math.max
function BZ(e, t, r, n) {
    for (var a = -1, l = FZ(jZ((t - e) / (r || 1)), 0), o = Array(l); l--; )
        (o[n ? l : ++a] = e), (e += r)
    return o
}
var zZ = BZ,
    VZ = y5,
    ew = 1 / 0,
    UZ = 17976931348623157e292
function WZ(e) {
    if (!e) return e === 0 ? e : 0
    if (((e = VZ(e)), e === ew || e === -ew)) {
        var t = e < 0 ? -1 : 1
        return t * UZ
    }
    return e === e ? e : 0
}
var G6 = WZ,
    HZ = zZ,
    GZ = ip,
    Wh = G6
function qZ(e) {
    return function (t, r, n) {
        return (
            n && typeof n != 'number' && GZ(t, r, n) && (r = n = void 0),
            (t = Wh(t)),
            r === void 0 ? ((r = t), (t = 0)) : (r = Wh(r)),
            (n = n === void 0 ? (t < r ? 1 : -1) : Wh(n)),
            HZ(t, r, n, e)
        )
    }
}
var KZ = qZ,
    YZ = KZ,
    XZ = YZ(),
    Gd = XZ
function Xs(e) {
    return (
        (Xs =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Xs(e)
    )
}
function tw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function rw(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? tw(Object(r), !0).forEach(function (n) {
                  q6(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : tw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function q6(e, t, r) {
    return (
        (t = ZZ(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function ZZ(e) {
    var t = JZ(e, 'string')
    return Xs(t) === 'symbol' ? t : String(t)
}
function JZ(e, t) {
    if (Xs(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Xs(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var QZ = ['Webkit', 'Moz', 'O', 'ms'],
    eJ = function (t, r) {
        if (!t) return null
        var n = t.replace(/(\w)/, function (l) {
                return l.toUpperCase()
            }),
            a = QZ.reduce(function (l, o) {
                return rw(rw({}, l), {}, q6({}, o + n, r))
            }, {})
        return (a[t] = r), a
    }
function ql(e) {
    return (
        (ql =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        ql(e)
    )
}
function nw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Hh(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? nw(Object(r), !0).forEach(function (n) {
                  Ir(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : nw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function tJ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function aw(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, K6(n.key), n)
    }
}
function rJ(e, t, r) {
    return (
        t && aw(e.prototype, t),
        r && aw(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function nJ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && f1(e, t)
}
function f1(e, t) {
    return (
        (f1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        f1(e, t)
    )
}
function aJ(e) {
    var t = lJ()
    return function () {
        var n = qd(e),
            a
        if (t) {
            var l = qd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return iJ(this, a)
    }
}
function iJ(e, t) {
    if (t && (ql(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return fn(e)
}
function fn(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function lJ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function qd(e) {
    return (
        (qd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        qd(e)
    )
}
function Ir(e, t, r) {
    return (
        (t = K6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function K6(e) {
    var t = oJ(e, 'string')
    return ql(t) === 'symbol' ? t : String(t)
}
function oJ(e, t) {
    if (ql(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (ql(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var sJ = function (t) {
        var r = t.data,
            n = t.startIndex,
            a = t.endIndex,
            l = t.x,
            o = t.width,
            s = t.travellerWidth
        if (!r || !r.length) return {}
        var c = r.length,
            u = ls()
                .domain(Gd(0, c))
                .range([l, l + o - s]),
            f = u.domain().map(function (p) {
                return u(p)
            })
        return {
            isTextActive: !1,
            isSlideMoving: !1,
            isTravellerMoving: !1,
            startX: u(n),
            endX: u(a),
            scale: u,
            scaleValues: f,
        }
    },
    iw = function (t) {
        return t.changedTouches && !!t.changedTouches.length
    },
    Zs = (function (e) {
        nJ(r, e)
        var t = aJ(r)
        function r(n) {
            var a
            return (
                tJ(this, r),
                (a = t.call(this, n)),
                Ir(fn(a), 'handleDrag', function (l) {
                    a.leaveTimer &&
                        (clearTimeout(a.leaveTimer), (a.leaveTimer = null)),
                        a.state.isTravellerMoving
                            ? a.handleTravellerMove(l)
                            : a.state.isSlideMoving && a.handleSlideDrag(l)
                }),
                Ir(fn(a), 'handleTouchMove', function (l) {
                    l.changedTouches != null &&
                        l.changedTouches.length > 0 &&
                        a.handleDrag(l.changedTouches[0])
                }),
                Ir(fn(a), 'handleDragEnd', function () {
                    a.setState({ isTravellerMoving: !1, isSlideMoving: !1 }),
                        a.detachDragEndListener()
                }),
                Ir(fn(a), 'handleLeaveWrapper', function () {
                    ;(a.state.isTravellerMoving || a.state.isSlideMoving) &&
                        (a.leaveTimer = window.setTimeout(
                            a.handleDragEnd,
                            a.props.leaveTimeOut
                        ))
                }),
                Ir(fn(a), 'handleEnterSlideOrTraveller', function () {
                    a.setState({ isTextActive: !0 })
                }),
                Ir(fn(a), 'handleLeaveSlideOrTraveller', function () {
                    a.setState({ isTextActive: !1 })
                }),
                Ir(fn(a), 'handleSlideDragStart', function (l) {
                    var o = iw(l) ? l.changedTouches[0] : l
                    a.setState({
                        isTravellerMoving: !1,
                        isSlideMoving: !0,
                        slideMoveStartX: o.pageX,
                    }),
                        a.attachDragEndListener()
                }),
                (a.travellerDragStartHandlers = {
                    startX: a.handleTravellerDragStart.bind(fn(a), 'startX'),
                    endX: a.handleTravellerDragStart.bind(fn(a), 'endX'),
                }),
                (a.state = {}),
                a
            )
        }
        return (
            rJ(
                r,
                [
                    {
                        key: 'componentWillUnmount',
                        value: function () {
                            this.leaveTimer &&
                                (clearTimeout(this.leaveTimer),
                                (this.leaveTimer = null)),
                                this.detachDragEndListener()
                        },
                    },
                    {
                        key: 'getIndex',
                        value: function (a) {
                            var l = a.startX,
                                o = a.endX,
                                s = this.state.scaleValues,
                                c = this.props,
                                u = c.gap,
                                f = c.data,
                                p = f.length - 1,
                                m = Math.min(l, o),
                                v = Math.max(l, o),
                                b = r.getIndexInRange(s, m),
                                h = r.getIndexInRange(s, v)
                            return {
                                startIndex: b - (b % u),
                                endIndex: h === p ? p : h - (h % u),
                            }
                        },
                    },
                    {
                        key: 'getTextOfTick',
                        value: function (a) {
                            var l = this.props,
                                o = l.data,
                                s = l.tickFormatter,
                                c = l.dataKey,
                                u = Nt(o[a], c, a)
                            return pe(s) ? s(u, a) : u
                        },
                    },
                    {
                        key: 'attachDragEndListener',
                        value: function () {
                            window.addEventListener(
                                'mouseup',
                                this.handleDragEnd,
                                !0
                            ),
                                window.addEventListener(
                                    'touchend',
                                    this.handleDragEnd,
                                    !0
                                ),
                                window.addEventListener(
                                    'mousemove',
                                    this.handleDrag,
                                    !0
                                )
                        },
                    },
                    {
                        key: 'detachDragEndListener',
                        value: function () {
                            window.removeEventListener(
                                'mouseup',
                                this.handleDragEnd,
                                !0
                            ),
                                window.removeEventListener(
                                    'touchend',
                                    this.handleDragEnd,
                                    !0
                                ),
                                window.removeEventListener(
                                    'mousemove',
                                    this.handleDrag,
                                    !0
                                )
                        },
                    },
                    {
                        key: 'handleSlideDrag',
                        value: function (a) {
                            var l = this.state,
                                o = l.slideMoveStartX,
                                s = l.startX,
                                c = l.endX,
                                u = this.props,
                                f = u.x,
                                p = u.width,
                                m = u.travellerWidth,
                                v = u.startIndex,
                                b = u.endIndex,
                                h = u.onChange,
                                g = a.pageX - o
                            g > 0
                                ? (g = Math.min(
                                      g,
                                      f + p - m - c,
                                      f + p - m - s
                                  ))
                                : g < 0 && (g = Math.max(g, f - s, f - c))
                            var x = this.getIndex({
                                startX: s + g,
                                endX: c + g,
                            })
                            ;(x.startIndex !== v || x.endIndex !== b) &&
                                h &&
                                h(x),
                                this.setState({
                                    startX: s + g,
                                    endX: c + g,
                                    slideMoveStartX: a.pageX,
                                })
                        },
                    },
                    {
                        key: 'handleTravellerDragStart',
                        value: function (a, l) {
                            var o = iw(l) ? l.changedTouches[0] : l
                            this.setState({
                                isSlideMoving: !1,
                                isTravellerMoving: !0,
                                movingTravellerId: a,
                                brushMoveStartX: o.pageX,
                            }),
                                this.attachDragEndListener()
                        },
                    },
                    {
                        key: 'handleTravellerMove',
                        value: function (a) {
                            var l,
                                o = this.state,
                                s = o.brushMoveStartX,
                                c = o.movingTravellerId,
                                u = o.endX,
                                f = o.startX,
                                p = this.state[c],
                                m = this.props,
                                v = m.x,
                                b = m.width,
                                h = m.travellerWidth,
                                g = m.onChange,
                                x = m.gap,
                                w = m.data,
                                y = {
                                    startX: this.state.startX,
                                    endX: this.state.endX,
                                },
                                N = a.pageX - s
                            N > 0
                                ? (N = Math.min(N, v + b - h - p))
                                : N < 0 && (N = Math.max(N, v - p)),
                                (y[c] = p + N)
                            var S = this.getIndex(y),
                                P = S.startIndex,
                                E = S.endIndex,
                                k = function () {
                                    var A = w.length - 1
                                    return (
                                        (c === 'startX' &&
                                            (u > f
                                                ? P % x === 0
                                                : E % x === 0)) ||
                                        (u < f && E === A) ||
                                        (c === 'endX' &&
                                            (u > f
                                                ? E % x === 0
                                                : P % x === 0)) ||
                                        (u > f && E === A)
                                    )
                                }
                            this.setState(
                                ((l = {}),
                                Ir(l, c, p + N),
                                Ir(l, 'brushMoveStartX', a.pageX),
                                l),
                                function () {
                                    g && k() && g(S)
                                }
                            )
                        },
                    },
                    {
                        key: 'renderBackground',
                        value: function () {
                            var a = this.props,
                                l = a.x,
                                o = a.y,
                                s = a.width,
                                c = a.height,
                                u = a.fill,
                                f = a.stroke
                            return i('rect', {
                                stroke: f,
                                fill: u,
                                x: l,
                                y: o,
                                width: s,
                                height: c,
                            })
                        },
                    },
                    {
                        key: 'renderPanorama',
                        value: function () {
                            var a = this.props,
                                l = a.x,
                                o = a.y,
                                s = a.width,
                                c = a.height,
                                u = a.data,
                                f = a.children,
                                p = a.padding,
                                m = C.exports.Children.only(f)
                            return m
                                ? K.cloneElement(m, {
                                      x: l,
                                      y: o,
                                      width: s,
                                      height: c,
                                      margin: p,
                                      compact: !0,
                                      data: u,
                                  })
                                : null
                        },
                    },
                    {
                        key: 'renderTravellerLayer',
                        value: function (a, l) {
                            var o = this.props,
                                s = o.y,
                                c = o.travellerWidth,
                                u = o.height,
                                f = o.traveller,
                                p = Math.max(a, this.props.x),
                                m = Hh(
                                    Hh({}, ve(this.props)),
                                    {},
                                    { x: p, y: s, width: c, height: u }
                                )
                            return i(Be, {
                                className: 'recharts-brush-traveller',
                                onMouseEnter: this.handleEnterSlideOrTraveller,
                                onMouseLeave: this.handleLeaveSlideOrTraveller,
                                onMouseDown: this.travellerDragStartHandlers[l],
                                onTouchStart:
                                    this.travellerDragStartHandlers[l],
                                style: { cursor: 'col-resize' },
                                children: r.renderTraveller(f, m),
                            })
                        },
                    },
                    {
                        key: 'renderSlide',
                        value: function (a, l) {
                            var o = this.props,
                                s = o.y,
                                c = o.height,
                                u = o.stroke,
                                f = o.travellerWidth,
                                p = Math.min(a, l) + f,
                                m = Math.max(Math.abs(l - a) - f, 0)
                            return i('rect', {
                                className: 'recharts-brush-slide',
                                onMouseEnter: this.handleEnterSlideOrTraveller,
                                onMouseLeave: this.handleLeaveSlideOrTraveller,
                                onMouseDown: this.handleSlideDragStart,
                                onTouchStart: this.handleSlideDragStart,
                                style: { cursor: 'move' },
                                stroke: 'none',
                                fill: u,
                                fillOpacity: 0.2,
                                x: p,
                                y: s,
                                width: m,
                                height: c,
                            })
                        },
                    },
                    {
                        key: 'renderText',
                        value: function () {
                            var a = this.props,
                                l = a.startIndex,
                                o = a.endIndex,
                                s = a.y,
                                c = a.height,
                                u = a.travellerWidth,
                                f = a.stroke,
                                p = this.state,
                                m = p.startX,
                                v = p.endX,
                                b = 5,
                                h = { pointerEvents: 'none', fill: f }
                            return d(Be, {
                                className: 'recharts-brush-texts',
                                children: [
                                    i(ja, {
                                        textAnchor: 'end',
                                        verticalAnchor: 'middle',
                                        x: Math.min(m, v) - b,
                                        y: s + c / 2,
                                        ...h,
                                        children: this.getTextOfTick(l),
                                    }),
                                    i(ja, {
                                        textAnchor: 'start',
                                        verticalAnchor: 'middle',
                                        x: Math.max(m, v) + u + b,
                                        y: s + c / 2,
                                        ...h,
                                        children: this.getTextOfTick(o),
                                    }),
                                ],
                            })
                        },
                    },
                    {
                        key: 'render',
                        value: function () {
                            var a = this.props,
                                l = a.data,
                                o = a.className,
                                s = a.children,
                                c = a.x,
                                u = a.y,
                                f = a.width,
                                p = a.height,
                                m = a.alwaysShowText,
                                v = this.state,
                                b = v.startX,
                                h = v.endX,
                                g = v.isTextActive,
                                x = v.isSlideMoving,
                                w = v.isTravellerMoving
                            if (
                                !l ||
                                !l.length ||
                                !J(c) ||
                                !J(u) ||
                                !J(f) ||
                                !J(p) ||
                                f <= 0 ||
                                p <= 0
                            )
                                return null
                            var y = He('recharts-brush', o),
                                N = K.Children.count(s) === 1,
                                S = eJ('userSelect', 'none')
                            return d(Be, {
                                className: y,
                                onMouseLeave: this.handleLeaveWrapper,
                                onTouchMove: this.handleTouchMove,
                                style: S,
                                children: [
                                    this.renderBackground(),
                                    N && this.renderPanorama(),
                                    this.renderSlide(b, h),
                                    this.renderTravellerLayer(b, 'startX'),
                                    this.renderTravellerLayer(h, 'endX'),
                                    (g || x || w || m) && this.renderText(),
                                ],
                            })
                        },
                    },
                ],
                [
                    {
                        key: 'renderDefaultTraveller',
                        value: function (a) {
                            var l = a.x,
                                o = a.y,
                                s = a.width,
                                c = a.height,
                                u = a.stroke,
                                f = Math.floor(o + c / 2) - 1
                            return d(me, {
                                children: [
                                    i('rect', {
                                        x: l,
                                        y: o,
                                        width: s,
                                        height: c,
                                        fill: u,
                                        stroke: 'none',
                                    }),
                                    i('line', {
                                        x1: l + 1,
                                        y1: f,
                                        x2: l + s - 1,
                                        y2: f,
                                        fill: 'none',
                                        stroke: '#fff',
                                    }),
                                    i('line', {
                                        x1: l + 1,
                                        y1: f + 2,
                                        x2: l + s - 1,
                                        y2: f + 2,
                                        fill: 'none',
                                        stroke: '#fff',
                                    }),
                                ],
                            })
                        },
                    },
                    {
                        key: 'renderTraveller',
                        value: function (a, l) {
                            var o
                            return (
                                K.isValidElement(a)
                                    ? (o = K.cloneElement(a, l))
                                    : pe(a)
                                    ? (o = a(l))
                                    : (o = r.renderDefaultTraveller(l)),
                                o
                            )
                        },
                    },
                    {
                        key: 'getDerivedStateFromProps',
                        value: function (a, l) {
                            var o = a.data,
                                s = a.width,
                                c = a.x,
                                u = a.travellerWidth,
                                f = a.updateId,
                                p = a.startIndex,
                                m = a.endIndex
                            if (o !== l.prevData || f !== l.prevUpdateId)
                                return Hh(
                                    {
                                        prevData: o,
                                        prevTravellerWidth: u,
                                        prevUpdateId: f,
                                        prevX: c,
                                        prevWidth: s,
                                    },
                                    o && o.length
                                        ? sJ({
                                              data: o,
                                              width: s,
                                              x: c,
                                              travellerWidth: u,
                                              startIndex: p,
                                              endIndex: m,
                                          })
                                        : { scale: null, scaleValues: null }
                                )
                            if (
                                l.scale &&
                                (s !== l.prevWidth ||
                                    c !== l.prevX ||
                                    u !== l.prevTravellerWidth)
                            ) {
                                l.scale.range([c, c + s - u])
                                var v = l.scale.domain().map(function (b) {
                                    return l.scale(b)
                                })
                                return {
                                    prevData: o,
                                    prevTravellerWidth: u,
                                    prevUpdateId: f,
                                    prevX: c,
                                    prevWidth: s,
                                    startX: l.scale(a.startIndex),
                                    endX: l.scale(a.endIndex),
                                    scaleValues: v,
                                }
                            }
                            return null
                        },
                    },
                    {
                        key: 'getIndexInRange',
                        value: function (a, l) {
                            for (
                                var o = a.length, s = 0, c = o - 1;
                                c - s > 1;

                            ) {
                                var u = Math.floor((s + c) / 2)
                                a[u] > l ? (c = u) : (s = u)
                            }
                            return l >= a[c] ? c : s
                        },
                    },
                ]
            ),
            r
        )
    })(C.exports.PureComponent)
Ir(Zs, 'displayName', 'Brush')
Ir(Zs, 'defaultProps', {
    height: 40,
    travellerWidth: 5,
    gap: 1,
    fill: '#fff',
    stroke: '#666',
    padding: { top: 1, right: 1, bottom: 1, left: 1 },
    leaveTimeOut: 1e3,
    alwaysShowText: !1,
})
var cJ = uv
function uJ(e, t) {
    var r
    return (
        cJ(e, function (n, a, l) {
            return (r = t(n, a, l)), !r
        }),
        !!r
    )
}
var dJ = uJ,
    fJ = g3,
    pJ = En,
    hJ = dJ,
    mJ = Fe,
    gJ = ip
function vJ(e, t, r) {
    var n = mJ(e) ? fJ : hJ
    return r && gJ(e, t, r) && (t = void 0), n(e, pJ(t))
}
var yJ = vJ,
    Sn = function (t, r) {
        var n = t.alwaysShow,
            a = t.ifOverflow
        return n && (a = 'extendDomain'), a === r
    }
function bJ(e, t) {
    for (var r = -1, n = e == null ? 0 : e.length; ++r < n; )
        if (!t(e[r], r, e)) return !1
    return !0
}
var xJ = bJ,
    wJ = uv
function NJ(e, t) {
    var r = !0
    return (
        wJ(e, function (n, a, l) {
            return (r = !!t(n, a, l)), r
        }),
        r
    )
}
var SJ = NJ,
    CJ = xJ,
    PJ = SJ,
    _J = En,
    AJ = Fe,
    EJ = ip
function kJ(e, t, r) {
    var n = AJ(e) ? CJ : PJ
    return r && EJ(e, t, r) && (t = void 0), n(e, _J(t))
}
var Y6 = kJ,
    lw = m5
function OJ(e, t, r) {
    t == '__proto__' && lw
        ? lw(e, t, { configurable: !0, enumerable: !0, value: r, writable: !0 })
        : (e[t] = r)
}
var TJ = OJ,
    MJ = TJ,
    DJ = p5,
    $J = En
function IJ(e, t) {
    var r = {}
    return (
        (t = $J(t)),
        DJ(e, function (n, a, l) {
            MJ(r, a, t(n, a, l))
        }),
        r
    )
}
var RJ = IJ,
    LJ = ['value', 'background']
function Kl(e) {
    return (
        (Kl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Kl(e)
    )
}
function jJ(e, t) {
    if (e == null) return {}
    var r = FJ(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function FJ(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function ow(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function Et(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? ow(Object(r), !0).forEach(function (n) {
                  ma(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : ow(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function BJ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function sw(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, X6(n.key), n)
    }
}
function zJ(e, t, r) {
    return (
        t && sw(e.prototype, t),
        r && sw(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function VJ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && p1(e, t)
}
function p1(e, t) {
    return (
        (p1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        p1(e, t)
    )
}
function UJ(e) {
    var t = HJ()
    return function () {
        var n = Kd(e),
            a
        if (t) {
            var l = Kd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return WJ(this, a)
    }
}
function WJ(e, t) {
    if (t && (Kl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return Go(e)
}
function Go(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function HJ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Kd(e) {
    return (
        (Kd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Kd(e)
    )
}
function ma(e, t, r) {
    return (
        (t = X6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function X6(e) {
    var t = GJ(e, 'string')
    return Kl(t) === 'symbol' ? t : String(t)
}
function GJ(e, t) {
    if (Kl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Kl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var Fa = (function (e) {
    VJ(r, e)
    var t = UJ(r)
    function r() {
        var n
        BJ(this, r)
        for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
            l[o] = arguments[o]
        return (
            (n = t.call.apply(t, [this].concat(l))),
            ma(Go(n), 'state', { isAnimationFinished: !1 }),
            ma(Go(n), 'id', so('recharts-bar-')),
            ma(Go(n), 'handleAnimationEnd', function () {
                var s = n.props.onAnimationEnd
                n.setState({ isAnimationFinished: !0 }), s && s()
            }),
            ma(Go(n), 'handleAnimationStart', function () {
                var s = n.props.onAnimationStart
                n.setState({ isAnimationFinished: !1 }), s && s()
            }),
            n
        )
    }
    return (
        zJ(
            r,
            [
                {
                    key: 'renderRectanglesStatically',
                    value: function (a) {
                        var l = this,
                            o = this.props.shape,
                            s = ve(this.props)
                        return (
                            a &&
                            a.map(function (c, u) {
                                var f = Et(Et(Et({}, s), c), {}, { index: u })
                                return C.exports.createElement(
                                    Be,
                                    {
                                        className: 'recharts-bar-rectangle',
                                        ..._i(l.props, c, u),
                                        key: 'rectangle-'.concat(u),
                                        role: 'img',
                                    },
                                    r.renderRectangle(o, f)
                                )
                            })
                        )
                    },
                },
                {
                    key: 'renderRectanglesWithAnimation',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.data,
                            s = l.layout,
                            c = l.isAnimationActive,
                            u = l.animationBegin,
                            f = l.animationDuration,
                            p = l.animationEasing,
                            m = l.animationId,
                            v = this.state.prevData
                        return i(
                            Ra,
                            {
                                begin: u,
                                duration: f,
                                isActive: c,
                                easing: p,
                                from: { t: 0 },
                                to: { t: 1 },
                                onAnimationEnd: this.handleAnimationEnd,
                                onAnimationStart: this.handleAnimationStart,
                                children: function (b) {
                                    var h = b.t,
                                        g = o.map(function (x, w) {
                                            var y = v && v[w]
                                            if (y) {
                                                var N = xr(y.x, x.x),
                                                    S = xr(y.y, x.y),
                                                    P = xr(y.width, x.width),
                                                    E = xr(y.height, x.height)
                                                return Et(
                                                    Et({}, x),
                                                    {},
                                                    {
                                                        x: N(h),
                                                        y: S(h),
                                                        width: P(h),
                                                        height: E(h),
                                                    }
                                                )
                                            }
                                            if (s === 'horizontal') {
                                                var k = xr(0, x.height),
                                                    M = k(h)
                                                return Et(
                                                    Et({}, x),
                                                    {},
                                                    {
                                                        y: x.y + x.height - M,
                                                        height: M,
                                                    }
                                                )
                                            }
                                            var A = xr(0, x.width),
                                                _ = A(h)
                                            return Et(
                                                Et({}, x),
                                                {},
                                                { width: _ }
                                            )
                                        })
                                    return i(Be, {
                                        children:
                                            a.renderRectanglesStatically(g),
                                    })
                                },
                            },
                            'bar-'.concat(m)
                        )
                    },
                },
                {
                    key: 'renderRectangles',
                    value: function () {
                        var a = this.props,
                            l = a.data,
                            o = a.isAnimationActive,
                            s = this.state.prevData
                        return o && l && l.length && (!s || !lp(s, l))
                            ? this.renderRectanglesWithAnimation()
                            : this.renderRectanglesStatically(l)
                    },
                },
                {
                    key: 'renderBackground',
                    value: function () {
                        var a = this,
                            l = this.props.data,
                            o = ve(this.props.background)
                        return l.map(function (s, c) {
                            s.value
                            var u = s.background,
                                f = jJ(s, LJ)
                            if (!u) return null
                            var p = Et(
                                Et(
                                    Et(
                                        Et(Et({}, f), {}, { fill: '#eee' }, u),
                                        o
                                    ),
                                    _i(a.props, s, c)
                                ),
                                {},
                                {
                                    index: c,
                                    key: 'background-bar-'.concat(c),
                                    className:
                                        'recharts-bar-background-rectangle',
                                }
                            )
                            return r.renderRectangle(a.props.background, p)
                        })
                    },
                },
                {
                    key: 'renderErrorBar',
                    value: function () {
                        if (
                            this.props.isAnimationActive &&
                            !this.state.isAnimationFinished
                        )
                            return null
                        var a = this.props,
                            l = a.data,
                            o = a.xAxis,
                            s = a.yAxis,
                            c = a.layout,
                            u = a.children,
                            f = Cr(u, bc)
                        if (!f) return null
                        var p =
                            c === 'vertical' ? l[0].height / 2 : l[0].width / 2
                        function m(v, b) {
                            return {
                                x: v.x,
                                y: v.y,
                                value: v.value,
                                errorVal: Nt(v, b),
                            }
                        }
                        return f.map(function (v, b) {
                            return K.cloneElement(v, {
                                key: 'error-bar-'.concat(b),
                                data: l,
                                xAxis: o,
                                yAxis: s,
                                layout: c,
                                offset: p,
                                dataPointFormatter: m,
                            })
                        })
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.hide,
                            o = a.data,
                            s = a.className,
                            c = a.xAxis,
                            u = a.yAxis,
                            f = a.left,
                            p = a.top,
                            m = a.width,
                            v = a.height,
                            b = a.isAnimationActive,
                            h = a.background,
                            g = a.id
                        if (l || !o || !o.length) return null
                        var x = this.state.isAnimationFinished,
                            w = He('recharts-bar', s),
                            y =
                                (c && c.allowDataOverflow) ||
                                (u && u.allowDataOverflow),
                            N = ce(g) ? this.id : g
                        return d(Be, {
                            className: w,
                            children: [
                                y
                                    ? i('defs', {
                                          children: i('clipPath', {
                                              id: 'clipPath-'.concat(N),
                                              children: i('rect', {
                                                  x: f,
                                                  y: p,
                                                  width: m,
                                                  height: v,
                                              }),
                                          }),
                                      })
                                    : null,
                                d(Be, {
                                    className: 'recharts-bar-rectangles',
                                    clipPath: y
                                        ? 'url(#clipPath-'.concat(N, ')')
                                        : null,
                                    children: [
                                        h ? this.renderBackground() : null,
                                        this.renderRectangles(),
                                    ],
                                }),
                                this.renderErrorBar(),
                                (!b || x) &&
                                    Nn.renderCallByParent(this.props, o),
                            ],
                        })
                    },
                },
            ],
            [
                {
                    key: 'getDerivedStateFromProps',
                    value: function (a, l) {
                        return a.animationId !== l.prevAnimationId
                            ? {
                                  prevAnimationId: a.animationId,
                                  curData: a.data,
                                  prevData: l.curData,
                              }
                            : a.data !== l.curData
                            ? { curData: a.data }
                            : null
                    },
                },
                {
                    key: 'renderRectangle',
                    value: function (a, l) {
                        var o
                        return (
                            K.isValidElement(a)
                                ? (o = K.cloneElement(a, l))
                                : pe(a)
                                ? (o = a(l))
                                : (o = i(yp, { ...l })),
                            o
                        )
                    },
                },
            ]
        ),
        r
    )
})(C.exports.PureComponent)
ma(Fa, 'displayName', 'Bar')
ma(Fa, 'defaultProps', {
    xAxisId: 0,
    yAxisId: 0,
    legendType: 'rect',
    minPointSize: 0,
    hide: !1,
    data: [],
    layout: 'vertical',
    isAnimationActive: !xn.isSsr,
    animationBegin: 0,
    animationDuration: 400,
    animationEasing: 'ease',
})
ma(Fa, 'getComposedData', function (e) {
    var t = e.props,
        r = e.item,
        n = e.barPosition,
        a = e.bandSize,
        l = e.xAxis,
        o = e.yAxis,
        s = e.xAxisTicks,
        c = e.yAxisTicks,
        u = e.stackedData,
        f = e.dataStartIndex,
        p = e.displayedData,
        m = e.offset,
        v = OK(n, r)
    if (!v) return null
    var b = t.layout,
        h = r.props,
        g = h.dataKey,
        x = h.children,
        w = h.minPointSize,
        y = b === 'horizontal' ? o : l,
        N = u ? y.scale.domain() : null,
        S = LK({ numericAxis: y }),
        P = Cr(x, pc),
        E = p.map(function (k, M) {
            var A, _, O, T, $, I
            if (
                (u
                    ? (A = TK(u[f + M], N))
                    : ((A = Nt(k, g)), Fe(A) || (A = [S, A])),
                b === 'horizontal')
            ) {
                if (
                    ((_ = C4({
                        axis: l,
                        ticks: s,
                        bandSize: a,
                        offset: v.offset,
                        entry: k,
                        index: M,
                    })),
                    (O = o.scale(A[1])),
                    (T = v.size),
                    ($ = o.scale(A[0]) - o.scale(A[1])),
                    (I = { x: _, y: o.y, width: T, height: o.height }),
                    Math.abs(w) > 0 && Math.abs($) < Math.abs(w))
                ) {
                    var j = Yt($ || w) * (Math.abs(w) - Math.abs($))
                    ;(O -= j), ($ += j)
                }
            } else if (
                ((_ = l.scale(A[0])),
                (O = C4({
                    axis: o,
                    ticks: c,
                    bandSize: a,
                    offset: v.offset,
                    entry: k,
                    index: M,
                })),
                (T = l.scale(A[1]) - l.scale(A[0])),
                ($ = v.size),
                (I = { x: l.x, y: O, width: l.width, height: $ }),
                Math.abs(w) > 0 && Math.abs(T) < Math.abs(w))
            ) {
                var L = Yt(T || w) * (Math.abs(w) - Math.abs(T))
                T += L
            }
            return Et(
                Et(
                    Et({}, k),
                    {},
                    {
                        x: _,
                        y: O,
                        width: T,
                        height: $,
                        value: u ? A : A[1],
                        payload: k,
                        background: I,
                    },
                    P && P[M] && P[M].props
                ),
                {},
                {
                    tooltipPayload: [k6(r, k)],
                    tooltipPosition: { x: _ + T / 2, y: O + $ / 2 },
                }
            )
        })
    return Et({ data: E, layout: b }, m)
})
function Js(e) {
    return (
        (Js =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Js(e)
    )
}
function qJ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function cw(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, Z6(n.key), n)
    }
}
function KJ(e, t, r) {
    return (
        t && cw(e.prototype, t),
        r && cw(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function uw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function rn(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? uw(Object(r), !0).forEach(function (n) {
                  Cp(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : uw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Cp(e, t, r) {
    return (
        (t = Z6(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function Z6(e) {
    var t = YJ(e, 'string')
    return Js(t) === 'symbol' ? t : String(t)
}
function YJ(e, t) {
    if (Js(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Js(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var J6 = function (t, r, n, a, l) {
        var o = t.width,
            s = t.height,
            c = t.layout,
            u = t.children,
            f = Object.keys(r),
            p = {
                left: n.left,
                leftMirror: n.left,
                right: o - n.right,
                rightMirror: o - n.right,
                top: n.top,
                topMirror: n.top,
                bottom: s - n.bottom,
                bottomMirror: s - n.bottom,
            },
            m = !!Ln(u, Fa)
        return f.reduce(function (v, b) {
            var h = r[b],
                g = h.orientation,
                x = h.domain,
                w = h.padding,
                y = w === void 0 ? {} : w,
                N = h.mirror,
                S = h.reversed,
                P = ''.concat(g).concat(N ? 'Mirror' : ''),
                E,
                k,
                M,
                A,
                _
            if (
                h.type === 'number' &&
                (h.padding === 'gap' || h.padding === 'no-gap')
            ) {
                var O = x[1] - x[0],
                    T = 1 / 0,
                    $ = h.categoricalDomain.sort()
                $.forEach(function (B, X) {
                    X > 0 && (T = Math.min((B || 0) - ($[X - 1] || 0), T))
                })
                var I = T / O,
                    j = h.layout === 'vertical' ? n.height : n.width
                if (
                    (h.padding === 'gap' && (E = (I * j) / 2),
                    h.padding === 'no-gap')
                ) {
                    var L = sr(t.barCategoryGap, I * j),
                        D = (I * j) / 2
                    E = D - L - ((D - L) / j) * L
                }
            }
            a === 'xAxis'
                ? (k = [
                      n.left + (y.left || 0) + (E || 0),
                      n.left + n.width - (y.right || 0) - (E || 0),
                  ])
                : a === 'yAxis'
                ? (k =
                      c === 'horizontal'
                          ? [
                                n.top + n.height - (y.bottom || 0),
                                n.top + (y.top || 0),
                            ]
                          : [
                                n.top + (y.top || 0) + (E || 0),
                                n.top + n.height - (y.bottom || 0) - (E || 0),
                            ])
                : (k = h.range),
                S && (k = [k[1], k[0]])
            var R = C6(h, l, m),
                V = R.scale,
                G = R.realScaleType
            V.domain(x).range(k), P6(V)
            var ee = _6(V, rn(rn({}, h), {}, { realScaleType: G }))
            a === 'xAxis'
                ? ((_ = (g === 'top' && !N) || (g === 'bottom' && N)),
                  (M = n.left),
                  (A = p[P] - _ * h.height))
                : a === 'yAxis' &&
                  ((_ = (g === 'left' && !N) || (g === 'right' && N)),
                  (M = p[P] - _ * h.width),
                  (A = n.top))
            var Q = rn(
                rn(rn({}, h), ee),
                {},
                {
                    realScaleType: G,
                    x: M,
                    y: A,
                    scale: V,
                    width: a === 'xAxis' ? n.width : h.width,
                    height: a === 'yAxis' ? n.height : h.height,
                }
            )
            return (
                (Q.bandSize = $d(Q, ee)),
                !h.hide && a === 'xAxis'
                    ? (p[P] += (_ ? -1 : 1) * Q.height)
                    : h.hide || (p[P] += (_ ? -1 : 1) * Q.width),
                rn(rn({}, v), {}, Cp({}, b, Q))
            )
        }, {})
    },
    Q6 = function (t, r) {
        var n = t.x,
            a = t.y,
            l = r.x,
            o = r.y
        return {
            x: Math.min(n, l),
            y: Math.min(a, o),
            width: Math.abs(l - n),
            height: Math.abs(o - a),
        }
    },
    XJ = function (t) {
        var r = t.x1,
            n = t.y1,
            a = t.x2,
            l = t.y2
        return Q6({ x: r, y: n }, { x: a, y: l })
    },
    eS = (function () {
        function e(t) {
            qJ(this, e), (this.scale = t)
        }
        return (
            KJ(
                e,
                [
                    {
                        key: 'domain',
                        get: function () {
                            return this.scale.domain
                        },
                    },
                    {
                        key: 'range',
                        get: function () {
                            return this.scale.range
                        },
                    },
                    {
                        key: 'rangeMin',
                        get: function () {
                            return this.range()[0]
                        },
                    },
                    {
                        key: 'rangeMax',
                        get: function () {
                            return this.range()[1]
                        },
                    },
                    {
                        key: 'bandwidth',
                        get: function () {
                            return this.scale.bandwidth
                        },
                    },
                    {
                        key: 'apply',
                        value: function (r) {
                            var n =
                                    arguments.length > 1 &&
                                    arguments[1] !== void 0
                                        ? arguments[1]
                                        : {},
                                a = n.bandAware,
                                l = n.position
                            if (r !== void 0) {
                                if (l)
                                    switch (l) {
                                        case 'start':
                                            return this.scale(r)
                                        case 'middle': {
                                            var o = this.bandwidth
                                                ? this.bandwidth() / 2
                                                : 0
                                            return this.scale(r) + o
                                        }
                                        case 'end': {
                                            var s = this.bandwidth
                                                ? this.bandwidth()
                                                : 0
                                            return this.scale(r) + s
                                        }
                                        default:
                                            return this.scale(r)
                                    }
                                if (a) {
                                    var c = this.bandwidth
                                        ? this.bandwidth() / 2
                                        : 0
                                    return this.scale(r) + c
                                }
                                return this.scale(r)
                            }
                        },
                    },
                    {
                        key: 'isInRange',
                        value: function (r) {
                            var n = this.range(),
                                a = n[0],
                                l = n[n.length - 1]
                            return a <= l ? r >= a && r <= l : r >= l && r <= a
                        },
                    },
                ],
                [
                    {
                        key: 'create',
                        value: function (r) {
                            return new e(r)
                        },
                    },
                ]
            ),
            e
        )
    })()
Cp(eS, 'EPS', 1e-4)
var Bv = function (t) {
    var r = Object.keys(t).reduce(function (n, a) {
        return rn(rn({}, n), {}, Cp({}, a, eS.create(t[a])))
    }, {})
    return rn(
        rn({}, r),
        {},
        {
            apply: function (a) {
                var l =
                        arguments.length > 1 && arguments[1] !== void 0
                            ? arguments[1]
                            : {},
                    o = l.bandAware,
                    s = l.position
                return RJ(a, function (c, u) {
                    return r[u].apply(c, { bandAware: o, position: s })
                })
            },
            isInRange: function (a) {
                return Y6(a, function (l, o) {
                    return r[o].isInRange(l)
                })
            },
        }
    )
}
function Qs(e) {
    return (
        (Qs =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Qs(e)
    )
}
function dw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function fw(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? dw(Object(r), !0).forEach(function (n) {
                  ZJ(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : dw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function ZJ(e, t, r) {
    return (
        (t = JJ(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function JJ(e) {
    var t = QJ(e, 'string')
    return Qs(t) === 'symbol' ? t : String(t)
}
function QJ(e, t) {
    if (Qs(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Qs(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
function eQ(e, t) {
    return aQ(e) || nQ(e, t) || rQ(e, t) || tQ()
}
function tQ() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function rQ(e, t) {
    if (!!e) {
        if (typeof e == 'string') return pw(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return pw(e, t)
    }
}
function pw(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function nQ(e, t) {
    var r =
        e == null
            ? null
            : (typeof Symbol < 'u' && e[Symbol.iterator]) || e['@@iterator']
    if (r != null) {
        var n,
            a,
            l,
            o,
            s = [],
            c = !0,
            u = !1
        try {
            if (((l = (r = r.call(e)).next), t === 0)) {
                if (Object(r) !== r) return
                c = !1
            } else
                for (
                    ;
                    !(c = (n = l.call(r)).done) &&
                    (s.push(n.value), s.length !== t);
                    c = !0
                );
        } catch (f) {
            ;(u = !0), (a = f)
        } finally {
            try {
                if (
                    !c &&
                    r.return != null &&
                    ((o = r.return()), Object(o) !== o)
                )
                    return
            } finally {
                if (u) throw a
            }
        }
        return s
    }
}
function aQ(e) {
    if (Array.isArray(e)) return e
}
var iQ = function (t, r) {
        var n
        return (
            K.isValidElement(t)
                ? (n = K.cloneElement(t, r))
                : pe(t)
                ? (n = t(r))
                : (n = i('line', {
                      ...r,
                      className: 'recharts-reference-line-line',
                  })),
            n
        )
    },
    lQ = function (t, r, n, a, l) {
        var o = l.viewBox,
            s = o.x,
            c = o.y,
            u = o.width,
            f = o.height,
            p = l.position
        if (n) {
            var m = l.y,
                v = l.yAxis.orientation,
                b = t.y.apply(m, { position: p })
            if (Sn(l, 'discard') && !t.y.isInRange(b)) return null
            var h = [
                { x: s + u, y: b },
                { x: s, y: b },
            ]
            return v === 'left' ? h.reverse() : h
        }
        if (r) {
            var g = l.x,
                x = l.xAxis.orientation,
                w = t.x.apply(g, { position: p })
            if (Sn(l, 'discard') && !t.x.isInRange(w)) return null
            var y = [
                { x: w, y: c + f },
                { x: w, y: c },
            ]
            return x === 'top' ? y.reverse() : y
        }
        if (a) {
            var N = l.segment,
                S = N.map(function (P) {
                    return t.apply(P, { position: p })
                })
            return Sn(l, 'discard') &&
                yJ(S, function (P) {
                    return !t.isInRange(P)
                })
                ? null
                : S
        }
        return null
    }
function zv(e) {
    var t = e.x,
        r = e.y,
        n = e.segment,
        a = e.xAxis,
        l = e.yAxis,
        o = e.shape,
        s = e.className,
        c = e.alwaysShow,
        u = e.clipPathId
    Rs(
        c === void 0,
        'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.'
    )
    var f = Bv({ x: a.scale, y: l.scale }),
        p = Ct(t),
        m = Ct(r),
        v = n && n.length === 2,
        b = lQ(f, p, m, v, e)
    if (!b) return null
    var h = eQ(b, 2),
        g = h[0],
        x = g.x,
        w = g.y,
        y = h[1],
        N = y.x,
        S = y.y,
        P = Sn(e, 'hidden') ? 'url(#'.concat(u, ')') : void 0,
        E = fw(
            fw({ clipPath: P }, ve(e, !0)),
            {},
            { x1: x, y1: w, x2: N, y2: S }
        )
    return d(Be, {
        className: He('recharts-reference-line', s),
        children: [
            iQ(o, E),
            wt.renderCallByParent(e, XJ({ x1: x, y1: w, x2: N, y2: S })),
        ],
    })
}
zv.displayName = 'ReferenceLine'
zv.defaultProps = {
    isFront: !1,
    ifOverflow: 'discard',
    xAxisId: 0,
    yAxisId: 0,
    fill: 'none',
    stroke: '#ccc',
    fillOpacity: 1,
    strokeWidth: 1,
    position: 'middle',
}
function ec(e) {
    return (
        (ec =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        ec(e)
    )
}
function hw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function mw(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? hw(Object(r), !0).forEach(function (n) {
                  oQ(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : hw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function oQ(e, t, r) {
    return (
        (t = sQ(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function sQ(e) {
    var t = cQ(e, 'string')
    return ec(t) === 'symbol' ? t : String(t)
}
function cQ(e, t) {
    if (ec(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (ec(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var uQ = function (t) {
    var r = t.x,
        n = t.y,
        a = t.xAxis,
        l = t.yAxis,
        o = Bv({ x: a.scale, y: l.scale }),
        s = o.apply({ x: r, y: n }, { bandAware: !0 })
    return Sn(t, 'discard') && !o.isInRange(s) ? null : s
}
function xc(e) {
    var t = e.x,
        r = e.y,
        n = e.r,
        a = e.alwaysShow,
        l = e.clipPathId,
        o = Ct(t),
        s = Ct(r)
    if (
        (Rs(
            a === void 0,
            'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.'
        ),
        !o || !s)
    )
        return null
    var c = uQ(e)
    if (!c) return null
    var u = c.x,
        f = c.y,
        p = e.shape,
        m = e.className,
        v = Sn(e, 'hidden') ? 'url(#'.concat(l, ')') : void 0,
        b = mw(mw({ clipPath: v }, ve(e, !0)), {}, { cx: u, cy: f })
    return d(Be, {
        className: He('recharts-reference-dot', m),
        children: [
            xc.renderDot(p, b),
            wt.renderCallByParent(e, {
                x: u - n,
                y: f - n,
                width: 2 * n,
                height: 2 * n,
            }),
        ],
    })
}
xc.displayName = 'ReferenceDot'
xc.defaultProps = {
    isFront: !1,
    ifOverflow: 'discard',
    xAxisId: 0,
    yAxisId: 0,
    r: 10,
    fill: '#fff',
    stroke: '#ccc',
    fillOpacity: 1,
    strokeWidth: 1,
}
xc.renderDot = function (e, t) {
    var r
    return (
        K.isValidElement(e)
            ? (r = K.cloneElement(e, t))
            : pe(e)
            ? (r = e(t))
            : (r = i(bp, {
                  ...t,
                  cx: t.cx,
                  cy: t.cy,
                  className: 'recharts-reference-dot-dot',
              })),
        r
    )
}
function tc(e) {
    return (
        (tc =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        tc(e)
    )
}
function gw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function vw(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? gw(Object(r), !0).forEach(function (n) {
                  dQ(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : gw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function dQ(e, t, r) {
    return (
        (t = fQ(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function fQ(e) {
    var t = pQ(e, 'string')
    return tc(t) === 'symbol' ? t : String(t)
}
function pQ(e, t) {
    if (tc(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (tc(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var hQ = function (t, r, n, a, l) {
    var o = l.x1,
        s = l.x2,
        c = l.y1,
        u = l.y2,
        f = l.xAxis,
        p = l.yAxis
    if (!f || !p) return null
    var m = Bv({ x: f.scale, y: p.scale }),
        v = {
            x: t ? m.x.apply(o, { position: 'start' }) : m.x.rangeMin,
            y: n ? m.y.apply(c, { position: 'start' }) : m.y.rangeMin,
        },
        b = {
            x: r ? m.x.apply(s, { position: 'end' }) : m.x.rangeMax,
            y: a ? m.y.apply(u, { position: 'end' }) : m.y.rangeMax,
        }
    return Sn(l, 'discard') && (!m.isInRange(v) || !m.isInRange(b))
        ? null
        : Q6(v, b)
}
function wc(e) {
    var t = e.x1,
        r = e.x2,
        n = e.y1,
        a = e.y2,
        l = e.className,
        o = e.alwaysShow,
        s = e.clipPathId
    Rs(
        o === void 0,
        'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.'
    )
    var c = Ct(t),
        u = Ct(r),
        f = Ct(n),
        p = Ct(a),
        m = e.shape
    if (!c && !u && !f && !p && !m) return null
    var v = hQ(c, u, f, p, e)
    if (!v && !m) return null
    var b = Sn(e, 'hidden') ? 'url(#'.concat(s, ')') : void 0
    return d(Be, {
        className: He('recharts-reference-area', l),
        children: [
            wc.renderRect(m, vw(vw({ clipPath: b }, ve(e, !0)), v)),
            wt.renderCallByParent(e, v),
        ],
    })
}
wc.displayName = 'ReferenceArea'
wc.defaultProps = {
    isFront: !1,
    ifOverflow: 'discard',
    xAxisId: 0,
    yAxisId: 0,
    r: 10,
    fill: '#ccc',
    fillOpacity: 0.5,
    stroke: 'none',
    strokeWidth: 1,
}
wc.renderRect = function (e, t) {
    var r
    return (
        K.isValidElement(e)
            ? (r = K.cloneElement(e, t))
            : pe(e)
            ? (r = e(t))
            : (r = i(yp, { ...t, className: 'recharts-reference-area-rect' })),
        r
    )
}
var mQ = ['viewBox'],
    gQ = ['viewBox'],
    vQ = ['ticks']
function Yl(e) {
    return (
        (Yl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Yl(e)
    )
}
function yw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function je(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? yw(Object(r), !0).forEach(function (n) {
                  Vv(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : yw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Gh(e, t) {
    if (e == null) return {}
    var r = yQ(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function yQ(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function bQ(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function bw(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, tS(n.key), n)
    }
}
function xQ(e, t, r) {
    return (
        t && bw(e.prototype, t),
        r && bw(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function wQ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && h1(e, t)
}
function h1(e, t) {
    return (
        (h1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        h1(e, t)
    )
}
function NQ(e) {
    var t = PQ()
    return function () {
        var n = Yd(e),
            a
        if (t) {
            var l = Yd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return SQ(this, a)
    }
}
function SQ(e, t) {
    if (t && (Yl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return CQ(e)
}
function CQ(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function PQ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Yd(e) {
    return (
        (Yd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Yd(e)
    )
}
function Vv(e, t, r) {
    return (
        (t = tS(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function tS(e) {
    var t = _Q(e, 'string')
    return Yl(t) === 'symbol' ? t : String(t)
}
function _Q(e, t) {
    if (Yl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Yl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var ci = (function (e) {
    wQ(r, e)
    var t = NQ(r)
    function r(n) {
        var a
        return (
            bQ(this, r),
            (a = t.call(this, n)),
            (a.state = { fontSize: '', letterSpacing: '' }),
            a
        )
    }
    return (
        xQ(
            r,
            [
                {
                    key: 'shouldComponentUpdate',
                    value: function (a, l) {
                        var o = a.viewBox,
                            s = Gh(a, mQ),
                            c = this.props,
                            u = c.viewBox,
                            f = Gh(c, gQ)
                        return !pl(o, u) || !pl(s, f) || !pl(l, this.state)
                    },
                },
                {
                    key: 'componentDidMount',
                    value: function () {
                        var a = this.layerReference
                        if (!!a) {
                            var l = a.getElementsByClassName(
                                'recharts-cartesian-axis-tick-value'
                            )[0]
                            l &&
                                this.setState({
                                    fontSize:
                                        window.getComputedStyle(l).fontSize,
                                    letterSpacing:
                                        window.getComputedStyle(l)
                                            .letterSpacing,
                                })
                        }
                    },
                },
                {
                    key: 'getTickLineCoord',
                    value: function (a) {
                        var l = this.props,
                            o = l.x,
                            s = l.y,
                            c = l.width,
                            u = l.height,
                            f = l.orientation,
                            p = l.tickSize,
                            m = l.mirror,
                            v = l.tickMargin,
                            b,
                            h,
                            g,
                            x,
                            w,
                            y,
                            N = m ? -1 : 1,
                            S = a.tickSize || p,
                            P = J(a.tickCoord) ? a.tickCoord : a.coordinate
                        switch (f) {
                            case 'top':
                                ;(b = h = a.coordinate),
                                    (x = s + +!m * u),
                                    (g = x - N * S),
                                    (y = g - N * v),
                                    (w = P)
                                break
                            case 'left':
                                ;(g = x = a.coordinate),
                                    (h = o + +!m * c),
                                    (b = h - N * S),
                                    (w = b - N * v),
                                    (y = P)
                                break
                            case 'right':
                                ;(g = x = a.coordinate),
                                    (h = o + +m * c),
                                    (b = h + N * S),
                                    (w = b + N * v),
                                    (y = P)
                                break
                            default:
                                ;(b = h = a.coordinate),
                                    (x = s + +m * u),
                                    (g = x + N * S),
                                    (y = g + N * v),
                                    (w = P)
                                break
                        }
                        return {
                            line: { x1: b, y1: g, x2: h, y2: x },
                            tick: { x: w, y },
                        }
                    },
                },
                {
                    key: 'getTickTextAnchor',
                    value: function () {
                        var a = this.props,
                            l = a.orientation,
                            o = a.mirror,
                            s
                        switch (l) {
                            case 'left':
                                s = o ? 'start' : 'end'
                                break
                            case 'right':
                                s = o ? 'end' : 'start'
                                break
                            default:
                                s = 'middle'
                                break
                        }
                        return s
                    },
                },
                {
                    key: 'getTickVerticalAnchor',
                    value: function () {
                        var a = this.props,
                            l = a.orientation,
                            o = a.mirror,
                            s = 'end'
                        switch (l) {
                            case 'left':
                            case 'right':
                                s = 'middle'
                                break
                            case 'top':
                                s = o ? 'start' : 'end'
                                break
                            default:
                                s = o ? 'end' : 'start'
                                break
                        }
                        return s
                    },
                },
                {
                    key: 'renderAxisLine',
                    value: function () {
                        var a = this.props,
                            l = a.x,
                            o = a.y,
                            s = a.width,
                            c = a.height,
                            u = a.orientation,
                            f = a.mirror,
                            p = a.axisLine,
                            m = je(
                                je(je({}, ve(this.props)), ve(p)),
                                {},
                                { fill: 'none' }
                            )
                        if (u === 'top' || u === 'bottom') {
                            var v = +(
                                (u === 'top' && !f) ||
                                (u === 'bottom' && f)
                            )
                            m = je(
                                je({}, m),
                                {},
                                {
                                    x1: l,
                                    y1: o + v * c,
                                    x2: l + s,
                                    y2: o + v * c,
                                }
                            )
                        } else {
                            var b = +(
                                (u === 'left' && !f) ||
                                (u === 'right' && f)
                            )
                            m = je(
                                je({}, m),
                                {},
                                {
                                    x1: l + b * s,
                                    y1: o,
                                    x2: l + b * s,
                                    y2: o + c,
                                }
                            )
                        }
                        return i('line', {
                            ...m,
                            className: He(
                                'recharts-cartesian-axis-line',
                                hr(p, 'className')
                            ),
                        })
                    },
                },
                {
                    key: 'renderTicks',
                    value: function (a, l, o) {
                        var s = this,
                            c = this.props,
                            u = c.tickLine,
                            f = c.stroke,
                            p = c.tick,
                            m = c.tickFormatter,
                            v = c.unit,
                            b = r.getTicks(
                                je(je({}, this.props), {}, { ticks: a }),
                                l,
                                o
                            ),
                            h = this.getTickTextAnchor(),
                            g = this.getTickVerticalAnchor(),
                            x = ve(this.props),
                            w = ve(p),
                            y = je(je({}, x), {}, { fill: 'none' }, ve(u)),
                            N = b.map(function (S, P) {
                                var E = s.getTickLineCoord(S),
                                    k = E.line,
                                    M = E.tick,
                                    A = je(
                                        je(
                                            je(
                                                je(
                                                    {
                                                        textAnchor: h,
                                                        verticalAnchor: g,
                                                    },
                                                    x
                                                ),
                                                {},
                                                { stroke: 'none', fill: f },
                                                w
                                            ),
                                            M
                                        ),
                                        {},
                                        {
                                            index: P,
                                            payload: S,
                                            visibleTicksCount: b.length,
                                            tickFormatter: m,
                                        }
                                    )
                                return d(
                                    Be,
                                    {
                                        className:
                                            'recharts-cartesian-axis-tick',
                                        ..._i(s.props, S, P),
                                        children: [
                                            u &&
                                                i('line', {
                                                    ...y,
                                                    ...k,
                                                    className: He(
                                                        'recharts-cartesian-axis-tick-line',
                                                        hr(u, 'className')
                                                    ),
                                                }),
                                            p &&
                                                r.renderTickItem(
                                                    p,
                                                    A,
                                                    ''
                                                        .concat(
                                                            pe(m)
                                                                ? m(S.value, P)
                                                                : S.value
                                                        )
                                                        .concat(v || '')
                                                ),
                                        ],
                                    },
                                    'tick-'.concat(P)
                                )
                            })
                        return i('g', {
                            className: 'recharts-cartesian-axis-ticks',
                            children: N,
                        })
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this,
                            l = this.props,
                            o = l.axisLine,
                            s = l.width,
                            c = l.height,
                            u = l.ticksGenerator,
                            f = l.className,
                            p = l.hide
                        if (p) return null
                        var m = this.props,
                            v = m.ticks,
                            b = Gh(m, vQ),
                            h = v
                        return (
                            pe(u) &&
                                (h = v && v.length > 0 ? u(this.props) : u(b)),
                            s <= 0 || c <= 0 || !h || !h.length
                                ? null
                                : d(Be, {
                                      className: He(
                                          'recharts-cartesian-axis',
                                          f
                                      ),
                                      ref: function (x) {
                                          a.layerReference = x
                                      },
                                      children: [
                                          o && this.renderAxisLine(),
                                          this.renderTicks(
                                              h,
                                              this.state.fontSize,
                                              this.state.letterSpacing
                                          ),
                                          wt.renderCallByParent(this.props),
                                      ],
                                  })
                        )
                    },
                },
            ],
            [
                {
                    key: 'getTicks',
                    value: function (a, l, o) {
                        var s = a.tick,
                            c = a.ticks,
                            u = a.viewBox,
                            f = a.minTickGap,
                            p = a.orientation,
                            m = a.interval,
                            v = a.tickFormatter,
                            b = a.unit
                        return !c || !c.length || !s
                            ? []
                            : J(m) || xn.isSsr
                            ? r.getNumberIntervalTicks(
                                  c,
                                  typeof m == 'number' && J(m) ? m : 0
                              )
                            : m === 'preserveStartEnd'
                            ? r.getTicksStart(
                                  {
                                      ticks: c,
                                      tickFormatter: v,
                                      viewBox: u,
                                      orientation: p,
                                      minTickGap: f,
                                      unit: b,
                                      fontSize: l,
                                      letterSpacing: o,
                                  },
                                  !0
                              )
                            : m === 'preserveStart'
                            ? r.getTicksStart({
                                  ticks: c,
                                  tickFormatter: v,
                                  viewBox: u,
                                  orientation: p,
                                  minTickGap: f,
                                  unit: b,
                                  fontSize: l,
                                  letterSpacing: o,
                              })
                            : r.getTicksEnd({
                                  ticks: c,
                                  tickFormatter: v,
                                  viewBox: u,
                                  orientation: p,
                                  minTickGap: f,
                                  unit: b,
                                  fontSize: l,
                                  letterSpacing: o,
                              })
                    },
                },
                {
                    key: 'getNumberIntervalTicks',
                    value: function (a, l) {
                        return a.filter(function (o, s) {
                            return s % (l + 1) === 0
                        })
                    },
                },
                {
                    key: 'getTicksStart',
                    value: function (a, l) {
                        var o = a.ticks,
                            s = a.tickFormatter,
                            c = a.viewBox,
                            u = a.orientation,
                            f = a.minTickGap,
                            p = a.unit,
                            m = a.fontSize,
                            v = a.letterSpacing,
                            b = c.x,
                            h = c.y,
                            g = c.width,
                            x = c.height,
                            w =
                                u === 'top' || u === 'bottom'
                                    ? 'width'
                                    : 'height',
                            y = (o || []).slice(),
                            N =
                                p && w === 'width'
                                    ? si(p, { fontSize: m, letterSpacing: v })[
                                          w
                                      ]
                                    : 0,
                            S = y.length,
                            P =
                                S >= 2
                                    ? Yt(y[1].coordinate - y[0].coordinate)
                                    : 1,
                            E,
                            k
                        if (
                            (P === 1
                                ? ((E = w === 'width' ? b : h),
                                  (k = w === 'width' ? b + g : h + x))
                                : ((E = w === 'width' ? b + g : h + x),
                                  (k = w === 'width' ? b : h)),
                            l)
                        ) {
                            var M = o[S - 1],
                                A = pe(s) ? s(M.value, S - 1) : M.value,
                                _ =
                                    si(A, { fontSize: m, letterSpacing: v })[
                                        w
                                    ] + N,
                                O = P * (M.coordinate + (P * _) / 2 - k)
                            y[S - 1] = M = je(
                                je({}, M),
                                {},
                                {
                                    tickCoord:
                                        O > 0
                                            ? M.coordinate - O * P
                                            : M.coordinate,
                                }
                            )
                            var T =
                                P * (M.tickCoord - (P * _) / 2 - E) >= 0 &&
                                P * (M.tickCoord + (P * _) / 2 - k) <= 0
                            T &&
                                ((k = M.tickCoord - P * (_ / 2 + f)),
                                (y[S - 1] = je(je({}, M), {}, { isShow: !0 })))
                        }
                        for (var $ = l ? S - 1 : S, I = 0; I < $; I++) {
                            var j = y[I],
                                L = pe(s) ? s(j.value, I) : j.value,
                                D =
                                    si(L, { fontSize: m, letterSpacing: v })[
                                        w
                                    ] + N
                            if (I === 0) {
                                var R = P * (j.coordinate - (P * D) / 2 - E)
                                y[I] = j = je(
                                    je({}, j),
                                    {},
                                    {
                                        tickCoord:
                                            R < 0
                                                ? j.coordinate - R * P
                                                : j.coordinate,
                                    }
                                )
                            } else
                                y[I] = j = je(
                                    je({}, j),
                                    {},
                                    { tickCoord: j.coordinate }
                                )
                            var V =
                                P * (j.tickCoord - (P * D) / 2 - E) >= 0 &&
                                P * (j.tickCoord + (P * D) / 2 - k) <= 0
                            V &&
                                ((E = j.tickCoord + P * (D / 2 + f)),
                                (y[I] = je(je({}, j), {}, { isShow: !0 })))
                        }
                        return y.filter(function (G) {
                            return G.isShow
                        })
                    },
                },
                {
                    key: 'getTicksEnd',
                    value: function (a) {
                        var l = a.ticks,
                            o = a.tickFormatter,
                            s = a.viewBox,
                            c = a.orientation,
                            u = a.minTickGap,
                            f = a.unit,
                            p = a.fontSize,
                            m = a.letterSpacing,
                            v = s.x,
                            b = s.y,
                            h = s.width,
                            g = s.height,
                            x =
                                c === 'top' || c === 'bottom'
                                    ? 'width'
                                    : 'height',
                            w =
                                f && x === 'width'
                                    ? si(f, { fontSize: p, letterSpacing: m })[
                                          x
                                      ]
                                    : 0,
                            y = (l || []).slice(),
                            N = y.length,
                            S =
                                N >= 2
                                    ? Yt(y[1].coordinate - y[0].coordinate)
                                    : 1,
                            P,
                            E
                        S === 1
                            ? ((P = x === 'width' ? v : b),
                              (E = x === 'width' ? v + h : b + g))
                            : ((P = x === 'width' ? v + h : b + g),
                              (E = x === 'width' ? v : b))
                        for (var k = N - 1; k >= 0; k--) {
                            var M = y[k],
                                A = pe(o) ? o(M.value, N - k - 1) : M.value,
                                _ =
                                    si(A, { fontSize: p, letterSpacing: m })[
                                        x
                                    ] + w
                            if (k === N - 1) {
                                var O = S * (M.coordinate + (S * _) / 2 - E)
                                y[k] = M = je(
                                    je({}, M),
                                    {},
                                    {
                                        tickCoord:
                                            O > 0
                                                ? M.coordinate - O * S
                                                : M.coordinate,
                                    }
                                )
                            } else
                                y[k] = M = je(
                                    je({}, M),
                                    {},
                                    { tickCoord: M.coordinate }
                                )
                            var T =
                                S * (M.tickCoord - (S * _) / 2 - P) >= 0 &&
                                S * (M.tickCoord + (S * _) / 2 - E) <= 0
                            T &&
                                ((E = M.tickCoord - S * (_ / 2 + u)),
                                (y[k] = je(je({}, M), {}, { isShow: !0 })))
                        }
                        return y.filter(function ($) {
                            return $.isShow
                        })
                    },
                },
                {
                    key: 'renderTickItem',
                    value: function (a, l, o) {
                        var s
                        return (
                            K.isValidElement(a)
                                ? (s = K.cloneElement(a, l))
                                : pe(a)
                                ? (s = a(l))
                                : (s = i(ja, {
                                      ...l,
                                      className:
                                          'recharts-cartesian-axis-tick-value',
                                      children: o,
                                  })),
                            s
                        )
                    },
                },
            ]
        ),
        r
    )
})(C.exports.Component)
Vv(ci, 'displayName', 'CartesianAxis')
Vv(ci, 'defaultProps', {
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    viewBox: { x: 0, y: 0, width: 0, height: 0 },
    orientation: 'bottom',
    ticks: [],
    stroke: '#666',
    tickLine: !0,
    axisLine: !0,
    tick: !0,
    mirror: !1,
    minTickGap: 5,
    tickSize: 6,
    tickMargin: 2,
    interval: 'preserveEnd',
})
var AQ = ['type', 'layout', 'connectNulls', 'ref']
function Xl(e) {
    return (
        (Xl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Xl(e)
    )
}
function EQ(e, t) {
    if (e == null) return {}
    var r = kQ(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function kQ(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function xw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function gr(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? xw(Object(r), !0).forEach(function (n) {
                  hn(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : xw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Vi(e) {
    return DQ(e) || MQ(e) || TQ(e) || OQ()
}
function OQ() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function TQ(e, t) {
    if (!!e) {
        if (typeof e == 'string') return m1(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return m1(e, t)
    }
}
function MQ(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function DQ(e) {
    if (Array.isArray(e)) return m1(e)
}
function m1(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function $Q(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function ww(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, rS(n.key), n)
    }
}
function IQ(e, t, r) {
    return (
        t && ww(e.prototype, t),
        r && ww(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function RQ(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && g1(e, t)
}
function g1(e, t) {
    return (
        (g1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        g1(e, t)
    )
}
function LQ(e) {
    var t = FQ()
    return function () {
        var n = Xd(e),
            a
        if (t) {
            var l = Xd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return jQ(this, a)
    }
}
function jQ(e, t) {
    if (t && (Xl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return ai(e)
}
function ai(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function FQ() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Xd(e) {
    return (
        (Xd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Xd(e)
    )
}
function hn(e, t, r) {
    return (
        (t = rS(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function rS(e) {
    var t = BQ(e, 'string')
    return Xl(t) === 'symbol' ? t : String(t)
}
function BQ(e, t) {
    if (Xl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Xl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var Nc = (function (e) {
    RQ(r, e)
    var t = LQ(r)
    function r() {
        var n
        $Q(this, r)
        for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
            l[o] = arguments[o]
        return (
            (n = t.call.apply(t, [this].concat(l))),
            hn(ai(n), 'state', { isAnimationFinished: !0, totalLength: 0 }),
            hn(ai(n), 'getStrokeDasharray', function (s, c, u) {
                for (
                    var f = u.reduce(function (w, y) {
                            return w + y
                        }),
                        p = Math.floor(s / f),
                        m = s % f,
                        v = c - s,
                        b = [],
                        h = 0,
                        g = 0;
                    ;
                    g += u[h], ++h
                )
                    if (g + u[h] > m) {
                        b = [].concat(Vi(u.slice(0, h)), [m - g])
                        break
                    }
                var x = b.length % 2 === 0 ? [0, v] : [v]
                return []
                    .concat(Vi(r.repeat(u, p)), Vi(b), x)
                    .map(function (w) {
                        return ''.concat(w, 'px')
                    })
                    .join(', ')
            }),
            hn(ai(n), 'id', so('recharts-line-')),
            hn(ai(n), 'pathRef', function (s) {
                n.mainCurve = s
            }),
            hn(ai(n), 'handleAnimationEnd', function () {
                n.setState({ isAnimationFinished: !0 }),
                    n.props.onAnimationEnd && n.props.onAnimationEnd()
            }),
            hn(ai(n), 'handleAnimationStart', function () {
                n.setState({ isAnimationFinished: !1 }),
                    n.props.onAnimationStart && n.props.onAnimationStart()
            }),
            n
        )
    }
    return (
        IQ(
            r,
            [
                {
                    key: 'componentDidMount',
                    value: function () {
                        if (!!this.props.isAnimationActive) {
                            var a = this.getTotalLength()
                            this.setState({ totalLength: a })
                        }
                    },
                },
                {
                    key: 'getTotalLength',
                    value: function () {
                        var a = this.mainCurve
                        try {
                            return (
                                (a && a.getTotalLength && a.getTotalLength()) ||
                                0
                            )
                        } catch {
                            return 0
                        }
                    },
                },
                {
                    key: 'renderErrorBar',
                    value: function () {
                        if (
                            this.props.isAnimationActive &&
                            !this.state.isAnimationFinished
                        )
                            return null
                        var a = this.props,
                            l = a.points,
                            o = a.xAxis,
                            s = a.yAxis,
                            c = a.layout,
                            u = a.children,
                            f = Cr(u, bc)
                        if (!f) return null
                        function p(m, v) {
                            return {
                                x: m.x,
                                y: m.y,
                                value: m.value,
                                errorVal: Nt(m.payload, v),
                            }
                        }
                        return f.map(function (m, v) {
                            return K.cloneElement(m, {
                                key: 'bar-'.concat(v),
                                data: l,
                                xAxis: o,
                                yAxis: s,
                                layout: c,
                                dataPointFormatter: p,
                            })
                        })
                    },
                },
                {
                    key: 'renderDots',
                    value: function (a, l) {
                        var o = this.props.isAnimationActive
                        if (o && !this.state.isAnimationFinished) return null
                        var s = this.props,
                            c = s.dot,
                            u = s.points,
                            f = s.dataKey,
                            p = ve(this.props),
                            m = ve(c, !0),
                            v = u.map(function (h, g) {
                                var x = gr(
                                    gr(
                                        gr({ key: 'dot-'.concat(g), r: 3 }, p),
                                        m
                                    ),
                                    {},
                                    {
                                        value: h.value,
                                        dataKey: f,
                                        cx: h.x,
                                        cy: h.y,
                                        index: g,
                                        payload: h.payload,
                                    }
                                )
                                return r.renderDotItem(c, x)
                            }),
                            b = {
                                clipPath: a
                                    ? 'url(#clipPath-'.concat(l, ')')
                                    : null,
                            }
                        return i(
                            Be,
                            {
                                className: 'recharts-line-dots',
                                ...b,
                                role: 'img',
                                children: v,
                            },
                            'dots'
                        )
                    },
                },
                {
                    key: 'renderCurveStatically',
                    value: function (a, l, o, s) {
                        var c = this.props,
                            u = c.type,
                            f = c.layout,
                            p = c.connectNulls
                        c.ref
                        var m = EQ(c, AQ),
                            v = gr(
                                gr(
                                    gr({}, ve(m, !0)),
                                    {},
                                    {
                                        fill: 'none',
                                        className: 'recharts-line-curve',
                                        clipPath: l
                                            ? 'url(#clipPath-'.concat(o, ')')
                                            : null,
                                        points: a,
                                    },
                                    s
                                ),
                                {},
                                { type: u, layout: f, connectNulls: p }
                            )
                        return i(Ys, { ...v, pathRef: this.pathRef })
                    },
                },
                {
                    key: 'renderCurveWithAnimation',
                    value: function (a, l) {
                        var o = this,
                            s = this.props,
                            c = s.points,
                            u = s.strokeDasharray,
                            f = s.isAnimationActive,
                            p = s.animationBegin,
                            m = s.animationDuration,
                            v = s.animationEasing,
                            b = s.animationId,
                            h = s.animateNewValues,
                            g = s.width,
                            x = s.height,
                            w = this.state,
                            y = w.prevPoints,
                            N = w.totalLength
                        return i(
                            Ra,
                            {
                                begin: p,
                                duration: m,
                                isActive: f,
                                easing: v,
                                from: { t: 0 },
                                to: { t: 1 },
                                onAnimationEnd: this.handleAnimationEnd,
                                onAnimationStart: this.handleAnimationStart,
                                children: function (S) {
                                    var P = S.t
                                    if (y) {
                                        var E = y.length / c.length,
                                            k = c.map(function (T, $) {
                                                var I = Math.floor($ * E)
                                                if (y[I]) {
                                                    var j = y[I],
                                                        L = xr(j.x, T.x),
                                                        D = xr(j.y, T.y)
                                                    return gr(
                                                        gr({}, T),
                                                        {},
                                                        { x: L(P), y: D(P) }
                                                    )
                                                }
                                                if (h) {
                                                    var R = xr(g * 2, T.x),
                                                        V = xr(x / 2, T.y)
                                                    return gr(
                                                        gr({}, T),
                                                        {},
                                                        { x: R(P), y: V(P) }
                                                    )
                                                }
                                                return gr(
                                                    gr({}, T),
                                                    {},
                                                    { x: T.x, y: T.y }
                                                )
                                            })
                                        return o.renderCurveStatically(k, a, l)
                                    }
                                    var M = xr(0, N),
                                        A = M(P),
                                        _
                                    if (u) {
                                        var O = ''
                                            .concat(u)
                                            .split(/[,\s]+/gim)
                                            .map(function (T) {
                                                return parseFloat(T)
                                            })
                                        _ = o.getStrokeDasharray(A, N, O)
                                    } else
                                        _ = ''
                                            .concat(A, 'px ')
                                            .concat(N - A, 'px')
                                    return o.renderCurveStatically(c, a, l, {
                                        strokeDasharray: _,
                                    })
                                },
                            },
                            'line-'.concat(b)
                        )
                    },
                },
                {
                    key: 'renderCurve',
                    value: function (a, l) {
                        var o = this.props,
                            s = o.points,
                            c = o.isAnimationActive,
                            u = this.state,
                            f = u.prevPoints,
                            p = u.totalLength
                        return c &&
                            s &&
                            s.length &&
                            ((!f && p > 0) || !lp(f, s))
                            ? this.renderCurveWithAnimation(a, l)
                            : this.renderCurveStatically(s, a, l)
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var a = this.props,
                            l = a.hide,
                            o = a.dot,
                            s = a.points,
                            c = a.className,
                            u = a.xAxis,
                            f = a.yAxis,
                            p = a.top,
                            m = a.left,
                            v = a.width,
                            b = a.height,
                            h = a.isAnimationActive,
                            g = a.id
                        if (l || !s || !s.length) return null
                        var x = this.state.isAnimationFinished,
                            w = s.length === 1,
                            y = He('recharts-line', c),
                            N =
                                (u && u.allowDataOverflow) ||
                                (f && f.allowDataOverflow),
                            S = ce(g) ? this.id : g
                        return d(Be, {
                            className: y,
                            children: [
                                N
                                    ? i('defs', {
                                          children: i('clipPath', {
                                              id: 'clipPath-'.concat(S),
                                              children: i('rect', {
                                                  x: m,
                                                  y: p,
                                                  width: v,
                                                  height: b,
                                              }),
                                          }),
                                      })
                                    : null,
                                !w && this.renderCurve(N, S),
                                this.renderErrorBar(),
                                (w || o) && this.renderDots(N, S),
                                (!h || x) &&
                                    Nn.renderCallByParent(this.props, s),
                            ],
                        })
                    },
                },
            ],
            [
                {
                    key: 'getDerivedStateFromProps',
                    value: function (a, l) {
                        return a.animationId !== l.prevAnimationId
                            ? {
                                  prevAnimationId: a.animationId,
                                  curPoints: a.points,
                                  prevPoints: l.curPoints,
                              }
                            : a.points !== l.curPoints
                            ? { curPoints: a.points }
                            : null
                    },
                },
                {
                    key: 'repeat',
                    value: function (a, l) {
                        for (
                            var o =
                                    a.length % 2 !== 0
                                        ? [].concat(Vi(a), [0])
                                        : a,
                                s = [],
                                c = 0;
                            c < l;
                            ++c
                        )
                            s = [].concat(Vi(s), Vi(o))
                        return s
                    },
                },
                {
                    key: 'renderDotItem',
                    value: function (a, l) {
                        var o
                        if (K.isValidElement(a)) o = K.cloneElement(a, l)
                        else if (pe(a)) o = a(l)
                        else {
                            var s = He(
                                'recharts-line-dot',
                                a ? a.className : ''
                            )
                            o = i(bp, { ...l, className: s })
                        }
                        return o
                    },
                },
            ]
        ),
        r
    )
})(C.exports.PureComponent)
hn(Nc, 'displayName', 'Line')
hn(Nc, 'defaultProps', {
    xAxisId: 0,
    yAxisId: 0,
    connectNulls: !1,
    activeDot: !0,
    dot: !0,
    legendType: 'line',
    stroke: '#3182bd',
    strokeWidth: 1,
    fill: '#fff',
    points: [],
    isAnimationActive: !xn.isSsr,
    animateNewValues: !0,
    animationBegin: 0,
    animationDuration: 1500,
    animationEasing: 'ease',
    hide: !1,
    label: !1,
})
hn(Nc, 'getComposedData', function (e) {
    var t = e.props,
        r = e.xAxis,
        n = e.yAxis,
        a = e.xAxisTicks,
        l = e.yAxisTicks,
        o = e.dataKey,
        s = e.bandSize,
        c = e.displayedData,
        u = e.offset,
        f = t.layout,
        p = c.map(function (m, v) {
            var b = Nt(m, o)
            return f === 'horizontal'
                ? {
                      x: S4({
                          axis: r,
                          ticks: a,
                          bandSize: s,
                          entry: m,
                          index: v,
                      }),
                      y: ce(b) ? null : n.scale(b),
                      value: b,
                      payload: m,
                  }
                : {
                      x: ce(b) ? null : r.scale(b),
                      y: S4({
                          axis: n,
                          ticks: l,
                          bandSize: s,
                          entry: m,
                          index: v,
                      }),
                      value: b,
                      payload: m,
                  }
        })
    return gr({ points: p, layout: f }, u)
})
var Ii = function () {
    return null
}
Ii.displayName = 'XAxis'
Ii.defaultProps = {
    allowDecimals: !0,
    hide: !1,
    orientation: 'bottom',
    width: 0,
    height: 30,
    mirror: !1,
    xAxisId: 0,
    tickCount: 5,
    type: 'category',
    domain: [0, 'auto'],
    padding: { left: 0, right: 0 },
    allowDataOverflow: !1,
    scale: 'auto',
    reversed: !1,
    allowDuplicatedCategory: !0,
}
var Ri = function () {
    return null
}
Ri.displayName = 'YAxis'
Ri.defaultProps = {
    allowDuplicatedCategory: !0,
    allowDecimals: !0,
    hide: !1,
    orientation: 'left',
    width: 60,
    height: 0,
    mirror: !1,
    yAxisId: 0,
    tickCount: 5,
    type: 'number',
    domain: [0, 'auto'],
    padding: { top: 0, bottom: 0 },
    allowDataOverflow: !1,
    scale: 'auto',
    reversed: !1,
}
var zQ = En,
    VQ = fc,
    UQ = Jf
function WQ(e) {
    return function (t, r, n) {
        var a = Object(t)
        if (!VQ(t)) {
            var l = zQ(r)
            ;(t = UQ(t)),
                (r = function (s) {
                    return l(a[s], s, a)
                })
        }
        var o = e(t, r, n)
        return o > -1 ? a[l ? t[o] : o] : void 0
    }
}
var HQ = WQ,
    GQ = G6
function qQ(e) {
    var t = GQ(e),
        r = t % 1
    return t === t ? (r ? t - r : t) : 0
}
var KQ = qQ,
    YQ = k3,
    XQ = En,
    ZQ = KQ,
    JQ = Math.max
function QQ(e, t, r) {
    var n = e == null ? 0 : e.length
    if (!n) return -1
    var a = r == null ? 0 : ZQ(r)
    return a < 0 && (a = JQ(n + a, 0)), YQ(e, XQ(t), a)
}
var eee = QQ,
    tee = HQ,
    ree = eee,
    nee = tee(ree),
    aee = nee,
    iee = HU,
    lee = Tr,
    oee = 'Expected a function'
function see(e, t, r) {
    var n = !0,
        a = !0
    if (typeof e != 'function') throw new TypeError(oee)
    return (
        lee(r) &&
            ((n = 'leading' in r ? !!r.leading : n),
            (a = 'trailing' in r ? !!r.trailing : a)),
        iee(e, t, { leading: n, maxWait: t, trailing: a })
    )
}
var cee = see,
    uee = ta,
    dee = ra,
    fee = '[object Boolean]'
function pee(e) {
    return e === !0 || e === !1 || (dee(e) && uee(e) == fee)
}
var hee = pee
function Nw(e) {
    return yee(e) || vee(e) || gee(e) || mee()
}
function mee() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function gee(e, t) {
    if (!!e) {
        if (typeof e == 'string') return v1(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return v1(e, t)
    }
}
function vee(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function yee(e) {
    if (Array.isArray(e)) return v1(e)
}
function v1(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
var y1 = function (t, r, n, a, l) {
        var o = Cr(t, zv),
            s = Cr(t, xc),
            c = [].concat(Nw(o), Nw(s)),
            u = Cr(t, wc),
            f = ''.concat(a, 'Id'),
            p = a[0],
            m = r
        if (
            (c.length &&
                (m = c.reduce(function (h, g) {
                    if (
                        g.props[f] === n &&
                        Sn(g.props, 'extendDomain') &&
                        J(g.props[p])
                    ) {
                        var x = g.props[p]
                        return [Math.min(h[0], x), Math.max(h[1], x)]
                    }
                    return h
                }, m)),
            u.length)
        ) {
            var v = ''.concat(p, '1'),
                b = ''.concat(p, '2')
            m = u.reduce(function (h, g) {
                if (
                    g.props[f] === n &&
                    Sn(g.props, 'extendDomain') &&
                    J(g.props[v]) &&
                    J(g.props[b])
                ) {
                    var x = g.props[v],
                        w = g.props[b]
                    return [Math.min(h[0], x, w), Math.max(h[1], x, w)]
                }
                return h
            }, m)
        }
        return (
            l &&
                l.length &&
                (m = l.reduce(function (h, g) {
                    return J(g) ? [Math.min(h[0], g), Math.max(h[1], g)] : h
                }, m)),
            m
        )
    },
    nS = { exports: {} }
;(function (e) {
    var t = Object.prototype.hasOwnProperty,
        r = '~'
    function n() {}
    Object.create &&
        ((n.prototype = Object.create(null)), new n().__proto__ || (r = !1))
    function a(c, u, f) {
        ;(this.fn = c), (this.context = u), (this.once = f || !1)
    }
    function l(c, u, f, p, m) {
        if (typeof f != 'function')
            throw new TypeError('The listener must be a function')
        var v = new a(f, p || c, m),
            b = r ? r + u : u
        return (
            c._events[b]
                ? c._events[b].fn
                    ? (c._events[b] = [c._events[b], v])
                    : c._events[b].push(v)
                : ((c._events[b] = v), c._eventsCount++),
            c
        )
    }
    function o(c, u) {
        --c._eventsCount === 0 ? (c._events = new n()) : delete c._events[u]
    }
    function s() {
        ;(this._events = new n()), (this._eventsCount = 0)
    }
    ;(s.prototype.eventNames = function () {
        var u = [],
            f,
            p
        if (this._eventsCount === 0) return u
        for (p in (f = this._events)) t.call(f, p) && u.push(r ? p.slice(1) : p)
        return Object.getOwnPropertySymbols
            ? u.concat(Object.getOwnPropertySymbols(f))
            : u
    }),
        (s.prototype.listeners = function (u) {
            var f = r ? r + u : u,
                p = this._events[f]
            if (!p) return []
            if (p.fn) return [p.fn]
            for (var m = 0, v = p.length, b = new Array(v); m < v; m++)
                b[m] = p[m].fn
            return b
        }),
        (s.prototype.listenerCount = function (u) {
            var f = r ? r + u : u,
                p = this._events[f]
            return p ? (p.fn ? 1 : p.length) : 0
        }),
        (s.prototype.emit = function (u, f, p, m, v, b) {
            var h = r ? r + u : u
            if (!this._events[h]) return !1
            var g = this._events[h],
                x = arguments.length,
                w,
                y
            if (g.fn) {
                switch (
                    (g.once && this.removeListener(u, g.fn, void 0, !0), x)
                ) {
                    case 1:
                        return g.fn.call(g.context), !0
                    case 2:
                        return g.fn.call(g.context, f), !0
                    case 3:
                        return g.fn.call(g.context, f, p), !0
                    case 4:
                        return g.fn.call(g.context, f, p, m), !0
                    case 5:
                        return g.fn.call(g.context, f, p, m, v), !0
                    case 6:
                        return g.fn.call(g.context, f, p, m, v, b), !0
                }
                for (y = 1, w = new Array(x - 1); y < x; y++)
                    w[y - 1] = arguments[y]
                g.fn.apply(g.context, w)
            } else {
                var N = g.length,
                    S
                for (y = 0; y < N; y++)
                    switch (
                        (g[y].once &&
                            this.removeListener(u, g[y].fn, void 0, !0),
                        x)
                    ) {
                        case 1:
                            g[y].fn.call(g[y].context)
                            break
                        case 2:
                            g[y].fn.call(g[y].context, f)
                            break
                        case 3:
                            g[y].fn.call(g[y].context, f, p)
                            break
                        case 4:
                            g[y].fn.call(g[y].context, f, p, m)
                            break
                        default:
                            if (!w)
                                for (S = 1, w = new Array(x - 1); S < x; S++)
                                    w[S - 1] = arguments[S]
                            g[y].fn.apply(g[y].context, w)
                    }
            }
            return !0
        }),
        (s.prototype.on = function (u, f, p) {
            return l(this, u, f, p, !1)
        }),
        (s.prototype.once = function (u, f, p) {
            return l(this, u, f, p, !0)
        }),
        (s.prototype.removeListener = function (u, f, p, m) {
            var v = r ? r + u : u
            if (!this._events[v]) return this
            if (!f) return o(this, v), this
            var b = this._events[v]
            if (b.fn)
                b.fn === f &&
                    (!m || b.once) &&
                    (!p || b.context === p) &&
                    o(this, v)
            else {
                for (var h = 0, g = [], x = b.length; h < x; h++)
                    (b[h].fn !== f ||
                        (m && !b[h].once) ||
                        (p && b[h].context !== p)) &&
                        g.push(b[h])
                g.length
                    ? (this._events[v] = g.length === 1 ? g[0] : g)
                    : o(this, v)
            }
            return this
        }),
        (s.prototype.removeAllListeners = function (u) {
            var f
            return (
                u
                    ? ((f = r ? r + u : u), this._events[f] && o(this, f))
                    : ((this._events = new n()), (this._eventsCount = 0)),
                this
            )
        }),
        (s.prototype.off = s.prototype.removeListener),
        (s.prototype.addListener = s.prototype.on),
        (s.prefixed = r),
        (s.EventEmitter = s),
        (e.exports = s)
})(nS)
const bee = nS.exports
var vr = new bee()
vr.setMaxListeners && vr.setMaxListeners(10)
var qh = 'recharts.syncMouseEvents',
    xee = ['item'],
    wee = [
        'children',
        'className',
        'width',
        'height',
        'style',
        'compact',
        'title',
        'desc',
    ]
function Zl(e) {
    return (
        (Zl =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        Zl(e)
    )
}
function Sw(e, t) {
    return Cee(e) || See(e, t) || aS(e, t) || Nee()
}
function Nee() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function See(e, t) {
    var r =
        e == null
            ? null
            : (typeof Symbol < 'u' && e[Symbol.iterator]) || e['@@iterator']
    if (r != null) {
        var n,
            a,
            l,
            o,
            s = [],
            c = !0,
            u = !1
        try {
            if (((l = (r = r.call(e)).next), t === 0)) {
                if (Object(r) !== r) return
                c = !1
            } else
                for (
                    ;
                    !(c = (n = l.call(r)).done) &&
                    (s.push(n.value), s.length !== t);
                    c = !0
                );
        } catch (f) {
            ;(u = !0), (a = f)
        } finally {
            try {
                if (
                    !c &&
                    r.return != null &&
                    ((o = r.return()), Object(o) !== o)
                )
                    return
            } finally {
                if (u) throw a
            }
        }
        return s
    }
}
function Cee(e) {
    if (Array.isArray(e)) return e
}
function Cw(e, t) {
    if (e == null) return {}
    var r = Pee(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function Pee(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function _ee(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function Pw(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, iS(n.key), n)
    }
}
function Aee(e, t, r) {
    return (
        t && Pw(e.prototype, t),
        r && Pw(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function Eee(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && b1(e, t)
}
function b1(e, t) {
    return (
        (b1 = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (n, a) {
                  return (n.__proto__ = a), n
              }),
        b1(e, t)
    )
}
function kee(e) {
    var t = Tee()
    return function () {
        var n = Zd(e),
            a
        if (t) {
            var l = Zd(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return Oee(this, a)
    }
}
function Oee(e, t) {
    if (t && (Zl(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return Oe(e)
}
function Oe(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function Tee() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function Zd(e) {
    return (
        (Zd = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        Zd(e)
    )
}
function Jl(e) {
    return $ee(e) || Dee(e) || aS(e) || Mee()
}
function Mee() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function aS(e, t) {
    if (!!e) {
        if (typeof e == 'string') return x1(e, t)
        var r = Object.prototype.toString.call(e).slice(8, -1)
        if (
            (r === 'Object' && e.constructor && (r = e.constructor.name),
            r === 'Map' || r === 'Set')
        )
            return Array.from(e)
        if (
            r === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
            return x1(e, t)
    }
}
function Dee(e) {
    if (
        (typeof Symbol < 'u' && e[Symbol.iterator] != null) ||
        e['@@iterator'] != null
    )
        return Array.from(e)
}
function $ee(e) {
    if (Array.isArray(e)) return x1(e)
}
function x1(e, t) {
    ;(t == null || t > e.length) && (t = e.length)
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r]
    return n
}
function _w(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function W(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? _w(Object(r), !0).forEach(function (n) {
                  he(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : _w(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function he(e, t, r) {
    return (
        (t = iS(t)),
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
function iS(e) {
    var t = Iee(e, 'string')
    return Zl(t) === 'symbol' ? t : String(t)
}
function Iee(e, t) {
    if (Zl(e) !== 'object' || e === null) return e
    var r = e[Symbol.toPrimitive]
    if (r !== void 0) {
        var n = r.call(e, t || 'default')
        if (Zl(n) !== 'object') return n
        throw new TypeError('@@toPrimitive must return a primitive value.')
    }
    return (t === 'string' ? String : Number)(e)
}
var Ree = { xAxis: ['bottom', 'top'], yAxis: ['left', 'right'] },
    lS = { x: 0, y: 0 },
    Lee = Number.isFinite ? Number.isFinite : isFinite,
    Aw =
        typeof requestAnimationFrame == 'function'
            ? requestAnimationFrame
            : typeof setImmediate == 'function'
            ? setImmediate
            : setTimeout,
    Ew =
        typeof cancelAnimationFrame == 'function'
            ? cancelAnimationFrame
            : typeof clearImmediate == 'function'
            ? clearImmediate
            : clearTimeout,
    jee = function (t, r) {
        return r === 'horizontal'
            ? t.x
            : r === 'vertical'
            ? t.y
            : r === 'centric'
            ? t.angle
            : t.radius
    },
    Fee = function (t, r, n, a) {
        var l = r.find(function (f) {
            return f && f.index === n
        })
        if (l) {
            if (t === 'horizontal') return { x: l.coordinate, y: a.y }
            if (t === 'vertical') return { x: a.x, y: l.coordinate }
            if (t === 'centric') {
                var o = l.coordinate,
                    s = a.radius
                return W(
                    W(W({}, a), Je(a.cx, a.cy, s, o)),
                    {},
                    { angle: o, radius: s }
                )
            }
            var c = l.coordinate,
                u = a.angle
            return W(
                W(W({}, a), Je(a.cx, a.cy, c, u)),
                {},
                { angle: u, radius: c }
            )
        }
        return lS
    },
    Pp = function (t, r, n) {
        var a = r.graphicalItems,
            l = r.dataStartIndex,
            o = r.dataEndIndex,
            s = (a || []).reduce(function (c, u) {
                var f = u.props.data
                return f && f.length ? [].concat(Jl(c), Jl(f)) : c
            }, [])
        return s && s.length > 0
            ? s
            : n && n.props && n.props.data && n.props.data.length > 0
            ? n.props.data
            : t && t.length && J(l) && J(o)
            ? t.slice(l, o + 1)
            : []
    },
    oS = function (t, r, n, a) {
        var l = t.graphicalItems,
            o = t.tooltipAxis,
            s = Pp(r, t)
        return n < 0 || !l || !l.length || n >= s.length
            ? null
            : l.reduce(function (c, u) {
                  var f = u.props.hide
                  if (f) return c
                  var p = u.props.data,
                      m
                  if (o.dataKey && !o.allowDuplicatedCategory) {
                      var v = p === void 0 ? s : p
                      m = rd(v, o.dataKey, a)
                  } else m = (p && p[n]) || s[n]
                  return m ? [].concat(Jl(c), [k6(u, m)]) : c
              }, [])
    },
    kw = function (t, r, n, a) {
        var l = a || { x: t.chartX, y: t.chartY },
            o = jee(l, n),
            s = t.orderedTooltipTicks,
            c = t.tooltipAxis,
            u = t.tooltipTicks,
            f = CK(o, s, u, c)
        if (f >= 0 && u) {
            var p = u[f] && u[f].value,
                m = oS(t, r, f, p),
                v = Fee(n, s, f, l)
            return {
                activeTooltipIndex: f,
                activeLabel: p,
                activePayload: m,
                activeCoordinate: v,
            }
        }
        return null
    },
    Bee = function (t, r) {
        var n = r.axes,
            a = r.graphicalItems,
            l = r.axisType,
            o = r.axisIdKey,
            s = r.stackGroups,
            c = r.dataStartIndex,
            u = r.dataEndIndex,
            f = t.layout,
            p = t.children,
            m = t.stackOffset,
            v = S6(f, l),
            b = n.reduce(function (h, g) {
                var x = g.props,
                    w = x.type,
                    y = x.dataKey,
                    N = x.allowDataOverflow,
                    S = x.allowDuplicatedCategory,
                    P = x.scale,
                    E = x.ticks,
                    k = g.props[o]
                if (h[k]) return h
                var M = Pp(t.data, {
                        graphicalItems: a.filter(function (D) {
                            return D.props[o] === k
                        }),
                        dataStartIndex: c,
                        dataEndIndex: u,
                    }),
                    A = M.length,
                    _,
                    O,
                    T
                if (y) {
                    if (((_ = Dd(M, y, w)), w === 'category' && v)) {
                        var $ = jM(_)
                        S && $
                            ? ((O = _), (_ = Gd(0, A)))
                            : S ||
                              (_ = A4(g.props.domain, _, g).reduce(function (
                                  D,
                                  R
                              ) {
                                  return D.indexOf(R) >= 0
                                      ? D
                                      : [].concat(Jl(D), [R])
                              },
                              []))
                    } else if (w === 'category')
                        S
                            ? (_ = _.filter(function (D) {
                                  return D !== '' && !ce(D)
                              }))
                            : (_ = A4(g.props.domain, _, g).reduce(function (
                                  D,
                                  R
                              ) {
                                  return D.indexOf(R) >= 0 || R === '' || ce(R)
                                      ? D
                                      : [].concat(Jl(D), [R])
                              },
                              []))
                    else if (w === 'number') {
                        var I = kK(
                            M,
                            a.filter(function (D) {
                                return D.props[o] === k && !D.props.hide
                            }),
                            y,
                            l,
                            f
                        )
                        I && (_ = I)
                    }
                    v &&
                        (w === 'number' || P !== 'auto') &&
                        (T = Dd(M, y, 'category'))
                } else
                    v
                        ? (_ = Gd(0, A))
                        : s && s[k] && s[k].hasStack && w === 'number'
                        ? (_ =
                              m === 'expand'
                                  ? [0, 1]
                                  : A6(s[k].stackGroups, c, u))
                        : (_ = N6(
                              M,
                              a.filter(function (D) {
                                  return D.props[o] === k && !D.props.hide
                              }),
                              w,
                              f,
                              !0
                          ))
                if (w === 'number')
                    (_ = y1(p, _, k, l, E)),
                        g.props.domain && (_ = E6(g.props.domain, _, N))
                else if (w === 'category' && g.props.domain) {
                    var j = g.props.domain,
                        L = _.every(function (D) {
                            return j.indexOf(D) >= 0
                        })
                    L && (_ = j)
                }
                return W(
                    W({}, h),
                    {},
                    he(
                        {},
                        k,
                        W(
                            W({}, g.props),
                            {},
                            {
                                axisType: l,
                                domain: _,
                                categoricalDomain: T,
                                duplicateDomain: O,
                                originalDomain: g.props.domain,
                                isCategorical: v,
                                layout: f,
                            }
                        )
                    )
                )
            }, {})
        return b
    },
    zee = function (t, r) {
        var n = r.graphicalItems,
            a = r.Axis,
            l = r.axisType,
            o = r.axisIdKey,
            s = r.stackGroups,
            c = r.dataStartIndex,
            u = r.dataEndIndex,
            f = t.layout,
            p = t.children,
            m = Pp(t.data, {
                graphicalItems: n,
                dataStartIndex: c,
                dataEndIndex: u,
            }),
            v = m.length,
            b = S6(f, l),
            h = -1,
            g = n.reduce(function (x, w) {
                var y = w.props[o]
                if (!x[y]) {
                    h++
                    var N
                    return (
                        b
                            ? (N = Gd(0, v))
                            : s && s[y] && s[y].hasStack
                            ? ((N = A6(s[y].stackGroups, c, u)),
                              (N = y1(p, N, y, l)))
                            : ((N = E6(
                                  a.defaultProps.domain,
                                  N6(
                                      m,
                                      n.filter(function (S) {
                                          return (
                                              S.props[o] === y && !S.props.hide
                                          )
                                      }),
                                      'number',
                                      f
                                  ),
                                  a.defaultProps.allowDataOverflow
                              )),
                              (N = y1(p, N, y, l))),
                        W(
                            W({}, x),
                            {},
                            he(
                                {},
                                y,
                                W(
                                    W({ axisType: l }, a.defaultProps),
                                    {},
                                    {
                                        hide: !0,
                                        orientation: hr(
                                            Ree,
                                            ''.concat(l, '.').concat(h % 2),
                                            null
                                        ),
                                        domain: N,
                                        originalDomain: a.defaultProps.domain,
                                        isCategorical: b,
                                        layout: f,
                                    }
                                )
                            )
                        )
                    )
                }
                return x
            }, {})
        return g
    },
    Vee = function (t, r) {
        var n = r.axisType,
            a = n === void 0 ? 'xAxis' : n,
            l = r.AxisComp,
            o = r.graphicalItems,
            s = r.stackGroups,
            c = r.dataStartIndex,
            u = r.dataEndIndex,
            f = t.children,
            p = ''.concat(a, 'Id'),
            m = Cr(f, l),
            v = {}
        return (
            m && m.length
                ? (v = Bee(t, {
                      axes: m,
                      graphicalItems: o,
                      axisType: a,
                      axisIdKey: p,
                      stackGroups: s,
                      dataStartIndex: c,
                      dataEndIndex: u,
                  }))
                : o &&
                  o.length &&
                  (v = zee(t, {
                      Axis: l,
                      graphicalItems: o,
                      axisType: a,
                      axisIdKey: p,
                      stackGroups: s,
                      dataStartIndex: c,
                      dataEndIndex: u,
                  })),
            v
        )
    },
    Uee = function (t) {
        var r = ia(t),
            n = la(r, !1, !0)
        return {
            tooltipTicks: n,
            orderedTooltipTicks: dv(n, function (a) {
                return a.coordinate
            }),
            tooltipAxis: r,
            tooltipAxisBandSize: $d(r, n),
        }
    },
    Ow = function (t) {
        var r,
            n,
            a = t.children,
            l = t.defaultShowTooltip,
            o = Ln(a, Zs),
            s = (o && o.props && o.props.startIndex) || 0,
            c =
                (o == null || (r = o.props) === null || r === void 0
                    ? void 0
                    : r.endIndex) !== void 0
                    ? o == null || (n = o.props) === null || n === void 0
                        ? void 0
                        : n.endIndex
                    : (t.data && t.data.length - 1) || 0
        return {
            chartX: 0,
            chartY: 0,
            dataStartIndex: s,
            dataEndIndex: c,
            activeTooltipIndex: -1,
            isTooltipActive: ce(l) ? !1 : l,
        }
    },
    Wee = function (t) {
        return !t || !t.length
            ? !1
            : t.some(function (r) {
                  var n = Oa(r && r.type)
                  return n && n.indexOf('Bar') >= 0
              })
    },
    Tw = function (t) {
        return t === 'horizontal'
            ? { numericAxisName: 'yAxis', cateAxisName: 'xAxis' }
            : t === 'vertical'
            ? { numericAxisName: 'xAxis', cateAxisName: 'yAxis' }
            : t === 'centric'
            ? { numericAxisName: 'radiusAxis', cateAxisName: 'angleAxis' }
            : { numericAxisName: 'angleAxis', cateAxisName: 'radiusAxis' }
    },
    Hee = function (t, r) {
        var n = t.props,
            a = t.graphicalItems,
            l = t.xAxisMap,
            o = l === void 0 ? {} : l,
            s = t.yAxisMap,
            c = s === void 0 ? {} : s,
            u = n.width,
            f = n.height,
            p = n.children,
            m = n.margin || {},
            v = Ln(p, Zs),
            b = Ln(p, Is),
            h = Object.keys(c).reduce(
                function (y, N) {
                    var S = c[N],
                        P = S.orientation
                    return !S.mirror && !S.hide
                        ? W(W({}, y), {}, he({}, P, y[P] + S.width))
                        : y
                },
                { left: m.left || 0, right: m.right || 0 }
            ),
            g = Object.keys(o).reduce(
                function (y, N) {
                    var S = o[N],
                        P = S.orientation
                    return !S.mirror && !S.hide
                        ? W(
                              W({}, y),
                              {},
                              he({}, P, hr(y, ''.concat(P)) + S.height)
                          )
                        : y
                },
                { top: m.top || 0, bottom: m.bottom || 0 }
            ),
            x = W(W({}, g), h),
            w = x.bottom
        return (
            v && (x.bottom += v.props.height || Zs.defaultProps.height),
            b && r && (x = AK(x, a, n, r)),
            W(
                W({ brushBottom: w }, x),
                {},
                { width: u - x.left - x.right, height: f - x.top - x.bottom }
            )
        )
    },
    Uv = function (t) {
        var r,
            n = t.chartName,
            a = t.GraphicalChild,
            l = t.defaultTooltipEventType,
            o = l === void 0 ? 'axis' : l,
            s = t.validateTooltipEventTypes,
            c = s === void 0 ? ['axis'] : s,
            u = t.axisComponents,
            f = t.legendContent,
            p = t.formatAxisMap,
            m = t.defaultProps,
            v = function (g, x) {
                var w = x.graphicalItems,
                    y = x.stackGroups,
                    N = x.offset,
                    S = x.updateId,
                    P = x.dataStartIndex,
                    E = x.dataEndIndex,
                    k = g.barSize,
                    M = g.layout,
                    A = g.barGap,
                    _ = g.barCategoryGap,
                    O = g.maxBarSize,
                    T = Tw(M),
                    $ = T.numericAxisName,
                    I = T.cateAxisName,
                    j = Wee(w),
                    L = j && PK({ barSize: k, stackGroups: y }),
                    D = []
                return (
                    w.forEach(function (R, V) {
                        var G = Pp(
                                g.data,
                                { dataStartIndex: P, dataEndIndex: E },
                                R
                            ),
                            ee = R.props,
                            Q = ee.dataKey,
                            B = ee.maxBarSize,
                            X = R.props[''.concat($, 'Id')],
                            ge = R.props[''.concat(I, 'Id')],
                            Pe = u.reduce(function (Z, de) {
                                var re,
                                    be = x[''.concat(de.axisType, 'Map')],
                                    Se = R.props[''.concat(de.axisType, 'Id')],
                                    ke = be && be[Se]
                                return W(
                                    W({}, Z),
                                    {},
                                    ((re = {}),
                                    he(re, de.axisType, ke),
                                    he(
                                        re,
                                        ''.concat(de.axisType, 'Ticks'),
                                        la(ke)
                                    ),
                                    re)
                                )
                            }, {}),
                            ue = Pe[I],
                            F = Pe[''.concat(I, 'Ticks')],
                            q =
                                y &&
                                y[X] &&
                                y[X].hasStack &&
                                jK(R, y[X].stackGroups),
                            te = Oa(R.type).indexOf('Bar') >= 0,
                            z = $d(ue, F),
                            _e = []
                        if (te) {
                            var se,
                                Le,
                                Ye = ce(B) ? O : B,
                                ht =
                                    (se =
                                        (Le = $d(ue, F, !0)) !== null &&
                                        Le !== void 0
                                            ? Le
                                            : Ye) !== null && se !== void 0
                                        ? se
                                        : 0
                            ;(_e = _K({
                                barGap: A,
                                barCategoryGap: _,
                                bandSize: ht !== z ? ht : z,
                                sizeList: L[ge],
                                maxBarSize: Ye,
                            })),
                                ht !== z &&
                                    (_e = _e.map(function (Z) {
                                        return W(
                                            W({}, Z),
                                            {},
                                            {
                                                position: W(
                                                    W({}, Z.position),
                                                    {},
                                                    {
                                                        offset:
                                                            Z.position.offset -
                                                            ht / 2,
                                                    }
                                                ),
                                            }
                                        )
                                    }))
                        }
                        var U = R && R.type && R.type.getComposedData
                        if (U) {
                            var H
                            D.push({
                                props: W(
                                    W(
                                        {},
                                        U(
                                            W(
                                                W({}, Pe),
                                                {},
                                                {
                                                    displayedData: G,
                                                    props: g,
                                                    dataKey: Q,
                                                    item: R,
                                                    bandSize: z,
                                                    barPosition: _e,
                                                    offset: N,
                                                    stackedData: q,
                                                    layout: M,
                                                    dataStartIndex: P,
                                                    dataEndIndex: E,
                                                }
                                            )
                                        )
                                    ),
                                    {},
                                    ((H = { key: R.key || 'item-'.concat(V) }),
                                    he(H, $, Pe[$]),
                                    he(H, I, Pe[I]),
                                    he(H, 'animationId', S),
                                    H)
                                ),
                                childIndex: KM(R, g.children),
                                item: R,
                            })
                        }
                    }),
                    D
                )
            },
            b = function (g, x) {
                var w = g.props,
                    y = g.dataStartIndex,
                    N = g.dataEndIndex,
                    S = g.updateId
                if (!s2({ props: w })) return null
                var P = w.children,
                    E = w.layout,
                    k = w.stackOffset,
                    M = w.data,
                    A = w.reverseStackOrder,
                    _ = Tw(E),
                    O = _.numericAxisName,
                    T = _.cateAxisName,
                    $ = Cr(P, a),
                    I = RK(M, $, ''.concat(O, 'Id'), ''.concat(T, 'Id'), k, A),
                    j = u.reduce(function (G, ee) {
                        var Q = ''.concat(ee.axisType, 'Map')
                        return W(
                            W({}, G),
                            {},
                            he(
                                {},
                                Q,
                                Vee(
                                    w,
                                    W(
                                        W({}, ee),
                                        {},
                                        {
                                            graphicalItems: $,
                                            stackGroups: ee.axisType === O && I,
                                            dataStartIndex: y,
                                            dataEndIndex: N,
                                        }
                                    )
                                )
                            )
                        )
                    }, {}),
                    L = Hee(
                        W(W({}, j), {}, { props: w, graphicalItems: $ }),
                        x == null ? void 0 : x.legendBBox
                    )
                Object.keys(j).forEach(function (G) {
                    j[G] = p(w, j[G], L, G.replace('Map', ''), n)
                })
                var D = j[''.concat(T, 'Map')],
                    R = Uee(D),
                    V = v(
                        w,
                        W(
                            W({}, j),
                            {},
                            {
                                dataStartIndex: y,
                                dataEndIndex: N,
                                updateId: S,
                                graphicalItems: $,
                                stackGroups: I,
                                offset: L,
                            }
                        )
                    )
                return W(
                    W(
                        {
                            formattedGraphicalItems: V,
                            graphicalItems: $,
                            offset: L,
                            stackGroups: I,
                        },
                        R
                    ),
                    j
                )
            }
        return (
            (r = (function (h) {
                Eee(x, h)
                var g = kee(x)
                function x(w) {
                    var y
                    return (
                        _ee(this, x),
                        (y = g.call(this, w)),
                        he(Oe(y), 'clearDeferId', function () {
                            !ce(y.deferId) && Ew && Ew(y.deferId),
                                (y.deferId = null)
                        }),
                        he(Oe(y), 'handleLegendBBoxUpdate', function (N) {
                            if (N) {
                                var S = y.state,
                                    P = S.dataStartIndex,
                                    E = S.dataEndIndex,
                                    k = S.updateId
                                y.setState(
                                    W(
                                        { legendBBox: N },
                                        b(
                                            {
                                                props: y.props,
                                                dataStartIndex: P,
                                                dataEndIndex: E,
                                                updateId: k,
                                            },
                                            W(
                                                W({}, y.state),
                                                {},
                                                { legendBBox: N }
                                            )
                                        )
                                    )
                                )
                            }
                        }),
                        he(Oe(y), 'handleReceiveSyncEvent', function (N, S, P) {
                            var E = y.props.syncId
                            E === N &&
                                S !== y.uniqueChartId &&
                                (y.clearDeferId(),
                                (y.deferId =
                                    Aw && Aw(y.applySyncEvent.bind(Oe(y), P))))
                        }),
                        he(Oe(y), 'handleBrushChange', function (N) {
                            var S = N.startIndex,
                                P = N.endIndex
                            if (
                                S !== y.state.dataStartIndex ||
                                P !== y.state.dataEndIndex
                            ) {
                                var E = y.state.updateId
                                y.setState(function () {
                                    return W(
                                        { dataStartIndex: S, dataEndIndex: P },
                                        b(
                                            {
                                                props: y.props,
                                                dataStartIndex: S,
                                                dataEndIndex: P,
                                                updateId: E,
                                            },
                                            y.state
                                        )
                                    )
                                }),
                                    y.triggerSyncEvent({
                                        dataStartIndex: S,
                                        dataEndIndex: P,
                                    })
                            }
                        }),
                        he(Oe(y), 'handleMouseEnter', function (N) {
                            var S = y.props.onMouseEnter,
                                P = y.getMouseInfo(N)
                            if (P) {
                                var E = W(W({}, P), {}, { isTooltipActive: !0 })
                                y.setState(E),
                                    y.triggerSyncEvent(E),
                                    pe(S) && S(E, N)
                            }
                        }),
                        he(Oe(y), 'triggeredAfterMouseMove', function (N) {
                            var S = y.props.onMouseMove,
                                P = y.getMouseInfo(N),
                                E = P
                                    ? W(W({}, P), {}, { isTooltipActive: !0 })
                                    : { isTooltipActive: !1 }
                            y.setState(E),
                                y.triggerSyncEvent(E),
                                pe(S) && S(E, N)
                        }),
                        he(Oe(y), 'handleItemMouseEnter', function (N) {
                            y.setState(function () {
                                return {
                                    isTooltipActive: !0,
                                    activeItem: N,
                                    activePayload: N.tooltipPayload,
                                    activeCoordinate: N.tooltipPosition || {
                                        x: N.cx,
                                        y: N.cy,
                                    },
                                }
                            })
                        }),
                        he(Oe(y), 'handleItemMouseLeave', function () {
                            y.setState(function () {
                                return { isTooltipActive: !1 }
                            })
                        }),
                        he(Oe(y), 'handleMouseMove', function (N) {
                            N && pe(N.persist) && N.persist(),
                                y.triggeredAfterMouseMove(N)
                        }),
                        he(Oe(y), 'handleMouseLeave', function (N) {
                            var S = y.props.onMouseLeave,
                                P = { isTooltipActive: !1 }
                            y.setState(P),
                                y.triggerSyncEvent(P),
                                pe(S) && S(P, N),
                                y.cancelThrottledTriggerAfterMouseMove()
                        }),
                        he(Oe(y), 'handleOuterEvent', function (N) {
                            var S = qM(N),
                                P = hr(y.props, ''.concat(S))
                            if (S && pe(P)) {
                                var E
                                ;/.*touch.*/i.test(S)
                                    ? (E = y.getMouseInfo(N.changedTouches[0]))
                                    : (E = y.getMouseInfo(N))
                                var k = P
                                k(E, N)
                            }
                        }),
                        he(Oe(y), 'handleClick', function (N) {
                            var S = y.props.onClick,
                                P = y.getMouseInfo(N)
                            if (P) {
                                var E = W(W({}, P), {}, { isTooltipActive: !0 })
                                y.setState(E),
                                    y.triggerSyncEvent(E),
                                    pe(S) && S(E, N)
                            }
                        }),
                        he(Oe(y), 'handleMouseDown', function (N) {
                            var S = y.props.onMouseDown
                            if (pe(S)) {
                                var P = y.getMouseInfo(N)
                                S(P, N)
                            }
                        }),
                        he(Oe(y), 'handleMouseUp', function (N) {
                            var S = y.props.onMouseUp
                            if (pe(S)) {
                                var P = y.getMouseInfo(N)
                                S(P, N)
                            }
                        }),
                        he(Oe(y), 'handleTouchMove', function (N) {
                            N.changedTouches != null &&
                                N.changedTouches.length > 0 &&
                                y.handleMouseMove(N.changedTouches[0])
                        }),
                        he(Oe(y), 'handleTouchStart', function (N) {
                            N.changedTouches != null &&
                                N.changedTouches.length > 0 &&
                                y.handleMouseDown(N.changedTouches[0])
                        }),
                        he(Oe(y), 'handleTouchEnd', function (N) {
                            N.changedTouches != null &&
                                N.changedTouches.length > 0 &&
                                y.handleMouseUp(N.changedTouches[0])
                        }),
                        he(Oe(y), 'verticalCoordinatesGenerator', function (N) {
                            var S = N.xAxis,
                                P = N.width,
                                E = N.height,
                                k = N.offset
                            return w4(
                                ci.getTicks(
                                    W(
                                        W(W({}, ci.defaultProps), S),
                                        {},
                                        {
                                            ticks: la(S, !0),
                                            viewBox: {
                                                x: 0,
                                                y: 0,
                                                width: P,
                                                height: E,
                                            },
                                        }
                                    )
                                ),
                                k.left,
                                k.left + k.width
                            )
                        }),
                        he(
                            Oe(y),
                            'horizontalCoordinatesGenerator',
                            function (N) {
                                var S = N.yAxis,
                                    P = N.width,
                                    E = N.height,
                                    k = N.offset
                                return w4(
                                    ci.getTicks(
                                        W(
                                            W(W({}, ci.defaultProps), S),
                                            {},
                                            {
                                                ticks: la(S, !0),
                                                viewBox: {
                                                    x: 0,
                                                    y: 0,
                                                    width: P,
                                                    height: E,
                                                },
                                            }
                                        )
                                    ),
                                    k.top,
                                    k.top + k.height
                                )
                            }
                        ),
                        he(Oe(y), 'axesTicksGenerator', function (N) {
                            return la(N, !0)
                        }),
                        he(Oe(y), 'renderCursor', function (N) {
                            var S = y.state,
                                P = S.isTooltipActive,
                                E = S.activeCoordinate,
                                k = S.activePayload,
                                M = S.offset,
                                A = S.activeTooltipIndex,
                                _ = y.getTooltipEventType()
                            if (
                                !N ||
                                !N.props.cursor ||
                                !P ||
                                !E ||
                                (n !== 'ScatterChart' && _ !== 'axis')
                            )
                                return null
                            var O = y.props.layout,
                                T,
                                $ = Ys
                            if (n === 'ScatterChart') (T = E), ($ = z6)
                            else if (n === 'BarChart')
                                (T = y.getCursorRectangle()), ($ = yp)
                            else if (O === 'radial') {
                                var I = y.getCursorPoints(),
                                    j = I.cx,
                                    L = I.cy,
                                    D = I.radius,
                                    R = I.startAngle,
                                    V = I.endAngle
                                ;(T = {
                                    cx: j,
                                    cy: L,
                                    startAngle: R,
                                    endAngle: V,
                                    innerRadius: D,
                                    outerRadius: D,
                                }),
                                    ($ = Ld)
                            } else
                                (T = { points: y.getCursorPoints() }), ($ = Ys)
                            var G = N.key || '_recharts-cursor',
                                ee = W(
                                    W(
                                        W(
                                            W(
                                                {
                                                    stroke: '#ccc',
                                                    pointerEvents: 'none',
                                                },
                                                M
                                            ),
                                            T
                                        ),
                                        ve(N.props.cursor)
                                    ),
                                    {},
                                    {
                                        payload: k,
                                        payloadIndex: A,
                                        key: G,
                                        className: 'recharts-tooltip-cursor',
                                    }
                                )
                            return C.exports.isValidElement(N.props.cursor)
                                ? C.exports.cloneElement(N.props.cursor, ee)
                                : C.exports.createElement($, ee)
                        }),
                        he(Oe(y), 'renderPolarAxis', function (N, S, P) {
                            var E = hr(N, 'type.axisType'),
                                k = hr(y.state, ''.concat(E, 'Map')),
                                M = k && k[N.props[''.concat(E, 'Id')]]
                            return C.exports.cloneElement(
                                N,
                                W(
                                    W({}, M),
                                    {},
                                    {
                                        className: E,
                                        key:
                                            N.key ||
                                            ''.concat(S, '-').concat(P),
                                        ticks: la(M, !0),
                                    }
                                )
                            )
                        }),
                        he(Oe(y), 'renderXAxis', function (N, S, P) {
                            var E = y.state.xAxisMap,
                                k = E[N.props.xAxisId]
                            return y.renderAxis(k, N, S, P)
                        }),
                        he(Oe(y), 'renderYAxis', function (N, S, P) {
                            var E = y.state.yAxisMap,
                                k = E[N.props.yAxisId]
                            return y.renderAxis(k, N, S, P)
                        }),
                        he(Oe(y), 'renderGrid', function (N) {
                            var S = y.state,
                                P = S.xAxisMap,
                                E = S.yAxisMap,
                                k = S.offset,
                                M = y.props,
                                A = M.width,
                                _ = M.height,
                                O = ia(P),
                                T = aee(E, function (j) {
                                    return Y6(j.domain, Lee)
                                }),
                                $ = T || ia(E),
                                I = N.props || {}
                            return C.exports.cloneElement(N, {
                                key: N.key || 'grid',
                                x: J(I.x) ? I.x : k.left,
                                y: J(I.y) ? I.y : k.top,
                                width: J(I.width) ? I.width : k.width,
                                height: J(I.height) ? I.height : k.height,
                                xAxis: O,
                                yAxis: $,
                                offset: k,
                                chartWidth: A,
                                chartHeight: _,
                                verticalCoordinatesGenerator:
                                    I.verticalCoordinatesGenerator ||
                                    y.verticalCoordinatesGenerator,
                                horizontalCoordinatesGenerator:
                                    I.horizontalCoordinatesGenerator ||
                                    y.horizontalCoordinatesGenerator,
                            })
                        }),
                        he(Oe(y), 'renderPolarGrid', function (N) {
                            var S = N.props,
                                P = S.radialLines,
                                E = S.polarAngles,
                                k = S.polarRadius,
                                M = y.state,
                                A = M.radiusAxisMap,
                                _ = M.angleAxisMap,
                                O = ia(A),
                                T = ia(_),
                                $ = T.cx,
                                I = T.cy,
                                j = T.innerRadius,
                                L = T.outerRadius
                            return C.exports.cloneElement(N, {
                                polarAngles: Fe(E)
                                    ? E
                                    : la(T, !0).map(function (D) {
                                          return D.coordinate
                                      }),
                                polarRadius: Fe(k)
                                    ? k
                                    : la(O, !0).map(function (D) {
                                          return D.coordinate
                                      }),
                                cx: $,
                                cy: I,
                                innerRadius: j,
                                outerRadius: L,
                                key: N.key || 'polar-grid',
                                radialLines: P,
                            })
                        }),
                        he(Oe(y), 'renderLegend', function () {
                            var N = y.state.formattedGraphicalItems,
                                S = y.props,
                                P = S.children,
                                E = S.width,
                                k = S.height,
                                M = y.props.margin || {},
                                A = E - (M.left || 0) - (M.right || 0),
                                _ = x6({
                                    children: P,
                                    formattedGraphicalItems: N,
                                    legendWidth: A,
                                    legendContent: f,
                                })
                            if (!_) return null
                            var O = _.item,
                                T = Cw(_, xee)
                            return C.exports.cloneElement(
                                O,
                                W(
                                    W({}, T),
                                    {},
                                    {
                                        chartWidth: E,
                                        chartHeight: k,
                                        margin: M,
                                        ref: function (I) {
                                            y.legendInstance = I
                                        },
                                        onBBoxUpdate: y.handleLegendBBoxUpdate,
                                    }
                                )
                            )
                        }),
                        he(Oe(y), 'renderTooltip', function () {
                            var N = y.props.children,
                                S = Ln(N, jn)
                            if (!S) return null
                            var P = y.state,
                                E = P.isTooltipActive,
                                k = P.activeCoordinate,
                                M = P.activePayload,
                                A = P.activeLabel,
                                _ = P.offset
                            return C.exports.cloneElement(S, {
                                viewBox: W(
                                    W({}, _),
                                    {},
                                    { x: _.left, y: _.top }
                                ),
                                active: E,
                                label: A,
                                payload: E ? M : [],
                                coordinate: k,
                            })
                        }),
                        he(Oe(y), 'renderBrush', function (N) {
                            var S = y.props,
                                P = S.margin,
                                E = S.data,
                                k = y.state,
                                M = k.offset,
                                A = k.dataStartIndex,
                                _ = k.dataEndIndex,
                                O = k.updateId
                            return C.exports.cloneElement(N, {
                                key: N.key || '_recharts-brush',
                                onChange: Zc(
                                    y.handleBrushChange,
                                    null,
                                    N.props.onChange
                                ),
                                data: E,
                                x: J(N.props.x) ? N.props.x : M.left,
                                y: J(N.props.y)
                                    ? N.props.y
                                    : M.top +
                                      M.height +
                                      M.brushBottom -
                                      (P.bottom || 0),
                                width: J(N.props.width)
                                    ? N.props.width
                                    : M.width,
                                startIndex: A,
                                endIndex: _,
                                updateId: 'brush-'.concat(O),
                            })
                        }),
                        he(Oe(y), 'renderReferenceElement', function (N, S, P) {
                            if (!N) return null
                            var E = Oe(y),
                                k = E.clipPathId,
                                M = y.state,
                                A = M.xAxisMap,
                                _ = M.yAxisMap,
                                O = M.offset,
                                T = N.props,
                                $ = T.xAxisId,
                                I = T.yAxisId
                            return C.exports.cloneElement(N, {
                                key: N.key || ''.concat(S, '-').concat(P),
                                xAxis: A[$],
                                yAxis: _[I],
                                viewBox: {
                                    x: O.left,
                                    y: O.top,
                                    width: O.width,
                                    height: O.height,
                                },
                                clipPathId: k,
                            })
                        }),
                        he(Oe(y), 'renderActivePoints', function (N) {
                            var S = N.item,
                                P = N.activePoint,
                                E = N.basePoint,
                                k = N.childIndex,
                                M = N.isRange,
                                A = [],
                                _ = S.props.key,
                                O = S.item.props,
                                T = O.activeDot,
                                $ = O.dataKey,
                                I = W(
                                    W(
                                        {
                                            index: k,
                                            dataKey: $,
                                            cx: P.x,
                                            cy: P.y,
                                            r: 4,
                                            fill: Fv(S.item),
                                            strokeWidth: 2,
                                            stroke: '#fff',
                                            payload: P.payload,
                                            value: P.value,
                                            key: ''
                                                .concat(_, '-activePoint-')
                                                .concat(k),
                                        },
                                        ve(T)
                                    ),
                                    nd(T)
                                )
                            return (
                                A.push(x.renderActiveDot(T, I)),
                                E
                                    ? A.push(
                                          x.renderActiveDot(
                                              T,
                                              W(
                                                  W({}, I),
                                                  {},
                                                  {
                                                      cx: E.x,
                                                      cy: E.y,
                                                      key: ''
                                                          .concat(
                                                              _,
                                                              '-basePoint-'
                                                          )
                                                          .concat(k),
                                                  }
                                              )
                                          )
                                      )
                                    : M && A.push(null),
                                A
                            )
                        }),
                        he(Oe(y), 'renderGraphicChild', function (N, S, P) {
                            var E = y.filterFormatItem(N, S, P)
                            if (!E) return null
                            var k = y.getTooltipEventType(),
                                M = y.state,
                                A = M.isTooltipActive,
                                _ = M.tooltipAxis,
                                O = M.activeTooltipIndex,
                                T = M.activeLabel,
                                $ = y.props.children,
                                I = Ln($, jn),
                                j = E.props,
                                L = j.points,
                                D = j.isRange,
                                R = j.baseLine,
                                V = E.item.props,
                                G = V.activeDot,
                                ee = V.hide,
                                Q = !ee && A && I && G && O >= 0,
                                B = {}
                            k !== 'axis' && I && I.props.trigger === 'click'
                                ? (B = {
                                      onClick: Zc(
                                          y.handleItemMouseEnter,
                                          null,
                                          N.props.onCLick
                                      ),
                                  })
                                : k !== 'axis' &&
                                  (B = {
                                      onMouseLeave: Zc(
                                          y.handleItemMouseLeave,
                                          null,
                                          N.props.onMouseLeave
                                      ),
                                      onMouseEnter: Zc(
                                          y.handleItemMouseEnter,
                                          null,
                                          N.props.onMouseEnter
                                      ),
                                  })
                            var X = C.exports.cloneElement(
                                N,
                                W(W({}, E.props), B)
                            )
                            function ge(q) {
                                return typeof _.dataKey == 'function'
                                    ? _.dataKey(q.payload)
                                    : null
                            }
                            if (Q) {
                                var Pe, ue
                                if (_.dataKey && !_.allowDuplicatedCategory) {
                                    var F =
                                        typeof _.dataKey == 'function'
                                            ? ge
                                            : 'payload.'.concat(
                                                  _.dataKey.toString()
                                              )
                                    ;(Pe = rd(L, F, T)),
                                        (ue = D && R && rd(R, F, T))
                                } else (Pe = L[O]), (ue = D && R && R[O])
                                if (!ce(Pe))
                                    return [X].concat(
                                        Jl(
                                            y.renderActivePoints({
                                                item: E,
                                                activePoint: Pe,
                                                basePoint: ue,
                                                childIndex: O,
                                                isRange: D,
                                            })
                                        )
                                    )
                            }
                            return D ? [X, null, null] : [X, null]
                        }),
                        he(Oe(y), 'renderCustomized', function (N, S, P) {
                            return C.exports.cloneElement(
                                N,
                                W(
                                    W(
                                        {
                                            key: 'recharts-customized-'.concat(
                                                P
                                            ),
                                        },
                                        y.props
                                    ),
                                    y.state
                                )
                            )
                        }),
                        (y.uniqueChartId = ce(w.id) ? so('recharts') : w.id),
                        (y.clipPathId = ''.concat(y.uniqueChartId, '-clip')),
                        w.throttleDelay &&
                            (y.triggeredAfterMouseMove = cee(
                                y.triggeredAfterMouseMove,
                                w.throttleDelay
                            )),
                        (y.state = {}),
                        y
                    )
                }
                return (
                    Aee(x, [
                        {
                            key: 'componentDidMount',
                            value: function () {
                                ce(this.props.syncId) || this.addListener()
                            },
                        },
                        {
                            key: 'componentDidUpdate',
                            value: function (y) {
                                ce(y.syncId) &&
                                    !ce(this.props.syncId) &&
                                    this.addListener(),
                                    !ce(y.syncId) &&
                                        ce(this.props.syncId) &&
                                        this.removeListener()
                            },
                        },
                        {
                            key: 'componentWillUnmount',
                            value: function () {
                                this.clearDeferId(),
                                    ce(this.props.syncId) ||
                                        this.removeListener(),
                                    this.cancelThrottledTriggerAfterMouseMove()
                            },
                        },
                        {
                            key: 'cancelThrottledTriggerAfterMouseMove',
                            value: function () {
                                typeof this.triggeredAfterMouseMove.cancel ==
                                    'function' &&
                                    this.triggeredAfterMouseMove.cancel()
                            },
                        },
                        {
                            key: 'getTooltipEventType',
                            value: function () {
                                var y = Ln(this.props.children, jn)
                                if (y && hee(y.props.shared)) {
                                    var N = y.props.shared ? 'axis' : 'item'
                                    return c.indexOf(N) >= 0 ? N : o
                                }
                                return o
                            },
                        },
                        {
                            key: 'getMouseInfo',
                            value: function (y) {
                                if (!this.container) return null
                                var N = xW(this.container),
                                    S = wW(y, N),
                                    P = this.inRange(S.chartX, S.chartY)
                                if (!P) return null
                                var E = this.state,
                                    k = E.xAxisMap,
                                    M = E.yAxisMap,
                                    A = this.getTooltipEventType()
                                if (A !== 'axis' && k && M) {
                                    var _ = ia(k).scale,
                                        O = ia(M).scale,
                                        T =
                                            _ && _.invert
                                                ? _.invert(S.chartX)
                                                : null,
                                        $ =
                                            O && O.invert
                                                ? O.invert(S.chartY)
                                                : null
                                    return W(
                                        W({}, S),
                                        {},
                                        { xValue: T, yValue: $ }
                                    )
                                }
                                var I = kw(
                                    this.state,
                                    this.props.data,
                                    this.props.layout,
                                    P
                                )
                                return I ? W(W({}, S), I) : null
                            },
                        },
                        {
                            key: 'getCursorRectangle',
                            value: function () {
                                var y = this.props.layout,
                                    N = this.state,
                                    S = N.activeCoordinate,
                                    P = N.offset,
                                    E = N.tooltipAxisBandSize,
                                    k = E / 2
                                return {
                                    stroke: 'none',
                                    fill: '#ccc',
                                    x:
                                        y === 'horizontal'
                                            ? S.x - k
                                            : P.left + 0.5,
                                    y:
                                        y === 'horizontal'
                                            ? P.top + 0.5
                                            : S.y - k,
                                    width: y === 'horizontal' ? E : P.width - 1,
                                    height:
                                        y === 'horizontal' ? P.height - 1 : E,
                                }
                            },
                        },
                        {
                            key: 'getCursorPoints',
                            value: function () {
                                var y = this.props.layout,
                                    N = this.state,
                                    S = N.activeCoordinate,
                                    P = N.offset,
                                    E,
                                    k,
                                    M,
                                    A
                                if (y === 'horizontal')
                                    (E = S.x),
                                        (M = E),
                                        (k = P.top),
                                        (A = P.top + P.height)
                                else if (y === 'vertical')
                                    (k = S.y),
                                        (A = k),
                                        (E = P.left),
                                        (M = P.left + P.width)
                                else if (!ce(S.cx) || !ce(S.cy))
                                    if (y === 'centric') {
                                        var _ = S.cx,
                                            O = S.cy,
                                            T = S.innerRadius,
                                            $ = S.outerRadius,
                                            I = S.angle,
                                            j = Je(_, O, T, I),
                                            L = Je(_, O, $, I)
                                        ;(E = j.x),
                                            (k = j.y),
                                            (M = L.x),
                                            (A = L.y)
                                    } else {
                                        var D = S.cx,
                                            R = S.cy,
                                            V = S.radius,
                                            G = S.startAngle,
                                            ee = S.endAngle,
                                            Q = Je(D, R, V, G),
                                            B = Je(D, R, V, ee)
                                        return {
                                            points: [Q, B],
                                            cx: D,
                                            cy: R,
                                            radius: V,
                                            startAngle: G,
                                            endAngle: ee,
                                        }
                                    }
                                return [
                                    { x: E, y: k },
                                    { x: M, y: A },
                                ]
                            },
                        },
                        {
                            key: 'inRange',
                            value: function (y, N) {
                                var S = this.props.layout
                                if (S === 'horizontal' || S === 'vertical') {
                                    var P = this.state.offset,
                                        E =
                                            y >= P.left &&
                                            y <= P.left + P.width &&
                                            N >= P.top &&
                                            N <= P.top + P.height
                                    return E ? { x: y, y: N } : null
                                }
                                var k = this.state,
                                    M = k.angleAxisMap,
                                    A = k.radiusAxisMap
                                if (M && A) {
                                    var _ = ia(M)
                                    return O4({ x: y, y: N }, _)
                                }
                                return null
                            },
                        },
                        {
                            key: 'parseEventsOfWrapper',
                            value: function () {
                                var y = this.props.children,
                                    N = this.getTooltipEventType(),
                                    S = Ln(y, jn),
                                    P = {}
                                S &&
                                    N === 'axis' &&
                                    (S.props.trigger === 'click'
                                        ? (P = { onClick: this.handleClick })
                                        : (P = {
                                              onMouseEnter:
                                                  this.handleMouseEnter,
                                              onMouseMove: this.handleMouseMove,
                                              onMouseLeave:
                                                  this.handleMouseLeave,
                                              onTouchMove: this.handleTouchMove,
                                              onTouchStart:
                                                  this.handleTouchStart,
                                              onTouchEnd: this.handleTouchEnd,
                                          }))
                                var E = nd(this.props, this.handleOuterEvent)
                                return W(W({}, E), P)
                            },
                        },
                        {
                            key: 'addListener',
                            value: function () {
                                vr.on(qh, this.handleReceiveSyncEvent),
                                    vr.setMaxListeners &&
                                        vr._maxListeners &&
                                        vr.setMaxListeners(vr._maxListeners + 1)
                            },
                        },
                        {
                            key: 'removeListener',
                            value: function () {
                                vr.removeListener(
                                    qh,
                                    this.handleReceiveSyncEvent
                                ),
                                    vr.setMaxListeners &&
                                        vr._maxListeners &&
                                        vr.setMaxListeners(vr._maxListeners - 1)
                            },
                        },
                        {
                            key: 'triggerSyncEvent',
                            value: function (y) {
                                var N = this.props.syncId
                                ce(N) || vr.emit(qh, N, this.uniqueChartId, y)
                            },
                        },
                        {
                            key: 'applySyncEvent',
                            value: function (y) {
                                var N = this.props,
                                    S = N.layout,
                                    P = N.syncMethod,
                                    E = this.state.updateId,
                                    k = y.dataStartIndex,
                                    M = y.dataEndIndex
                                if (
                                    !ce(y.dataStartIndex) ||
                                    !ce(y.dataEndIndex)
                                )
                                    this.setState(
                                        W(
                                            {
                                                dataStartIndex: k,
                                                dataEndIndex: M,
                                            },
                                            b(
                                                {
                                                    props: this.props,
                                                    dataStartIndex: k,
                                                    dataEndIndex: M,
                                                    updateId: E,
                                                },
                                                this.state
                                            )
                                        )
                                    )
                                else if (ce(y.activeTooltipIndex))
                                    this.setState(y)
                                else {
                                    var A = y.chartX,
                                        _ = y.chartY,
                                        O = y.activeTooltipIndex,
                                        T = this.state,
                                        $ = T.offset,
                                        I = T.tooltipTicks
                                    if (!$) return
                                    if (typeof P == 'function') O = P(I, y)
                                    else if (P === 'value') {
                                        O = -1
                                        for (var j = 0; j < I.length; j++)
                                            if (I[j].value === y.activeLabel) {
                                                O = j
                                                break
                                            }
                                    }
                                    var L = W(
                                            W({}, $),
                                            {},
                                            { x: $.left, y: $.top }
                                        ),
                                        D = Math.min(A, L.x + L.width),
                                        R = Math.min(_, L.y + L.height),
                                        V = I[O] && I[O].value,
                                        G = oS(this.state, this.props.data, O),
                                        ee = I[O]
                                            ? {
                                                  x:
                                                      S === 'horizontal'
                                                          ? I[O].coordinate
                                                          : D,
                                                  y:
                                                      S === 'horizontal'
                                                          ? R
                                                          : I[O].coordinate,
                                              }
                                            : lS
                                    this.setState(
                                        W(
                                            W({}, y),
                                            {},
                                            {
                                                activeLabel: V,
                                                activeCoordinate: ee,
                                                activePayload: G,
                                                activeTooltipIndex: O,
                                            }
                                        )
                                    )
                                }
                            },
                        },
                        {
                            key: 'filterFormatItem',
                            value: function (y, N, S) {
                                for (
                                    var P = this.state.formattedGraphicalItems,
                                        E = 0,
                                        k = P.length;
                                    E < k;
                                    E++
                                ) {
                                    var M = P[E]
                                    if (
                                        M.item === y ||
                                        M.props.key === y.key ||
                                        (N === Oa(M.item.type) &&
                                            S === M.childIndex)
                                    )
                                        return M
                                }
                                return null
                            },
                        },
                        {
                            key: 'renderAxis',
                            value: function (y, N, S, P) {
                                var E = this.props,
                                    k = E.width,
                                    M = E.height
                                return C.exports.createElement(ci, {
                                    ...y,
                                    className: 'recharts-'
                                        .concat(y.axisType, ' ')
                                        .concat(y.axisType),
                                    key: N.key || ''.concat(S, '-').concat(P),
                                    viewBox: {
                                        x: 0,
                                        y: 0,
                                        width: k,
                                        height: M,
                                    },
                                    ticksGenerator: this.axesTicksGenerator,
                                })
                            },
                        },
                        {
                            key: 'renderClipPath',
                            value: function () {
                                var y = this.clipPathId,
                                    N = this.state.offset,
                                    S = N.left,
                                    P = N.top,
                                    E = N.height,
                                    k = N.width
                                return i('defs', {
                                    children: i('clipPath', {
                                        id: y,
                                        children: i('rect', {
                                            x: S,
                                            y: P,
                                            height: E,
                                            width: k,
                                        }),
                                    }),
                                })
                            },
                        },
                        {
                            key: 'getXScales',
                            value: function () {
                                var y = this.state.xAxisMap
                                return y
                                    ? Object.entries(y).reduce(function (N, S) {
                                          var P = Sw(S, 2),
                                              E = P[0],
                                              k = P[1]
                                          return W(
                                              W({}, N),
                                              {},
                                              he({}, E, k.scale)
                                          )
                                      }, {})
                                    : null
                            },
                        },
                        {
                            key: 'getYScales',
                            value: function () {
                                var y = this.state.yAxisMap
                                return y
                                    ? Object.entries(y).reduce(function (N, S) {
                                          var P = Sw(S, 2),
                                              E = P[0],
                                              k = P[1]
                                          return W(
                                              W({}, N),
                                              {},
                                              he({}, E, k.scale)
                                          )
                                      }, {})
                                    : null
                            },
                        },
                        {
                            key: 'getXScaleByAxisId',
                            value: function (y) {
                                var N, S
                                return (N = this.state.xAxisMap) === null ||
                                    N === void 0 ||
                                    (S = N[y]) === null ||
                                    S === void 0
                                    ? void 0
                                    : S.scale
                            },
                        },
                        {
                            key: 'getYScaleByAxisId',
                            value: function (y) {
                                var N, S
                                return (N = this.state.yAxisMap) === null ||
                                    N === void 0 ||
                                    (S = N[y]) === null ||
                                    S === void 0
                                    ? void 0
                                    : S.scale
                            },
                        },
                        {
                            key: 'getItemByXY',
                            value: function (y) {
                                var N = this.state.formattedGraphicalItems
                                if (N && N.length)
                                    for (var S = 0, P = N.length; S < P; S++) {
                                        var E = N[S],
                                            k = E.props,
                                            M = E.item,
                                            A = Oa(M.type)
                                        if (A === 'Bar') {
                                            var _ = (k.data || []).find(
                                                function (T) {
                                                    return aX(y, T)
                                                }
                                            )
                                            if (_)
                                                return {
                                                    graphicalItem: E,
                                                    payload: _,
                                                }
                                        } else if (A === 'RadialBar') {
                                            var O = (k.data || []).find(
                                                function (T) {
                                                    return O4(y, T)
                                                }
                                            )
                                            if (O)
                                                return {
                                                    graphicalItem: E,
                                                    payload: O,
                                                }
                                        }
                                    }
                                return null
                            },
                        },
                        {
                            key: 'render',
                            value: function () {
                                var y = this
                                if (!s2(this)) return null
                                var N = this.props,
                                    S = N.children,
                                    P = N.className,
                                    E = N.width,
                                    k = N.height,
                                    M = N.style,
                                    A = N.compact,
                                    _ = N.title,
                                    O = N.desc,
                                    T = Cw(N, wee),
                                    $ = ve(T),
                                    I = {
                                        CartesianGrid: {
                                            handler: this.renderGrid,
                                            once: !0,
                                        },
                                        ReferenceArea: {
                                            handler:
                                                this.renderReferenceElement,
                                        },
                                        ReferenceLine: {
                                            handler:
                                                this.renderReferenceElement,
                                        },
                                        ReferenceDot: {
                                            handler:
                                                this.renderReferenceElement,
                                        },
                                        XAxis: { handler: this.renderXAxis },
                                        YAxis: { handler: this.renderYAxis },
                                        Brush: {
                                            handler: this.renderBrush,
                                            once: !0,
                                        },
                                        Bar: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Line: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Area: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Radar: {
                                            handler: this.renderGraphicChild,
                                        },
                                        RadialBar: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Scatter: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Pie: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Funnel: {
                                            handler: this.renderGraphicChild,
                                        },
                                        Tooltip: {
                                            handler: this.renderCursor,
                                            once: !0,
                                        },
                                        PolarGrid: {
                                            handler: this.renderPolarGrid,
                                            once: !0,
                                        },
                                        PolarAngleAxis: {
                                            handler: this.renderPolarAxis,
                                        },
                                        PolarRadiusAxis: {
                                            handler: this.renderPolarAxis,
                                        },
                                        Customized: {
                                            handler: this.renderCustomized,
                                        },
                                    }
                                if (A)
                                    return d(lg, {
                                        ...$,
                                        width: E,
                                        height: k,
                                        title: _,
                                        desc: O,
                                        children: [
                                            this.renderClipPath(),
                                            u2(S, I),
                                        ],
                                    })
                                var j = this.parseEventsOfWrapper()
                                return d('div', {
                                    className: He('recharts-wrapper', P),
                                    style: W(
                                        {
                                            position: 'relative',
                                            cursor: 'default',
                                            width: E,
                                            height: k,
                                        },
                                        M
                                    ),
                                    ...j,
                                    ref: function (D) {
                                        y.container = D
                                    },
                                    role: 'region',
                                    children: [
                                        d(lg, {
                                            ...$,
                                            width: E,
                                            height: k,
                                            title: _,
                                            desc: O,
                                            children: [
                                                this.renderClipPath(),
                                                u2(S, I),
                                            ],
                                        }),
                                        this.renderLegend(),
                                        this.renderTooltip(),
                                    ],
                                })
                            },
                        },
                    ]),
                    x
                )
            })(C.exports.Component)),
            he(r, 'displayName', n),
            he(
                r,
                'defaultProps',
                W(
                    {
                        layout: 'horizontal',
                        stackOffset: 'none',
                        barCategoryGap: '10%',
                        barGap: 4,
                        margin: { top: 5, right: 5, bottom: 5, left: 5 },
                        reverseStackOrder: !1,
                        syncMethod: 'index',
                    },
                    m
                )
            ),
            he(r, 'getDerivedStateFromProps', function (h, g) {
                var x = h.data,
                    w = h.children,
                    y = h.width,
                    N = h.height,
                    S = h.layout,
                    P = h.stackOffset,
                    E = h.margin
                if (ce(g.updateId)) {
                    var k = Ow(h)
                    return W(
                        W(
                            W({}, k),
                            {},
                            { updateId: 0 },
                            b(W(W({ props: h }, k), {}, { updateId: 0 }), g)
                        ),
                        {},
                        {
                            prevData: x,
                            prevWidth: y,
                            prevHeight: N,
                            prevLayout: S,
                            prevStackOffset: P,
                            prevMargin: E,
                            prevChildren: w,
                        }
                    )
                }
                if (
                    x !== g.prevData ||
                    y !== g.prevWidth ||
                    N !== g.prevHeight ||
                    S !== g.prevLayout ||
                    P !== g.prevStackOffset ||
                    !pl(E, g.prevMargin)
                ) {
                    var M = Ow(h),
                        A = {
                            chartX: g.chartX,
                            chartY: g.chartY,
                            isTooltipActive: g.isTooltipActive,
                        },
                        _ = W(
                            W({}, kw(g, x, S)),
                            {},
                            { updateId: g.updateId + 1 }
                        ),
                        O = W(W(W({}, M), A), _)
                    return W(
                        W(W({}, O), b(W({ props: h }, O), g)),
                        {},
                        {
                            prevData: x,
                            prevWidth: y,
                            prevHeight: N,
                            prevLayout: S,
                            prevStackOffset: P,
                            prevMargin: E,
                            prevChildren: w,
                        }
                    )
                }
                if (!p3(w, g.prevChildren)) {
                    var T = !ce(x),
                        $ = T ? g.updateId : g.updateId + 1
                    return W(
                        W(
                            { updateId: $ },
                            b(W(W({ props: h }, g), {}, { updateId: $ }), g)
                        ),
                        {},
                        { prevChildren: w }
                    )
                }
                return null
            }),
            he(r, 'renderActiveDot', function (h, g) {
                var x
                return (
                    C.exports.isValidElement(h)
                        ? (x = C.exports.cloneElement(h, g))
                        : pe(h)
                        ? (x = h(g))
                        : (x = i(bp, { ...g })),
                    i(
                        Be,
                        { className: 'recharts-active-dot', children: x },
                        g.key
                    )
                )
            }),
            r
        )
    },
    Gee = Uv({
        chartName: 'LineChart',
        GraphicalChild: Nc,
        axisComponents: [
            { axisType: 'xAxis', AxisComp: Ii },
            { axisType: 'yAxis', AxisComp: Ri },
        ],
        formatAxisMap: J6,
    }),
    sS = Uv({
        chartName: 'BarChart',
        GraphicalChild: Fa,
        defaultTooltipEventType: 'axis',
        validateTooltipEventTypes: ['axis', 'item'],
        axisComponents: [
            { axisType: 'xAxis', AxisComp: Ii },
            { axisType: 'yAxis', AxisComp: Ri },
        ],
        formatAxisMap: J6,
    }),
    cS = Uv({
        chartName: 'PieChart',
        GraphicalChild: Vr,
        validateTooltipEventTypes: ['item'],
        defaultTooltipEventType: 'item',
        legendContent: 'children',
        axisComponents: [
            { axisType: 'angleAxis', AxisComp: Sp },
            { axisType: 'radiusAxis', AxisComp: wp },
        ],
        formatAxisMap: KK,
        defaultProps: {
            layout: 'centric',
            startAngle: 0,
            endAngle: 360,
            cx: '50%',
            cy: '50%',
            innerRadius: 0,
            outerRadius: '80%',
        },
    })
function Mw(e) {
    return (
        e !== null &&
        typeof e == 'object' &&
        'constructor' in e &&
        e.constructor === Object
    )
}
function Wv(e = {}, t = {}) {
    Object.keys(t).forEach((r) => {
        typeof e[r] > 'u'
            ? (e[r] = t[r])
            : Mw(t[r]) &&
              Mw(e[r]) &&
              Object.keys(t[r]).length > 0 &&
              Wv(e[r], t[r])
    })
}
const uS = {
    body: {},
    addEventListener() {},
    removeEventListener() {},
    activeElement: { blur() {}, nodeName: '' },
    querySelector() {
        return null
    },
    querySelectorAll() {
        return []
    },
    getElementById() {
        return null
    },
    createEvent() {
        return { initEvent() {} }
    },
    createElement() {
        return {
            children: [],
            childNodes: [],
            style: {},
            setAttribute() {},
            getElementsByTagName() {
                return []
            },
        }
    },
    createElementNS() {
        return {}
    },
    importNode() {
        return null
    },
    location: {
        hash: '',
        host: '',
        hostname: '',
        href: '',
        origin: '',
        pathname: '',
        protocol: '',
        search: '',
    },
}
function Bt() {
    const e = typeof document < 'u' ? document : {}
    return Wv(e, uS), e
}
const qee = {
    document: uS,
    navigator: { userAgent: '' },
    location: {
        hash: '',
        host: '',
        hostname: '',
        href: '',
        origin: '',
        pathname: '',
        protocol: '',
        search: '',
    },
    history: { replaceState() {}, pushState() {}, go() {}, back() {} },
    CustomEvent: function () {
        return this
    },
    addEventListener() {},
    removeEventListener() {},
    getComputedStyle() {
        return {
            getPropertyValue() {
                return ''
            },
        }
    },
    Image() {},
    Date() {},
    screen: {},
    setTimeout() {},
    clearTimeout() {},
    matchMedia() {
        return {}
    },
    requestAnimationFrame(e) {
        return typeof setTimeout > 'u' ? (e(), null) : setTimeout(e, 0)
    },
    cancelAnimationFrame(e) {
        typeof setTimeout > 'u' || clearTimeout(e)
    },
}
function $t() {
    const e = typeof window < 'u' ? window : {}
    return Wv(e, qee), e
}
function Kee(e) {
    const t = e.__proto__
    Object.defineProperty(e, '__proto__', {
        get() {
            return t
        },
        set(r) {
            t.__proto__ = r
        },
    })
}
class ga extends Array {
    constructor(t) {
        typeof t == 'number' ? super(t) : (super(...(t || [])), Kee(this))
    }
}
function Sc(e = []) {
    const t = []
    return (
        e.forEach((r) => {
            Array.isArray(r) ? t.push(...Sc(r)) : t.push(r)
        }),
        t
    )
}
function dS(e, t) {
    return Array.prototype.filter.call(e, t)
}
function Yee(e) {
    const t = []
    for (let r = 0; r < e.length; r += 1) t.indexOf(e[r]) === -1 && t.push(e[r])
    return t
}
function Xee(e, t) {
    if (typeof e != 'string') return [e]
    const r = [],
        n = t.querySelectorAll(e)
    for (let a = 0; a < n.length; a += 1) r.push(n[a])
    return r
}
function ae(e, t) {
    const r = $t(),
        n = Bt()
    let a = []
    if (!t && e instanceof ga) return e
    if (!e) return new ga(a)
    if (typeof e == 'string') {
        const l = e.trim()
        if (l.indexOf('<') >= 0 && l.indexOf('>') >= 0) {
            let o = 'div'
            l.indexOf('<li') === 0 && (o = 'ul'),
                l.indexOf('<tr') === 0 && (o = 'tbody'),
                (l.indexOf('<td') === 0 || l.indexOf('<th') === 0) &&
                    (o = 'tr'),
                l.indexOf('<tbody') === 0 && (o = 'table'),
                l.indexOf('<option') === 0 && (o = 'select')
            const s = n.createElement(o)
            s.innerHTML = l
            for (let c = 0; c < s.childNodes.length; c += 1)
                a.push(s.childNodes[c])
        } else a = Xee(e.trim(), t || n)
    } else if (e.nodeType || e === r || e === n) a.push(e)
    else if (Array.isArray(e)) {
        if (e instanceof ga) return e
        a = e
    }
    return new ga(Yee(a))
}
ae.fn = ga.prototype
function Zee(...e) {
    const t = Sc(e.map((r) => r.split(' ')))
    return (
        this.forEach((r) => {
            r.classList.add(...t)
        }),
        this
    )
}
function Jee(...e) {
    const t = Sc(e.map((r) => r.split(' ')))
    return (
        this.forEach((r) => {
            r.classList.remove(...t)
        }),
        this
    )
}
function Qee(...e) {
    const t = Sc(e.map((r) => r.split(' ')))
    this.forEach((r) => {
        t.forEach((n) => {
            r.classList.toggle(n)
        })
    })
}
function ete(...e) {
    const t = Sc(e.map((r) => r.split(' ')))
    return (
        dS(this, (r) => t.filter((n) => r.classList.contains(n)).length > 0)
            .length > 0
    )
}
function tte(e, t) {
    if (arguments.length === 1 && typeof e == 'string')
        return this[0] ? this[0].getAttribute(e) : void 0
    for (let r = 0; r < this.length; r += 1)
        if (arguments.length === 2) this[r].setAttribute(e, t)
        else
            for (const n in e)
                (this[r][n] = e[n]), this[r].setAttribute(n, e[n])
    return this
}
function rte(e) {
    for (let t = 0; t < this.length; t += 1) this[t].removeAttribute(e)
    return this
}
function nte(e) {
    for (let t = 0; t < this.length; t += 1) this[t].style.transform = e
    return this
}
function ate(e) {
    for (let t = 0; t < this.length; t += 1)
        this[t].style.transitionDuration = typeof e != 'string' ? `${e}ms` : e
    return this
}
function ite(...e) {
    let [t, r, n, a] = e
    typeof e[1] == 'function' && (([t, n, a] = e), (r = void 0)), a || (a = !1)
    function l(u) {
        const f = u.target
        if (!f) return
        const p = u.target.dom7EventData || []
        if ((p.indexOf(u) < 0 && p.unshift(u), ae(f).is(r))) n.apply(f, p)
        else {
            const m = ae(f).parents()
            for (let v = 0; v < m.length; v += 1)
                ae(m[v]).is(r) && n.apply(m[v], p)
        }
    }
    function o(u) {
        const f = u && u.target ? u.target.dom7EventData || [] : []
        f.indexOf(u) < 0 && f.unshift(u), n.apply(this, f)
    }
    const s = t.split(' ')
    let c
    for (let u = 0; u < this.length; u += 1) {
        const f = this[u]
        if (r)
            for (c = 0; c < s.length; c += 1) {
                const p = s[c]
                f.dom7LiveListeners || (f.dom7LiveListeners = {}),
                    f.dom7LiveListeners[p] || (f.dom7LiveListeners[p] = []),
                    f.dom7LiveListeners[p].push({
                        listener: n,
                        proxyListener: l,
                    }),
                    f.addEventListener(p, l, a)
            }
        else
            for (c = 0; c < s.length; c += 1) {
                const p = s[c]
                f.dom7Listeners || (f.dom7Listeners = {}),
                    f.dom7Listeners[p] || (f.dom7Listeners[p] = []),
                    f.dom7Listeners[p].push({ listener: n, proxyListener: o }),
                    f.addEventListener(p, o, a)
            }
    }
    return this
}
function lte(...e) {
    let [t, r, n, a] = e
    typeof e[1] == 'function' && (([t, n, a] = e), (r = void 0)), a || (a = !1)
    const l = t.split(' ')
    for (let o = 0; o < l.length; o += 1) {
        const s = l[o]
        for (let c = 0; c < this.length; c += 1) {
            const u = this[c]
            let f
            if (
                (!r && u.dom7Listeners
                    ? (f = u.dom7Listeners[s])
                    : r && u.dom7LiveListeners && (f = u.dom7LiveListeners[s]),
                f && f.length)
            )
                for (let p = f.length - 1; p >= 0; p -= 1) {
                    const m = f[p]
                    ;(n && m.listener === n) ||
                    (n &&
                        m.listener &&
                        m.listener.dom7proxy &&
                        m.listener.dom7proxy === n)
                        ? (u.removeEventListener(s, m.proxyListener, a),
                          f.splice(p, 1))
                        : n ||
                          (u.removeEventListener(s, m.proxyListener, a),
                          f.splice(p, 1))
                }
        }
    }
    return this
}
function ote(...e) {
    const t = $t(),
        r = e[0].split(' '),
        n = e[1]
    for (let a = 0; a < r.length; a += 1) {
        const l = r[a]
        for (let o = 0; o < this.length; o += 1) {
            const s = this[o]
            if (t.CustomEvent) {
                const c = new t.CustomEvent(l, {
                    detail: n,
                    bubbles: !0,
                    cancelable: !0,
                })
                ;(s.dom7EventData = e.filter((u, f) => f > 0)),
                    s.dispatchEvent(c),
                    (s.dom7EventData = []),
                    delete s.dom7EventData
            }
        }
    }
    return this
}
function ste(e) {
    const t = this
    function r(n) {
        n.target === this && (e.call(this, n), t.off('transitionend', r))
    }
    return e && t.on('transitionend', r), this
}
function cte(e) {
    if (this.length > 0) {
        if (e) {
            const t = this.styles()
            return (
                this[0].offsetWidth +
                parseFloat(t.getPropertyValue('margin-right')) +
                parseFloat(t.getPropertyValue('margin-left'))
            )
        }
        return this[0].offsetWidth
    }
    return null
}
function ute(e) {
    if (this.length > 0) {
        if (e) {
            const t = this.styles()
            return (
                this[0].offsetHeight +
                parseFloat(t.getPropertyValue('margin-top')) +
                parseFloat(t.getPropertyValue('margin-bottom'))
            )
        }
        return this[0].offsetHeight
    }
    return null
}
function dte() {
    if (this.length > 0) {
        const e = $t(),
            t = Bt(),
            r = this[0],
            n = r.getBoundingClientRect(),
            a = t.body,
            l = r.clientTop || a.clientTop || 0,
            o = r.clientLeft || a.clientLeft || 0,
            s = r === e ? e.scrollY : r.scrollTop,
            c = r === e ? e.scrollX : r.scrollLeft
        return { top: n.top + s - l, left: n.left + c - o }
    }
    return null
}
function fte() {
    const e = $t()
    return this[0] ? e.getComputedStyle(this[0], null) : {}
}
function pte(e, t) {
    const r = $t()
    let n
    if (arguments.length === 1)
        if (typeof e == 'string') {
            if (this[0])
                return r.getComputedStyle(this[0], null).getPropertyValue(e)
        } else {
            for (n = 0; n < this.length; n += 1)
                for (const a in e) this[n].style[a] = e[a]
            return this
        }
    if (arguments.length === 2 && typeof e == 'string') {
        for (n = 0; n < this.length; n += 1) this[n].style[e] = t
        return this
    }
    return this
}
function hte(e) {
    return e
        ? (this.forEach((t, r) => {
              e.apply(t, [t, r])
          }),
          this)
        : this
}
function mte(e) {
    const t = dS(this, e)
    return ae(t)
}
function gte(e) {
    if (typeof e > 'u') return this[0] ? this[0].innerHTML : null
    for (let t = 0; t < this.length; t += 1) this[t].innerHTML = e
    return this
}
function vte(e) {
    if (typeof e > 'u') return this[0] ? this[0].textContent.trim() : null
    for (let t = 0; t < this.length; t += 1) this[t].textContent = e
    return this
}
function yte(e) {
    const t = $t(),
        r = Bt(),
        n = this[0]
    let a, l
    if (!n || typeof e > 'u') return !1
    if (typeof e == 'string') {
        if (n.matches) return n.matches(e)
        if (n.webkitMatchesSelector) return n.webkitMatchesSelector(e)
        if (n.msMatchesSelector) return n.msMatchesSelector(e)
        for (a = ae(e), l = 0; l < a.length; l += 1) if (a[l] === n) return !0
        return !1
    }
    if (e === r) return n === r
    if (e === t) return n === t
    if (e.nodeType || e instanceof ga) {
        for (a = e.nodeType ? [e] : e, l = 0; l < a.length; l += 1)
            if (a[l] === n) return !0
        return !1
    }
    return !1
}
function bte() {
    let e = this[0],
        t
    if (e) {
        for (t = 0; (e = e.previousSibling) !== null; )
            e.nodeType === 1 && (t += 1)
        return t
    }
}
function xte(e) {
    if (typeof e > 'u') return this
    const t = this.length
    if (e > t - 1) return ae([])
    if (e < 0) {
        const r = t + e
        return r < 0 ? ae([]) : ae([this[r]])
    }
    return ae([this[e]])
}
function wte(...e) {
    let t
    const r = Bt()
    for (let n = 0; n < e.length; n += 1) {
        t = e[n]
        for (let a = 0; a < this.length; a += 1)
            if (typeof t == 'string') {
                const l = r.createElement('div')
                for (l.innerHTML = t; l.firstChild; )
                    this[a].appendChild(l.firstChild)
            } else if (t instanceof ga)
                for (let l = 0; l < t.length; l += 1) this[a].appendChild(t[l])
            else this[a].appendChild(t)
    }
    return this
}
function Nte(e) {
    const t = Bt()
    let r, n
    for (r = 0; r < this.length; r += 1)
        if (typeof e == 'string') {
            const a = t.createElement('div')
            for (a.innerHTML = e, n = a.childNodes.length - 1; n >= 0; n -= 1)
                this[r].insertBefore(a.childNodes[n], this[r].childNodes[0])
        } else if (e instanceof ga)
            for (n = 0; n < e.length; n += 1)
                this[r].insertBefore(e[n], this[r].childNodes[0])
        else this[r].insertBefore(e, this[r].childNodes[0])
    return this
}
function Ste(e) {
    return this.length > 0
        ? e
            ? this[0].nextElementSibling && ae(this[0].nextElementSibling).is(e)
                ? ae([this[0].nextElementSibling])
                : ae([])
            : this[0].nextElementSibling
            ? ae([this[0].nextElementSibling])
            : ae([])
        : ae([])
}
function Cte(e) {
    const t = []
    let r = this[0]
    if (!r) return ae([])
    for (; r.nextElementSibling; ) {
        const n = r.nextElementSibling
        e ? ae(n).is(e) && t.push(n) : t.push(n), (r = n)
    }
    return ae(t)
}
function Pte(e) {
    if (this.length > 0) {
        const t = this[0]
        return e
            ? t.previousElementSibling && ae(t.previousElementSibling).is(e)
                ? ae([t.previousElementSibling])
                : ae([])
            : t.previousElementSibling
            ? ae([t.previousElementSibling])
            : ae([])
    }
    return ae([])
}
function _te(e) {
    const t = []
    let r = this[0]
    if (!r) return ae([])
    for (; r.previousElementSibling; ) {
        const n = r.previousElementSibling
        e ? ae(n).is(e) && t.push(n) : t.push(n), (r = n)
    }
    return ae(t)
}
function Ate(e) {
    const t = []
    for (let r = 0; r < this.length; r += 1)
        this[r].parentNode !== null &&
            (e
                ? ae(this[r].parentNode).is(e) && t.push(this[r].parentNode)
                : t.push(this[r].parentNode))
    return ae(t)
}
function Ete(e) {
    const t = []
    for (let r = 0; r < this.length; r += 1) {
        let n = this[r].parentNode
        for (; n; ) e ? ae(n).is(e) && t.push(n) : t.push(n), (n = n.parentNode)
    }
    return ae(t)
}
function kte(e) {
    let t = this
    return typeof e > 'u' ? ae([]) : (t.is(e) || (t = t.parents(e).eq(0)), t)
}
function Ote(e) {
    const t = []
    for (let r = 0; r < this.length; r += 1) {
        const n = this[r].querySelectorAll(e)
        for (let a = 0; a < n.length; a += 1) t.push(n[a])
    }
    return ae(t)
}
function Tte(e) {
    const t = []
    for (let r = 0; r < this.length; r += 1) {
        const n = this[r].children
        for (let a = 0; a < n.length; a += 1)
            (!e || ae(n[a]).is(e)) && t.push(n[a])
    }
    return ae(t)
}
function Mte() {
    for (let e = 0; e < this.length; e += 1)
        this[e].parentNode && this[e].parentNode.removeChild(this[e])
    return this
}
const Dw = {
    addClass: Zee,
    removeClass: Jee,
    hasClass: ete,
    toggleClass: Qee,
    attr: tte,
    removeAttr: rte,
    transform: nte,
    transition: ate,
    on: ite,
    off: lte,
    trigger: ote,
    transitionEnd: ste,
    outerWidth: cte,
    outerHeight: ute,
    styles: fte,
    offset: dte,
    css: pte,
    each: hte,
    html: gte,
    text: vte,
    is: yte,
    index: bte,
    eq: xte,
    append: wte,
    prepend: Nte,
    next: Ste,
    nextAll: Cte,
    prev: Pte,
    prevAll: _te,
    parent: Ate,
    parents: Ete,
    closest: kte,
    find: Ote,
    children: Tte,
    filter: mte,
    remove: Mte,
}
Object.keys(Dw).forEach((e) => {
    Object.defineProperty(ae.fn, e, { value: Dw[e], writable: !0 })
})
function Dte(e) {
    const t = e
    Object.keys(t).forEach((r) => {
        try {
            t[r] = null
        } catch {}
        try {
            delete t[r]
        } catch {}
    })
}
function Jd(e, t = 0) {
    return setTimeout(e, t)
}
function rc() {
    return Date.now()
}
function $te(e) {
    const t = $t()
    let r
    return (
        t.getComputedStyle && (r = t.getComputedStyle(e, null)),
        !r && e.currentStyle && (r = e.currentStyle),
        r || (r = e.style),
        r
    )
}
function Ite(e, t = 'x') {
    const r = $t()
    let n, a, l
    const o = $te(e)
    return (
        r.WebKitCSSMatrix
            ? ((a = o.transform || o.webkitTransform),
              a.split(',').length > 6 &&
                  (a = a
                      .split(', ')
                      .map((s) => s.replace(',', '.'))
                      .join(', ')),
              (l = new r.WebKitCSSMatrix(a === 'none' ? '' : a)))
            : ((l =
                  o.MozTransform ||
                  o.OTransform ||
                  o.MsTransform ||
                  o.msTransform ||
                  o.transform ||
                  o
                      .getPropertyValue('transform')
                      .replace('translate(', 'matrix(1, 0, 0, 1,')),
              (n = l.toString().split(','))),
        t === 'x' &&
            (r.WebKitCSSMatrix
                ? (a = l.m41)
                : n.length === 16
                ? (a = parseFloat(n[12]))
                : (a = parseFloat(n[4]))),
        t === 'y' &&
            (r.WebKitCSSMatrix
                ? (a = l.m42)
                : n.length === 16
                ? (a = parseFloat(n[13]))
                : (a = parseFloat(n[5]))),
        a || 0
    )
}
function eu(e) {
    return (
        typeof e == 'object' &&
        e !== null &&
        e.constructor &&
        Object.prototype.toString.call(e).slice(8, -1) === 'Object'
    )
}
function Rte(e) {
    return typeof window < 'u' && typeof window.HTMLElement < 'u'
        ? e instanceof HTMLElement
        : e && (e.nodeType === 1 || e.nodeType === 11)
}
function br(...e) {
    const t = Object(e[0]),
        r = ['__proto__', 'constructor', 'prototype']
    for (let n = 1; n < e.length; n += 1) {
        const a = e[n]
        if (a != null && !Rte(a)) {
            const l = Object.keys(Object(a)).filter((o) => r.indexOf(o) < 0)
            for (let o = 0, s = l.length; o < s; o += 1) {
                const c = l[o],
                    u = Object.getOwnPropertyDescriptor(a, c)
                u !== void 0 &&
                    u.enumerable &&
                    (eu(t[c]) && eu(a[c])
                        ? a[c].__swiper__
                            ? (t[c] = a[c])
                            : br(t[c], a[c])
                        : !eu(t[c]) && eu(a[c])
                        ? ((t[c] = {}),
                          a[c].__swiper__ ? (t[c] = a[c]) : br(t[c], a[c]))
                        : (t[c] = a[c]))
            }
        }
    }
    return t
}
function tu(e, t, r) {
    e.style.setProperty(t, r)
}
function fS({ swiper: e, targetPosition: t, side: r }) {
    const n = $t(),
        a = -e.translate
    let l = null,
        o
    const s = e.params.speed
    ;(e.wrapperEl.style.scrollSnapType = 'none'),
        n.cancelAnimationFrame(e.cssModeFrameID)
    const c = t > a ? 'next' : 'prev',
        u = (p, m) => (c === 'next' && p >= m) || (c === 'prev' && p <= m),
        f = () => {
            ;(o = new Date().getTime()), l === null && (l = o)
            const p = Math.max(Math.min((o - l) / s, 1), 0),
                m = 0.5 - Math.cos(p * Math.PI) / 2
            let v = a + m * (t - a)
            if (
                (u(v, t) && (v = t), e.wrapperEl.scrollTo({ [r]: v }), u(v, t))
            ) {
                ;(e.wrapperEl.style.overflow = 'hidden'),
                    (e.wrapperEl.style.scrollSnapType = ''),
                    setTimeout(() => {
                        ;(e.wrapperEl.style.overflow = ''),
                            e.wrapperEl.scrollTo({ [r]: v })
                    }),
                    n.cancelAnimationFrame(e.cssModeFrameID)
                return
            }
            e.cssModeFrameID = n.requestAnimationFrame(f)
        }
    f()
}
let Kh
function Lte() {
    const e = $t(),
        t = Bt()
    return {
        smoothScroll:
            t.documentElement && 'scrollBehavior' in t.documentElement.style,
        touch: !!(
            'ontouchstart' in e ||
            (e.DocumentTouch && t instanceof e.DocumentTouch)
        ),
        passiveListener: (function () {
            let n = !1
            try {
                const a = Object.defineProperty({}, 'passive', {
                    get() {
                        n = !0
                    },
                })
                e.addEventListener('testPassiveListener', null, a)
            } catch {}
            return n
        })(),
        gestures: (function () {
            return 'ongesturestart' in e
        })(),
    }
}
function pS() {
    return Kh || (Kh = Lte()), Kh
}
let Yh
function jte({ userAgent: e } = {}) {
    const t = pS(),
        r = $t(),
        n = r.navigator.platform,
        a = e || r.navigator.userAgent,
        l = { ios: !1, android: !1 },
        o = r.screen.width,
        s = r.screen.height,
        c = a.match(/(Android);?[\s\/]+([\d.]+)?/)
    let u = a.match(/(iPad).*OS\s([\d_]+)/)
    const f = a.match(/(iPod)(.*OS\s([\d_]+))?/),
        p = !u && a.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
        m = n === 'Win32'
    let v = n === 'MacIntel'
    const b = [
        '1024x1366',
        '1366x1024',
        '834x1194',
        '1194x834',
        '834x1112',
        '1112x834',
        '768x1024',
        '1024x768',
        '820x1180',
        '1180x820',
        '810x1080',
        '1080x810',
    ]
    return (
        !u &&
            v &&
            t.touch &&
            b.indexOf(`${o}x${s}`) >= 0 &&
            ((u = a.match(/(Version)\/([\d.]+)/)),
            u || (u = [0, 1, '13_0_0']),
            (v = !1)),
        c && !m && ((l.os = 'android'), (l.android = !0)),
        (u || p || f) && ((l.os = 'ios'), (l.ios = !0)),
        l
    )
}
function Fte(e = {}) {
    return Yh || (Yh = jte(e)), Yh
}
let Xh
function Bte() {
    const e = $t()
    function t() {
        const r = e.navigator.userAgent.toLowerCase()
        return (
            r.indexOf('safari') >= 0 &&
            r.indexOf('chrome') < 0 &&
            r.indexOf('android') < 0
        )
    }
    return {
        isSafari: t(),
        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
            e.navigator.userAgent
        ),
    }
}
function zte() {
    return Xh || (Xh = Bte()), Xh
}
function Vte({ swiper: e, on: t, emit: r }) {
    const n = $t()
    let a = null,
        l = null
    const o = () => {
            !e ||
                e.destroyed ||
                !e.initialized ||
                (r('beforeResize'), r('resize'))
        },
        s = () => {
            !e ||
                e.destroyed ||
                !e.initialized ||
                ((a = new ResizeObserver((f) => {
                    l = n.requestAnimationFrame(() => {
                        const { width: p, height: m } = e
                        let v = p,
                            b = m
                        f.forEach(
                            ({
                                contentBoxSize: h,
                                contentRect: g,
                                target: x,
                            }) => {
                                ;(x && x !== e.el) ||
                                    ((v = g ? g.width : (h[0] || h).inlineSize),
                                    (b = g ? g.height : (h[0] || h).blockSize))
                            }
                        ),
                            (v !== p || b !== m) && o()
                    })
                })),
                a.observe(e.el))
        },
        c = () => {
            l && n.cancelAnimationFrame(l),
                a && a.unobserve && e.el && (a.unobserve(e.el), (a = null))
        },
        u = () => {
            !e || e.destroyed || !e.initialized || r('orientationchange')
        }
    t('init', () => {
        if (e.params.resizeObserver && typeof n.ResizeObserver < 'u') {
            s()
            return
        }
        n.addEventListener('resize', o),
            n.addEventListener('orientationchange', u)
    }),
        t('destroy', () => {
            c(),
                n.removeEventListener('resize', o),
                n.removeEventListener('orientationchange', u)
        })
}
function Ute({ swiper: e, extendParams: t, on: r, emit: n }) {
    const a = [],
        l = $t(),
        o = (u, f = {}) => {
            const p = l.MutationObserver || l.WebkitMutationObserver,
                m = new p((v) => {
                    if (v.length === 1) {
                        n('observerUpdate', v[0])
                        return
                    }
                    const b = function () {
                        n('observerUpdate', v[0])
                    }
                    l.requestAnimationFrame
                        ? l.requestAnimationFrame(b)
                        : l.setTimeout(b, 0)
                })
            m.observe(u, {
                attributes: typeof f.attributes > 'u' ? !0 : f.attributes,
                childList: typeof f.childList > 'u' ? !0 : f.childList,
                characterData:
                    typeof f.characterData > 'u' ? !0 : f.characterData,
            }),
                a.push(m)
        },
        s = () => {
            if (!!e.params.observer) {
                if (e.params.observeParents) {
                    const u = e.$el.parents()
                    for (let f = 0; f < u.length; f += 1) o(u[f])
                }
                o(e.$el[0], { childList: e.params.observeSlideChildren }),
                    o(e.$wrapperEl[0], { attributes: !1 })
            }
        },
        c = () => {
            a.forEach((u) => {
                u.disconnect()
            }),
                a.splice(0, a.length)
        }
    t({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
        r('init', s),
        r('destroy', c)
}
const Wte = {
    on(e, t, r) {
        const n = this
        if (!n.eventsListeners || n.destroyed || typeof t != 'function')
            return n
        const a = r ? 'unshift' : 'push'
        return (
            e.split(' ').forEach((l) => {
                n.eventsListeners[l] || (n.eventsListeners[l] = []),
                    n.eventsListeners[l][a](t)
            }),
            n
        )
    },
    once(e, t, r) {
        const n = this
        if (!n.eventsListeners || n.destroyed || typeof t != 'function')
            return n
        function a(...l) {
            n.off(e, a),
                a.__emitterProxy && delete a.__emitterProxy,
                t.apply(n, l)
        }
        return (a.__emitterProxy = t), n.on(e, a, r)
    },
    onAny(e, t) {
        const r = this
        if (!r.eventsListeners || r.destroyed || typeof e != 'function')
            return r
        const n = t ? 'unshift' : 'push'
        return (
            r.eventsAnyListeners.indexOf(e) < 0 && r.eventsAnyListeners[n](e), r
        )
    },
    offAny(e) {
        const t = this
        if (!t.eventsListeners || t.destroyed || !t.eventsAnyListeners) return t
        const r = t.eventsAnyListeners.indexOf(e)
        return r >= 0 && t.eventsAnyListeners.splice(r, 1), t
    },
    off(e, t) {
        const r = this
        return (
            !r.eventsListeners ||
                r.destroyed ||
                !r.eventsListeners ||
                e.split(' ').forEach((n) => {
                    typeof t > 'u'
                        ? (r.eventsListeners[n] = [])
                        : r.eventsListeners[n] &&
                          r.eventsListeners[n].forEach((a, l) => {
                              ;(a === t ||
                                  (a.__emitterProxy &&
                                      a.__emitterProxy === t)) &&
                                  r.eventsListeners[n].splice(l, 1)
                          })
                }),
            r
        )
    },
    emit(...e) {
        const t = this
        if (!t.eventsListeners || t.destroyed || !t.eventsListeners) return t
        let r, n, a
        return (
            typeof e[0] == 'string' || Array.isArray(e[0])
                ? ((r = e[0]), (n = e.slice(1, e.length)), (a = t))
                : ((r = e[0].events), (n = e[0].data), (a = e[0].context || t)),
            n.unshift(a),
            (Array.isArray(r) ? r : r.split(' ')).forEach((o) => {
                t.eventsAnyListeners &&
                    t.eventsAnyListeners.length &&
                    t.eventsAnyListeners.forEach((s) => {
                        s.apply(a, [o, ...n])
                    }),
                    t.eventsListeners &&
                        t.eventsListeners[o] &&
                        t.eventsListeners[o].forEach((s) => {
                            s.apply(a, n)
                        })
            }),
            t
        )
    },
}
function Hte() {
    const e = this
    let t, r
    const n = e.$el
    typeof e.params.width < 'u' && e.params.width !== null
        ? (t = e.params.width)
        : (t = n[0].clientWidth),
        typeof e.params.height < 'u' && e.params.height !== null
            ? (r = e.params.height)
            : (r = n[0].clientHeight),
        !((t === 0 && e.isHorizontal()) || (r === 0 && e.isVertical())) &&
            ((t =
                t -
                parseInt(n.css('padding-left') || 0, 10) -
                parseInt(n.css('padding-right') || 0, 10)),
            (r =
                r -
                parseInt(n.css('padding-top') || 0, 10) -
                parseInt(n.css('padding-bottom') || 0, 10)),
            Number.isNaN(t) && (t = 0),
            Number.isNaN(r) && (r = 0),
            Object.assign(e, {
                width: t,
                height: r,
                size: e.isHorizontal() ? t : r,
            }))
}
function Gte() {
    const e = this
    function t(A) {
        return e.isHorizontal()
            ? A
            : {
                  width: 'height',
                  'margin-top': 'margin-left',
                  'margin-bottom ': 'margin-right',
                  'margin-left': 'margin-top',
                  'margin-right': 'margin-bottom',
                  'padding-left': 'padding-top',
                  'padding-right': 'padding-bottom',
                  marginRight: 'marginBottom',
              }[A]
    }
    function r(A, _) {
        return parseFloat(A.getPropertyValue(t(_)) || 0)
    }
    const n = e.params,
        { $wrapperEl: a, size: l, rtlTranslate: o, wrongRTL: s } = e,
        c = e.virtual && n.virtual.enabled,
        u = c ? e.virtual.slides.length : e.slides.length,
        f = a.children(`.${e.params.slideClass}`),
        p = c ? e.virtual.slides.length : f.length
    let m = []
    const v = [],
        b = []
    let h = n.slidesOffsetBefore
    typeof h == 'function' && (h = n.slidesOffsetBefore.call(e))
    let g = n.slidesOffsetAfter
    typeof g == 'function' && (g = n.slidesOffsetAfter.call(e))
    const x = e.snapGrid.length,
        w = e.slidesGrid.length
    let y = n.spaceBetween,
        N = -h,
        S = 0,
        P = 0
    if (typeof l > 'u') return
    typeof y == 'string' &&
        y.indexOf('%') >= 0 &&
        (y = (parseFloat(y.replace('%', '')) / 100) * l),
        (e.virtualSize = -y),
        o
            ? f.css({ marginLeft: '', marginBottom: '', marginTop: '' })
            : f.css({ marginRight: '', marginBottom: '', marginTop: '' }),
        n.centeredSlides &&
            n.cssMode &&
            (tu(e.wrapperEl, '--swiper-centered-offset-before', ''),
            tu(e.wrapperEl, '--swiper-centered-offset-after', ''))
    const E = n.grid && n.grid.rows > 1 && e.grid
    E && e.grid.initSlides(p)
    let k
    const M =
        n.slidesPerView === 'auto' &&
        n.breakpoints &&
        Object.keys(n.breakpoints).filter(
            (A) => typeof n.breakpoints[A].slidesPerView < 'u'
        ).length > 0
    for (let A = 0; A < p; A += 1) {
        k = 0
        const _ = f.eq(A)
        if (
            (E && e.grid.updateSlide(A, _, p, t), _.css('display') !== 'none')
        ) {
            if (n.slidesPerView === 'auto') {
                M && (f[A].style[t('width')] = '')
                const O = getComputedStyle(_[0]),
                    T = _[0].style.transform,
                    $ = _[0].style.webkitTransform
                if (
                    (T && (_[0].style.transform = 'none'),
                    $ && (_[0].style.webkitTransform = 'none'),
                    n.roundLengths)
                )
                    k = e.isHorizontal() ? _.outerWidth(!0) : _.outerHeight(!0)
                else {
                    const I = r(O, 'width'),
                        j = r(O, 'padding-left'),
                        L = r(O, 'padding-right'),
                        D = r(O, 'margin-left'),
                        R = r(O, 'margin-right'),
                        V = O.getPropertyValue('box-sizing')
                    if (V && V === 'border-box') k = I + D + R
                    else {
                        const { clientWidth: G, offsetWidth: ee } = _[0]
                        k = I + j + L + D + R + (ee - G)
                    }
                }
                T && (_[0].style.transform = T),
                    $ && (_[0].style.webkitTransform = $),
                    n.roundLengths && (k = Math.floor(k))
            } else
                (k = (l - (n.slidesPerView - 1) * y) / n.slidesPerView),
                    n.roundLengths && (k = Math.floor(k)),
                    f[A] && (f[A].style[t('width')] = `${k}px`)
            f[A] && (f[A].swiperSlideSize = k),
                b.push(k),
                n.centeredSlides
                    ? ((N = N + k / 2 + S / 2 + y),
                      S === 0 && A !== 0 && (N = N - l / 2 - y),
                      A === 0 && (N = N - l / 2 - y),
                      Math.abs(N) < 1 / 1e3 && (N = 0),
                      n.roundLengths && (N = Math.floor(N)),
                      P % n.slidesPerGroup === 0 && m.push(N),
                      v.push(N))
                    : (n.roundLengths && (N = Math.floor(N)),
                      (P - Math.min(e.params.slidesPerGroupSkip, P)) %
                          e.params.slidesPerGroup ===
                          0 && m.push(N),
                      v.push(N),
                      (N = N + k + y)),
                (e.virtualSize += k + y),
                (S = k),
                (P += 1)
        }
    }
    if (
        ((e.virtualSize = Math.max(e.virtualSize, l) + g),
        o &&
            s &&
            (n.effect === 'slide' || n.effect === 'coverflow') &&
            a.css({ width: `${e.virtualSize + n.spaceBetween}px` }),
        n.setWrapperSize &&
            a.css({ [t('width')]: `${e.virtualSize + n.spaceBetween}px` }),
        E && e.grid.updateWrapperSize(k, m, t),
        !n.centeredSlides)
    ) {
        const A = []
        for (let _ = 0; _ < m.length; _ += 1) {
            let O = m[_]
            n.roundLengths && (O = Math.floor(O)),
                m[_] <= e.virtualSize - l && A.push(O)
        }
        ;(m = A),
            Math.floor(e.virtualSize - l) - Math.floor(m[m.length - 1]) > 1 &&
                m.push(e.virtualSize - l)
    }
    if ((m.length === 0 && (m = [0]), n.spaceBetween !== 0)) {
        const A = e.isHorizontal() && o ? 'marginLeft' : t('marginRight')
        f.filter((_, O) => (n.cssMode ? O !== f.length - 1 : !0)).css({
            [A]: `${y}px`,
        })
    }
    if (n.centeredSlides && n.centeredSlidesBounds) {
        let A = 0
        b.forEach((O) => {
            A += O + (n.spaceBetween ? n.spaceBetween : 0)
        }),
            (A -= n.spaceBetween)
        const _ = A - l
        m = m.map((O) => (O < 0 ? -h : O > _ ? _ + g : O))
    }
    if (n.centerInsufficientSlides) {
        let A = 0
        if (
            (b.forEach((_) => {
                A += _ + (n.spaceBetween ? n.spaceBetween : 0)
            }),
            (A -= n.spaceBetween),
            A < l)
        ) {
            const _ = (l - A) / 2
            m.forEach((O, T) => {
                m[T] = O - _
            }),
                v.forEach((O, T) => {
                    v[T] = O + _
                })
        }
    }
    if (
        (Object.assign(e, {
            slides: f,
            snapGrid: m,
            slidesGrid: v,
            slidesSizesGrid: b,
        }),
        n.centeredSlides && n.cssMode && !n.centeredSlidesBounds)
    ) {
        tu(e.wrapperEl, '--swiper-centered-offset-before', `${-m[0]}px`),
            tu(
                e.wrapperEl,
                '--swiper-centered-offset-after',
                `${e.size / 2 - b[b.length - 1] / 2}px`
            )
        const A = -e.snapGrid[0],
            _ = -e.slidesGrid[0]
        ;(e.snapGrid = e.snapGrid.map((O) => O + A)),
            (e.slidesGrid = e.slidesGrid.map((O) => O + _))
    }
    if (
        (p !== u && e.emit('slidesLengthChange'),
        m.length !== x &&
            (e.params.watchOverflow && e.checkOverflow(),
            e.emit('snapGridLengthChange')),
        v.length !== w && e.emit('slidesGridLengthChange'),
        n.watchSlidesProgress && e.updateSlidesOffset(),
        !c && !n.cssMode && (n.effect === 'slide' || n.effect === 'fade'))
    ) {
        const A = `${n.containerModifierClass}backface-hidden`,
            _ = e.$el.hasClass(A)
        p <= n.maxBackfaceHiddenSlides
            ? _ || e.$el.addClass(A)
            : _ && e.$el.removeClass(A)
    }
}
function qte(e) {
    const t = this,
        r = [],
        n = t.virtual && t.params.virtual.enabled
    let a = 0,
        l
    typeof e == 'number'
        ? t.setTransition(e)
        : e === !0 && t.setTransition(t.params.speed)
    const o = (s) =>
        n
            ? t.slides.filter(
                  (c) =>
                      parseInt(
                          c.getAttribute('data-swiper-slide-index'),
                          10
                      ) === s
              )[0]
            : t.slides.eq(s)[0]
    if (t.params.slidesPerView !== 'auto' && t.params.slidesPerView > 1)
        if (t.params.centeredSlides)
            (t.visibleSlides || ae([])).each((s) => {
                r.push(s)
            })
        else
            for (l = 0; l < Math.ceil(t.params.slidesPerView); l += 1) {
                const s = t.activeIndex + l
                if (s > t.slides.length && !n) break
                r.push(o(s))
            }
    else r.push(o(t.activeIndex))
    for (l = 0; l < r.length; l += 1)
        if (typeof r[l] < 'u') {
            const s = r[l].offsetHeight
            a = s > a ? s : a
        }
    ;(a || a === 0) && t.$wrapperEl.css('height', `${a}px`)
}
function Kte() {
    const e = this,
        t = e.slides
    for (let r = 0; r < t.length; r += 1)
        t[r].swiperSlideOffset = e.isHorizontal()
            ? t[r].offsetLeft
            : t[r].offsetTop
}
function Yte(e = (this && this.translate) || 0) {
    const t = this,
        r = t.params,
        { slides: n, rtlTranslate: a, snapGrid: l } = t
    if (n.length === 0) return
    typeof n[0].swiperSlideOffset > 'u' && t.updateSlidesOffset()
    let o = -e
    a && (o = e),
        n.removeClass(r.slideVisibleClass),
        (t.visibleSlidesIndexes = []),
        (t.visibleSlides = [])
    for (let s = 0; s < n.length; s += 1) {
        const c = n[s]
        let u = c.swiperSlideOffset
        r.cssMode && r.centeredSlides && (u -= n[0].swiperSlideOffset)
        const f =
                (o + (r.centeredSlides ? t.minTranslate() : 0) - u) /
                (c.swiperSlideSize + r.spaceBetween),
            p =
                (o - l[0] + (r.centeredSlides ? t.minTranslate() : 0) - u) /
                (c.swiperSlideSize + r.spaceBetween),
            m = -(o - u),
            v = m + t.slidesSizesGrid[s]
        ;((m >= 0 && m < t.size - 1) ||
            (v > 1 && v <= t.size) ||
            (m <= 0 && v >= t.size)) &&
            (t.visibleSlides.push(c),
            t.visibleSlidesIndexes.push(s),
            n.eq(s).addClass(r.slideVisibleClass)),
            (c.progress = a ? -f : f),
            (c.originalProgress = a ? -p : p)
    }
    t.visibleSlides = ae(t.visibleSlides)
}
function Xte(e) {
    const t = this
    if (typeof e > 'u') {
        const u = t.rtlTranslate ? -1 : 1
        e = (t && t.translate && t.translate * u) || 0
    }
    const r = t.params,
        n = t.maxTranslate() - t.minTranslate()
    let { progress: a, isBeginning: l, isEnd: o } = t
    const s = l,
        c = o
    n === 0
        ? ((a = 0), (l = !0), (o = !0))
        : ((a = (e - t.minTranslate()) / n), (l = a <= 0), (o = a >= 1)),
        Object.assign(t, { progress: a, isBeginning: l, isEnd: o }),
        (r.watchSlidesProgress || (r.centeredSlides && r.autoHeight)) &&
            t.updateSlidesProgress(e),
        l && !s && t.emit('reachBeginning toEdge'),
        o && !c && t.emit('reachEnd toEdge'),
        ((s && !l) || (c && !o)) && t.emit('fromEdge'),
        t.emit('progress', a)
}
function Zte() {
    const e = this,
        {
            slides: t,
            params: r,
            $wrapperEl: n,
            activeIndex: a,
            realIndex: l,
        } = e,
        o = e.virtual && r.virtual.enabled
    t.removeClass(
        `${r.slideActiveClass} ${r.slideNextClass} ${r.slidePrevClass} ${r.slideDuplicateActiveClass} ${r.slideDuplicateNextClass} ${r.slideDuplicatePrevClass}`
    )
    let s
    o
        ? (s = e.$wrapperEl.find(
              `.${r.slideClass}[data-swiper-slide-index="${a}"]`
          ))
        : (s = t.eq(a)),
        s.addClass(r.slideActiveClass),
        r.loop &&
            (s.hasClass(r.slideDuplicateClass)
                ? n
                      .children(
                          `.${r.slideClass}:not(.${r.slideDuplicateClass})[data-swiper-slide-index="${l}"]`
                      )
                      .addClass(r.slideDuplicateActiveClass)
                : n
                      .children(
                          `.${r.slideClass}.${r.slideDuplicateClass}[data-swiper-slide-index="${l}"]`
                      )
                      .addClass(r.slideDuplicateActiveClass))
    let c = s.nextAll(`.${r.slideClass}`).eq(0).addClass(r.slideNextClass)
    r.loop && c.length === 0 && ((c = t.eq(0)), c.addClass(r.slideNextClass))
    let u = s.prevAll(`.${r.slideClass}`).eq(0).addClass(r.slidePrevClass)
    r.loop && u.length === 0 && ((u = t.eq(-1)), u.addClass(r.slidePrevClass)),
        r.loop &&
            (c.hasClass(r.slideDuplicateClass)
                ? n
                      .children(
                          `.${r.slideClass}:not(.${
                              r.slideDuplicateClass
                          })[data-swiper-slide-index="${c.attr(
                              'data-swiper-slide-index'
                          )}"]`
                      )
                      .addClass(r.slideDuplicateNextClass)
                : n
                      .children(
                          `.${r.slideClass}.${
                              r.slideDuplicateClass
                          }[data-swiper-slide-index="${c.attr(
                              'data-swiper-slide-index'
                          )}"]`
                      )
                      .addClass(r.slideDuplicateNextClass),
            u.hasClass(r.slideDuplicateClass)
                ? n
                      .children(
                          `.${r.slideClass}:not(.${
                              r.slideDuplicateClass
                          })[data-swiper-slide-index="${u.attr(
                              'data-swiper-slide-index'
                          )}"]`
                      )
                      .addClass(r.slideDuplicatePrevClass)
                : n
                      .children(
                          `.${r.slideClass}.${
                              r.slideDuplicateClass
                          }[data-swiper-slide-index="${u.attr(
                              'data-swiper-slide-index'
                          )}"]`
                      )
                      .addClass(r.slideDuplicatePrevClass)),
        e.emitSlidesClasses()
}
function Jte(e) {
    const t = this,
        r = t.rtlTranslate ? t.translate : -t.translate,
        {
            slidesGrid: n,
            snapGrid: a,
            params: l,
            activeIndex: o,
            realIndex: s,
            snapIndex: c,
        } = t
    let u = e,
        f
    if (typeof u > 'u') {
        for (let m = 0; m < n.length; m += 1)
            typeof n[m + 1] < 'u'
                ? r >= n[m] && r < n[m + 1] - (n[m + 1] - n[m]) / 2
                    ? (u = m)
                    : r >= n[m] && r < n[m + 1] && (u = m + 1)
                : r >= n[m] && (u = m)
        l.normalizeSlideIndex && (u < 0 || typeof u > 'u') && (u = 0)
    }
    if (a.indexOf(r) >= 0) f = a.indexOf(r)
    else {
        const m = Math.min(l.slidesPerGroupSkip, u)
        f = m + Math.floor((u - m) / l.slidesPerGroup)
    }
    if ((f >= a.length && (f = a.length - 1), u === o)) {
        f !== c && ((t.snapIndex = f), t.emit('snapIndexChange'))
        return
    }
    const p = parseInt(t.slides.eq(u).attr('data-swiper-slide-index') || u, 10)
    Object.assign(t, {
        snapIndex: f,
        realIndex: p,
        previousIndex: o,
        activeIndex: u,
    }),
        t.emit('activeIndexChange'),
        t.emit('snapIndexChange'),
        s !== p && t.emit('realIndexChange'),
        (t.initialized || t.params.runCallbacksOnInit) && t.emit('slideChange')
}
function Qte(e) {
    const t = this,
        r = t.params,
        n = ae(e).closest(`.${r.slideClass}`)[0]
    let a = !1,
        l
    if (n) {
        for (let o = 0; o < t.slides.length; o += 1)
            if (t.slides[o] === n) {
                ;(a = !0), (l = o)
                break
            }
    }
    if (n && a)
        (t.clickedSlide = n),
            t.virtual && t.params.virtual.enabled
                ? (t.clickedIndex = parseInt(
                      ae(n).attr('data-swiper-slide-index'),
                      10
                  ))
                : (t.clickedIndex = l)
    else {
        ;(t.clickedSlide = void 0), (t.clickedIndex = void 0)
        return
    }
    r.slideToClickedSlide &&
        t.clickedIndex !== void 0 &&
        t.clickedIndex !== t.activeIndex &&
        t.slideToClickedSlide()
}
const ere = {
    updateSize: Hte,
    updateSlides: Gte,
    updateAutoHeight: qte,
    updateSlidesOffset: Kte,
    updateSlidesProgress: Yte,
    updateProgress: Xte,
    updateSlidesClasses: Zte,
    updateActiveIndex: Jte,
    updateClickedSlide: Qte,
}
function tre(e = this.isHorizontal() ? 'x' : 'y') {
    const t = this,
        { params: r, rtlTranslate: n, translate: a, $wrapperEl: l } = t
    if (r.virtualTranslate) return n ? -a : a
    if (r.cssMode) return a
    let o = Ite(l[0], e)
    return n && (o = -o), o || 0
}
function rre(e, t) {
    const r = this,
        {
            rtlTranslate: n,
            params: a,
            $wrapperEl: l,
            wrapperEl: o,
            progress: s,
        } = r
    let c = 0,
        u = 0
    const f = 0
    r.isHorizontal() ? (c = n ? -e : e) : (u = e),
        a.roundLengths && ((c = Math.floor(c)), (u = Math.floor(u))),
        a.cssMode
            ? (o[r.isHorizontal() ? 'scrollLeft' : 'scrollTop'] =
                  r.isHorizontal() ? -c : -u)
            : a.virtualTranslate ||
              l.transform(`translate3d(${c}px, ${u}px, ${f}px)`),
        (r.previousTranslate = r.translate),
        (r.translate = r.isHorizontal() ? c : u)
    let p
    const m = r.maxTranslate() - r.minTranslate()
    m === 0 ? (p = 0) : (p = (e - r.minTranslate()) / m),
        p !== s && r.updateProgress(e),
        r.emit('setTranslate', r.translate, t)
}
function nre() {
    return -this.snapGrid[0]
}
function are() {
    return -this.snapGrid[this.snapGrid.length - 1]
}
function ire(e = 0, t = this.params.speed, r = !0, n = !0, a) {
    const l = this,
        { params: o, wrapperEl: s } = l
    if (l.animating && o.preventInteractionOnTransition) return !1
    const c = l.minTranslate(),
        u = l.maxTranslate()
    let f
    if (
        (n && e > c ? (f = c) : n && e < u ? (f = u) : (f = e),
        l.updateProgress(f),
        o.cssMode)
    ) {
        const p = l.isHorizontal()
        if (t === 0) s[p ? 'scrollLeft' : 'scrollTop'] = -f
        else {
            if (!l.support.smoothScroll)
                return (
                    fS({
                        swiper: l,
                        targetPosition: -f,
                        side: p ? 'left' : 'top',
                    }),
                    !0
                )
            s.scrollTo({ [p ? 'left' : 'top']: -f, behavior: 'smooth' })
        }
        return !0
    }
    return (
        t === 0
            ? (l.setTransition(0),
              l.setTranslate(f),
              r &&
                  (l.emit('beforeTransitionStart', t, a),
                  l.emit('transitionEnd')))
            : (l.setTransition(t),
              l.setTranslate(f),
              r &&
                  (l.emit('beforeTransitionStart', t, a),
                  l.emit('transitionStart')),
              l.animating ||
                  ((l.animating = !0),
                  l.onTranslateToWrapperTransitionEnd ||
                      (l.onTranslateToWrapperTransitionEnd = function (m) {
                          !l ||
                              l.destroyed ||
                              (m.target === this &&
                                  (l.$wrapperEl[0].removeEventListener(
                                      'transitionend',
                                      l.onTranslateToWrapperTransitionEnd
                                  ),
                                  l.$wrapperEl[0].removeEventListener(
                                      'webkitTransitionEnd',
                                      l.onTranslateToWrapperTransitionEnd
                                  ),
                                  (l.onTranslateToWrapperTransitionEnd = null),
                                  delete l.onTranslateToWrapperTransitionEnd,
                                  r && l.emit('transitionEnd')))
                      }),
                  l.$wrapperEl[0].addEventListener(
                      'transitionend',
                      l.onTranslateToWrapperTransitionEnd
                  ),
                  l.$wrapperEl[0].addEventListener(
                      'webkitTransitionEnd',
                      l.onTranslateToWrapperTransitionEnd
                  ))),
        !0
    )
}
const lre = {
    getTranslate: tre,
    setTranslate: rre,
    minTranslate: nre,
    maxTranslate: are,
    translateTo: ire,
}
function ore(e, t) {
    const r = this
    r.params.cssMode || r.$wrapperEl.transition(e),
        r.emit('setTransition', e, t)
}
function hS({ swiper: e, runCallbacks: t, direction: r, step: n }) {
    const { activeIndex: a, previousIndex: l } = e
    let o = r
    if (
        (o || (a > l ? (o = 'next') : a < l ? (o = 'prev') : (o = 'reset')),
        e.emit(`transition${n}`),
        t && a !== l)
    ) {
        if (o === 'reset') {
            e.emit(`slideResetTransition${n}`)
            return
        }
        e.emit(`slideChangeTransition${n}`),
            o === 'next'
                ? e.emit(`slideNextTransition${n}`)
                : e.emit(`slidePrevTransition${n}`)
    }
}
function sre(e = !0, t) {
    const r = this,
        { params: n } = r
    n.cssMode ||
        (n.autoHeight && r.updateAutoHeight(),
        hS({ swiper: r, runCallbacks: e, direction: t, step: 'Start' }))
}
function cre(e = !0, t) {
    const r = this,
        { params: n } = r
    ;(r.animating = !1),
        !n.cssMode &&
            (r.setTransition(0),
            hS({ swiper: r, runCallbacks: e, direction: t, step: 'End' }))
}
const ure = { setTransition: ore, transitionStart: sre, transitionEnd: cre }
function dre(e = 0, t = this.params.speed, r = !0, n, a) {
    if (typeof e != 'number' && typeof e != 'string')
        throw new Error(
            `The 'index' argument cannot have type other than 'number' or 'string'. [${typeof e}] given.`
        )
    if (typeof e == 'string') {
        const y = parseInt(e, 10)
        if (!isFinite(y))
            throw new Error(
                `The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`
            )
        e = y
    }
    const l = this
    let o = e
    o < 0 && (o = 0)
    const {
        params: s,
        snapGrid: c,
        slidesGrid: u,
        previousIndex: f,
        activeIndex: p,
        rtlTranslate: m,
        wrapperEl: v,
        enabled: b,
    } = l
    if ((l.animating && s.preventInteractionOnTransition) || (!b && !n && !a))
        return !1
    const h = Math.min(l.params.slidesPerGroupSkip, o)
    let g = h + Math.floor((o - h) / l.params.slidesPerGroup)
    g >= c.length && (g = c.length - 1)
    const x = -c[g]
    if (s.normalizeSlideIndex)
        for (let y = 0; y < u.length; y += 1) {
            const N = -Math.floor(x * 100),
                S = Math.floor(u[y] * 100),
                P = Math.floor(u[y + 1] * 100)
            typeof u[y + 1] < 'u'
                ? N >= S && N < P - (P - S) / 2
                    ? (o = y)
                    : N >= S && N < P && (o = y + 1)
                : N >= S && (o = y)
        }
    if (
        l.initialized &&
        o !== p &&
        ((!l.allowSlideNext && x < l.translate && x < l.minTranslate()) ||
            (!l.allowSlidePrev &&
                x > l.translate &&
                x > l.maxTranslate() &&
                (p || 0) !== o))
    )
        return !1
    o !== (f || 0) && r && l.emit('beforeSlideChangeStart'), l.updateProgress(x)
    let w
    if (
        (o > p ? (w = 'next') : o < p ? (w = 'prev') : (w = 'reset'),
        (m && -x === l.translate) || (!m && x === l.translate))
    )
        return (
            l.updateActiveIndex(o),
            s.autoHeight && l.updateAutoHeight(),
            l.updateSlidesClasses(),
            s.effect !== 'slide' && l.setTranslate(x),
            w !== 'reset' && (l.transitionStart(r, w), l.transitionEnd(r, w)),
            !1
        )
    if (s.cssMode) {
        const y = l.isHorizontal(),
            N = m ? x : -x
        if (t === 0) {
            const S = l.virtual && l.params.virtual.enabled
            S &&
                ((l.wrapperEl.style.scrollSnapType = 'none'),
                (l._immediateVirtual = !0)),
                (v[y ? 'scrollLeft' : 'scrollTop'] = N),
                S &&
                    requestAnimationFrame(() => {
                        ;(l.wrapperEl.style.scrollSnapType = ''),
                            (l._swiperImmediateVirtual = !1)
                    })
        } else {
            if (!l.support.smoothScroll)
                return (
                    fS({
                        swiper: l,
                        targetPosition: N,
                        side: y ? 'left' : 'top',
                    }),
                    !0
                )
            v.scrollTo({ [y ? 'left' : 'top']: N, behavior: 'smooth' })
        }
        return !0
    }
    return (
        l.setTransition(t),
        l.setTranslate(x),
        l.updateActiveIndex(o),
        l.updateSlidesClasses(),
        l.emit('beforeTransitionStart', t, n),
        l.transitionStart(r, w),
        t === 0
            ? l.transitionEnd(r, w)
            : l.animating ||
              ((l.animating = !0),
              l.onSlideToWrapperTransitionEnd ||
                  (l.onSlideToWrapperTransitionEnd = function (N) {
                      !l ||
                          l.destroyed ||
                          (N.target === this &&
                              (l.$wrapperEl[0].removeEventListener(
                                  'transitionend',
                                  l.onSlideToWrapperTransitionEnd
                              ),
                              l.$wrapperEl[0].removeEventListener(
                                  'webkitTransitionEnd',
                                  l.onSlideToWrapperTransitionEnd
                              ),
                              (l.onSlideToWrapperTransitionEnd = null),
                              delete l.onSlideToWrapperTransitionEnd,
                              l.transitionEnd(r, w)))
                  }),
              l.$wrapperEl[0].addEventListener(
                  'transitionend',
                  l.onSlideToWrapperTransitionEnd
              ),
              l.$wrapperEl[0].addEventListener(
                  'webkitTransitionEnd',
                  l.onSlideToWrapperTransitionEnd
              )),
        !0
    )
}
function fre(e = 0, t = this.params.speed, r = !0, n) {
    if (typeof e == 'string') {
        const o = parseInt(e, 10)
        if (!isFinite(o))
            throw new Error(
                `The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`
            )
        e = o
    }
    const a = this
    let l = e
    return a.params.loop && (l += a.loopedSlides), a.slideTo(l, t, r, n)
}
function pre(e = this.params.speed, t = !0, r) {
    const n = this,
        { animating: a, enabled: l, params: o } = n
    if (!l) return n
    let s = o.slidesPerGroup
    o.slidesPerView === 'auto' &&
        o.slidesPerGroup === 1 &&
        o.slidesPerGroupAuto &&
        (s = Math.max(n.slidesPerViewDynamic('current', !0), 1))
    const c = n.activeIndex < o.slidesPerGroupSkip ? 1 : s
    if (o.loop) {
        if (a && o.loopPreventsSlide) return !1
        n.loopFix(), (n._clientLeft = n.$wrapperEl[0].clientLeft)
    }
    return o.rewind && n.isEnd
        ? n.slideTo(0, e, t, r)
        : n.slideTo(n.activeIndex + c, e, t, r)
}
function hre(e = this.params.speed, t = !0, r) {
    const n = this,
        {
            params: a,
            animating: l,
            snapGrid: o,
            slidesGrid: s,
            rtlTranslate: c,
            enabled: u,
        } = n
    if (!u) return n
    if (a.loop) {
        if (l && a.loopPreventsSlide) return !1
        n.loopFix(), (n._clientLeft = n.$wrapperEl[0].clientLeft)
    }
    const f = c ? n.translate : -n.translate
    function p(g) {
        return g < 0 ? -Math.floor(Math.abs(g)) : Math.floor(g)
    }
    const m = p(f),
        v = o.map((g) => p(g))
    let b = o[v.indexOf(m) - 1]
    if (typeof b > 'u' && a.cssMode) {
        let g
        o.forEach((x, w) => {
            m >= x && (g = w)
        }),
            typeof g < 'u' && (b = o[g > 0 ? g - 1 : g])
    }
    let h = 0
    if (
        (typeof b < 'u' &&
            ((h = s.indexOf(b)),
            h < 0 && (h = n.activeIndex - 1),
            a.slidesPerView === 'auto' &&
                a.slidesPerGroup === 1 &&
                a.slidesPerGroupAuto &&
                ((h = h - n.slidesPerViewDynamic('previous', !0) + 1),
                (h = Math.max(h, 0)))),
        a.rewind && n.isBeginning)
    ) {
        const g =
            n.params.virtual && n.params.virtual.enabled && n.virtual
                ? n.virtual.slides.length - 1
                : n.slides.length - 1
        return n.slideTo(g, e, t, r)
    }
    return n.slideTo(h, e, t, r)
}
function mre(e = this.params.speed, t = !0, r) {
    const n = this
    return n.slideTo(n.activeIndex, e, t, r)
}
function gre(e = this.params.speed, t = !0, r, n = 0.5) {
    const a = this
    let l = a.activeIndex
    const o = Math.min(a.params.slidesPerGroupSkip, l),
        s = o + Math.floor((l - o) / a.params.slidesPerGroup),
        c = a.rtlTranslate ? a.translate : -a.translate
    if (c >= a.snapGrid[s]) {
        const u = a.snapGrid[s],
            f = a.snapGrid[s + 1]
        c - u > (f - u) * n && (l += a.params.slidesPerGroup)
    } else {
        const u = a.snapGrid[s - 1],
            f = a.snapGrid[s]
        c - u <= (f - u) * n && (l -= a.params.slidesPerGroup)
    }
    return (
        (l = Math.max(l, 0)),
        (l = Math.min(l, a.slidesGrid.length - 1)),
        a.slideTo(l, e, t, r)
    )
}
function vre() {
    const e = this,
        { params: t, $wrapperEl: r } = e,
        n =
            t.slidesPerView === 'auto'
                ? e.slidesPerViewDynamic()
                : t.slidesPerView
    let a = e.clickedIndex,
        l
    if (t.loop) {
        if (e.animating) return
        ;(l = parseInt(ae(e.clickedSlide).attr('data-swiper-slide-index'), 10)),
            t.centeredSlides
                ? a < e.loopedSlides - n / 2 ||
                  a > e.slides.length - e.loopedSlides + n / 2
                    ? (e.loopFix(),
                      (a = r
                          .children(
                              `.${t.slideClass}[data-swiper-slide-index="${l}"]:not(.${t.slideDuplicateClass})`
                          )
                          .eq(0)
                          .index()),
                      Jd(() => {
                          e.slideTo(a)
                      }))
                    : e.slideTo(a)
                : a > e.slides.length - n
                ? (e.loopFix(),
                  (a = r
                      .children(
                          `.${t.slideClass}[data-swiper-slide-index="${l}"]:not(.${t.slideDuplicateClass})`
                      )
                      .eq(0)
                      .index()),
                  Jd(() => {
                      e.slideTo(a)
                  }))
                : e.slideTo(a)
    } else e.slideTo(a)
}
const yre = {
    slideTo: dre,
    slideToLoop: fre,
    slideNext: pre,
    slidePrev: hre,
    slideReset: mre,
    slideToClosest: gre,
    slideToClickedSlide: vre,
}
function bre() {
    const e = this,
        t = Bt(),
        { params: r, $wrapperEl: n } = e,
        a = n.children().length > 0 ? ae(n.children()[0].parentNode) : n
    a.children(`.${r.slideClass}.${r.slideDuplicateClass}`).remove()
    let l = a.children(`.${r.slideClass}`)
    if (r.loopFillGroupWithBlank) {
        const c = r.slidesPerGroup - (l.length % r.slidesPerGroup)
        if (c !== r.slidesPerGroup) {
            for (let u = 0; u < c; u += 1) {
                const f = ae(t.createElement('div')).addClass(
                    `${r.slideClass} ${r.slideBlankClass}`
                )
                a.append(f)
            }
            l = a.children(`.${r.slideClass}`)
        }
    }
    r.slidesPerView === 'auto' &&
        !r.loopedSlides &&
        (r.loopedSlides = l.length),
        (e.loopedSlides = Math.ceil(
            parseFloat(r.loopedSlides || r.slidesPerView, 10)
        )),
        (e.loopedSlides += r.loopAdditionalSlides),
        e.loopedSlides > l.length &&
            e.params.loopedSlidesLimit &&
            (e.loopedSlides = l.length)
    const o = [],
        s = []
    l.each((c, u) => {
        ae(c).attr('data-swiper-slide-index', u)
    })
    for (let c = 0; c < e.loopedSlides; c += 1) {
        const u = c - Math.floor(c / l.length) * l.length
        s.push(l.eq(u)[0]), o.unshift(l.eq(l.length - u - 1)[0])
    }
    for (let c = 0; c < s.length; c += 1)
        a.append(ae(s[c].cloneNode(!0)).addClass(r.slideDuplicateClass))
    for (let c = o.length - 1; c >= 0; c -= 1)
        a.prepend(ae(o[c].cloneNode(!0)).addClass(r.slideDuplicateClass))
}
function xre() {
    const e = this
    e.emit('beforeLoopFix')
    const {
        activeIndex: t,
        slides: r,
        loopedSlides: n,
        allowSlidePrev: a,
        allowSlideNext: l,
        snapGrid: o,
        rtlTranslate: s,
    } = e
    let c
    ;(e.allowSlidePrev = !0), (e.allowSlideNext = !0)
    const f = -o[t] - e.getTranslate()
    t < n
        ? ((c = r.length - n * 3 + t),
          (c += n),
          e.slideTo(c, 0, !1, !0) &&
              f !== 0 &&
              e.setTranslate((s ? -e.translate : e.translate) - f))
        : t >= r.length - n &&
          ((c = -r.length + t + n),
          (c += n),
          e.slideTo(c, 0, !1, !0) &&
              f !== 0 &&
              e.setTranslate((s ? -e.translate : e.translate) - f)),
        (e.allowSlidePrev = a),
        (e.allowSlideNext = l),
        e.emit('loopFix')
}
function wre() {
    const e = this,
        { $wrapperEl: t, params: r, slides: n } = e
    t
        .children(
            `.${r.slideClass}.${r.slideDuplicateClass},.${r.slideClass}.${r.slideBlankClass}`
        )
        .remove(),
        n.removeAttr('data-swiper-slide-index')
}
const Nre = { loopCreate: bre, loopFix: xre, loopDestroy: wre }
function Sre(e) {
    const t = this
    if (
        t.support.touch ||
        !t.params.simulateTouch ||
        (t.params.watchOverflow && t.isLocked) ||
        t.params.cssMode
    )
        return
    const r = t.params.touchEventsTarget === 'container' ? t.el : t.wrapperEl
    ;(r.style.cursor = 'move'), (r.style.cursor = e ? 'grabbing' : 'grab')
}
function Cre() {
    const e = this
    e.support.touch ||
        (e.params.watchOverflow && e.isLocked) ||
        e.params.cssMode ||
        (e[
            e.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'
        ].style.cursor = '')
}
const Pre = { setGrabCursor: Sre, unsetGrabCursor: Cre }
function _re(e, t = this) {
    function r(n) {
        if (!n || n === Bt() || n === $t()) return null
        n.assignedSlot && (n = n.assignedSlot)
        const a = n.closest(e)
        return !a && !n.getRootNode ? null : a || r(n.getRootNode().host)
    }
    return r(t)
}
function Are(e) {
    const t = this,
        r = Bt(),
        n = $t(),
        a = t.touchEventsData,
        { params: l, touches: o, enabled: s } = t
    if (!s || (t.animating && l.preventInteractionOnTransition)) return
    !t.animating && l.cssMode && l.loop && t.loopFix()
    let c = e
    c.originalEvent && (c = c.originalEvent)
    let u = ae(c.target)
    if (
        (l.touchEventsTarget === 'wrapper' && !u.closest(t.wrapperEl).length) ||
        ((a.isTouchEvent = c.type === 'touchstart'),
        !a.isTouchEvent && 'which' in c && c.which === 3) ||
        (!a.isTouchEvent && 'button' in c && c.button > 0) ||
        (a.isTouched && a.isMoved)
    )
        return
    const f = !!l.noSwipingClass && l.noSwipingClass !== '',
        p = e.composedPath ? e.composedPath() : e.path
    f && c.target && c.target.shadowRoot && p && (u = ae(p[0]))
    const m = l.noSwipingSelector
            ? l.noSwipingSelector
            : `.${l.noSwipingClass}`,
        v = !!(c.target && c.target.shadowRoot)
    if (l.noSwiping && (v ? _re(m, u[0]) : u.closest(m)[0])) {
        t.allowClick = !0
        return
    }
    if (l.swipeHandler && !u.closest(l.swipeHandler)[0]) return
    ;(o.currentX =
        c.type === 'touchstart' ? c.targetTouches[0].pageX : c.pageX),
        (o.currentY =
            c.type === 'touchstart' ? c.targetTouches[0].pageY : c.pageY)
    const b = o.currentX,
        h = o.currentY,
        g = l.edgeSwipeDetection || l.iOSEdgeSwipeDetection,
        x = l.edgeSwipeThreshold || l.iOSEdgeSwipeThreshold
    if (g && (b <= x || b >= n.innerWidth - x))
        if (g === 'prevent') e.preventDefault()
        else return
    if (
        (Object.assign(a, {
            isTouched: !0,
            isMoved: !1,
            allowTouchCallbacks: !0,
            isScrolling: void 0,
            startMoving: void 0,
        }),
        (o.startX = b),
        (o.startY = h),
        (a.touchStartTime = rc()),
        (t.allowClick = !0),
        t.updateSize(),
        (t.swipeDirection = void 0),
        l.threshold > 0 && (a.allowThresholdMove = !1),
        c.type !== 'touchstart')
    ) {
        let w = !0
        u.is(a.focusableElements) &&
            ((w = !1), u[0].nodeName === 'SELECT' && (a.isTouched = !1)),
            r.activeElement &&
                ae(r.activeElement).is(a.focusableElements) &&
                r.activeElement !== u[0] &&
                r.activeElement.blur()
        const y = w && t.allowTouchMove && l.touchStartPreventDefault
        ;(l.touchStartForcePreventDefault || y) &&
            !u[0].isContentEditable &&
            c.preventDefault()
    }
    t.params.freeMode &&
        t.params.freeMode.enabled &&
        t.freeMode &&
        t.animating &&
        !l.cssMode &&
        t.freeMode.onTouchStart(),
        t.emit('touchStart', c)
}
function Ere(e) {
    const t = Bt(),
        r = this,
        n = r.touchEventsData,
        { params: a, touches: l, rtlTranslate: o, enabled: s } = r
    if (!s) return
    let c = e
    if ((c.originalEvent && (c = c.originalEvent), !n.isTouched)) {
        n.startMoving && n.isScrolling && r.emit('touchMoveOpposite', c)
        return
    }
    if (n.isTouchEvent && c.type !== 'touchmove') return
    const u =
            c.type === 'touchmove' &&
            c.targetTouches &&
            (c.targetTouches[0] || c.changedTouches[0]),
        f = c.type === 'touchmove' ? u.pageX : c.pageX,
        p = c.type === 'touchmove' ? u.pageY : c.pageY
    if (c.preventedByNestedSwiper) {
        ;(l.startX = f), (l.startY = p)
        return
    }
    if (!r.allowTouchMove) {
        ae(c.target).is(n.focusableElements) || (r.allowClick = !1),
            n.isTouched &&
                (Object.assign(l, {
                    startX: f,
                    startY: p,
                    currentX: f,
                    currentY: p,
                }),
                (n.touchStartTime = rc()))
        return
    }
    if (n.isTouchEvent && a.touchReleaseOnEdges && !a.loop) {
        if (r.isVertical()) {
            if (
                (p < l.startY && r.translate <= r.maxTranslate()) ||
                (p > l.startY && r.translate >= r.minTranslate())
            ) {
                ;(n.isTouched = !1), (n.isMoved = !1)
                return
            }
        } else if (
            (f < l.startX && r.translate <= r.maxTranslate()) ||
            (f > l.startX && r.translate >= r.minTranslate())
        )
            return
    }
    if (
        n.isTouchEvent &&
        t.activeElement &&
        c.target === t.activeElement &&
        ae(c.target).is(n.focusableElements)
    ) {
        ;(n.isMoved = !0), (r.allowClick = !1)
        return
    }
    if (
        (n.allowTouchCallbacks && r.emit('touchMove', c),
        c.targetTouches && c.targetTouches.length > 1)
    )
        return
    ;(l.currentX = f), (l.currentY = p)
    const m = l.currentX - l.startX,
        v = l.currentY - l.startY
    if (r.params.threshold && Math.sqrt(m ** 2 + v ** 2) < r.params.threshold)
        return
    if (typeof n.isScrolling > 'u') {
        let x
        ;(r.isHorizontal() && l.currentY === l.startY) ||
        (r.isVertical() && l.currentX === l.startX)
            ? (n.isScrolling = !1)
            : m * m + v * v >= 25 &&
              ((x = (Math.atan2(Math.abs(v), Math.abs(m)) * 180) / Math.PI),
              (n.isScrolling = r.isHorizontal()
                  ? x > a.touchAngle
                  : 90 - x > a.touchAngle))
    }
    if (
        (n.isScrolling && r.emit('touchMoveOpposite', c),
        typeof n.startMoving > 'u' &&
            (l.currentX !== l.startX || l.currentY !== l.startY) &&
            (n.startMoving = !0),
        n.isScrolling)
    ) {
        n.isTouched = !1
        return
    }
    if (!n.startMoving) return
    ;(r.allowClick = !1),
        !a.cssMode && c.cancelable && c.preventDefault(),
        a.touchMoveStopPropagation && !a.nested && c.stopPropagation(),
        n.isMoved ||
            (a.loop && !a.cssMode && r.loopFix(),
            (n.startTranslate = r.getTranslate()),
            r.setTransition(0),
            r.animating &&
                r.$wrapperEl.trigger('webkitTransitionEnd transitionend'),
            (n.allowMomentumBounce = !1),
            a.grabCursor &&
                (r.allowSlideNext === !0 || r.allowSlidePrev === !0) &&
                r.setGrabCursor(!0),
            r.emit('sliderFirstMove', c)),
        r.emit('sliderMove', c),
        (n.isMoved = !0)
    let b = r.isHorizontal() ? m : v
    ;(l.diff = b),
        (b *= a.touchRatio),
        o && (b = -b),
        (r.swipeDirection = b > 0 ? 'prev' : 'next'),
        (n.currentTranslate = b + n.startTranslate)
    let h = !0,
        g = a.resistanceRatio
    if (
        (a.touchReleaseOnEdges && (g = 0),
        b > 0 && n.currentTranslate > r.minTranslate()
            ? ((h = !1),
              a.resistance &&
                  (n.currentTranslate =
                      r.minTranslate() -
                      1 +
                      (-r.minTranslate() + n.startTranslate + b) ** g))
            : b < 0 &&
              n.currentTranslate < r.maxTranslate() &&
              ((h = !1),
              a.resistance &&
                  (n.currentTranslate =
                      r.maxTranslate() +
                      1 -
                      (r.maxTranslate() - n.startTranslate - b) ** g)),
        h && (c.preventedByNestedSwiper = !0),
        !r.allowSlideNext &&
            r.swipeDirection === 'next' &&
            n.currentTranslate < n.startTranslate &&
            (n.currentTranslate = n.startTranslate),
        !r.allowSlidePrev &&
            r.swipeDirection === 'prev' &&
            n.currentTranslate > n.startTranslate &&
            (n.currentTranslate = n.startTranslate),
        !r.allowSlidePrev &&
            !r.allowSlideNext &&
            (n.currentTranslate = n.startTranslate),
        a.threshold > 0)
    )
        if (Math.abs(b) > a.threshold || n.allowThresholdMove) {
            if (!n.allowThresholdMove) {
                ;(n.allowThresholdMove = !0),
                    (l.startX = l.currentX),
                    (l.startY = l.currentY),
                    (n.currentTranslate = n.startTranslate),
                    (l.diff = r.isHorizontal()
                        ? l.currentX - l.startX
                        : l.currentY - l.startY)
                return
            }
        } else {
            n.currentTranslate = n.startTranslate
            return
        }
    !a.followFinger ||
        a.cssMode ||
        (((a.freeMode && a.freeMode.enabled && r.freeMode) ||
            a.watchSlidesProgress) &&
            (r.updateActiveIndex(), r.updateSlidesClasses()),
        r.params.freeMode &&
            a.freeMode.enabled &&
            r.freeMode &&
            r.freeMode.onTouchMove(),
        r.updateProgress(n.currentTranslate),
        r.setTranslate(n.currentTranslate))
}
function kre(e) {
    const t = this,
        r = t.touchEventsData,
        {
            params: n,
            touches: a,
            rtlTranslate: l,
            slidesGrid: o,
            enabled: s,
        } = t
    if (!s) return
    let c = e
    if (
        (c.originalEvent && (c = c.originalEvent),
        r.allowTouchCallbacks && t.emit('touchEnd', c),
        (r.allowTouchCallbacks = !1),
        !r.isTouched)
    ) {
        r.isMoved && n.grabCursor && t.setGrabCursor(!1),
            (r.isMoved = !1),
            (r.startMoving = !1)
        return
    }
    n.grabCursor &&
        r.isMoved &&
        r.isTouched &&
        (t.allowSlideNext === !0 || t.allowSlidePrev === !0) &&
        t.setGrabCursor(!1)
    const u = rc(),
        f = u - r.touchStartTime
    if (t.allowClick) {
        const w = c.path || (c.composedPath && c.composedPath())
        t.updateClickedSlide((w && w[0]) || c.target),
            t.emit('tap click', c),
            f < 300 &&
                u - r.lastClickTime < 300 &&
                t.emit('doubleTap doubleClick', c)
    }
    if (
        ((r.lastClickTime = rc()),
        Jd(() => {
            t.destroyed || (t.allowClick = !0)
        }),
        !r.isTouched ||
            !r.isMoved ||
            !t.swipeDirection ||
            a.diff === 0 ||
            r.currentTranslate === r.startTranslate)
    ) {
        ;(r.isTouched = !1), (r.isMoved = !1), (r.startMoving = !1)
        return
    }
    ;(r.isTouched = !1), (r.isMoved = !1), (r.startMoving = !1)
    let p
    if (
        (n.followFinger
            ? (p = l ? t.translate : -t.translate)
            : (p = -r.currentTranslate),
        n.cssMode)
    )
        return
    if (t.params.freeMode && n.freeMode.enabled) {
        t.freeMode.onTouchEnd({ currentPos: p })
        return
    }
    let m = 0,
        v = t.slidesSizesGrid[0]
    for (
        let w = 0;
        w < o.length;
        w += w < n.slidesPerGroupSkip ? 1 : n.slidesPerGroup
    ) {
        const y = w < n.slidesPerGroupSkip - 1 ? 1 : n.slidesPerGroup
        typeof o[w + y] < 'u'
            ? p >= o[w] && p < o[w + y] && ((m = w), (v = o[w + y] - o[w]))
            : p >= o[w] && ((m = w), (v = o[o.length - 1] - o[o.length - 2]))
    }
    let b = null,
        h = null
    n.rewind &&
        (t.isBeginning
            ? (h =
                  t.params.virtual && t.params.virtual.enabled && t.virtual
                      ? t.virtual.slides.length - 1
                      : t.slides.length - 1)
            : t.isEnd && (b = 0))
    const g = (p - o[m]) / v,
        x = m < n.slidesPerGroupSkip - 1 ? 1 : n.slidesPerGroup
    if (f > n.longSwipesMs) {
        if (!n.longSwipes) {
            t.slideTo(t.activeIndex)
            return
        }
        t.swipeDirection === 'next' &&
            (g >= n.longSwipesRatio
                ? t.slideTo(n.rewind && t.isEnd ? b : m + x)
                : t.slideTo(m)),
            t.swipeDirection === 'prev' &&
                (g > 1 - n.longSwipesRatio
                    ? t.slideTo(m + x)
                    : h !== null && g < 0 && Math.abs(g) > n.longSwipesRatio
                    ? t.slideTo(h)
                    : t.slideTo(m))
    } else {
        if (!n.shortSwipes) {
            t.slideTo(t.activeIndex)
            return
        }
        t.navigation &&
        (c.target === t.navigation.nextEl || c.target === t.navigation.prevEl)
            ? c.target === t.navigation.nextEl
                ? t.slideTo(m + x)
                : t.slideTo(m)
            : (t.swipeDirection === 'next' && t.slideTo(b !== null ? b : m + x),
              t.swipeDirection === 'prev' && t.slideTo(h !== null ? h : m))
    }
}
function $w() {
    const e = this,
        { params: t, el: r } = e
    if (r && r.offsetWidth === 0) return
    t.breakpoints && e.setBreakpoint()
    const { allowSlideNext: n, allowSlidePrev: a, snapGrid: l } = e
    ;(e.allowSlideNext = !0),
        (e.allowSlidePrev = !0),
        e.updateSize(),
        e.updateSlides(),
        e.updateSlidesClasses(),
        (t.slidesPerView === 'auto' || t.slidesPerView > 1) &&
        e.isEnd &&
        !e.isBeginning &&
        !e.params.centeredSlides
            ? e.slideTo(e.slides.length - 1, 0, !1, !0)
            : e.slideTo(e.activeIndex, 0, !1, !0),
        e.autoplay &&
            e.autoplay.running &&
            e.autoplay.paused &&
            e.autoplay.run(),
        (e.allowSlidePrev = a),
        (e.allowSlideNext = n),
        e.params.watchOverflow && l !== e.snapGrid && e.checkOverflow()
}
function Ore(e) {
    const t = this
    !t.enabled ||
        t.allowClick ||
        (t.params.preventClicks && e.preventDefault(),
        t.params.preventClicksPropagation &&
            t.animating &&
            (e.stopPropagation(), e.stopImmediatePropagation()))
}
function Tre() {
    const e = this,
        { wrapperEl: t, rtlTranslate: r, enabled: n } = e
    if (!n) return
    ;(e.previousTranslate = e.translate),
        e.isHorizontal()
            ? (e.translate = -t.scrollLeft)
            : (e.translate = -t.scrollTop),
        e.translate === 0 && (e.translate = 0),
        e.updateActiveIndex(),
        e.updateSlidesClasses()
    let a
    const l = e.maxTranslate() - e.minTranslate()
    l === 0 ? (a = 0) : (a = (e.translate - e.minTranslate()) / l),
        a !== e.progress && e.updateProgress(r ? -e.translate : e.translate),
        e.emit('setTranslate', e.translate, !1)
}
let Iw = !1
function Mre() {}
const mS = (e, t) => {
    const r = Bt(),
        {
            params: n,
            touchEvents: a,
            el: l,
            wrapperEl: o,
            device: s,
            support: c,
        } = e,
        u = !!n.nested,
        f = t === 'on' ? 'addEventListener' : 'removeEventListener',
        p = t
    if (!c.touch)
        l[f](a.start, e.onTouchStart, !1),
            r[f](a.move, e.onTouchMove, u),
            r[f](a.end, e.onTouchEnd, !1)
    else {
        const m =
            a.start === 'touchstart' && c.passiveListener && n.passiveListeners
                ? { passive: !0, capture: !1 }
                : !1
        l[f](a.start, e.onTouchStart, m),
            l[f](
                a.move,
                e.onTouchMove,
                c.passiveListener ? { passive: !1, capture: u } : u
            ),
            l[f](a.end, e.onTouchEnd, m),
            a.cancel && l[f](a.cancel, e.onTouchEnd, m)
    }
    ;(n.preventClicks || n.preventClicksPropagation) &&
        l[f]('click', e.onClick, !0),
        n.cssMode && o[f]('scroll', e.onScroll),
        n.updateOnWindowResize
            ? e[p](
                  s.ios || s.android
                      ? 'resize orientationchange observerUpdate'
                      : 'resize observerUpdate',
                  $w,
                  !0
              )
            : e[p]('observerUpdate', $w, !0)
}
function Dre() {
    const e = this,
        t = Bt(),
        { params: r, support: n } = e
    ;(e.onTouchStart = Are.bind(e)),
        (e.onTouchMove = Ere.bind(e)),
        (e.onTouchEnd = kre.bind(e)),
        r.cssMode && (e.onScroll = Tre.bind(e)),
        (e.onClick = Ore.bind(e)),
        n.touch && !Iw && (t.addEventListener('touchstart', Mre), (Iw = !0)),
        mS(e, 'on')
}
function $re() {
    mS(this, 'off')
}
const Ire = { attachEvents: Dre, detachEvents: $re },
    Rw = (e, t) => e.grid && t.grid && t.grid.rows > 1
function Rre() {
    const e = this,
        {
            activeIndex: t,
            initialized: r,
            loopedSlides: n = 0,
            params: a,
            $el: l,
        } = e,
        o = a.breakpoints
    if (!o || (o && Object.keys(o).length === 0)) return
    const s = e.getBreakpoint(o, e.params.breakpointsBase, e.el)
    if (!s || e.currentBreakpoint === s) return
    const u = (s in o ? o[s] : void 0) || e.originalParams,
        f = Rw(e, a),
        p = Rw(e, u),
        m = a.enabled
    f && !p
        ? (l.removeClass(
              `${a.containerModifierClass}grid ${a.containerModifierClass}grid-column`
          ),
          e.emitContainerClasses())
        : !f &&
          p &&
          (l.addClass(`${a.containerModifierClass}grid`),
          ((u.grid.fill && u.grid.fill === 'column') ||
              (!u.grid.fill && a.grid.fill === 'column')) &&
              l.addClass(`${a.containerModifierClass}grid-column`),
          e.emitContainerClasses()),
        ['navigation', 'pagination', 'scrollbar'].forEach((g) => {
            const x = a[g] && a[g].enabled,
                w = u[g] && u[g].enabled
            x && !w && e[g].disable(), !x && w && e[g].enable()
        })
    const v = u.direction && u.direction !== a.direction,
        b = a.loop && (u.slidesPerView !== a.slidesPerView || v)
    v && r && e.changeDirection(), br(e.params, u)
    const h = e.params.enabled
    Object.assign(e, {
        allowTouchMove: e.params.allowTouchMove,
        allowSlideNext: e.params.allowSlideNext,
        allowSlidePrev: e.params.allowSlidePrev,
    }),
        m && !h ? e.disable() : !m && h && e.enable(),
        (e.currentBreakpoint = s),
        e.emit('_beforeBreakpoint', u),
        b &&
            r &&
            (e.loopDestroy(),
            e.loopCreate(),
            e.updateSlides(),
            e.slideTo(t - n + e.loopedSlides, 0, !1)),
        e.emit('breakpoint', u)
}
function Lre(e, t = 'window', r) {
    if (!e || (t === 'container' && !r)) return
    let n = !1
    const a = $t(),
        l = t === 'window' ? a.innerHeight : r.clientHeight,
        o = Object.keys(e).map((s) => {
            if (typeof s == 'string' && s.indexOf('@') === 0) {
                const c = parseFloat(s.substr(1))
                return { value: l * c, point: s }
            }
            return { value: s, point: s }
        })
    o.sort((s, c) => parseInt(s.value, 10) - parseInt(c.value, 10))
    for (let s = 0; s < o.length; s += 1) {
        const { point: c, value: u } = o[s]
        t === 'window'
            ? a.matchMedia(`(min-width: ${u}px)`).matches && (n = c)
            : u <= r.clientWidth && (n = c)
    }
    return n || 'max'
}
const jre = { setBreakpoint: Rre, getBreakpoint: Lre }
function Fre(e, t) {
    const r = []
    return (
        e.forEach((n) => {
            typeof n == 'object'
                ? Object.keys(n).forEach((a) => {
                      n[a] && r.push(t + a)
                  })
                : typeof n == 'string' && r.push(t + n)
        }),
        r
    )
}
function Bre() {
    const e = this,
        { classNames: t, params: r, rtl: n, $el: a, device: l, support: o } = e,
        s = Fre(
            [
                'initialized',
                r.direction,
                { 'pointer-events': !o.touch },
                { 'free-mode': e.params.freeMode && r.freeMode.enabled },
                { autoheight: r.autoHeight },
                { rtl: n },
                { grid: r.grid && r.grid.rows > 1 },
                {
                    'grid-column':
                        r.grid && r.grid.rows > 1 && r.grid.fill === 'column',
                },
                { android: l.android },
                { ios: l.ios },
                { 'css-mode': r.cssMode },
                { centered: r.cssMode && r.centeredSlides },
                { 'watch-progress': r.watchSlidesProgress },
            ],
            r.containerModifierClass
        )
    t.push(...s), a.addClass([...t].join(' ')), e.emitContainerClasses()
}
function zre() {
    const e = this,
        { $el: t, classNames: r } = e
    t.removeClass(r.join(' ')), e.emitContainerClasses()
}
const Vre = { addClasses: Bre, removeClasses: zre }
function Ure(e, t, r, n, a, l) {
    const o = $t()
    let s
    function c() {
        l && l()
    }
    !ae(e).parent('picture')[0] && (!e.complete || !a) && t
        ? ((s = new o.Image()),
          (s.onload = c),
          (s.onerror = c),
          n && (s.sizes = n),
          r && (s.srcset = r),
          t && (s.src = t))
        : c()
}
function Wre() {
    const e = this
    e.imagesToLoad = e.$el.find('img')
    function t() {
        typeof e > 'u' ||
            e === null ||
            !e ||
            e.destroyed ||
            (e.imagesLoaded !== void 0 && (e.imagesLoaded += 1),
            e.imagesLoaded === e.imagesToLoad.length &&
                (e.params.updateOnImagesReady && e.update(),
                e.emit('imagesReady')))
    }
    for (let r = 0; r < e.imagesToLoad.length; r += 1) {
        const n = e.imagesToLoad[r]
        e.loadImage(
            n,
            n.currentSrc || n.getAttribute('src'),
            n.srcset || n.getAttribute('srcset'),
            n.sizes || n.getAttribute('sizes'),
            !0,
            t
        )
    }
}
const Hre = { loadImage: Ure, preloadImages: Wre }
function Gre() {
    const e = this,
        { isLocked: t, params: r } = e,
        { slidesOffsetBefore: n } = r
    if (n) {
        const a = e.slides.length - 1,
            l = e.slidesGrid[a] + e.slidesSizesGrid[a] + n * 2
        e.isLocked = e.size > l
    } else e.isLocked = e.snapGrid.length === 1
    r.allowSlideNext === !0 && (e.allowSlideNext = !e.isLocked),
        r.allowSlidePrev === !0 && (e.allowSlidePrev = !e.isLocked),
        t && t !== e.isLocked && (e.isEnd = !1),
        t !== e.isLocked && e.emit(e.isLocked ? 'lock' : 'unlock')
}
const qre = { checkOverflow: Gre },
    Lw = {
        init: !0,
        direction: 'horizontal',
        touchEventsTarget: 'wrapper',
        initialSlide: 0,
        speed: 300,
        cssMode: !1,
        updateOnWindowResize: !0,
        resizeObserver: !0,
        nested: !1,
        createElements: !1,
        enabled: !0,
        focusableElements:
            'input, select, option, textarea, button, video, label',
        width: null,
        height: null,
        preventInteractionOnTransition: !1,
        userAgent: null,
        url: null,
        edgeSwipeDetection: !1,
        edgeSwipeThreshold: 20,
        autoHeight: !1,
        setWrapperSize: !1,
        virtualTranslate: !1,
        effect: 'slide',
        breakpoints: void 0,
        breakpointsBase: 'window',
        spaceBetween: 0,
        slidesPerView: 1,
        slidesPerGroup: 1,
        slidesPerGroupSkip: 0,
        slidesPerGroupAuto: !1,
        centeredSlides: !1,
        centeredSlidesBounds: !1,
        slidesOffsetBefore: 0,
        slidesOffsetAfter: 0,
        normalizeSlideIndex: !0,
        centerInsufficientSlides: !1,
        watchOverflow: !0,
        roundLengths: !1,
        touchRatio: 1,
        touchAngle: 45,
        simulateTouch: !0,
        shortSwipes: !0,
        longSwipes: !0,
        longSwipesRatio: 0.5,
        longSwipesMs: 300,
        followFinger: !0,
        allowTouchMove: !0,
        threshold: 0,
        touchMoveStopPropagation: !1,
        touchStartPreventDefault: !0,
        touchStartForcePreventDefault: !1,
        touchReleaseOnEdges: !1,
        uniqueNavElements: !0,
        resistance: !0,
        resistanceRatio: 0.85,
        watchSlidesProgress: !1,
        grabCursor: !1,
        preventClicks: !0,
        preventClicksPropagation: !0,
        slideToClickedSlide: !1,
        preloadImages: !0,
        updateOnImagesReady: !0,
        loop: !1,
        loopAdditionalSlides: 0,
        loopedSlides: null,
        loopedSlidesLimit: !0,
        loopFillGroupWithBlank: !1,
        loopPreventsSlide: !0,
        rewind: !1,
        allowSlidePrev: !0,
        allowSlideNext: !0,
        swipeHandler: null,
        noSwiping: !0,
        noSwipingClass: 'swiper-no-swiping',
        noSwipingSelector: null,
        passiveListeners: !0,
        maxBackfaceHiddenSlides: 10,
        containerModifierClass: 'swiper-',
        slideClass: 'swiper-slide',
        slideBlankClass: 'swiper-slide-invisible-blank',
        slideActiveClass: 'swiper-slide-active',
        slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
        slideVisibleClass: 'swiper-slide-visible',
        slideDuplicateClass: 'swiper-slide-duplicate',
        slideNextClass: 'swiper-slide-next',
        slideDuplicateNextClass: 'swiper-slide-duplicate-next',
        slidePrevClass: 'swiper-slide-prev',
        slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
        wrapperClass: 'swiper-wrapper',
        runCallbacksOnInit: !0,
        _emitClasses: !1,
    }
function Kre(e, t) {
    return function (n = {}) {
        const a = Object.keys(n)[0],
            l = n[a]
        if (typeof l != 'object' || l === null) {
            br(t, n)
            return
        }
        if (
            (['navigation', 'pagination', 'scrollbar'].indexOf(a) >= 0 &&
                e[a] === !0 &&
                (e[a] = { auto: !0 }),
            !(a in e && 'enabled' in l))
        ) {
            br(t, n)
            return
        }
        e[a] === !0 && (e[a] = { enabled: !0 }),
            typeof e[a] == 'object' &&
                !('enabled' in e[a]) &&
                (e[a].enabled = !0),
            e[a] || (e[a] = { enabled: !1 }),
            br(t, n)
    }
}
const Zh = {
        eventsEmitter: Wte,
        update: ere,
        translate: lre,
        transition: ure,
        slide: yre,
        loop: Nre,
        grabCursor: Pre,
        events: Ire,
        breakpoints: jre,
        checkOverflow: qre,
        classes: Vre,
        images: Hre,
    },
    Jh = {}
class Qt {
    constructor(...t) {
        let r, n
        if (
            (t.length === 1 &&
            t[0].constructor &&
            Object.prototype.toString.call(t[0]).slice(8, -1) === 'Object'
                ? (n = t[0])
                : ([r, n] = t),
            n || (n = {}),
            (n = br({}, n)),
            r && !n.el && (n.el = r),
            n.el && ae(n.el).length > 1)
        ) {
            const s = []
            return (
                ae(n.el).each((c) => {
                    const u = br({}, n, { el: c })
                    s.push(new Qt(u))
                }),
                s
            )
        }
        const a = this
        ;(a.__swiper__ = !0),
            (a.support = pS()),
            (a.device = Fte({ userAgent: n.userAgent })),
            (a.browser = zte()),
            (a.eventsListeners = {}),
            (a.eventsAnyListeners = []),
            (a.modules = [...a.__modules__]),
            n.modules &&
                Array.isArray(n.modules) &&
                a.modules.push(...n.modules)
        const l = {}
        a.modules.forEach((s) => {
            s({
                swiper: a,
                extendParams: Kre(n, l),
                on: a.on.bind(a),
                once: a.once.bind(a),
                off: a.off.bind(a),
                emit: a.emit.bind(a),
            })
        })
        const o = br({}, Lw, l)
        return (
            (a.params = br({}, o, Jh, n)),
            (a.originalParams = br({}, a.params)),
            (a.passedParams = br({}, n)),
            a.params &&
                a.params.on &&
                Object.keys(a.params.on).forEach((s) => {
                    a.on(s, a.params.on[s])
                }),
            a.params && a.params.onAny && a.onAny(a.params.onAny),
            (a.$ = ae),
            Object.assign(a, {
                enabled: a.params.enabled,
                el: r,
                classNames: [],
                slides: ae(),
                slidesGrid: [],
                snapGrid: [],
                slidesSizesGrid: [],
                isHorizontal() {
                    return a.params.direction === 'horizontal'
                },
                isVertical() {
                    return a.params.direction === 'vertical'
                },
                activeIndex: 0,
                realIndex: 0,
                isBeginning: !0,
                isEnd: !1,
                translate: 0,
                previousTranslate: 0,
                progress: 0,
                velocity: 0,
                animating: !1,
                allowSlideNext: a.params.allowSlideNext,
                allowSlidePrev: a.params.allowSlidePrev,
                touchEvents: (function () {
                    const c = [
                            'touchstart',
                            'touchmove',
                            'touchend',
                            'touchcancel',
                        ],
                        u = ['pointerdown', 'pointermove', 'pointerup']
                    return (
                        (a.touchEventsTouch = {
                            start: c[0],
                            move: c[1],
                            end: c[2],
                            cancel: c[3],
                        }),
                        (a.touchEventsDesktop = {
                            start: u[0],
                            move: u[1],
                            end: u[2],
                        }),
                        a.support.touch || !a.params.simulateTouch
                            ? a.touchEventsTouch
                            : a.touchEventsDesktop
                    )
                })(),
                touchEventsData: {
                    isTouched: void 0,
                    isMoved: void 0,
                    allowTouchCallbacks: void 0,
                    touchStartTime: void 0,
                    isScrolling: void 0,
                    currentTranslate: void 0,
                    startTranslate: void 0,
                    allowThresholdMove: void 0,
                    focusableElements: a.params.focusableElements,
                    lastClickTime: rc(),
                    clickTimeout: void 0,
                    velocities: [],
                    allowMomentumBounce: void 0,
                    isTouchEvent: void 0,
                    startMoving: void 0,
                },
                allowClick: !0,
                allowTouchMove: a.params.allowTouchMove,
                touches: {
                    startX: 0,
                    startY: 0,
                    currentX: 0,
                    currentY: 0,
                    diff: 0,
                },
                imagesToLoad: [],
                imagesLoaded: 0,
            }),
            a.emit('_swiper'),
            a.params.init && a.init(),
            a
        )
    }
    enable() {
        const t = this
        t.enabled ||
            ((t.enabled = !0),
            t.params.grabCursor && t.setGrabCursor(),
            t.emit('enable'))
    }
    disable() {
        const t = this
        !t.enabled ||
            ((t.enabled = !1),
            t.params.grabCursor && t.unsetGrabCursor(),
            t.emit('disable'))
    }
    setProgress(t, r) {
        const n = this
        t = Math.min(Math.max(t, 0), 1)
        const a = n.minTranslate(),
            o = (n.maxTranslate() - a) * t + a
        n.translateTo(o, typeof r > 'u' ? 0 : r),
            n.updateActiveIndex(),
            n.updateSlidesClasses()
    }
    emitContainerClasses() {
        const t = this
        if (!t.params._emitClasses || !t.el) return
        const r = t.el.className
            .split(' ')
            .filter(
                (n) =>
                    n.indexOf('swiper') === 0 ||
                    n.indexOf(t.params.containerModifierClass) === 0
            )
        t.emit('_containerClasses', r.join(' '))
    }
    getSlideClasses(t) {
        const r = this
        return r.destroyed
            ? ''
            : t.className
                  .split(' ')
                  .filter(
                      (n) =>
                          n.indexOf('swiper-slide') === 0 ||
                          n.indexOf(r.params.slideClass) === 0
                  )
                  .join(' ')
    }
    emitSlidesClasses() {
        const t = this
        if (!t.params._emitClasses || !t.el) return
        const r = []
        t.slides.each((n) => {
            const a = t.getSlideClasses(n)
            r.push({ slideEl: n, classNames: a }), t.emit('_slideClass', n, a)
        }),
            t.emit('_slideClasses', r)
    }
    slidesPerViewDynamic(t = 'current', r = !1) {
        const n = this,
            {
                params: a,
                slides: l,
                slidesGrid: o,
                slidesSizesGrid: s,
                size: c,
                activeIndex: u,
            } = n
        let f = 1
        if (a.centeredSlides) {
            let p = l[u].swiperSlideSize,
                m
            for (let v = u + 1; v < l.length; v += 1)
                l[v] &&
                    !m &&
                    ((p += l[v].swiperSlideSize), (f += 1), p > c && (m = !0))
            for (let v = u - 1; v >= 0; v -= 1)
                l[v] &&
                    !m &&
                    ((p += l[v].swiperSlideSize), (f += 1), p > c && (m = !0))
        } else if (t === 'current')
            for (let p = u + 1; p < l.length; p += 1)
                (r ? o[p] + s[p] - o[u] < c : o[p] - o[u] < c) && (f += 1)
        else for (let p = u - 1; p >= 0; p -= 1) o[u] - o[p] < c && (f += 1)
        return f
    }
    update() {
        const t = this
        if (!t || t.destroyed) return
        const { snapGrid: r, params: n } = t
        n.breakpoints && t.setBreakpoint(),
            t.updateSize(),
            t.updateSlides(),
            t.updateProgress(),
            t.updateSlidesClasses()
        function a() {
            const o = t.rtlTranslate ? t.translate * -1 : t.translate,
                s = Math.min(Math.max(o, t.maxTranslate()), t.minTranslate())
            t.setTranslate(s), t.updateActiveIndex(), t.updateSlidesClasses()
        }
        let l
        t.params.freeMode && t.params.freeMode.enabled
            ? (a(), t.params.autoHeight && t.updateAutoHeight())
            : ((t.params.slidesPerView === 'auto' ||
                  t.params.slidesPerView > 1) &&
              t.isEnd &&
              !t.params.centeredSlides
                  ? (l = t.slideTo(t.slides.length - 1, 0, !1, !0))
                  : (l = t.slideTo(t.activeIndex, 0, !1, !0)),
              l || a()),
            n.watchOverflow && r !== t.snapGrid && t.checkOverflow(),
            t.emit('update')
    }
    changeDirection(t, r = !0) {
        const n = this,
            a = n.params.direction
        return (
            t || (t = a === 'horizontal' ? 'vertical' : 'horizontal'),
            t === a ||
                (t !== 'horizontal' && t !== 'vertical') ||
                (n.$el
                    .removeClass(`${n.params.containerModifierClass}${a}`)
                    .addClass(`${n.params.containerModifierClass}${t}`),
                n.emitContainerClasses(),
                (n.params.direction = t),
                n.slides.each((l) => {
                    t === 'vertical'
                        ? (l.style.width = '')
                        : (l.style.height = '')
                }),
                n.emit('changeDirection'),
                r && n.update()),
            n
        )
    }
    changeLanguageDirection(t) {
        const r = this
        ;(r.rtl && t === 'rtl') ||
            (!r.rtl && t === 'ltr') ||
            ((r.rtl = t === 'rtl'),
            (r.rtlTranslate = r.params.direction === 'horizontal' && r.rtl),
            r.rtl
                ? (r.$el.addClass(`${r.params.containerModifierClass}rtl`),
                  (r.el.dir = 'rtl'))
                : (r.$el.removeClass(`${r.params.containerModifierClass}rtl`),
                  (r.el.dir = 'ltr')),
            r.update())
    }
    mount(t) {
        const r = this
        if (r.mounted) return !0
        const n = ae(t || r.params.el)
        if (((t = n[0]), !t)) return !1
        t.swiper = r
        const a = () =>
            `.${(r.params.wrapperClass || '').trim().split(' ').join('.')}`
        let o = (() => {
            if (t && t.shadowRoot && t.shadowRoot.querySelector) {
                const s = ae(t.shadowRoot.querySelector(a()))
                return (s.children = (c) => n.children(c)), s
            }
            return n.children ? n.children(a()) : ae(n).children(a())
        })()
        if (o.length === 0 && r.params.createElements) {
            const c = Bt().createElement('div')
            ;(o = ae(c)),
                (c.className = r.params.wrapperClass),
                n.append(c),
                n.children(`.${r.params.slideClass}`).each((u) => {
                    o.append(u)
                })
        }
        return (
            Object.assign(r, {
                $el: n,
                el: t,
                $wrapperEl: o,
                wrapperEl: o[0],
                mounted: !0,
                rtl:
                    t.dir.toLowerCase() === 'rtl' ||
                    n.css('direction') === 'rtl',
                rtlTranslate:
                    r.params.direction === 'horizontal' &&
                    (t.dir.toLowerCase() === 'rtl' ||
                        n.css('direction') === 'rtl'),
                wrongRTL: o.css('display') === '-webkit-box',
            }),
            !0
        )
    }
    init(t) {
        const r = this
        return (
            r.initialized ||
                r.mount(t) === !1 ||
                (r.emit('beforeInit'),
                r.params.breakpoints && r.setBreakpoint(),
                r.addClasses(),
                r.params.loop && r.loopCreate(),
                r.updateSize(),
                r.updateSlides(),
                r.params.watchOverflow && r.checkOverflow(),
                r.params.grabCursor && r.enabled && r.setGrabCursor(),
                r.params.preloadImages && r.preloadImages(),
                r.params.loop
                    ? r.slideTo(
                          r.params.initialSlide + r.loopedSlides,
                          0,
                          r.params.runCallbacksOnInit,
                          !1,
                          !0
                      )
                    : r.slideTo(
                          r.params.initialSlide,
                          0,
                          r.params.runCallbacksOnInit,
                          !1,
                          !0
                      ),
                r.attachEvents(),
                (r.initialized = !0),
                r.emit('init'),
                r.emit('afterInit')),
            r
        )
    }
    destroy(t = !0, r = !0) {
        const n = this,
            { params: a, $el: l, $wrapperEl: o, slides: s } = n
        return (
            typeof n.params > 'u' ||
                n.destroyed ||
                (n.emit('beforeDestroy'),
                (n.initialized = !1),
                n.detachEvents(),
                a.loop && n.loopDestroy(),
                r &&
                    (n.removeClasses(),
                    l.removeAttr('style'),
                    o.removeAttr('style'),
                    s &&
                        s.length &&
                        s
                            .removeClass(
                                [
                                    a.slideVisibleClass,
                                    a.slideActiveClass,
                                    a.slideNextClass,
                                    a.slidePrevClass,
                                ].join(' ')
                            )
                            .removeAttr('style')
                            .removeAttr('data-swiper-slide-index')),
                n.emit('destroy'),
                Object.keys(n.eventsListeners).forEach((c) => {
                    n.off(c)
                }),
                t !== !1 && ((n.$el[0].swiper = null), Dte(n)),
                (n.destroyed = !0)),
            null
        )
    }
    static extendDefaults(t) {
        br(Jh, t)
    }
    static get extendedDefaults() {
        return Jh
    }
    static get defaults() {
        return Lw
    }
    static installModule(t) {
        Qt.prototype.__modules__ || (Qt.prototype.__modules__ = [])
        const r = Qt.prototype.__modules__
        typeof t == 'function' && r.indexOf(t) < 0 && r.push(t)
    }
    static use(t) {
        return Array.isArray(t)
            ? (t.forEach((r) => Qt.installModule(r)), Qt)
            : (Qt.installModule(t), Qt)
    }
}
Object.keys(Zh).forEach((e) => {
    Object.keys(Zh[e]).forEach((t) => {
        Qt.prototype[t] = Zh[e][t]
    })
})
Qt.use([Vte, Ute])
function Yre(e, t, r, n) {
    const a = Bt()
    return (
        e.params.createElements &&
            Object.keys(n).forEach((l) => {
                if (!r[l] && r.auto === !0) {
                    let o = e.$el.children(`.${n[l]}`)[0]
                    o ||
                        ((o = a.createElement('div')),
                        (o.className = n[l]),
                        e.$el.append(o)),
                        (r[l] = o),
                        (t[l] = o)
                }
            }),
        r
    )
}
function Ui(e = '') {
    return `.${e
        .trim()
        .replace(/([\.:!\/])/g, '\\$1')
        .replace(/ /g, '.')}`
}
function Xre({ swiper: e, extendParams: t, on: r, emit: n }) {
    const a = 'swiper-pagination'
    t({
        pagination: {
            el: null,
            bulletElement: 'span',
            clickable: !1,
            hideOnClick: !1,
            renderBullet: null,
            renderProgressbar: null,
            renderFraction: null,
            renderCustom: null,
            progressbarOpposite: !1,
            type: 'bullets',
            dynamicBullets: !1,
            dynamicMainBullets: 1,
            formatFractionCurrent: (h) => h,
            formatFractionTotal: (h) => h,
            bulletClass: `${a}-bullet`,
            bulletActiveClass: `${a}-bullet-active`,
            modifierClass: `${a}-`,
            currentClass: `${a}-current`,
            totalClass: `${a}-total`,
            hiddenClass: `${a}-hidden`,
            progressbarFillClass: `${a}-progressbar-fill`,
            progressbarOppositeClass: `${a}-progressbar-opposite`,
            clickableClass: `${a}-clickable`,
            lockClass: `${a}-lock`,
            horizontalClass: `${a}-horizontal`,
            verticalClass: `${a}-vertical`,
            paginationDisabledClass: `${a}-disabled`,
        },
    }),
        (e.pagination = { el: null, $el: null, bullets: [] })
    let l,
        o = 0
    function s() {
        return (
            !e.params.pagination.el ||
            !e.pagination.el ||
            !e.pagination.$el ||
            e.pagination.$el.length === 0
        )
    }
    function c(h, g) {
        const { bulletActiveClass: x } = e.params.pagination
        h[g]().addClass(`${x}-${g}`)[g]().addClass(`${x}-${g}-${g}`)
    }
    function u() {
        const h = e.rtl,
            g = e.params.pagination
        if (s()) return
        const x =
                e.virtual && e.params.virtual.enabled
                    ? e.virtual.slides.length
                    : e.slides.length,
            w = e.pagination.$el
        let y
        const N = e.params.loop
            ? Math.ceil((x - e.loopedSlides * 2) / e.params.slidesPerGroup)
            : e.snapGrid.length
        if (
            (e.params.loop
                ? ((y = Math.ceil(
                      (e.activeIndex - e.loopedSlides) / e.params.slidesPerGroup
                  )),
                  y > x - 1 - e.loopedSlides * 2 &&
                      (y -= x - e.loopedSlides * 2),
                  y > N - 1 && (y -= N),
                  y < 0 && e.params.paginationType !== 'bullets' && (y = N + y))
                : typeof e.snapIndex < 'u'
                ? (y = e.snapIndex)
                : (y = e.activeIndex || 0),
            g.type === 'bullets' &&
                e.pagination.bullets &&
                e.pagination.bullets.length > 0)
        ) {
            const S = e.pagination.bullets
            let P, E, k
            if (
                (g.dynamicBullets &&
                    ((l = S.eq(0)[
                        e.isHorizontal() ? 'outerWidth' : 'outerHeight'
                    ](!0)),
                    w.css(
                        e.isHorizontal() ? 'width' : 'height',
                        `${l * (g.dynamicMainBullets + 4)}px`
                    ),
                    g.dynamicMainBullets > 1 &&
                        e.previousIndex !== void 0 &&
                        ((o += y - (e.previousIndex - e.loopedSlides || 0)),
                        o > g.dynamicMainBullets - 1
                            ? (o = g.dynamicMainBullets - 1)
                            : o < 0 && (o = 0)),
                    (P = Math.max(y - o, 0)),
                    (E = P + (Math.min(S.length, g.dynamicMainBullets) - 1)),
                    (k = (E + P) / 2)),
                S.removeClass(
                    ['', '-next', '-next-next', '-prev', '-prev-prev', '-main']
                        .map((M) => `${g.bulletActiveClass}${M}`)
                        .join(' ')
                ),
                w.length > 1)
            )
                S.each((M) => {
                    const A = ae(M),
                        _ = A.index()
                    _ === y && A.addClass(g.bulletActiveClass),
                        g.dynamicBullets &&
                            (_ >= P &&
                                _ <= E &&
                                A.addClass(`${g.bulletActiveClass}-main`),
                            _ === P && c(A, 'prev'),
                            _ === E && c(A, 'next'))
                })
            else {
                const M = S.eq(y),
                    A = M.index()
                if ((M.addClass(g.bulletActiveClass), g.dynamicBullets)) {
                    const _ = S.eq(P),
                        O = S.eq(E)
                    for (let T = P; T <= E; T += 1)
                        S.eq(T).addClass(`${g.bulletActiveClass}-main`)
                    if (e.params.loop)
                        if (A >= S.length) {
                            for (let T = g.dynamicMainBullets; T >= 0; T -= 1)
                                S.eq(S.length - T).addClass(
                                    `${g.bulletActiveClass}-main`
                                )
                            S.eq(S.length - g.dynamicMainBullets - 1).addClass(
                                `${g.bulletActiveClass}-prev`
                            )
                        } else c(_, 'prev'), c(O, 'next')
                    else c(_, 'prev'), c(O, 'next')
                }
            }
            if (g.dynamicBullets) {
                const M = Math.min(S.length, g.dynamicMainBullets + 4),
                    A = (l * M - l) / 2 - k * l,
                    _ = h ? 'right' : 'left'
                S.css(e.isHorizontal() ? _ : 'top', `${A}px`)
            }
        }
        if (
            (g.type === 'fraction' &&
                (w
                    .find(Ui(g.currentClass))
                    .text(g.formatFractionCurrent(y + 1)),
                w.find(Ui(g.totalClass)).text(g.formatFractionTotal(N))),
            g.type === 'progressbar')
        ) {
            let S
            g.progressbarOpposite
                ? (S = e.isHorizontal() ? 'vertical' : 'horizontal')
                : (S = e.isHorizontal() ? 'horizontal' : 'vertical')
            const P = (y + 1) / N
            let E = 1,
                k = 1
            S === 'horizontal' ? (E = P) : (k = P),
                w
                    .find(Ui(g.progressbarFillClass))
                    .transform(`translate3d(0,0,0) scaleX(${E}) scaleY(${k})`)
                    .transition(e.params.speed)
        }
        g.type === 'custom' && g.renderCustom
            ? (w.html(g.renderCustom(e, y + 1, N)), n('paginationRender', w[0]))
            : n('paginationUpdate', w[0]),
            e.params.watchOverflow &&
                e.enabled &&
                w[e.isLocked ? 'addClass' : 'removeClass'](g.lockClass)
    }
    function f() {
        const h = e.params.pagination
        if (s()) return
        const g =
                e.virtual && e.params.virtual.enabled
                    ? e.virtual.slides.length
                    : e.slides.length,
            x = e.pagination.$el
        let w = ''
        if (h.type === 'bullets') {
            let y = e.params.loop
                ? Math.ceil((g - e.loopedSlides * 2) / e.params.slidesPerGroup)
                : e.snapGrid.length
            e.params.freeMode &&
                e.params.freeMode.enabled &&
                !e.params.loop &&
                y > g &&
                (y = g)
            for (let N = 0; N < y; N += 1)
                h.renderBullet
                    ? (w += h.renderBullet.call(e, N, h.bulletClass))
                    : (w += `<${h.bulletElement} class="${h.bulletClass}"></${h.bulletElement}>`)
            x.html(w), (e.pagination.bullets = x.find(Ui(h.bulletClass)))
        }
        h.type === 'fraction' &&
            (h.renderFraction
                ? (w = h.renderFraction.call(e, h.currentClass, h.totalClass))
                : (w = `<span class="${h.currentClass}"></span> / <span class="${h.totalClass}"></span>`),
            x.html(w)),
            h.type === 'progressbar' &&
                (h.renderProgressbar
                    ? (w = h.renderProgressbar.call(e, h.progressbarFillClass))
                    : (w = `<span class="${h.progressbarFillClass}"></span>`),
                x.html(w)),
            h.type !== 'custom' && n('paginationRender', e.pagination.$el[0])
    }
    function p() {
        e.params.pagination = Yre(
            e,
            e.originalParams.pagination,
            e.params.pagination,
            { el: 'swiper-pagination' }
        )
        const h = e.params.pagination
        if (!h.el) return
        let g = ae(h.el)
        g.length !== 0 &&
            (e.params.uniqueNavElements &&
                typeof h.el == 'string' &&
                g.length > 1 &&
                ((g = e.$el.find(h.el)),
                g.length > 1 &&
                    (g = g.filter(
                        (x) => ae(x).parents('.swiper')[0] === e.el
                    ))),
            h.type === 'bullets' && h.clickable && g.addClass(h.clickableClass),
            g.addClass(h.modifierClass + h.type),
            g.addClass(e.isHorizontal() ? h.horizontalClass : h.verticalClass),
            h.type === 'bullets' &&
                h.dynamicBullets &&
                (g.addClass(`${h.modifierClass}${h.type}-dynamic`),
                (o = 0),
                h.dynamicMainBullets < 1 && (h.dynamicMainBullets = 1)),
            h.type === 'progressbar' &&
                h.progressbarOpposite &&
                g.addClass(h.progressbarOppositeClass),
            h.clickable &&
                g.on('click', Ui(h.bulletClass), function (w) {
                    w.preventDefault()
                    let y = ae(this).index() * e.params.slidesPerGroup
                    e.params.loop && (y += e.loopedSlides), e.slideTo(y)
                }),
            Object.assign(e.pagination, { $el: g, el: g[0] }),
            e.enabled || g.addClass(h.lockClass))
    }
    function m() {
        const h = e.params.pagination
        if (s()) return
        const g = e.pagination.$el
        g.removeClass(h.hiddenClass),
            g.removeClass(h.modifierClass + h.type),
            g.removeClass(
                e.isHorizontal() ? h.horizontalClass : h.verticalClass
            ),
            e.pagination.bullets &&
                e.pagination.bullets.removeClass &&
                e.pagination.bullets.removeClass(h.bulletActiveClass),
            h.clickable && g.off('click', Ui(h.bulletClass))
    }
    r('init', () => {
        e.params.pagination.enabled === !1 ? b() : (p(), f(), u())
    }),
        r('activeIndexChange', () => {
            ;(e.params.loop || typeof e.snapIndex > 'u') && u()
        }),
        r('snapIndexChange', () => {
            e.params.loop || u()
        }),
        r('slidesLengthChange', () => {
            e.params.loop && (f(), u())
        }),
        r('snapGridLengthChange', () => {
            e.params.loop || (f(), u())
        }),
        r('destroy', () => {
            m()
        }),
        r('enable disable', () => {
            const { $el: h } = e.pagination
            h &&
                h[e.enabled ? 'removeClass' : 'addClass'](
                    e.params.pagination.lockClass
                )
        }),
        r('lock unlock', () => {
            u()
        }),
        r('click', (h, g) => {
            const x = g.target,
                { $el: w } = e.pagination
            if (
                e.params.pagination.el &&
                e.params.pagination.hideOnClick &&
                w &&
                w.length > 0 &&
                !ae(x).hasClass(e.params.pagination.bulletClass)
            ) {
                if (
                    e.navigation &&
                    ((e.navigation.nextEl && x === e.navigation.nextEl) ||
                        (e.navigation.prevEl && x === e.navigation.prevEl))
                )
                    return
                const y = w.hasClass(e.params.pagination.hiddenClass)
                n(y === !0 ? 'paginationShow' : 'paginationHide'),
                    w.toggleClass(e.params.pagination.hiddenClass)
            }
        })
    const v = () => {
            e.$el.removeClass(e.params.pagination.paginationDisabledClass),
                e.pagination.$el &&
                    e.pagination.$el.removeClass(
                        e.params.pagination.paginationDisabledClass
                    ),
                p(),
                f(),
                u()
        },
        b = () => {
            e.$el.addClass(e.params.pagination.paginationDisabledClass),
                e.pagination.$el &&
                    e.pagination.$el.addClass(
                        e.params.pagination.paginationDisabledClass
                    ),
                m()
        }
    Object.assign(e.pagination, {
        enable: v,
        disable: b,
        render: f,
        update: u,
        init: p,
        destroy: m,
    })
}
function Zre({ swiper: e, extendParams: t, on: r, emit: n }) {
    let a
    ;(e.autoplay = { running: !1, paused: !1 }),
        t({
            autoplay: {
                enabled: !1,
                delay: 3e3,
                waitForTransition: !0,
                disableOnInteraction: !0,
                stopOnLastSlide: !1,
                reverseDirection: !1,
                pauseOnMouseEnter: !1,
            },
        })
    function l() {
        if (!e.size) {
            ;(e.autoplay.running = !1), (e.autoplay.paused = !1)
            return
        }
        const h = e.slides.eq(e.activeIndex)
        let g = e.params.autoplay.delay
        h.attr('data-swiper-autoplay') &&
            (g = h.attr('data-swiper-autoplay') || e.params.autoplay.delay),
            clearTimeout(a),
            (a = Jd(() => {
                let x
                e.params.autoplay.reverseDirection
                    ? e.params.loop
                        ? (e.loopFix(),
                          (x = e.slidePrev(e.params.speed, !0, !0)),
                          n('autoplay'))
                        : e.isBeginning
                        ? e.params.autoplay.stopOnLastSlide
                            ? s()
                            : ((x = e.slideTo(
                                  e.slides.length - 1,
                                  e.params.speed,
                                  !0,
                                  !0
                              )),
                              n('autoplay'))
                        : ((x = e.slidePrev(e.params.speed, !0, !0)),
                          n('autoplay'))
                    : e.params.loop
                    ? (e.loopFix(),
                      (x = e.slideNext(e.params.speed, !0, !0)),
                      n('autoplay'))
                    : e.isEnd
                    ? e.params.autoplay.stopOnLastSlide
                        ? s()
                        : ((x = e.slideTo(0, e.params.speed, !0, !0)),
                          n('autoplay'))
                    : ((x = e.slideNext(e.params.speed, !0, !0)),
                      n('autoplay')),
                    ((e.params.cssMode && e.autoplay.running) || x === !1) &&
                        l()
            }, g))
    }
    function o() {
        return typeof a < 'u' || e.autoplay.running
            ? !1
            : ((e.autoplay.running = !0), n('autoplayStart'), l(), !0)
    }
    function s() {
        return !e.autoplay.running || typeof a > 'u'
            ? !1
            : (a && (clearTimeout(a), (a = void 0)),
              (e.autoplay.running = !1),
              n('autoplayStop'),
              !0)
    }
    function c(h) {
        !e.autoplay.running ||
            e.autoplay.paused ||
            (a && clearTimeout(a),
            (e.autoplay.paused = !0),
            h === 0 || !e.params.autoplay.waitForTransition
                ? ((e.autoplay.paused = !1), l())
                : ['transitionend', 'webkitTransitionEnd'].forEach((g) => {
                      e.$wrapperEl[0].addEventListener(g, f)
                  }))
    }
    function u() {
        const h = Bt()
        h.visibilityState === 'hidden' && e.autoplay.running && c(),
            h.visibilityState === 'visible' &&
                e.autoplay.paused &&
                (l(), (e.autoplay.paused = !1))
    }
    function f(h) {
        !e ||
            e.destroyed ||
            !e.$wrapperEl ||
            (h.target === e.$wrapperEl[0] &&
                (['transitionend', 'webkitTransitionEnd'].forEach((g) => {
                    e.$wrapperEl[0].removeEventListener(g, f)
                }),
                (e.autoplay.paused = !1),
                e.autoplay.running ? l() : s()))
    }
    function p() {
        e.params.autoplay.disableOnInteraction
            ? s()
            : (n('autoplayPause'), c()),
            ['transitionend', 'webkitTransitionEnd'].forEach((h) => {
                e.$wrapperEl[0].removeEventListener(h, f)
            })
    }
    function m() {
        e.params.autoplay.disableOnInteraction ||
            ((e.autoplay.paused = !1), n('autoplayResume'), l())
    }
    function v() {
        e.params.autoplay.pauseOnMouseEnter &&
            (e.$el.on('mouseenter', p), e.$el.on('mouseleave', m))
    }
    function b() {
        e.$el.off('mouseenter', p), e.$el.off('mouseleave', m)
    }
    r('init', () => {
        e.params.autoplay.enabled &&
            (o(), Bt().addEventListener('visibilitychange', u), v())
    }),
        r('beforeTransitionStart', (h, g, x) => {
            e.autoplay.running &&
                (x || !e.params.autoplay.disableOnInteraction
                    ? e.autoplay.pause(g)
                    : s())
        }),
        r('sliderFirstMove', () => {
            e.autoplay.running &&
                (e.params.autoplay.disableOnInteraction ? s() : c())
        }),
        r('touchEnd', () => {
            e.params.cssMode &&
                e.autoplay.paused &&
                !e.params.autoplay.disableOnInteraction &&
                l()
        }),
        r('destroy', () => {
            b(),
                e.autoplay.running && s(),
                Bt().removeEventListener('visibilitychange', u)
        }),
        Object.assign(e.autoplay, { pause: c, run: l, start: o, stop: s })
}
function Ei(e) {
    return (
        typeof e == 'object' &&
        e !== null &&
        e.constructor &&
        Object.prototype.toString.call(e).slice(8, -1) === 'Object'
    )
}
function va(e, t) {
    const r = ['__proto__', 'constructor', 'prototype']
    Object.keys(t)
        .filter((n) => r.indexOf(n) < 0)
        .forEach((n) => {
            typeof e[n] > 'u'
                ? (e[n] = t[n])
                : Ei(t[n]) && Ei(e[n]) && Object.keys(t[n]).length > 0
                ? t[n].__swiper__
                    ? (e[n] = t[n])
                    : va(e[n], t[n])
                : (e[n] = t[n])
        })
}
function gS(e = {}) {
    return (
        e.navigation &&
        typeof e.navigation.nextEl > 'u' &&
        typeof e.navigation.prevEl > 'u'
    )
}
function vS(e = {}) {
    return e.pagination && typeof e.pagination.el > 'u'
}
function yS(e = {}) {
    return e.scrollbar && typeof e.scrollbar.el > 'u'
}
function bS(e = '') {
    const t = e
            .split(' ')
            .map((n) => n.trim())
            .filter((n) => !!n),
        r = []
    return (
        t.forEach((n) => {
            r.indexOf(n) < 0 && r.push(n)
        }),
        r.join(' ')
    )
}
const xS = [
    'modules',
    'init',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_enabled',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    'maxBackfaceHiddenSlides',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_slidesPerGroupAuto',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopedSlidesLimit',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_rewind',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    'a11y',
    '_autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
]
function Jre(e = {}, t = !0) {
    const r = { on: {} },
        n = {},
        a = {}
    va(r, Qt.defaults),
        va(r, Qt.extendedDefaults),
        (r._emitClasses = !0),
        (r.init = !1)
    const l = {},
        o = xS.map((c) => c.replace(/_/, '')),
        s = Object.assign({}, e)
    return (
        Object.keys(s).forEach((c) => {
            typeof e[c] > 'u' ||
                (o.indexOf(c) >= 0
                    ? Ei(e[c])
                        ? ((r[c] = {}),
                          (a[c] = {}),
                          va(r[c], e[c]),
                          va(a[c], e[c]))
                        : ((r[c] = e[c]), (a[c] = e[c]))
                    : c.search(/on[A-Z]/) === 0 && typeof e[c] == 'function'
                    ? t
                        ? (n[`${c[2].toLowerCase()}${c.substr(3)}`] = e[c])
                        : (r.on[`${c[2].toLowerCase()}${c.substr(3)}`] = e[c])
                    : (l[c] = e[c]))
        }),
        ['navigation', 'pagination', 'scrollbar'].forEach((c) => {
            r[c] === !0 && (r[c] = {}), r[c] === !1 && delete r[c]
        }),
        { params: r, passedParams: a, rest: l, events: n }
    )
}
function Qre(
    { el: e, nextEl: t, prevEl: r, paginationEl: n, scrollbarEl: a, swiper: l },
    o
) {
    gS(o) &&
        t &&
        r &&
        ((l.params.navigation.nextEl = t),
        (l.originalParams.navigation.nextEl = t),
        (l.params.navigation.prevEl = r),
        (l.originalParams.navigation.prevEl = r)),
        vS(o) &&
            n &&
            ((l.params.pagination.el = n),
            (l.originalParams.pagination.el = n)),
        yS(o) &&
            a &&
            ((l.params.scrollbar.el = a), (l.originalParams.scrollbar.el = a)),
        l.init(e)
}
const wS = (e, t) => {
    let r = t.slidesPerView
    if (t.breakpoints) {
        const a = Qt.prototype.getBreakpoint(t.breakpoints),
            l = a in t.breakpoints ? t.breakpoints[a] : void 0
        l && l.slidesPerView && (r = l.slidesPerView)
    }
    let n = Math.ceil(parseFloat(t.loopedSlides || r, 10))
    return (
        (n += t.loopAdditionalSlides),
        n > e.length && t.loopedSlidesLimit && (n = e.length),
        n
    )
}
function ene(e, t, r) {
    const n = t.map((c, u) =>
        K.cloneElement(c, { swiper: e, 'data-swiper-slide-index': u })
    )
    function a(c, u, f) {
        return K.cloneElement(c, {
            key: `${c.key}-duplicate-${u}-${f}`,
            className: `${c.props.className || ''} ${r.slideDuplicateClass}`,
        })
    }
    if (r.loopFillGroupWithBlank) {
        const c = r.slidesPerGroup - (n.length % r.slidesPerGroup)
        if (c !== r.slidesPerGroup)
            for (let u = 0; u < c; u += 1) {
                const f = i('div', {
                    className: `${r.slideClass} ${r.slideBlankClass}`,
                })
                n.push(f)
            }
    }
    r.slidesPerView === 'auto' && !r.loopedSlides && (r.loopedSlides = n.length)
    const l = wS(n, r),
        o = [],
        s = []
    for (let c = 0; c < l; c += 1) {
        const u = c - Math.floor(c / n.length) * n.length
        s.push(a(n[u], c, 'append')),
            o.unshift(a(n[n.length - u - 1], c, 'prepend'))
    }
    return e && (e.loopedSlides = l), [...o, ...n, ...s]
}
function tne(e, t, r, n, a) {
    const l = []
    if (!t) return l
    const o = (c) => {
        l.indexOf(c) < 0 && l.push(c)
    }
    if (r && n) {
        const c = n.map(a),
            u = r.map(a)
        c.join('') !== u.join('') && o('children'),
            n.length !== r.length && o('children')
    }
    return (
        xS
            .filter((c) => c[0] === '_')
            .map((c) => c.replace(/_/, ''))
            .forEach((c) => {
                if (c in e && c in t)
                    if (Ei(e[c]) && Ei(t[c])) {
                        const u = Object.keys(e[c]),
                            f = Object.keys(t[c])
                        u.length !== f.length
                            ? o(c)
                            : (u.forEach((p) => {
                                  e[c][p] !== t[c][p] && o(c)
                              }),
                              f.forEach((p) => {
                                  e[c][p] !== t[c][p] && o(c)
                              }))
                    } else e[c] !== t[c] && o(c)
            }),
        l
    )
}
function NS(e) {
    return (
        e.type &&
        e.type.displayName &&
        e.type.displayName.includes('SwiperSlide')
    )
}
function SS(e) {
    const t = []
    return (
        K.Children.toArray(e).forEach((r) => {
            NS(r)
                ? t.push(r)
                : r.props &&
                  r.props.children &&
                  SS(r.props.children).forEach((n) => t.push(n))
        }),
        t
    )
}
function rne(e) {
    const t = [],
        r = {
            'container-start': [],
            'container-end': [],
            'wrapper-start': [],
            'wrapper-end': [],
        }
    return (
        K.Children.toArray(e).forEach((n) => {
            if (NS(n)) t.push(n)
            else if (n.props && n.props.slot && r[n.props.slot])
                r[n.props.slot].push(n)
            else if (n.props && n.props.children) {
                const a = SS(n.props.children)
                a.length > 0
                    ? a.forEach((l) => t.push(l))
                    : r['container-end'].push(n)
            } else r['container-end'].push(n)
        }),
        { slides: t, slots: r }
    )
}
function nne({
    swiper: e,
    slides: t,
    passedParams: r,
    changedParams: n,
    nextEl: a,
    prevEl: l,
    scrollbarEl: o,
    paginationEl: s,
}) {
    const c = n.filter((S) => S !== 'children' && S !== 'direction'),
        {
            params: u,
            pagination: f,
            navigation: p,
            scrollbar: m,
            virtual: v,
            thumbs: b,
        } = e
    let h, g, x, w, y
    n.includes('thumbs') &&
        r.thumbs &&
        r.thumbs.swiper &&
        u.thumbs &&
        !u.thumbs.swiper &&
        (h = !0),
        n.includes('controller') &&
            r.controller &&
            r.controller.control &&
            u.controller &&
            !u.controller.control &&
            (g = !0),
        n.includes('pagination') &&
            r.pagination &&
            (r.pagination.el || s) &&
            (u.pagination || u.pagination === !1) &&
            f &&
            !f.el &&
            (x = !0),
        n.includes('scrollbar') &&
            r.scrollbar &&
            (r.scrollbar.el || o) &&
            (u.scrollbar || u.scrollbar === !1) &&
            m &&
            !m.el &&
            (w = !0),
        n.includes('navigation') &&
            r.navigation &&
            (r.navigation.prevEl || l) &&
            (r.navigation.nextEl || a) &&
            (u.navigation || u.navigation === !1) &&
            p &&
            !p.prevEl &&
            !p.nextEl &&
            (y = !0)
    const N = (S) => {
        !e[S] ||
            (e[S].destroy(),
            S === 'navigation'
                ? ((u[S].prevEl = void 0),
                  (u[S].nextEl = void 0),
                  (e[S].prevEl = void 0),
                  (e[S].nextEl = void 0))
                : ((u[S].el = void 0), (e[S].el = void 0)))
    }
    c.forEach((S) => {
        if (Ei(u[S]) && Ei(r[S])) va(u[S], r[S])
        else {
            const P = r[S]
            ;(P === !0 || P === !1) &&
            (S === 'navigation' || S === 'pagination' || S === 'scrollbar')
                ? P === !1 && N(S)
                : (u[S] = r[S])
        }
    }),
        c.includes('controller') &&
            !g &&
            e.controller &&
            e.controller.control &&
            u.controller &&
            u.controller.control &&
            (e.controller.control = u.controller.control),
        n.includes('children') && t && v && u.virtual.enabled
            ? ((v.slides = t), v.update(!0))
            : n.includes('children') &&
              e.lazy &&
              e.params.lazy.enabled &&
              e.lazy.load(),
        h && b.init() && b.update(!0),
        g && (e.controller.control = u.controller.control),
        x && (s && (u.pagination.el = s), f.init(), f.render(), f.update()),
        w &&
            (o && (u.scrollbar.el = o),
            m.init(),
            m.updateSize(),
            m.setTranslate()),
        y &&
            (a && (u.navigation.nextEl = a),
            l && (u.navigation.prevEl = l),
            p.init(),
            p.update()),
        n.includes('allowSlideNext') && (e.allowSlideNext = r.allowSlideNext),
        n.includes('allowSlidePrev') && (e.allowSlidePrev = r.allowSlidePrev),
        n.includes('direction') && e.changeDirection(r.direction, !1),
        e.update()
}
function ane(e, t, r) {
    if (!r) return null
    const n = e.isHorizontal()
        ? { [e.rtlTranslate ? 'right' : 'left']: `${r.offset}px` }
        : { top: `${r.offset}px` }
    return t
        .filter((a, l) => l >= r.from && l <= r.to)
        .map((a) => K.cloneElement(a, { swiper: e, style: n }))
}
const ine = (e) => {
    !e ||
        e.destroyed ||
        !e.params.virtual ||
        (e.params.virtual && !e.params.virtual.enabled) ||
        (e.updateSlides(),
        e.updateProgress(),
        e.updateSlidesClasses(),
        e.lazy && e.params.lazy.enabled && e.lazy.load(),
        e.parallax &&
            e.params.parallax &&
            e.params.parallax.enabled &&
            e.parallax.setTranslate())
}
function ss(e, t) {
    return typeof window > 'u'
        ? C.exports.useEffect(e, t)
        : C.exports.useLayoutEffect(e, t)
}
const lne = C.exports.createContext(null),
    one = C.exports.createContext(null),
    CS = C.exports.forwardRef(function (e, t) {
        let {
                className: r,
                tag: n = 'div',
                wrapperTag: a = 'div',
                children: l,
                onSwiper: o,
                ...s
            } = e === void 0 ? {} : e,
            c = !1
        const [u, f] = C.exports.useState('swiper'),
            [p, m] = C.exports.useState(null),
            [v, b] = C.exports.useState(!1),
            h = C.exports.useRef(!1),
            g = C.exports.useRef(null),
            x = C.exports.useRef(null),
            w = C.exports.useRef(null),
            y = C.exports.useRef(null),
            N = C.exports.useRef(null),
            S = C.exports.useRef(null),
            P = C.exports.useRef(null),
            E = C.exports.useRef(null),
            { params: k, passedParams: M, rest: A, events: _ } = Jre(s),
            { slides: O, slots: T } = rne(l),
            $ = () => {
                b(!v)
            }
        Object.assign(k.on, {
            _containerClasses(R, V) {
                f(V)
            },
        })
        const I = () => {
            if (
                (Object.assign(k.on, _),
                (c = !0),
                (x.current = new Qt(k)),
                (x.current.loopCreate = () => {}),
                (x.current.loopDestroy = () => {}),
                k.loop && (x.current.loopedSlides = wS(O, k)),
                x.current.virtual && x.current.params.virtual.enabled)
            ) {
                x.current.virtual.slides = O
                const R = {
                    cache: !1,
                    slides: O,
                    renderExternal: m,
                    renderExternalUpdate: !1,
                }
                va(x.current.params.virtual, R),
                    va(x.current.originalParams.virtual, R)
            }
        }
        g.current || I(), x.current && x.current.on('_beforeBreakpoint', $)
        const j = () => {
                c ||
                    !_ ||
                    !x.current ||
                    Object.keys(_).forEach((R) => {
                        x.current.on(R, _[R])
                    })
            },
            L = () => {
                !_ ||
                    !x.current ||
                    Object.keys(_).forEach((R) => {
                        x.current.off(R, _[R])
                    })
            }
        C.exports.useEffect(() => () => {
            x.current && x.current.off('_beforeBreakpoint', $)
        }),
            C.exports.useEffect(() => {
                !h.current &&
                    x.current &&
                    (x.current.emitSlidesClasses(), (h.current = !0))
            }),
            ss(() => {
                if ((t && (t.current = g.current), !!g.current))
                    return (
                        x.current.destroyed && I(),
                        Qre(
                            {
                                el: g.current,
                                nextEl: N.current,
                                prevEl: S.current,
                                paginationEl: P.current,
                                scrollbarEl: E.current,
                                swiper: x.current,
                            },
                            k
                        ),
                        o && o(x.current),
                        () => {
                            x.current &&
                                !x.current.destroyed &&
                                x.current.destroy(!0, !1)
                        }
                    )
            }, []),
            ss(() => {
                j()
                const R = tne(M, w.current, O, y.current, (V) => V.key)
                return (
                    (w.current = M),
                    (y.current = O),
                    R.length &&
                        x.current &&
                        !x.current.destroyed &&
                        nne({
                            swiper: x.current,
                            slides: O,
                            passedParams: M,
                            changedParams: R,
                            nextEl: N.current,
                            prevEl: S.current,
                            scrollbarEl: E.current,
                            paginationEl: P.current,
                        }),
                    () => {
                        L()
                    }
                )
            }),
            ss(() => {
                ine(x.current)
            }, [p])
        function D() {
            return k.virtual
                ? ane(x.current, O, p)
                : !k.loop || (x.current && x.current.destroyed)
                ? O.map((R) => K.cloneElement(R, { swiper: x.current }))
                : ene(x.current, O, k)
        }
        return i(n, {
            ref: g,
            className: bS(`${u}${r ? ` ${r}` : ''}`),
            ...A,
            children: d(one.Provider, {
                value: x.current,
                children: [
                    T['container-start'],
                    d(a, {
                        className: 'swiper-wrapper',
                        children: [T['wrapper-start'], D(), T['wrapper-end']],
                    }),
                    gS(k) &&
                        d(me, {
                            children: [
                                i('div', {
                                    ref: S,
                                    className: 'swiper-button-prev',
                                }),
                                i('div', {
                                    ref: N,
                                    className: 'swiper-button-next',
                                }),
                            ],
                        }),
                    yS(k) &&
                        i('div', { ref: E, className: 'swiper-scrollbar' }),
                    vS(k) &&
                        i('div', { ref: P, className: 'swiper-pagination' }),
                    T['container-end'],
                ],
            }),
        })
    })
CS.displayName = 'Swiper'
const qo = C.exports.forwardRef(function (e, t) {
    let {
        tag: r = 'div',
        children: n,
        className: a = '',
        swiper: l,
        zoom: o,
        virtualIndex: s,
        ...c
    } = e === void 0 ? {} : e
    const u = C.exports.useRef(null),
        [f, p] = C.exports.useState('swiper-slide')
    function m(h, g, x) {
        g === u.current && p(x)
    }
    ss(() => {
        if ((t && (t.current = u.current), !(!u.current || !l))) {
            if (l.destroyed) {
                f !== 'swiper-slide' && p('swiper-slide')
                return
            }
            return (
                l.on('_slideClass', m),
                () => {
                    !l || l.off('_slideClass', m)
                }
            )
        }
    }),
        ss(() => {
            l && u.current && !l.destroyed && p(l.getSlideClasses(u.current))
        }, [l])
    const v = {
            isActive:
                f.indexOf('swiper-slide-active') >= 0 ||
                f.indexOf('swiper-slide-duplicate-active') >= 0,
            isVisible: f.indexOf('swiper-slide-visible') >= 0,
            isDuplicate: f.indexOf('swiper-slide-duplicate') >= 0,
            isPrev:
                f.indexOf('swiper-slide-prev') >= 0 ||
                f.indexOf('swiper-slide-duplicate-prev') >= 0,
            isNext:
                f.indexOf('swiper-slide-next') >= 0 ||
                f.indexOf('swiper-slide-duplicate-next') >= 0,
        },
        b = () => (typeof n == 'function' ? n(v) : n)
    return i(r, {
        ref: u,
        className: bS(`${f}${a ? ` ${a}` : ''}`),
        'data-swiper-slide-index': s,
        ...c,
        children: i(lne.Provider, {
            value: v,
            children: o
                ? i('div', {
                      className: 'swiper-zoom-container',
                      'data-swiper-zoom': typeof o == 'number' ? o : void 0,
                      children: b(),
                  })
                : b(),
        }),
    })
})
qo.displayName = 'SwiperSlide'
const sne = () =>
    d('div', {
        className: 'overviewCards',
        children: [
            i(qe, {
                title: 'Residents',
                number: 18e3,
                iconUrl: 'icons/overview/residents.svg',
                bgColor: 'bg-[#DDFCDC]',
                textColor: 'text-[#1A8F56]',
            }),
            i(qe, {
                title: 'Security Guards',
                number: 25,
                iconUrl: 'icons/overview/securityGuards.svg',
                bgColor: 'bg-[#F6FAFD]',
                textColor: 'text-[#3297EF]',
            }),
            i(qe, {
                title: 'Artisans',
                number: 5e3,
                iconUrl: 'icons/overview/artisans.svg',
                bgColor: 'bg-[#FDF7F2]',
                textColor: 'text-[#B65800]',
            }),
            i(qe, {
                title: 'Site Workers',
                number: 44,
                iconUrl: 'icons/overview/siteWorkers.svg',
                bgColor: 'bg-[#F8F5FC]',
                textColor: 'text-[#9545F8]',
            }),
            i(qe, {
                title: 'Adverts',
                number: 4,
                iconUrl: 'icons/overview/adverts.svg',
                bgColor: 'bg-[#EFFFEC]',
                textColor: 'text-[#33F110]',
            }),
            i(qe, {
                title: 'Estate Workers',
                number: 40,
                iconUrl: 'icons/overview/estateWorkers.svg',
                bgColor: 'bg-[#F8F9FD]',
                textColor: 'text-[#0012B6]',
            }),
            i(qe, {
                title: 'Household',
                number: 4,
                iconUrl: 'icons/overview/household.svg',
                bgColor: 'bg-[#F8FBFC]',
                textColor: 'text-[#00C2FF]',
            }),
            i(qe, {
                title: 'Security Company',
                number: 40,
                iconUrl: 'icons/overview/securityCompany.svg',
                bgColor: 'bg-[#FCF3FA]',
                textColor: 'text-[#B6008E]',
            }),
            i(qe, {
                title: 'Accounts Opened',
                number: 15,
                iconUrl: 'icons/overview/accountsOpened.svg',
                bgColor: 'bg-[#F2F2FD]',
                textColor: 'text-[#4E4DA4]',
            }),
            i(qe, {
                title: 'No. of Messages Sent',
                number: 40,
                iconUrl: 'icons/overview/sentMessages.svg',
                bgColor: 'bg-[#F6FCF9]',
                textColor: 'text-[#4FE3A5]',
            }),
            i(qe, {
                title: 'No. of Panic Alerts',
                number: 40,
                iconUrl: 'icons/overview/panicAlerts.svg',
                bgColor: 'bg-[#FFF4F4]',
                textColor: 'text-[#FF2B2B]',
            }),
        ],
    })
function cne(e) {
    return nt({
        tag: 'svg',
        attr: { version: '1.1', viewBox: '0 0 17 17' },
        child: [
            { tag: 'g', attr: {}, child: [] },
            {
                tag: 'path',
                attr: {
                    d: 'M10.854 4.854l-3.647 3.646 3.646 3.646-0.707 0.707-4.353-4.353 4.354-4.354 0.707 0.708zM17 8.5c0 4.687-3.813 8.5-8.5 8.5s-8.5-3.813-8.5-8.5 3.813-8.5 8.5-8.5 8.5 3.813 8.5 8.5zM16 8.5c0-4.136-3.364-7.5-7.5-7.5s-7.5 3.364-7.5 7.5 3.364 7.5 7.5 7.5 7.5-3.364 7.5-7.5z',
                },
            },
        ],
    })(e)
}
function une(e) {
    return nt({
        tag: 'svg',
        attr: { version: '1.1', viewBox: '0 0 17 17' },
        child: [
            { tag: 'g', attr: {}, child: [] },
            {
                tag: 'path',
                attr: {
                    d: 'M6.854 4.146l4.353 4.354-4.354 4.354-0.707-0.707 3.647-3.647-3.647-3.646 0.708-0.708zM17 8.5c0 4.687-3.813 8.5-8.5 8.5s-8.5-3.813-8.5-8.5 3.813-8.5 8.5-8.5 8.5 3.813 8.5 8.5zM16 8.5c0-4.136-3.364-7.5-7.5-7.5s-7.5 3.364-7.5 7.5 3.364 7.5 7.5 7.5 7.5-3.364 7.5-7.5z',
                },
            },
        ],
    })(e)
}
function dne(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M10.707 17.707 16.414 12l-5.707-5.707-1.414 1.414L13.586 12l-4.293 4.293z',
                },
            },
        ],
    })(e)
}
function Hv(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24' },
        child: [
            {
                tag: 'path',
                attr: { d: 'M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z' },
            },
        ],
    })(e)
}
function fne(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M12 5c-3.859 0-7 3.141-7 7s3.141 7 7 7 7-3.141 7-7-3.141-7-7-7zm0 12c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z',
                },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M12 9c-1.627 0-3 1.373-3 3s1.373 3 3 3 3-1.373 3-3-1.373-3-3-3z',
                },
            },
        ],
    })(e)
}
function pne(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 24 24' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M5 12c0 3.859 3.14 7 7 7 3.859 0 7-3.141 7-7s-3.141-7-7-7c-3.86 0-7 3.141-7 7zm12 0c0 2.757-2.243 5-5 5s-5-2.243-5-5 2.243-5 5-5 5 2.243 5 5z',
                },
            },
        ],
    })(e)
}
const hne = ({ currentSwiperIndex: e, prev: t, next: r, max: n }) => {
        const a = Array.from({ length: n }, (l, o) => o + 1)
        return d('div', {
            className: 'overviewWalletNav',
            children: [
                i(cne, { onClick: t, className: 'overviewWalletNav__toggle' }),
                i('div', {
                    className: 'overviewWalletNav__bullets',
                    children: a.map((l) =>
                        i(
                            C.exports.Fragment,
                            {
                                children:
                                    e === l
                                        ? i(fne, {
                                              className:
                                                  'overviewWalletNav__bullets--active',
                                          })
                                        : i(pne, {
                                              className:
                                                  'overviewWalletNav__bullets--stale',
                                          }),
                            },
                            l
                        )
                    ),
                }),
                i(une, { onClick: r, className: 'overviewWalletNav__toggle' }),
            ],
        })
    },
    Xt = ({
        amount: e,
        title: t,
        bgColor: r = 'bg-[#5c8bff]',
        lefIconUri: n = '/icons/overview/card/leftR.svg',
        bgImgUri: a = '/icons/overview/card/bgR.svg',
        isWalletScreen: l = !1,
    }) => {
        const s = new Intl.NumberFormat('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            })
                .format(e)
                .split('.'),
            c = s[0],
            u = s[1]
        return d('div', {
            className: `overviewWallet relative overflow-hidden ${r} ${
                l ? 'h-[18rem]' : 'h-[14rem]'
            }`,
            children: [
                i('img', {
                    src: a,
                    alt: '',
                    role: 'presentation',
                    className: 'absolute top-0 z-[1]',
                }),
                i('img', {
                    src: n,
                    alt: '',
                    className: 'overviewWallet__leftIcon z-[2]',
                }),
                d('div', {
                    className: 'overviewWallet__content relative z-[2]',
                    children: [
                        i('p', {
                            className: 'overviewWallet__title',
                            children: t,
                        }),
                        d('div', {
                            className: 'overviewWallet__box',
                            children: [
                                i('img', {
                                    src: '/icons/overview/card/naira.svg',
                                    alt: '',
                                }),
                                d('p', {
                                    className: 'overviewWallet__amount',
                                    children: [
                                        c,
                                        d('span', {
                                            className: 'text-[1.8rem]',
                                            children: ['.', u],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Qh = [
        i(qo, {
            children: i(Xt, {
                amount: 20033350089e-2,
                title: 'Resident Wallet',
            }),
        }),
        i(qo, {
            children: i(Xt, {
                amount: 160847,
                title: 'Security Company Wallet',
            }),
        }),
        i(qo, { children: i(Xt, { amount: 1032422, title: 'Estate Wallet' }) }),
        i(qo, {
            children: i(Xt, { amount: 4000832, title: 'Commission Wallet' }),
        }),
    ],
    cs = [
        { name: 'Resident Wallet', value: 10 },
        { name: 'Security Company Wallet', value: 10 },
        { name: 'Estate Wallet', value: 45 },
        { name: 'Commission Wallet', value: 17 },
    ],
    w1 = ['#EA0B90', '#23C375', '#098DFF', '#404243'],
    mne = () => {
        const e = C.exports.useRef(null),
            [t, r] = C.exports.useState(null),
            n = () => {
                e.current && e.current.swiper && e.current.swiper.slidePrev()
            },
            a = () => {
                e.current && e.current.swiper && e.current.swiper.slideNext()
            }
        C.exports.useEffect(() => {
            const o = e.current
            o && o.swiper && r(o.swiper.activeIndex)
        }, [e.current])
        const l = (o) => {
            r(() =>
                o.activeIndex === Qh.length + 1
                    ? 1
                    : o.activeIndex === 0
                    ? Qh.length
                    : o.activeIndex
            )
        }
        return (
            console.log({ currentSwiperIndex: t }),
            i('div', {
                className: 'overview',
                children: d('div', {
                    className: 'overview__container',
                    children: [
                        i('section', {
                            className: 'overview__left',
                            children: i(sne, {}),
                        }),
                        d('section', {
                            className: 'overview__right',
                            children: [
                                d('div', {
                                    className: 'overviewWallet__wrapper',
                                    children: [
                                        i(CS, {
                                            ref: e,
                                            spaceBetween: 30,
                                            centeredSlides: !0,
                                            loop: !0,
                                            modules: [Zre, Xre],
                                            className: 'overviewWallet__swiper',
                                            onSlideChange: l,
                                            children: K.Children.toArray(
                                                Qh.map((o) => o)
                                            ),
                                        }),
                                        i(hne, {
                                            currentSwiperIndex: t,
                                            prev: n,
                                            next: a,
                                            max: 4,
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'overviewChart',
                                    children: [
                                        i('p', {
                                            className: 'overviewChart__heading',
                                            children: "Today's Inflow",
                                        }),
                                        d('div', {
                                            className: 'overviewChart__box',
                                            children: [
                                                i(Gv, {}),
                                                t &&
                                                    d('div', {
                                                        className:
                                                            'overviewChart__label',
                                                        children: [
                                                            d('p', {
                                                                className:
                                                                    'overviewChart__label--percentage',
                                                                children: [
                                                                    cs[t - 1]
                                                                        .value,
                                                                    i('span', {
                                                                        children:
                                                                            '%',
                                                                    }),
                                                                ],
                                                            }),
                                                            i('p', {
                                                                className:
                                                                    'overviewChart__label--title',
                                                                children:
                                                                    cs[t - 1]
                                                                        .name,
                                                            }),
                                                        ],
                                                    }),
                                            ],
                                        }),
                                        i('ul', {
                                            className: 'overviewChart__list',
                                            children: K.Children.toArray(
                                                cs.map((o, s) =>
                                                    d('li', {
                                                        className:
                                                            'overviewChart__list--item',
                                                        children: [
                                                            i('span', {
                                                                style: {
                                                                    background:
                                                                        w1[s],
                                                                },
                                                                children:
                                                                    '\xA0',
                                                            }),
                                                            i('p', {
                                                                children:
                                                                    o.name,
                                                            }),
                                                        ],
                                                    })
                                                )
                                            ),
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            })
        )
    },
    jw = [
        { name: 'security guard', value: 120 },
        { name: 'sesa', value: 120 },
    ],
    Fw = ({ color1: e = '#08d231', color2: t = '#f7e541' }) => {
        const r = [e, t]
        return i(cS, {
            width: 253,
            height: 253,
            className: 'relative',
            children: i(Vr, {
                data: jw,
                className: 'overviewChart__pie',
                innerRadius: 68,
                outerRadius: 80,
                fill: '#8884d8',
                paddingAngle: 5,
                dataKey: 'value',
                children: jw.map((n, a) =>
                    i(pc, { fill: r[a % r.length] }, `cell-${a}`)
                ),
            }),
        })
    }
function Gv() {
    return i(cS, {
        width: 253,
        height: 253,
        className: 'relative',
        children: i(Vr, {
            data: cs,
            className: 'overviewChart__pie',
            innerRadius: 68,
            outerRadius: 80,
            fill: '#8884d8',
            paddingAngle: 5,
            dataKey: 'value',
            children: cs.map((e, t) =>
                i(pc, { fill: w1[t % w1.length] }, `cell-${t}`)
            ),
        }),
    })
}
const gne = [
        { name: 'Resident Wallet', value: 10, color: '#098DFF' },
        { name: 'Estate Wallet', value: 45, color: '#EA0B90' },
        { name: 'Security Company Wallet', value: 10, color: '#23C375' },
        { name: 'Commission Wallet', value: 17, color: '#404243' },
    ],
    vne = () =>
        i('div', {
            children: d('div', {
                className: 'bg-white grid mt-12 py-10 gap-8 rounded-lg',
                children: [
                    d('div', {
                        className:
                            'flex items-center max-w-[90rem] mx-auto gap-10',
                        children: [
                            d('div', {
                                children: [
                                    i('p', {
                                        className:
                                            'text-[1.6rem] font-semibold',
                                        children: 'Total Balance (Pool Wallet)',
                                    }),
                                    d('h1', {
                                        className:
                                            'text-[3rem] font-bold flex items-center gap-0',
                                        children: [
                                            i(U0, { className: 'text-[3rem]' }),
                                            '800,836,709.74',
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'overviewChart__box',
                                children: [
                                    i(Gv, {}),
                                    d('div', {
                                        className: 'overviewChart__label',
                                        children: [
                                            d('p', {
                                                className:
                                                    'text-[3.4rem] font-bold relative',
                                                children: [
                                                    '45',
                                                    i('span', {
                                                        children: '%',
                                                    }),
                                                ],
                                            }),
                                            i('p', {
                                                className:
                                                    'text-[1rem] max-w-[9.8rem]',
                                                children: 'Resident Wallet',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            i('ul', {
                                className: 'overviewChart__list',
                                children: K.Children.toArray(
                                    gne.map((e, t) =>
                                        d('li', {
                                            className:
                                                'overviewChart__list--item',
                                            children: [
                                                i('span', {
                                                    style: {
                                                        background: e.color,
                                                    },
                                                    children: '\xA0',
                                                }),
                                                i('p', { children: e.name }),
                                            ],
                                        })
                                    )
                                ),
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'grid max-w-[90rem] gap-10 mx-auto',
                        style: {
                            gridTemplateColumns:
                                'repeat(auto-fit, minmax(35rem, 1fr))',
                        },
                        children: [
                            i(ye, {
                                to: '/superAdmin/wallet/resident',
                                children: i(Xt, {
                                    amount: 20033350089e-2,
                                    title: 'Resident Wallet',
                                    isWalletScreen: !0,
                                }),
                            }),
                            i(ye, {
                                to: '/superAdmin/wallet/security-company',
                                children: i(Xt, {
                                    amount: 160847,
                                    title: 'Security Company Wallet',
                                    isWalletScreen: !0,
                                    bgImgUri: '/icons/overview/card/bgS.svg',
                                    lefIconUri:
                                        '/icons/overview/card/leftS.svg',
                                    bgColor: 'bg-[#6AB95F]',
                                }),
                            }),
                            i(ye, {
                                to: '/superAdmin/wallet/estate',
                                children: i(Xt, {
                                    amount: 1032422,
                                    title: 'Estate Wallet',
                                    isWalletScreen: !0,
                                    bgImgUri: '/icons/overview/card/bgE.svg',
                                    lefIconUri:
                                        '/icons/overview/card/leftE.svg',
                                    bgColor: 'bg-[#97346F]',
                                }),
                            }),
                            i(ye, {
                                to: '/superAdmin/wallet/commission',
                                children: i(Xt, {
                                    amount: 4000832,
                                    title: 'Commission Wallet',
                                    isWalletScreen: !0,
                                    bgImgUri: '/icons/overview/card/bgC.svg',
                                    lefIconUri:
                                        '/icons/overview/card/leftC.svg',
                                    bgColor: 'bg-[#333333]',
                                }),
                            }),
                        ],
                    }),
                ],
            }),
        })
function PS(e) {
    var t,
        r,
        n = ''
    if (typeof e == 'string' || typeof e == 'number') n += e
    else if (typeof e == 'object')
        if (Array.isArray(e))
            for (t = 0; t < e.length; t++)
                e[t] && (r = PS(e[t])) && (n && (n += ' '), (n += r))
        else for (t in e) e[t] && (n && (n += ' '), (n += t))
    return n
}
function ya() {
    for (var e, t, r = 0, n = ''; r < arguments.length; )
        (e = arguments[r++]) && (t = PS(e)) && (n && (n += ' '), (n += t))
    return n
}
const us = (e) => typeof e == 'number' && !isNaN(e),
    ki = (e) => typeof e == 'string',
    ur = (e) => typeof e == 'function',
    bu = (e) => (ki(e) || ur(e) ? e : null),
    em = (e) => C.exports.isValidElement(e) || ki(e) || ur(e) || us(e)
function yne(e, t, r) {
    r === void 0 && (r = 300)
    const { scrollHeight: n, style: a } = e
    requestAnimationFrame(() => {
        ;(a.minHeight = 'initial'),
            (a.height = n + 'px'),
            (a.transition = `all ${r}ms`),
            requestAnimationFrame(() => {
                ;(a.height = '0'),
                    (a.padding = '0'),
                    (a.margin = '0'),
                    setTimeout(t, r)
            })
    })
}
function _p(e) {
    let {
        enter: t,
        exit: r,
        appendPosition: n = !1,
        collapse: a = !0,
        collapseDuration: l = 300,
    } = e
    return function (o) {
        let {
            children: s,
            position: c,
            preventExitTransition: u,
            done: f,
            nodeRef: p,
            isIn: m,
        } = o
        const v = n ? `${t}--${c}` : t,
            b = n ? `${r}--${c}` : r,
            h = C.exports.useRef(0)
        return (
            C.exports.useLayoutEffect(() => {
                const g = p.current,
                    x = v.split(' '),
                    w = (y) => {
                        y.target === p.current &&
                            (g.dispatchEvent(new Event('d')),
                            g.removeEventListener('animationend', w),
                            g.removeEventListener('animationcancel', w),
                            h.current === 0 &&
                                y.type !== 'animationcancel' &&
                                g.classList.remove(...x))
                    }
                g.classList.add(...x),
                    g.addEventListener('animationend', w),
                    g.addEventListener('animationcancel', w)
            }, []),
            C.exports.useEffect(() => {
                const g = p.current,
                    x = () => {
                        g.removeEventListener('animationend', x),
                            a ? yne(g, f, l) : f()
                    }
                m ||
                    (u
                        ? x()
                        : ((h.current = 1),
                          (g.className += ` ${b}`),
                          g.addEventListener('animationend', x)))
            }, [m]),
            K.createElement(K.Fragment, null, s)
        )
    }
}
function Bw(e, t) {
    return {
        content: e.content,
        containerId: e.props.containerId,
        id: e.props.toastId,
        theme: e.props.theme,
        type: e.props.type,
        data: e.props.data || {},
        isLoading: e.props.isLoading,
        icon: e.props.icon,
        status: t,
    }
}
const Rr = {
        list: new Map(),
        emitQueue: new Map(),
        on(e, t) {
            return (
                this.list.has(e) || this.list.set(e, []),
                this.list.get(e).push(t),
                this
            )
        },
        off(e, t) {
            if (t) {
                const r = this.list.get(e).filter((n) => n !== t)
                return this.list.set(e, r), this
            }
            return this.list.delete(e), this
        },
        cancelEmit(e) {
            const t = this.emitQueue.get(e)
            return (
                t && (t.forEach(clearTimeout), this.emitQueue.delete(e)), this
            )
        },
        emit(e) {
            this.list.has(e) &&
                this.list.get(e).forEach((t) => {
                    const r = setTimeout(() => {
                        t(...[].slice.call(arguments, 1))
                    }, 0)
                    this.emitQueue.has(e) || this.emitQueue.set(e, []),
                        this.emitQueue.get(e).push(r)
                })
        },
    },
    ru = (e) => {
        let { theme: t, type: r, ...n } = e
        return i('svg', {
            viewBox: '0 0 24 24',
            width: '100%',
            height: '100%',
            fill:
                t === 'colored'
                    ? 'currentColor'
                    : `var(--toastify-icon-color-${r})`,
            ...n,
        })
    },
    tm = {
        info: function (e) {
            return i(ru, {
                ...e,
                children: i('path', {
                    d: 'M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z',
                }),
            })
        },
        warning: function (e) {
            return i(ru, {
                ...e,
                children: i('path', {
                    d: 'M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z',
                }),
            })
        },
        success: function (e) {
            return i(ru, {
                ...e,
                children: i('path', {
                    d: 'M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z',
                }),
            })
        },
        error: function (e) {
            return i(ru, {
                ...e,
                children: i('path', {
                    d: 'M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z',
                }),
            })
        },
        spinner: function () {
            return i('div', { className: 'Toastify__spinner' })
        },
    }
function bne(e) {
    const [, t] = C.exports.useReducer((v) => v + 1, 0),
        [r, n] = C.exports.useState([]),
        a = C.exports.useRef(null),
        l = C.exports.useRef(new Map()).current,
        o = (v) => r.indexOf(v) !== -1,
        s = C.exports.useRef({
            toastKey: 1,
            displayedToast: 0,
            count: 0,
            queue: [],
            props: e,
            containerId: null,
            isToastActive: o,
            getToast: (v) => l.get(v),
        }).current
    function c(v) {
        let { containerId: b } = v
        const { limit: h } = s.props
        !h ||
            (b && s.containerId !== b) ||
            ((s.count -= s.queue.length), (s.queue = []))
    }
    function u(v) {
        n((b) => (v == null ? [] : b.filter((h) => h !== v)))
    }
    function f() {
        const { toastContent: v, toastProps: b, staleId: h } = s.queue.shift()
        m(v, b, h)
    }
    function p(v, b) {
        let { delay: h, staleId: g, ...x } = b
        if (
            !em(v) ||
            (function (O) {
                return (
                    !a.current ||
                    (s.props.enableMultiContainer &&
                        O.containerId !== s.props.containerId) ||
                    (l.has(O.toastId) && O.updateId == null)
                )
            })(x)
        )
            return
        const { toastId: w, updateId: y, data: N } = x,
            { props: S } = s,
            P = () => u(w),
            E = y == null
        E && s.count++
        const k = {
            ...S,
            style: S.toastStyle,
            key: s.toastKey++,
            ...x,
            toastId: w,
            updateId: y,
            data: N,
            closeToast: P,
            isIn: !1,
            className: bu(x.className || S.toastClassName),
            bodyClassName: bu(x.bodyClassName || S.bodyClassName),
            progressClassName: bu(x.progressClassName || S.progressClassName),
            autoClose:
                !x.isLoading &&
                ((M = x.autoClose),
                (A = S.autoClose),
                M === !1 || (us(M) && M > 0) ? M : A),
            deleteToast() {
                const O = Bw(l.get(w), 'removed')
                l.delete(w), Rr.emit(4, O)
                const T = s.queue.length
                if (
                    ((s.count =
                        w == null ? s.count - s.displayedToast : s.count - 1),
                    s.count < 0 && (s.count = 0),
                    T > 0)
                ) {
                    const $ = w == null ? s.props.limit : 1
                    if (T === 1 || $ === 1) s.displayedToast++, f()
                    else {
                        const I = $ > T ? T : $
                        s.displayedToast = I
                        for (let j = 0; j < I; j++) f()
                    }
                } else t()
            },
        }
        var M, A
        ;(k.iconOut = (function (O) {
            let { theme: T, type: $, isLoading: I, icon: j } = O,
                L = null
            const D = { theme: T, type: $ }
            return (
                j === !1 ||
                    (ur(j)
                        ? (L = j(D))
                        : C.exports.isValidElement(j)
                        ? (L = C.exports.cloneElement(j, D))
                        : ki(j) || us(j)
                        ? (L = j)
                        : I
                        ? (L = tm.spinner())
                        : ((R) => R in tm)($) && (L = tm[$](D))),
                L
            )
        })(k)),
            ur(x.onOpen) && (k.onOpen = x.onOpen),
            ur(x.onClose) && (k.onClose = x.onClose),
            (k.closeButton = S.closeButton),
            x.closeButton === !1 || em(x.closeButton)
                ? (k.closeButton = x.closeButton)
                : x.closeButton === !0 &&
                  (k.closeButton = !em(S.closeButton) || S.closeButton)
        let _ = v
        C.exports.isValidElement(v) && !ki(v.type)
            ? (_ = C.exports.cloneElement(v, {
                  closeToast: P,
                  toastProps: k,
                  data: N,
              }))
            : ur(v) && (_ = v({ closeToast: P, toastProps: k, data: N })),
            S.limit && S.limit > 0 && s.count > S.limit && E
                ? s.queue.push({ toastContent: _, toastProps: k, staleId: g })
                : us(h)
                ? setTimeout(() => {
                      m(_, k, g)
                  }, h)
                : m(_, k, g)
    }
    function m(v, b, h) {
        const { toastId: g } = b
        h && l.delete(h)
        const x = { content: v, props: b }
        l.set(g, x),
            n((w) => [...w, g].filter((y) => y !== h)),
            Rr.emit(4, Bw(x, x.props.updateId == null ? 'added' : 'updated'))
    }
    return (
        C.exports.useEffect(
            () => (
                (s.containerId = e.containerId),
                Rr.cancelEmit(3)
                    .on(0, p)
                    .on(1, (v) => a.current && u(v))
                    .on(5, c)
                    .emit(2, s),
                () => {
                    l.clear(), Rr.emit(3, s)
                }
            ),
            []
        ),
        C.exports.useEffect(() => {
            ;(s.props = e), (s.isToastActive = o), (s.displayedToast = r.length)
        }),
        {
            getToastToRender: function (v) {
                const b = new Map(),
                    h = Array.from(l.values())
                return (
                    e.newestOnTop && h.reverse(),
                    h.forEach((g) => {
                        const { position: x } = g.props
                        b.has(x) || b.set(x, []), b.get(x).push(g)
                    }),
                    Array.from(b, (g) => v(g[0], g[1]))
                )
            },
            containerRef: a,
            isToastActive: o,
        }
    )
}
function zw(e) {
    return e.targetTouches && e.targetTouches.length >= 1
        ? e.targetTouches[0].clientX
        : e.clientX
}
function Vw(e) {
    return e.targetTouches && e.targetTouches.length >= 1
        ? e.targetTouches[0].clientY
        : e.clientY
}
function xne(e) {
    const [t, r] = C.exports.useState(!1),
        [n, a] = C.exports.useState(!1),
        l = C.exports.useRef(null),
        o = C.exports.useRef({
            start: 0,
            x: 0,
            y: 0,
            delta: 0,
            removalDistance: 0,
            canCloseOnClick: !0,
            canDrag: !1,
            boundingRect: null,
            didMove: !1,
        }).current,
        s = C.exports.useRef(e),
        {
            autoClose: c,
            pauseOnHover: u,
            closeToast: f,
            onClick: p,
            closeOnClick: m,
        } = e
    function v(N) {
        if (e.draggable) {
            N.nativeEvent.type === 'touchstart' &&
                N.nativeEvent.preventDefault(),
                (o.didMove = !1),
                document.addEventListener('mousemove', x),
                document.addEventListener('mouseup', w),
                document.addEventListener('touchmove', x),
                document.addEventListener('touchend', w)
            const S = l.current
            ;(o.canCloseOnClick = !0),
                (o.canDrag = !0),
                (o.boundingRect = S.getBoundingClientRect()),
                (S.style.transition = ''),
                (o.x = zw(N.nativeEvent)),
                (o.y = Vw(N.nativeEvent)),
                e.draggableDirection === 'x'
                    ? ((o.start = o.x),
                      (o.removalDistance =
                          S.offsetWidth * (e.draggablePercent / 100)))
                    : ((o.start = o.y),
                      (o.removalDistance =
                          S.offsetHeight *
                          (e.draggablePercent === 80
                              ? 1.5 * e.draggablePercent
                              : e.draggablePercent / 100)))
        }
    }
    function b(N) {
        if (o.boundingRect) {
            const { top: S, bottom: P, left: E, right: k } = o.boundingRect
            N.nativeEvent.type !== 'touchend' &&
            e.pauseOnHover &&
            o.x >= E &&
            o.x <= k &&
            o.y >= S &&
            o.y <= P
                ? g()
                : h()
        }
    }
    function h() {
        r(!0)
    }
    function g() {
        r(!1)
    }
    function x(N) {
        const S = l.current
        o.canDrag &&
            S &&
            ((o.didMove = !0),
            t && g(),
            (o.x = zw(N)),
            (o.y = Vw(N)),
            (o.delta =
                e.draggableDirection === 'x' ? o.x - o.start : o.y - o.start),
            o.start !== o.x && (o.canCloseOnClick = !1),
            (S.style.transform = `translate${e.draggableDirection}(${o.delta}px)`),
            (S.style.opacity =
                '' + (1 - Math.abs(o.delta / o.removalDistance))))
    }
    function w() {
        document.removeEventListener('mousemove', x),
            document.removeEventListener('mouseup', w),
            document.removeEventListener('touchmove', x),
            document.removeEventListener('touchend', w)
        const N = l.current
        if (o.canDrag && o.didMove && N) {
            if (((o.canDrag = !1), Math.abs(o.delta) > o.removalDistance))
                return a(!0), void e.closeToast()
            ;(N.style.transition = 'transform 0.2s, opacity 0.2s'),
                (N.style.transform = `translate${e.draggableDirection}(0)`),
                (N.style.opacity = '1')
        }
    }
    C.exports.useEffect(() => {
        s.current = e
    }),
        C.exports.useEffect(
            () => (
                l.current && l.current.addEventListener('d', h, { once: !0 }),
                ur(e.onOpen) &&
                    e.onOpen(
                        C.exports.isValidElement(e.children) && e.children.props
                    ),
                () => {
                    const N = s.current
                    ur(N.onClose) &&
                        N.onClose(
                            C.exports.isValidElement(N.children) &&
                                N.children.props
                        )
                }
            ),
            []
        ),
        C.exports.useEffect(
            () => (
                e.pauseOnFocusLoss &&
                    (document.hasFocus() || g(),
                    window.addEventListener('focus', h),
                    window.addEventListener('blur', g)),
                () => {
                    e.pauseOnFocusLoss &&
                        (window.removeEventListener('focus', h),
                        window.removeEventListener('blur', g))
                }
            ),
            [e.pauseOnFocusLoss]
        )
    const y = { onMouseDown: v, onTouchStart: v, onMouseUp: b, onTouchEnd: b }
    return (
        c && u && ((y.onMouseEnter = g), (y.onMouseLeave = h)),
        m &&
            (y.onClick = (N) => {
                p && p(N), o.canCloseOnClick && f()
            }),
        {
            playToast: h,
            pauseToast: g,
            isRunning: t,
            preventExitTransition: n,
            toastRef: l,
            eventHandlers: y,
        }
    )
}
function _S(e) {
    let { closeToast: t, theme: r, ariaLabel: n = 'close' } = e
    return i('button', {
        className: `Toastify__close-button Toastify__close-button--${r}`,
        type: 'button',
        onClick: (a) => {
            a.stopPropagation(), t(a)
        },
        'aria-label': n,
        children: i('svg', {
            'aria-hidden': 'true',
            viewBox: '0 0 14 16',
            children: i('path', {
                fillRule: 'evenodd',
                d: 'M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z',
            }),
        }),
    })
}
function wne(e) {
    let {
        delay: t,
        isRunning: r,
        closeToast: n,
        type: a = 'default',
        hide: l,
        className: o,
        style: s,
        controlledProgress: c,
        progress: u,
        rtl: f,
        isIn: p,
        theme: m,
    } = e
    const v = l || (c && u === 0),
        b = {
            ...s,
            animationDuration: `${t}ms`,
            animationPlayState: r ? 'running' : 'paused',
            opacity: v ? 0 : 1,
        }
    c && (b.transform = `scaleX(${u})`)
    const h = ya(
            'Toastify__progress-bar',
            c
                ? 'Toastify__progress-bar--controlled'
                : 'Toastify__progress-bar--animated',
            `Toastify__progress-bar-theme--${m}`,
            `Toastify__progress-bar--${a}`,
            { 'Toastify__progress-bar--rtl': f }
        ),
        g = ur(o) ? o({ rtl: f, type: a, defaultClassName: h }) : ya(h, o)
    return K.createElement('div', {
        role: 'progressbar',
        'aria-hidden': v ? 'true' : 'false',
        'aria-label': 'notification timer',
        className: g,
        style: b,
        [c && u >= 1 ? 'onTransitionEnd' : 'onAnimationEnd']:
            c && u < 1
                ? null
                : () => {
                      p && n()
                  },
    })
}
const Nne = (e) => {
        const {
                isRunning: t,
                preventExitTransition: r,
                toastRef: n,
                eventHandlers: a,
            } = xne(e),
            {
                closeButton: l,
                children: o,
                autoClose: s,
                onClick: c,
                type: u,
                hideProgressBar: f,
                closeToast: p,
                transition: m,
                position: v,
                className: b,
                style: h,
                bodyClassName: g,
                bodyStyle: x,
                progressClassName: w,
                progressStyle: y,
                updateId: N,
                role: S,
                progress: P,
                rtl: E,
                toastId: k,
                deleteToast: M,
                isIn: A,
                isLoading: _,
                iconOut: O,
                closeOnClick: T,
                theme: $,
            } = e,
            I = ya(
                'Toastify__toast',
                `Toastify__toast-theme--${$}`,
                `Toastify__toast--${u}`,
                { 'Toastify__toast--rtl': E },
                { 'Toastify__toast--close-on-click': T }
            ),
            j = ur(b)
                ? b({ rtl: E, position: v, type: u, defaultClassName: I })
                : ya(I, b),
            L = !!P || !s,
            D = { closeToast: p, type: u, theme: $ }
        let R = null
        return (
            l === !1 ||
                (R = ur(l)
                    ? l(D)
                    : C.exports.isValidElement(l)
                    ? C.exports.cloneElement(l, D)
                    : _S(D)),
            K.createElement(
                m,
                {
                    isIn: A,
                    done: M,
                    position: v,
                    preventExitTransition: r,
                    nodeRef: n,
                },
                d('div', {
                    id: k,
                    onClick: c,
                    className: j,
                    ...a,
                    style: h,
                    ref: n,
                    children: [
                        d('div', {
                            ...(A && { role: S }),
                            className: ur(g)
                                ? g({ type: u })
                                : ya('Toastify__toast-body', g),
                            style: x,
                            children: [
                                O != null &&
                                    i('div', {
                                        className: ya('Toastify__toast-icon', {
                                            'Toastify--animate-icon Toastify__zoom-enter':
                                                !_,
                                        }),
                                        children: O,
                                    }),
                                i('div', { children: o }),
                            ],
                        }),
                        R,
                        i(wne, {
                            ...(N && !L ? { key: `pb-${N}` } : {}),
                            rtl: E,
                            theme: $,
                            delay: s,
                            isRunning: t,
                            isIn: A,
                            closeToast: p,
                            hide: f,
                            type: u,
                            style: y,
                            className: w,
                            controlledProgress: L,
                            progress: P || 0,
                        }),
                    ],
                })
            )
        )
    },
    Ap = function (e, t) {
        return (
            t === void 0 && (t = !1),
            {
                enter: `Toastify--animate Toastify__${e}-enter`,
                exit: `Toastify--animate Toastify__${e}-exit`,
                appendPosition: t,
            }
        )
    },
    Sne = _p(Ap('bounce', !0))
_p(Ap('slide', !0))
_p(Ap('zoom'))
_p(Ap('flip'))
const ct = C.exports.forwardRef((e, t) => {
    const { getToastToRender: r, containerRef: n, isToastActive: a } = bne(e),
        { className: l, style: o, rtl: s, containerId: c } = e
    function u(f) {
        const p = ya(
            'Toastify__toast-container',
            `Toastify__toast-container--${f}`,
            { 'Toastify__toast-container--rtl': s }
        )
        return ur(l)
            ? l({ position: f, rtl: s, defaultClassName: p })
            : ya(p, bu(l))
    }
    return (
        C.exports.useEffect(() => {
            t && (t.current = n.current)
        }, []),
        i('div', {
            ref: n,
            className: 'Toastify',
            id: c,
            children: r((f, p) => {
                const m = p.length ? { ...o } : { ...o, pointerEvents: 'none' }
                return i(
                    'div',
                    {
                        className: u(f),
                        style: m,
                        children: p.map((v, b) => {
                            let { content: h, props: g } = v
                            return C.exports.createElement(
                                Nne,
                                {
                                    ...g,
                                    isIn: a(g.toastId),
                                    style: {
                                        ...g.style,
                                        '--nth': b + 1,
                                        '--len': p.length,
                                    },
                                    key: `toast-${g.key}`,
                                },
                                h
                            )
                        }),
                    },
                    `container-${f}`
                )
            }),
        })
    )
})
;(ct.displayName = 'ToastContainer'),
    (ct.defaultProps = {
        position: 'top-right',
        transition: Sne,
        autoClose: 5e3,
        closeButton: _S,
        pauseOnHover: !0,
        pauseOnFocusLoss: !0,
        closeOnClick: !0,
        draggable: !0,
        draggablePercent: 80,
        draggableDirection: 'x',
        role: 'alert',
        theme: 'light',
    })
let rm,
    ii = new Map(),
    Ko = [],
    Cne = 1
function AS() {
    return '' + Cne++
}
function Pne(e) {
    return e && (ki(e.toastId) || us(e.toastId)) ? e.toastId : AS()
}
function ds(e, t) {
    return (
        ii.size > 0 ? Rr.emit(0, e, t) : Ko.push({ content: e, options: t }),
        t.toastId
    )
}
function Qd(e, t) {
    return { ...t, type: (t && t.type) || e, toastId: Pne(t) }
}
function nu(e) {
    return (t, r) => ds(t, Qd(e, r))
}
function fe(e, t) {
    return ds(e, Qd('default', t))
}
;(fe.loading = (e, t) =>
    ds(
        e,
        Qd('default', {
            isLoading: !0,
            autoClose: !1,
            closeOnClick: !1,
            closeButton: !1,
            draggable: !1,
            ...t,
        })
    )),
    (fe.promise = function (e, t, r) {
        let n,
            { pending: a, error: l, success: o } = t
        a &&
            (n = ki(a)
                ? fe.loading(a, r)
                : fe.loading(a.render, { ...r, ...a }))
        const s = {
                isLoading: null,
                autoClose: null,
                closeOnClick: null,
                closeButton: null,
                draggable: null,
                delay: 100,
            },
            c = (f, p, m) => {
                if (p == null) return void fe.dismiss(n)
                const v = { type: f, ...s, ...r, data: m },
                    b = ki(p) ? { render: p } : p
                return (
                    n
                        ? fe.update(n, { ...v, ...b })
                        : fe(b.render, { ...v, ...b }),
                    m
                )
            },
            u = ur(e) ? e() : e
        return (
            u.then((f) => c('success', o, f)).catch((f) => c('error', l, f)), u
        )
    }),
    (fe.success = nu('success')),
    (fe.info = nu('info')),
    (fe.error = nu('error')),
    (fe.warning = nu('warning')),
    (fe.warn = fe.warning),
    (fe.dark = (e, t) => ds(e, Qd('default', { theme: 'dark', ...t }))),
    (fe.dismiss = (e) => {
        ii.size > 0
            ? Rr.emit(1, e)
            : (Ko = Ko.filter((t) => e != null && t.options.toastId !== e))
    }),
    (fe.clearWaitingQueue = function (e) {
        return e === void 0 && (e = {}), Rr.emit(5, e)
    }),
    (fe.isActive = (e) => {
        let t = !1
        return (
            ii.forEach((r) => {
                r.isToastActive && r.isToastActive(e) && (t = !0)
            }),
            t
        )
    }),
    (fe.update = function (e, t) {
        t === void 0 && (t = {}),
            setTimeout(() => {
                const r = (function (n, a) {
                    let { containerId: l } = a
                    const o = ii.get(l || rm)
                    return o && o.getToast(n)
                })(e, t)
                if (r) {
                    const { props: n, content: a } = r,
                        l = {
                            ...n,
                            ...t,
                            toastId: t.toastId || e,
                            updateId: AS(),
                        }
                    l.toastId !== e && (l.staleId = e)
                    const o = l.render || a
                    delete l.render, ds(o, l)
                }
            }, 0)
    }),
    (fe.done = (e) => {
        fe.update(e, { progress: 1 })
    }),
    (fe.onChange = (e) => (
        Rr.on(4, e),
        () => {
            Rr.off(4, e)
        }
    )),
    (fe.POSITION = {
        TOP_LEFT: 'top-left',
        TOP_RIGHT: 'top-right',
        TOP_CENTER: 'top-center',
        BOTTOM_LEFT: 'bottom-left',
        BOTTOM_RIGHT: 'bottom-right',
        BOTTOM_CENTER: 'bottom-center',
    }),
    (fe.TYPE = {
        INFO: 'info',
        SUCCESS: 'success',
        WARNING: 'warning',
        ERROR: 'error',
        DEFAULT: 'default',
    }),
    Rr.on(2, (e) => {
        ;(rm = e.containerId || e),
            ii.set(rm, e),
            Ko.forEach((t) => {
                Rr.emit(0, t.content, t.options)
            }),
            (Ko = [])
    }).on(3, (e) => {
        ii.delete(e.containerId || e), ii.size === 0 && Rr.off(0).off(1).off(5)
    })
const _ne = [
        { name: 'Mon', pv: 25e3 },
        { name: 'Tue', pv: 3e4 },
        { name: 'Wed', pv: 18e3 },
        { name: 'Thur', pv: 15e3 },
        { name: 'Fri', pv: 22e3 },
        { name: 'Sat', pv: 21e3 },
        { name: 'Sun', pv: 22e3 },
    ],
    Ane = Array.from({ length: 10 }).map((e, t) => ({
        name: t >= 8 ? `${t - 7}pm` : `${t + 5}am`,
        pv: Math.floor(Math.random() * 200 + 10),
        uv: Math.floor(Math.random() * 200 + 10),
    })),
    Uw = ({ color1: e, color2: t }) =>
        d(sS, {
            width: 750,
            height: 300,
            data: Ane,
            children: [
                i(Ii, { dataKey: 'name' }),
                i(Ri, { tickCount: 5 }),
                i(jn, {}),
                i(Fa, { dataKey: 'pv', fill: e, barSize: 20 }),
                i(Fa, { dataKey: 'pv', fill: t, barSize: 20 }),
            ],
        })
function go() {
    return d(sS, {
        width: 600,
        height: 300,
        data: _ne,
        margin: { top: 5, right: 30, left: 20, bottom: 5 },
        children: [
            i(Ii, { dataKey: 'name' }),
            i(Ri, { tickCount: 7, tickFormatter: (e) => '\u20A6' + e }),
            i(jn, {}),
            i(Fa, { dataKey: 'pv', fill: '#08D231', barSize: 40 }),
        ],
    })
}
const Ene = [
        {
            id: '1',
            time: '3:18pm',
            date: '02-May-2022',
            estateName: 'Thomas Estate',
            status: 'Denied',
            description: 'Ago palace funding and request',
            amount: 5e3,
        },
        {
            id: '2',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Ahike Estate',
            status: 'Successful',
            description: 'Ago palace funding and request',
            amount: 8e3,
        },
        {
            id: '3',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Lekki Estate',
            status: 'Successful',
            description: 'Ago palace funding and request',
            amount: 8e3,
        },
        {
            id: '4',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Bavaeri Estate',
            status: 'Pending',
            description: 'Ago palace funding and request',
            amount: 8e3,
        },
        {
            id: '5',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Ahike Estate',
            status: 'Denied',
            description: 'A canteen funding and request',
            amount: 8e3,
        },
        {
            id: '6',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Ahike Estate',
            status: 'Successful',
            description: 'Cool palace funding and request',
            amount: 8e3,
        },
        {
            id: '7',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Ahike Estate',
            status: 'Pending',
            description: 'baba palace funding and request',
            amount: 8e3,
        },
        {
            id: '8',
            time: '4:12pm',
            date: '04-May-2022',
            estateName: 'Ahike Estate',
            status: 'Denied',
            description: ' Serenity building funding and request',
            amount: 8e3,
        },
    ],
    kne = () => {
        const e = ['This Week', 'This Month', 'This Year'],
            [t, r] = C.exports.useState(!0),
            [n, a] = C.exports.useState(!1),
            [l, o] = C.exports.useState('This Week'),
            s = () => a(!n),
            c = (B) => {
                o(B), a(!1)
            },
            [u, f] = C.exports.useState([])
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    f(Ene)
                }, 1e3)
            })()
        }, [])
        const p = Me(),
            m = ['View Details', 'Approve', 'Deny'],
            [v, b] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            h = (B, X) => {
                b(() => ({ isDropDownOpen: B.target.checked, index: X }))
            },
            g = ['A-Z', 'date'],
            [x, w] = C.exports.useState(!1),
            y = [2, 4, 6, 8],
            [N, S] = C.exports.useState(null),
            [P, E] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: 6,
                totalPage: Math.ceil(u.length / 2),
                slicedPages: null,
            }),
            k = () => w(!x),
            M = (B) => {
                S(B), w(!1)
            },
            A = (B) => {
                const X = parseInt(B.target.value),
                    ge = []
                for (let Pe = 0; Pe < u.length; Pe += X)
                    ge.push(u.slice(Pe, Pe + X))
                E((Pe) => ({
                    ...Pe,
                    itemsPerPage: X,
                    index: 0,
                    currentPage: 1,
                    slicedPages: ge,
                    totalPage: Math.ceil(u.length / X),
                }))
            }
        C.exports.useEffect(() => {
            console.log({ slicedPages: $ })
        }, [P.slicedPages]),
            C.exports.useEffect(() => {
                const B = []
                for (let X = 0; X < u.length; X += P.itemsPerPage)
                    B.push(u.slice(X, X + P.itemsPerPage))
                E((X) => ({ ...X, slicedPages: B }))
            }, [u])
        const _ = () => {
                P.currentPage !== P.totalPage &&
                    E((B) => ({
                        ...B,
                        index: B.index + 1,
                        currentPage: B.currentPage + 1,
                    }))
            },
            O = () => {
                P.currentPage !== 1 &&
                    E((B) => ({
                        ...B,
                        index: B.index - 1,
                        currentPage: B.currentPage - 1,
                    }))
            },
            { currentPage: T, slicedPages: $, itemsPerPage: I } = P,
            j = (B, X) => {
                E((ge) => ({ ...ge, index: X, currentPage: X + 1 }))
            },
            L = [
                {
                    id: '1',
                    estateName: 'Peace Estate',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '2',
                    estateName: 'Peace Estate',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '3',
                    estateName: 'Peace Estate',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '4',
                    estateName: 'Peace Estate',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '5',
                    estateName: 'Peace Estate',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
            ],
            D = C.exports.useRef(null),
            R = () => {
                D.current && D.current.close()
            },
            V = (B) => {
                r(B === 'warning'), D.current && D.current.showModal()
            },
            G = () => {
                R()
            },
            ee = (B, X) => {
                console.log({ item: B, index: X }),
                    b(() => ({ isDropDownOpen: !1, index: null })),
                    B === 'View Details' &&
                        p(`/superAdmin/wallet/estate/:${X}`),
                    B === 'Approve' && V('success'),
                    B === 'Deny' && V('warning')
            }
        return d('div', {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: D,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] min-h-[30rem] py-10 gap-8 text-[1.6rem]',
                            children: [
                                t
                                    ? i('img', {
                                          src: '/icons/admins/modalWarning.svg',
                                          alt: '',
                                      })
                                    : i('img', {
                                          src: '/icons/admins/modalSuccess.svg',
                                          alt: '',
                                      }),
                                t &&
                                    i('p', {
                                        className: 'font-bold text-[1.8rem]',
                                        style: { fontFamily: 'Satoshi-Medium' },
                                        children: 'Denial Confirmation',
                                    }),
                                t
                                    ? d('div', {
                                          className: 'grid',
                                          children: [
                                              i('label', {
                                                  className: ' text-left',
                                                  children: 'Message',
                                              }),
                                              i('textarea', {
                                                  rows: 2,
                                                  className:
                                                      'w-[45rem] outline-color-grey border-color-grey border rounded-lg p-4 mt-4',
                                              }),
                                              i('p', {
                                                  className:
                                                      'text-gray-400 text-[1.4rem]',
                                                  children:
                                                      'Maximum of 80 Characters',
                                              }),
                                          ],
                                      })
                                    : i('p', {
                                          className:
                                              'max-w-[45rem] text-center',
                                          children:
                                              'Are you sure you want to approve this request? If you click on approve, this estate request will be approved.',
                                      }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => R(),
                                            children: 'Cancel',
                                        }),
                                        t
                                            ? i('button', {
                                                  className:
                                                      'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                  onClick: G,
                                                  children: 'Deny',
                                              })
                                            : i('button', {
                                                  className:
                                                      'btn text-white bg-green-600 border rounded-lg w-[15rem]',
                                                  onClick: () => {
                                                      R(),
                                                          fe(
                                                              'Withdrawal Approved Successfully',
                                                              {
                                                                  type: 'success',
                                                                  position:
                                                                      'top-right',
                                                                  className:
                                                                      'bg-green-100 text-green-700 text-[1.4rem] ',
                                                              }
                                                          )
                                                  },
                                                  children: 'Approve',
                                              }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'grid mt-12 pb-10 rounded-lg  items-baseline gap-10',
                    children: [
                        d('div', {
                            className:
                                'flex justify-between items-center content-start bg-white p-8 rounded-lg',
                            children: [
                                i('div', {
                                    className: '',
                                    children: i(Xt, {
                                        amount: 1032422,
                                        title: 'Estate Wallet',
                                        isWalletScreen: !0,
                                        bgImgUri:
                                            '/icons/overview/card/bgE.svg',
                                        lefIconUri:
                                            '/icons/overview/card/leftE.svg',
                                        bgColor: 'bg-[#97346F]',
                                    }),
                                }),
                                d('div', {
                                    className: 'border-l border-l-color-grey',
                                    children: [
                                        d('div', {
                                            className: 'flex justify-between',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'text-[1.6rem] font-bold p-8',
                                                    children: 'Wallet Trend',
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative grid gap-4',
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'relative flex items-center w-[12rem]',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                    onClick: s,
                                                                    children: l,
                                                                }),
                                                                n
                                                                    ? i(dt, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      })
                                                                    : i(le, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      }),
                                                            ],
                                                        }),
                                                        n &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children: e.map(
                                                                    (B, X) =>
                                                                        i(
                                                                            'p',
                                                                            {
                                                                                className:
                                                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                onClick:
                                                                                    () =>
                                                                                        c(
                                                                                            B
                                                                                        ),
                                                                                children:
                                                                                    B,
                                                                            },
                                                                            X
                                                                        )
                                                                ),
                                                            }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(go, {}),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid gap-10',
                            children: [
                                d('div', {
                                    className:
                                        'grid text-[1.6rem] gap-[3rem] bg-white p-8 rounded-lg',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex w-full items-center gap-12 ',
                                            children: [
                                                d('p', {
                                                    className: ' font-bold',
                                                    children: [
                                                        'Estate List ',
                                                        i('span', {
                                                            children: '(200)',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative flex items-center',
                                                    children: [
                                                        i('img', {
                                                            src: '/icons/admins/search.svg',
                                                            alt: '',
                                                            className:
                                                                'absolute left-4 text-[4rem]',
                                                        }),
                                                        i('input', {
                                                            type: 'text',
                                                            placeholder:
                                                                'Search Parameters',
                                                            className:
                                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('table', {
                                            children: [
                                                i('thead', {
                                                    children: d('tr', {
                                                        className:
                                                            'border-b border-b-color-grey',
                                                        children: [
                                                            i('th', {
                                                                align: 'left',
                                                                className:
                                                                    'py-4',
                                                                children:
                                                                    'Estate Name',
                                                            }),
                                                            i('th', {
                                                                align: 'left',
                                                                className:
                                                                    'py-4',
                                                                children:
                                                                    'Wallet Balance',
                                                            }),
                                                            i('th', {
                                                                align: 'left',
                                                                className:
                                                                    'py-4',
                                                                children:
                                                                    'Estate Name',
                                                            }),
                                                            i('th', {
                                                                align: 'left',
                                                                className:
                                                                    'py-4',
                                                                children:
                                                                    'Wallet Balance',
                                                            }),
                                                        ],
                                                    }),
                                                }),
                                                i('tbody', {
                                                    children: L.map((B, X) =>
                                                        d('tr', {
                                                            className:
                                                                'border-b',
                                                            children: [
                                                                d('td', {
                                                                    children: [
                                                                        d(
                                                                            'div',
                                                                            {
                                                                                className:
                                                                                    'flex items-center gap-2  h-[5rem]',
                                                                                children:
                                                                                    [
                                                                                        i(
                                                                                            'img',
                                                                                            {
                                                                                                src: B.imgUri,
                                                                                                alt: '',
                                                                                                className:
                                                                                                    'w-[3rem] h-[3rem] object-cover rounded-full',
                                                                                            }
                                                                                        ),
                                                                                        i(
                                                                                            'p',
                                                                                            {
                                                                                                children:
                                                                                                    B.estateName,
                                                                                            }
                                                                                        ),
                                                                                    ],
                                                                            }
                                                                        ),
                                                                        ' ',
                                                                    ],
                                                                }),
                                                                d('td', {
                                                                    children: [
                                                                        ' ',
                                                                        d(
                                                                            'div',
                                                                            {
                                                                                className:
                                                                                    'flex items-center',
                                                                                children:
                                                                                    [
                                                                                        i(
                                                                                            'img',
                                                                                            {
                                                                                                src: '/icons/Naira.svg',
                                                                                                alt: '',
                                                                                            }
                                                                                        ),
                                                                                        B.amount.toLocaleString(),
                                                                                    ],
                                                                            }
                                                                        ),
                                                                    ],
                                                                }),
                                                                d('td', {
                                                                    children: [
                                                                        d(
                                                                            'div',
                                                                            {
                                                                                className:
                                                                                    'flex items-center gap-2  h-[5rem]',
                                                                                children:
                                                                                    [
                                                                                        i(
                                                                                            'img',
                                                                                            {
                                                                                                src: B.imgUri,
                                                                                                alt: '',
                                                                                                className:
                                                                                                    'w-[3rem] h-[3rem] object-cover rounded-full',
                                                                                            }
                                                                                        ),
                                                                                        i(
                                                                                            'p',
                                                                                            {
                                                                                                children:
                                                                                                    B.estateName,
                                                                                            }
                                                                                        ),
                                                                                    ],
                                                                            }
                                                                        ),
                                                                        ' ',
                                                                    ],
                                                                }),
                                                                i('td', {
                                                                    children: d(
                                                                        'div',
                                                                        {
                                                                            className:
                                                                                'flex items-center',
                                                                            children:
                                                                                [
                                                                                    i(
                                                                                        'img',
                                                                                        {
                                                                                            src: '/icons/Naira.svg',
                                                                                            alt: '',
                                                                                        }
                                                                                    ),
                                                                                    B.amount.toLocaleString(),
                                                                                ],
                                                                        }
                                                                    ),
                                                                }),
                                                            ],
                                                        })
                                                    ),
                                                }),
                                            ],
                                        }),
                                        i('button', {
                                            className:
                                                'text-[1.6rem] place-self-end text-[#0660FE] font-semibold',
                                            children: 'View More',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'grid text-[1.6rem] gap-10 bg-white p-8 rounded-lg',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex w-full items-center gap-12 ',
                                            children: [
                                                d('p', {
                                                    className: ' font-bold',
                                                    children: [
                                                        'Withdrawal History ',
                                                        i('span', {
                                                            children: '(10)',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative flex items-center',
                                                    children: [
                                                        i('img', {
                                                            src: '/icons/admins/search.svg',
                                                            alt: '',
                                                            className:
                                                                'absolute left-4 text-[4rem]',
                                                        }),
                                                        i('input', {
                                                            type: 'text',
                                                            placeholder:
                                                                'Search Parameters',
                                                            className:
                                                                'pl-16 w-[20rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                            onClick: k,
                                                            children:
                                                                N || 'Today',
                                                        }),
                                                        x &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children: g.map(
                                                                    (B, X) =>
                                                                        i(
                                                                            'p',
                                                                            {
                                                                                className:
                                                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                                onClick:
                                                                                    () =>
                                                                                        M(
                                                                                            B
                                                                                        ),
                                                                                children:
                                                                                    B,
                                                                            },
                                                                            X
                                                                        )
                                                                ),
                                                            }),
                                                        x
                                                            ? i(dt, {
                                                                  className:
                                                                      'absolute right-4 text-[1.3rem]',
                                                              })
                                                            : i(le, {
                                                                  className:
                                                                      'absolute right-4 text-[1.3rem]',
                                                              }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                            onClick: k,
                                                            children:
                                                                N || 'Sort By',
                                                        }),
                                                        x &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children: g.map(
                                                                    (B, X) =>
                                                                        i(
                                                                            'p',
                                                                            {
                                                                                className:
                                                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                                onClick:
                                                                                    () =>
                                                                                        M(
                                                                                            B
                                                                                        ),
                                                                                children:
                                                                                    B,
                                                                            },
                                                                            X
                                                                        )
                                                                ),
                                                            }),
                                                        x
                                                            ? i(dt, {
                                                                  className:
                                                                      'absolute right-4 text-[1.3rem]',
                                                              })
                                                            : i(le, {
                                                                  className:
                                                                      'absolute right-4 text-[1.3rem]',
                                                              }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-7 gap-8',
                                                    style: {
                                                        fontSize: '1.4rem',
                                                    },
                                                    children: [
                                                        d('p', {
                                                            className:
                                                                'flex items-center gap-2',
                                                            children: [
                                                                i('input', {
                                                                    type: 'checkbox',
                                                                    className:
                                                                        'cursor-pointer',
                                                                }),
                                                                i('p', {
                                                                    children:
                                                                        'Estate Name',
                                                                }),
                                                            ],
                                                        }),
                                                        i('p', {
                                                            children: 'Time',
                                                        }),
                                                        i('p', {
                                                            children: 'Date',
                                                        }),
                                                        i('p', {
                                                            children: 'Status',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Description',
                                                        }),
                                                        i('p', {
                                                            children: 'Amount',
                                                        }),
                                                        i('p', {
                                                            children: 'Actions',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    className: 'grid gap-8 p-8',
                                                    children:
                                                        P.slicedPages &&
                                                        P.slicedPages.length > 0
                                                            ? K.Children.toArray(
                                                                  P.slicedPages[
                                                                      P.index
                                                                  ].map(
                                                                      (
                                                                          {
                                                                              id: B,
                                                                              estateName:
                                                                                  X,
                                                                              time: ge,
                                                                              date: Pe,
                                                                              status: ue,
                                                                              description:
                                                                                  F,
                                                                              amount: q,
                                                                          },
                                                                          te
                                                                      ) => {
                                                                          const {
                                                                              isDropDownOpen:
                                                                                  z,
                                                                              index: _e,
                                                                          } = v
                                                                          return d(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'grid justify-between border-b grid-cols-7 gap-8 items-center py-5',
                                                                                  children:
                                                                                      [
                                                                                          d(
                                                                                              'p',
                                                                                              {
                                                                                                  className:
                                                                                                      'flex items-center gap-4',
                                                                                                  children:
                                                                                                      [
                                                                                                          i(
                                                                                                              'input',
                                                                                                              {
                                                                                                                  type: 'checkbox',
                                                                                                                  className:
                                                                                                                      'cursor-pointer',
                                                                                                              }
                                                                                                          ),
                                                                                                          i(
                                                                                                              'span',
                                                                                                              {
                                                                                                                  children:
                                                                                                                      X,
                                                                                                              }
                                                                                                          ),
                                                                                                      ],
                                                                                              }
                                                                                          ),
                                                                                          i(
                                                                                              'p',
                                                                                              {
                                                                                                  children:
                                                                                                      ge,
                                                                                              }
                                                                                          ),
                                                                                          i(
                                                                                              'p',
                                                                                              {
                                                                                                  children:
                                                                                                      Pe,
                                                                                              }
                                                                                          ),
                                                                                          i(
                                                                                              'p',
                                                                                              {
                                                                                                  children:
                                                                                                      ue ===
                                                                                                      'Denied'
                                                                                                          ? i(
                                                                                                                'span',
                                                                                                                {
                                                                                                                    className:
                                                                                                                        'text-red-600',
                                                                                                                    children:
                                                                                                                        ue,
                                                                                                                }
                                                                                                            )
                                                                                                          : ue ===
                                                                                                            'Successful'
                                                                                                          ? i(
                                                                                                                'span',
                                                                                                                {
                                                                                                                    className:
                                                                                                                        'text-green-600',
                                                                                                                    children:
                                                                                                                        ue,
                                                                                                                }
                                                                                                            )
                                                                                                          : i(
                                                                                                                'span',
                                                                                                                {
                                                                                                                    className:
                                                                                                                        'text-yellow-600',
                                                                                                                    children:
                                                                                                                        ue,
                                                                                                                }
                                                                                                            ),
                                                                                              }
                                                                                          ),
                                                                                          i(
                                                                                              'p',
                                                                                              {
                                                                                                  className:
                                                                                                      ' overflow-hidden text-ellipsis whitespace-nowrap',
                                                                                                  children:
                                                                                                      F,
                                                                                              }
                                                                                          ),
                                                                                          d(
                                                                                              'p',
                                                                                              {
                                                                                                  className:
                                                                                                      'flex items-center gap-.5',
                                                                                                  children:
                                                                                                      [
                                                                                                          i(
                                                                                                              'img',
                                                                                                              {
                                                                                                                  src: '/icons/Naira.svg',
                                                                                                                  alt: '',
                                                                                                              }
                                                                                                          ),
                                                                                                          i(
                                                                                                              'span',
                                                                                                              {
                                                                                                                  children:
                                                                                                                      q,
                                                                                                              }
                                                                                                          ),
                                                                                                      ],
                                                                                              }
                                                                                          ),
                                                                                          d(
                                                                                              'div',
                                                                                              {
                                                                                                  className:
                                                                                                      'relative',
                                                                                                  children:
                                                                                                      [
                                                                                                          i(
                                                                                                              'label',
                                                                                                              {
                                                                                                                  className:
                                                                                                                      'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                                                  htmlFor:
                                                                                                                      te.toString(),
                                                                                                                  onClick:
                                                                                                                      () =>
                                                                                                                          b(
                                                                                                                              (
                                                                                                                                  se
                                                                                                                              ) => ({
                                                                                                                                  isDropDownOpen:
                                                                                                                                      !se.isDropDownOpen,
                                                                                                                                  index: te,
                                                                                                                              })
                                                                                                                          ),
                                                                                                                  children:
                                                                                                                      i(
                                                                                                                          'span',
                                                                                                                          {
                                                                                                                              className:
                                                                                                                                  'text-color-primary',
                                                                                                                              children:
                                                                                                                                  i(
                                                                                                                                      'img',
                                                                                                                                      {
                                                                                                                                          src: '/icons/admins/threeDots.svg',
                                                                                                                                          alt: '',
                                                                                                                                      }
                                                                                                                                  ),
                                                                                                                          }
                                                                                                                      ),
                                                                                                              }
                                                                                                          ),
                                                                                                          i(
                                                                                                              'input',
                                                                                                              {
                                                                                                                  type: 'radio',
                                                                                                                  name: 'dropdown',
                                                                                                                  className:
                                                                                                                      'hidden',
                                                                                                                  id: te.toString(),
                                                                                                                  onChange:
                                                                                                                      (
                                                                                                                          se
                                                                                                                      ) =>
                                                                                                                          h(
                                                                                                                              se,
                                                                                                                              te
                                                                                                                          ),
                                                                                                              }
                                                                                                          ),
                                                                                                          z &&
                                                                                                              _e ===
                                                                                                                  te &&
                                                                                                              i(
                                                                                                                  'div',
                                                                                                                  {
                                                                                                                      className:
                                                                                                                          'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                                                      children:
                                                                                                                          m.map(
                                                                                                                              (
                                                                                                                                  se,
                                                                                                                                  Le
                                                                                                                              ) =>
                                                                                                                                  i(
                                                                                                                                      'p',
                                                                                                                                      {
                                                                                                                                          className:
                                                                                                                                              'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                                                          onClick:
                                                                                                                                              (
                                                                                                                                                  Ye
                                                                                                                                              ) =>
                                                                                                                                                  ee(
                                                                                                                                                      se,
                                                                                                                                                      B
                                                                                                                                                  ),
                                                                                                                                          children:
                                                                                                                                              se ===
                                                                                                                                              'Deny'
                                                                                                                                                  ? i(
                                                                                                                                                        'span',
                                                                                                                                                        {
                                                                                                                                                            className:
                                                                                                                                                                'text-red-600',
                                                                                                                                                            children:
                                                                                                                                                                se,
                                                                                                                                                        }
                                                                                                                                                    )
                                                                                                                                                  : se ===
                                                                                                                                                    'Approve'
                                                                                                                                                  ? i(
                                                                                                                                                        'span',
                                                                                                                                                        {
                                                                                                                                                            className:
                                                                                                                                                                'text-green-600',
                                                                                                                                                            children:
                                                                                                                                                                se,
                                                                                                                                                        }
                                                                                                                                                    )
                                                                                                                                                  : i(
                                                                                                                                                        'span',
                                                                                                                                                        {
                                                                                                                                                            className:
                                                                                                                                                                'text-black',
                                                                                                                                                            children:
                                                                                                                                                                se,
                                                                                                                                                        }
                                                                                                                                                    ),
                                                                                                                                      },
                                                                                                                                      Le +
                                                                                                                                          te
                                                                                                                                  )
                                                                                                                          ),
                                                                                                                  }
                                                                                                              ),
                                                                                                      ],
                                                                                              }
                                                                                          ),
                                                                                      ],
                                                                              }
                                                                          )
                                                                      }
                                                                  )
                                                              )
                                                            : i('div', {
                                                                  children: i(
                                                                      'div',
                                                                      {
                                                                          className:
                                                                              'relative',
                                                                          children:
                                                                              i(
                                                                                  'div',
                                                                                  {
                                                                                      className:
                                                                                          'absolute w-full grid place-content-center',
                                                                                      children:
                                                                                          i(
                                                                                              Ne,
                                                                                              {
                                                                                                  className:
                                                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                      }
                                                                  ),
                                                              }),
                                                }),
                                            ],
                                        }),
                                        d('footer', {
                                            className:
                                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex gap-8 items-center',
                                                    children: [
                                                        i('p', {
                                                            children: 'View',
                                                        }),
                                                        d('select', {
                                                            name: '',
                                                            id: '',
                                                            className:
                                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                            onChange: A,
                                                            children: [
                                                                i('option', {
                                                                    hidden: !0,
                                                                    children: I,
                                                                }),
                                                                y.map((B, X) =>
                                                                    i(
                                                                        'option',
                                                                        {
                                                                            value: B,
                                                                            className:
                                                                                'capitalize cursor-pointer bg-white',
                                                                            children:
                                                                                B,
                                                                        },
                                                                        X
                                                                    )
                                                                ),
                                                            ],
                                                        }),
                                                        i('p', {
                                                            className: 'text',
                                                            children:
                                                                'List per page',
                                                        }),
                                                    ],
                                                }),
                                                d('ul', {
                                                    className:
                                                        'flex items-center gap-5 ml-10',
                                                    children: [
                                                        i(Ae, {
                                                            onClick: O,
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                        $ == null
                                                            ? void 0
                                                            : $.map((B, X) =>
                                                                  i(
                                                                      'li',
                                                                      {
                                                                          children:
                                                                              X +
                                                                                  1 ===
                                                                              T
                                                                                  ? i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                            children:
                                                                                                X +
                                                                                                1,
                                                                                        }
                                                                                    )
                                                                                  : i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                            onClick:
                                                                                                (
                                                                                                    ge
                                                                                                ) =>
                                                                                                    j(
                                                                                                        ge,
                                                                                                        X
                                                                                                    ),
                                                                                            children:
                                                                                                X +
                                                                                                1,
                                                                                        }
                                                                                    ),
                                                                      },
                                                                      X
                                                                  )
                                                              ),
                                                        i(Ee, {
                                                            onClick: _,
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    One = () => (
        C.exports.useContext(Ha),
        d('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: [
                d('section', {
                    className: 'grid max-w-[65vw] gap-16',
                    style: {
                        gridTemplateColumns:
                            'repeat(auto-fit, minmax(40rem, 1fr))',
                    },
                    children: [
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'estateName',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Estate Name',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'estateName',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Gold Estate',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'withdrawalTime',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Withdrawal Time',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'withdrawalTime',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: '3:00pm',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'status',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Withdrawal Date',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'status',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: '2-1-2023',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'description',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Amount',
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/Naira.svg',
                                            alt: '',
                                            className: 'absolute left-3',
                                        }),
                                        i('input', {
                                            disabled: !0,
                                            type: 'text',
                                            required: !0,
                                            id: 'description',
                                            className:
                                                'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                            value: 6e3,
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'description',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Status',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'description',
                                    className:
                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Active',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'description',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Description',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'description',
                                    className:
                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Description',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'description',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Balance',
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/Naira.svg',
                                            alt: '',
                                            className: 'absolute left-3',
                                        }),
                                        i('input', {
                                            disabled: !0,
                                            type: 'text',
                                            required: !0,
                                            id: 'description',
                                            className:
                                                'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                            value: 6e3,
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'description',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Narration',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'description',
                                    className:
                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'narration of the transaction',
                                }),
                            ],
                        }),
                    ],
                }),
                d('section', {
                    className:
                        'grid text-[1.4rem] w-full py-10 gap-8 border-t mt-20',
                    children: [
                        i('h4', {
                            className: 'text-[1.6rem] font-semibold',
                            children: 'Comments',
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'description',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Denial Reasons',
                                }),
                                i('input', {
                                    disabled: !0,
                                    type: 'text',
                                    required: !0,
                                    id: 'description',
                                    className:
                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                    value: 'Customer has not validated their account, Upload relevant documents for approval',
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    ),
    Tne = [
        {
            id: '1',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '2',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '3',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '4',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '5',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '6',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '7',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
        {
            id: '8',
            date: '12 May, 2021',
            residentName: 'Peace Estate',
            amount: 1e4,
        },
    ],
    Mne = [
        {
            id: '1',
            date: '11 Aug, 2021',
            status: 'Paid',
            amount: 1e4,
            residentName: 'Peace Estate',
        },
        {
            id: '2',
            date: '12 Aug, 2021',
            status: 'Unpaid',
            amount: 1e4,
            residentName: 'Peace Estate',
        },
        {
            id: '3',
            date: '15 Aug, 2021',
            status: 'Paid',
            amount: 1e4,
            residentName: 'Peace Estate',
        },
        {
            id: '4',
            date: '02 Aug, 2021',
            status: 'Unpaid',
            amount: 1e4,
            residentName: 'Peace Estate',
        },
        {
            id: '5',
            date: '11 Aug, 2021',
            status: 'Paid',
            amount: 1e4,
            residentName: 'Peace Estate',
        },
        {
            id: '6',
            date: '12 May, 2021',
            status: 'Paid',
            amount: 1e4,
            residentName: 'Peace Estate',
        },
    ],
    Ww = ({ fetchedResidentTransactions: e, isResidentBalance: t }) => {
        const r = [2, 4, 6, 8],
            [n, a] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: 4,
                totalPage: Math.ceil(e.length / 2),
                slicedPages: null,
            }),
            l = (m) => {
                const v = parseInt(m.target.value),
                    b = []
                for (let h = 0; h < e.length; h += v) b.push(e.slice(h, h + v))
                a((h) => ({
                    ...h,
                    itemsPerPage: v,
                    index: 0,
                    currentPage: 1,
                    slicedPages: b,
                    totalPage: Math.ceil(e.length / v),
                }))
            }
        C.exports.useEffect(() => {
            const m = []
            for (let v = 0; v < e.length; v += n.itemsPerPage)
                m.push(e.slice(v, v + n.itemsPerPage))
            a((v) => ({ ...v, slicedPages: m }))
        }, [e])
        const o = () => {
                n.currentPage !== n.totalPage &&
                    a((m) => ({
                        ...m,
                        index: m.index + 1,
                        currentPage: m.currentPage + 1,
                    }))
            },
            s = () => {
                n.currentPage !== 1 &&
                    a((m) => ({
                        ...m,
                        index: m.index - 1,
                        currentPage: m.currentPage - 1,
                    }))
            },
            c = (m, v) => {
                a((b) => ({ ...b, index: v, currentPage: v + 1 }))
            },
            { currentPage: u, slicedPages: f, itemsPerPage: p } = n
        return d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('div', {
                    className:
                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        i('p', {
                            className: ' font-bold',
                            children: t
                                ? 'Resident Balance'
                                : 'Resident Transactions',
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid px-8',
                    children: [
                        d('div', {
                            className: `grid justify-between text-color-dark-1 bg-color-grey p-8 gap-8 ${
                                t ? 'grid-cols-4' : 'grid-cols-3'
                            }`,
                            style: { fontSize: '1.6rem' },
                            children: [
                                i('p', { children: 'Estate Name' }),
                                i('p', { children: 'Amount' }),
                                t && i('p', { children: 'Status' }),
                                i('p', { children: 'Date' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                f && f.length > 0
                                    ? K.Children.toArray(
                                          f[n.index].map(
                                              ({
                                                  id: m,
                                                  residentName: v,
                                                  amount: b,
                                                  status: h,
                                                  date: g,
                                              }) =>
                                                  d('div', {
                                                      className: `grid justify-start border-b gap-8 ${
                                                          t
                                                              ? 'grid-cols-4'
                                                              : 'grid-cols-3'
                                                      }`,
                                                      children: [
                                                          i('p', {
                                                              children: v,
                                                          }),
                                                          i('p', {
                                                              children: b,
                                                          }),
                                                          t &&
                                                              i('p', {
                                                                  children:
                                                                      h ===
                                                                      'Paid'
                                                                          ? i(
                                                                                'span',
                                                                                {
                                                                                    className:
                                                                                        'text-green-600',
                                                                                    children:
                                                                                        h,
                                                                                }
                                                                            )
                                                                          : i(
                                                                                'span',
                                                                                {
                                                                                    className:
                                                                                        'text-red-600',
                                                                                    children:
                                                                                        h,
                                                                                }
                                                                            ),
                                                              }),
                                                          i('p', {
                                                              children: g,
                                                          }),
                                                      ],
                                                  })
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('select', {
                                    name: '',
                                    id: '',
                                    className:
                                        'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                    onChange: l,
                                    children: r.map((m, v) =>
                                        i(
                                            'option',
                                            {
                                                value: m,
                                                selected: m === p,
                                                className:
                                                    'capitalize cursor-pointer bg-white',
                                                children: m,
                                            },
                                            v
                                        )
                                    ),
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {
                                    onClick: s,
                                    className: 'cursor-pointer',
                                }),
                                f == null
                                    ? void 0
                                    : f.map((m, v) =>
                                          i(
                                              'li',
                                              {
                                                  children:
                                                      v + 1 === u
                                                          ? i('span', {
                                                                className:
                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                children: v + 1,
                                                            })
                                                          : i('span', {
                                                                className:
                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                onClick: (b) =>
                                                                    c(b, v),
                                                                children: v + 1,
                                                            }),
                                              },
                                              v
                                          )
                                      ),
                                i(Ee, {
                                    onClick: o,
                                    className: 'cursor-pointer',
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Dne = [
        {
            id: '1',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '2',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '3',
            date: '07-Aug, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 8e3,
            time: '1:00pm',
            balance: 12e3,
        },
        {
            id: '4',
            date: '02-May, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '5',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '6',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '7',
            date: '02-May, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
    ],
    $ne = () => {
        const e = ['This Week', 'This Month', 'This Year']
        C.exports.useState(!0)
        const [t, r] = C.exports.useState(!1),
            [n, a] = C.exports.useState('This Week'),
            l = () => r(!t),
            o = (Q) => {
                a(Q), r(!1)
            },
            [s, c] = C.exports.useState([])
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    c(Dne)
                }, 1e3)
            })()
        }, [])
        const u = Me(),
            f = ['View Details'],
            [p, m] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            v = (Q, B) => {
                m(() => ({ isDropDownOpen: Q.target.checked, index: B }))
            },
            b = ['A-Z', 'date'],
            [h, g] = C.exports.useState(!1),
            x = [2, 4, 6, 8],
            [w, y] = C.exports.useState(null),
            [N, S] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: 6,
                totalPage: Math.ceil(s.length / 2),
                slicedPages: null,
            }),
            P = () => g(!h),
            E = (Q) => {
                y(Q), g(!1)
            },
            k = (Q) => {
                const B = parseInt(Q.target.value),
                    X = []
                for (let ge = 0; ge < s.length; ge += B)
                    X.push(s.slice(ge, ge + B))
                S((ge) => ({
                    ...ge,
                    itemsPerPage: B,
                    index: 0,
                    currentPage: 1,
                    slicedPages: X,
                    totalPage: Math.ceil(s.length / B),
                }))
            }
        C.exports.useEffect(() => {
            const Q = []
            for (let B = 0; B < s.length; B += N.itemsPerPage)
                Q.push(s.slice(B, B + N.itemsPerPage))
            S((B) => ({ ...B, slicedPages: Q }))
        }, [s])
        const M = () => {
                N.currentPage !== N.totalPage &&
                    S((Q) => ({
                        ...Q,
                        index: Q.index + 1,
                        currentPage: Q.currentPage + 1,
                    }))
            },
            A = () => {
                N.currentPage !== 1 &&
                    S((Q) => ({
                        ...Q,
                        index: Q.index - 1,
                        currentPage: Q.currentPage - 1,
                    }))
            },
            { currentPage: _, slicedPages: O, itemsPerPage: T } = N,
            $ = (Q, B) => {
                S((X) => ({ ...X, index: B, currentPage: B + 1 }))
            },
            I = (Q, B) => {
                m(() => ({ isDropDownOpen: !1, index: null })),
                    Q === 'View Details' &&
                        u(`/superAdmin/wallet/resident/:${B}`)
            },
            [j, L] = C.exports.useState(null),
            [D, R] = C.exports.useState(null)
        C.exports.useEffect(() => {
            setTimeout(() => {
                L(Mne), R(Tne)
            }, 1e3)
        }, [])
        const [V, G] = C.exports.useState('resident-transaction-history'),
            ee = {
                'resident-transaction-history': i(Ww, {
                    fetchedResidentTransactions: D != null ? D : [],
                }),
                'resident-balance': i(Ww, {
                    fetchedResidentTransactions: j != null ? j : [],
                    isResidentBalance: !0,
                }),
            }
        return i('div', {
            children: d('div', {
                className: 'grid mt-12 pb-10 rounded-lg  items-baseline gap-10',
                children: [
                    d('div', {
                        className:
                            'flex justify-between items-center content-start bg-white p-8 rounded-lg',
                        children: [
                            i('div', {
                                className: '',
                                children: i(Xt, {
                                    amount: 20033350089e-2,
                                    title: 'Resident Wallet',
                                    isWalletScreen: !0,
                                }),
                            }),
                            d('div', {
                                className: 'border-l border-l-color-grey',
                                children: [
                                    d('div', {
                                        className: 'flex justify-between',
                                        children: [
                                            i('p', {
                                                className:
                                                    'text-[1.6rem] font-bold p-8',
                                                children: 'Wallet Trend',
                                            }),
                                            d('div', {
                                                className:
                                                    'relative grid gap-4',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'relative flex items-center w-[12rem]',
                                                        children: [
                                                            i('p', {
                                                                className:
                                                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                onClick: l,
                                                                children: n,
                                                            }),
                                                            t
                                                                ? i(dt, {
                                                                      className:
                                                                          'absolute right-4',
                                                                  })
                                                                : i(le, {
                                                                      className:
                                                                          'absolute right-4',
                                                                  }),
                                                        ],
                                                    }),
                                                    t &&
                                                        i('div', {
                                                            className:
                                                                'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                            children: e.map(
                                                                (Q, B) =>
                                                                    i(
                                                                        'p',
                                                                        {
                                                                            className:
                                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                            onClick:
                                                                                () =>
                                                                                    o(
                                                                                        Q
                                                                                    ),
                                                                            children:
                                                                                Q,
                                                                        },
                                                                        B
                                                                    )
                                                            ),
                                                        }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    i(go, {}),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'grid gap-10',
                        children: [
                            d('div', {
                                className: 'estateDetail',
                                children: [
                                    d('div', {
                                        className: 'estateDetail__radioBox',
                                        children: [
                                            i('input', {
                                                defaultChecked: !0,
                                                type: 'radio',
                                                name: 'resident',
                                                id: 'residentTransactionHistory',
                                                className: 'hidden',
                                                onChange: () =>
                                                    G(
                                                        'resident-transaction-history'
                                                    ),
                                            }),
                                            i('label', {
                                                htmlFor:
                                                    'residentTransactionHistory',
                                                children: 'Transaction History',
                                            }),
                                            i('input', {
                                                type: 'radio',
                                                name: 'resident',
                                                id: 'residentBalance',
                                                className: 'hidden',
                                                onChange: () =>
                                                    G('resident-balance'),
                                            }),
                                            i('label', {
                                                htmlFor: 'residentBalance',
                                                children: 'Resident Balance',
                                            }),
                                        ],
                                    }),
                                    i('div', {
                                        className: 'mt-8 grid gap-8',
                                        children: i('section', {
                                            className:
                                                'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                                            children: j && ee[V],
                                        }),
                                    }),
                                ],
                            }),
                            d('div', {
                                className:
                                    'grid text-[1.6rem] gap-10 bg-white p-8 rounded-lg',
                                children: [
                                    d('div', {
                                        className:
                                            'flex w-full items-center gap-12 ',
                                        children: [
                                            d('p', {
                                                className: ' font-bold',
                                                children: [
                                                    'Withdrawal History ',
                                                    i('span', {
                                                        children: '(10)',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/search.svg',
                                                        alt: '',
                                                        className:
                                                            'absolute left-4 text-[4rem]',
                                                    }),
                                                    i('input', {
                                                        type: 'text',
                                                        placeholder:
                                                            'Search Parameters',
                                                        className:
                                                            'pl-16 w-[20rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                                children: [
                                                    i('p', {
                                                        className:
                                                            'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                        onClick: P,
                                                        children: w || 'Today',
                                                    }),
                                                    h &&
                                                        i('div', {
                                                            className:
                                                                'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                            children: b.map(
                                                                (Q, B) =>
                                                                    i(
                                                                        'p',
                                                                        {
                                                                            className:
                                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                            onClick:
                                                                                () =>
                                                                                    E(
                                                                                        Q
                                                                                    ),
                                                                            children:
                                                                                Q,
                                                                        },
                                                                        B
                                                                    )
                                                            ),
                                                        }),
                                                    h
                                                        ? i(dt, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          })
                                                        : i(le, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                                children: [
                                                    i('p', {
                                                        className:
                                                            'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                        onClick: P,
                                                        children:
                                                            w || 'Sort By',
                                                    }),
                                                    h &&
                                                        i('div', {
                                                            className:
                                                                'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                            children: b.map(
                                                                (Q, B) =>
                                                                    i(
                                                                        'p',
                                                                        {
                                                                            className:
                                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                            onClick:
                                                                                () =>
                                                                                    E(
                                                                                        Q
                                                                                    ),
                                                                            children:
                                                                                Q,
                                                                        },
                                                                        B
                                                                    )
                                                            ),
                                                        }),
                                                    h
                                                        ? i(dt, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          })
                                                        : i(le, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid',
                                        children: [
                                            d('div', {
                                                className:
                                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-8 gap-8 items-center',
                                                style: { fontSize: '1.4rem' },
                                                children: [
                                                    d('p', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('input', {
                                                                type: 'checkbox',
                                                                className:
                                                                    'cursor-pointer',
                                                            }),
                                                            i('p', {
                                                                children:
                                                                    'Date',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Type',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Category',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction ID',
                                                    }),
                                                    i('p', {
                                                        children: 'Amount',
                                                    }),
                                                    i('p', {
                                                        children: 'Time',
                                                    }),
                                                    i('p', {
                                                        children: 'Balance',
                                                    }),
                                                    i('p', {
                                                        children: 'Actions',
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className: 'grid gap-8 p-8',
                                                children:
                                                    N.slicedPages &&
                                                    N.slicedPages.length > 0
                                                        ? K.Children.toArray(
                                                              N.slicedPages[
                                                                  N.index
                                                              ].map(
                                                                  (
                                                                      {
                                                                          id: Q,
                                                                          transactionCategory:
                                                                              B,
                                                                          transactionId:
                                                                              X,
                                                                          transactionType:
                                                                              ge,
                                                                          balance:
                                                                              Pe,
                                                                          time: ue,
                                                                          date: F,
                                                                          amount: q,
                                                                      },
                                                                      te
                                                                  ) => {
                                                                      const {
                                                                          isDropDownOpen:
                                                                              z,
                                                                          index: _e,
                                                                      } = p
                                                                      return d(
                                                                          'div',
                                                                          {
                                                                              className:
                                                                                  'grid justify-between border-b grid-cols-8 gap-8 items-center py-5',
                                                                              children:
                                                                                  [
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'flex items-center gap-4',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'input',
                                                                                                          {
                                                                                                              type: 'checkbox',
                                                                                                              className:
                                                                                                                  'cursor-pointer',
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'span',
                                                                                                          {
                                                                                                              children:
                                                                                                                  F,
                                                                                                          }
                                                                                                      ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  ge ===
                                                                                                  'Credit'
                                                                                                      ? i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-green-600',
                                                                                                                children:
                                                                                                                    ge,
                                                                                                            }
                                                                                                        )
                                                                                                      : i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-red-600',
                                                                                                                children:
                                                                                                                    ge,
                                                                                                            }
                                                                                                        ),
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  B,
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  X,
                                                                                          }
                                                                                      ),
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'flex items-center gap-.5',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/Naira.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'span',
                                                                                                          {
                                                                                                              children:
                                                                                                                  q,
                                                                                                          }
                                                                                                      ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  ue,
                                                                                          }
                                                                                      ),
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'flex items-center gap-.5',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/Naira.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'span',
                                                                                                          {
                                                                                                              children:
                                                                                                                  Pe,
                                                                                                          }
                                                                                                      ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                      d(
                                                                                          'div',
                                                                                          {
                                                                                              className:
                                                                                                  'relative',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'label',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                                              htmlFor:
                                                                                                                  te.toString(),
                                                                                                              onClick:
                                                                                                                  () =>
                                                                                                                      m(
                                                                                                                          (
                                                                                                                              se
                                                                                                                          ) => ({
                                                                                                                              isDropDownOpen:
                                                                                                                                  !se.isDropDownOpen,
                                                                                                                              index: te,
                                                                                                                          })
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  i(
                                                                                                                      'span',
                                                                                                                      {
                                                                                                                          className:
                                                                                                                              'text-color-primary',
                                                                                                                          children:
                                                                                                                              i(
                                                                                                                                  'img',
                                                                                                                                  {
                                                                                                                                      src: '/icons/admins/threeDots.svg',
                                                                                                                                      alt: '',
                                                                                                                                  }
                                                                                                                              ),
                                                                                                                      }
                                                                                                                  ),
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'input',
                                                                                                          {
                                                                                                              type: 'radio',
                                                                                                              name: 'dropdown',
                                                                                                              className:
                                                                                                                  'hidden',
                                                                                                              id: te.toString(),
                                                                                                              onChange:
                                                                                                                  (
                                                                                                                      se
                                                                                                                  ) =>
                                                                                                                      v(
                                                                                                                          se,
                                                                                                                          te
                                                                                                                      ),
                                                                                                          }
                                                                                                      ),
                                                                                                      z &&
                                                                                                          _e ===
                                                                                                              te &&
                                                                                                          i(
                                                                                                              'div',
                                                                                                              {
                                                                                                                  className:
                                                                                                                      'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                                                  children:
                                                                                                                      f.map(
                                                                                                                          (
                                                                                                                              se,
                                                                                                                              Le
                                                                                                                          ) =>
                                                                                                                              i(
                                                                                                                                  'p',
                                                                                                                                  {
                                                                                                                                      className:
                                                                                                                                          'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                                                      onClick:
                                                                                                                                          (
                                                                                                                                              Ye
                                                                                                                                          ) =>
                                                                                                                                              I(
                                                                                                                                                  se,
                                                                                                                                                  Q
                                                                                                                                              ),
                                                                                                                                      children:
                                                                                                                                          se,
                                                                                                                                  },
                                                                                                                                  Le +
                                                                                                                                      te
                                                                                                                              )
                                                                                                                      ),
                                                                                                              }
                                                                                                          ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                  ],
                                                                          }
                                                                      )
                                                                  }
                                                              )
                                                          )
                                                        : i('div', {
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'absolute w-full grid place-content-center',
                                                                                  children:
                                                                                      i(
                                                                                          Ne,
                                                                                          {
                                                                                              className:
                                                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                            }),
                                        ],
                                    }),
                                    d('footer', {
                                        className:
                                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                        children: [
                                            d('div', {
                                                className:
                                                    'flex gap-8 items-center',
                                                children: [
                                                    i('p', {
                                                        children: 'View',
                                                    }),
                                                    d('select', {
                                                        name: '',
                                                        id: '',
                                                        className:
                                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                        onChange: k,
                                                        children: [
                                                            i('option', {
                                                                hidden: !0,
                                                                children: T,
                                                            }),
                                                            x.map((Q, B) =>
                                                                i(
                                                                    'option',
                                                                    {
                                                                        value: Q,
                                                                        className:
                                                                            'capitalize cursor-pointer bg-white',
                                                                        children:
                                                                            Q,
                                                                    },
                                                                    B
                                                                )
                                                            ),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        className: 'text',
                                                        children:
                                                            'List per page',
                                                    }),
                                                ],
                                            }),
                                            d('ul', {
                                                className:
                                                    'flex items-center gap-5 ml-10',
                                                children: [
                                                    i(Ae, {
                                                        onClick: A,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    O == null
                                                        ? void 0
                                                        : O.map((Q, B) =>
                                                              i(
                                                                  'li',
                                                                  {
                                                                      children:
                                                                          B +
                                                                              1 ===
                                                                          _
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                        children:
                                                                                            B +
                                                                                            1,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                        onClick:
                                                                                            (
                                                                                                X
                                                                                            ) =>
                                                                                                $(
                                                                                                    X,
                                                                                                    B
                                                                                                ),
                                                                                        children:
                                                                                            B +
                                                                                            1,
                                                                                    }
                                                                                ),
                                                                  },
                                                                  B
                                                              )
                                                          ),
                                                    i(Ee, {
                                                        onClick: M,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    },
    Ine = () =>
        i('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: d('section', {
                className: 'grid max-w-[65vw] gap-16',
                style: {
                    gridTemplateColumns: 'repeat(auto-fit, minmax(40rem, 1fr))',
                },
                children: [
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'residentName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'residentName',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '02-May-2022',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'withdrawalTime',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Time',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'withdrawalTime',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '3:00pm',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'status',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'status',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-green-500 disabled:cursor-not-allowed',
                                value: 'Credit',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Category',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Source',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction ID',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 1004238232,
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Narration',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase for 6000',
                            }),
                        ],
                    }),
                ],
            }),
        }),
    Rne = [
        {
            id: '1',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '2',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '3',
            date: '07-Aug, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 8e3,
            time: '1:00pm',
            balance: 12e3,
        },
        {
            id: '4',
            date: '02-May, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '5',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '6',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '7',
            date: '02-May, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
    ],
    Lne = () => {
        const e = ['This Week', 'This Month', 'This Year'],
            t = ['Howuja', 'Oluwaseun', 'Wojusun', 'Petherkwa'],
            [r, n] = C.exports.useState(!0),
            [a, l] = C.exports.useState(!1),
            [o, s] = C.exports.useState('This Week'),
            [c, u] = C.exports.useState(null),
            [f, p] = C.exports.useState(!1),
            m = () => l(!a),
            v = () => p(!f),
            b = (F) => {
                s(F), l(!1)
            },
            h = (F) => {
                u(F), p(!1)
            },
            [g, x] = C.exports.useState([])
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    x(Rne)
                }, 1e3)
            })()
        }, [])
        const w = Me(),
            y = ['View Details'],
            [N, S] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            P = (F, q) => {
                S(() => ({ isDropDownOpen: F.target.checked, index: q }))
            },
            E = ['A-Z', 'date'],
            [k, M] = C.exports.useState(!1),
            A = [2, 4, 6, 8],
            [_, O] = C.exports.useState(null),
            [T, $] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: 6,
                totalPage: Math.ceil(g.length / 2),
                slicedPages: null,
            }),
            I = () => M(!k),
            j = (F) => {
                O(F), M(!1)
            },
            L = (F) => {
                const q = parseInt(F.target.value),
                    te = []
                for (let z = 0; z < g.length; z += q) te.push(g.slice(z, z + q))
                $((z) => ({
                    ...z,
                    itemsPerPage: q,
                    index: 0,
                    currentPage: 1,
                    slicedPages: te,
                    totalPage: Math.ceil(g.length / q),
                }))
            }
        C.exports.useEffect(() => {
            console.log({ slicedPages: G })
        }, [T.slicedPages]),
            C.exports.useEffect(() => {
                const F = []
                for (let q = 0; q < g.length; q += T.itemsPerPage)
                    F.push(g.slice(q, q + T.itemsPerPage))
                $((q) => ({ ...q, slicedPages: F }))
            }, [g])
        const D = () => {
                T.currentPage !== T.totalPage &&
                    $((F) => ({
                        ...F,
                        index: F.index + 1,
                        currentPage: F.currentPage + 1,
                    }))
            },
            R = () => {
                T.currentPage !== 1 &&
                    $((F) => ({
                        ...F,
                        index: F.index - 1,
                        currentPage: F.currentPage - 1,
                    }))
            },
            { currentPage: V, slicedPages: G, itemsPerPage: ee } = T,
            Q = (F, q) => {
                $((te) => ({ ...te, index: q, currentPage: q + 1 }))
            },
            B = C.exports.useRef(null),
            X = () => {
                B.current && B.current.close()
            },
            ge = (F) => {
                n(F === 'withdraw'), B.current && B.current.showModal()
            },
            Pe = (F, q) => {
                S(() => ({ isDropDownOpen: !1, index: null })),
                    F === 'View Details' &&
                        w(`/superAdmin/wallet/commission/:${q}`)
            },
            ue = (F) => {
                F.preventDefault()
            }
        return d('div', {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: B,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => X(),
                                }),
                                i('h3', {
                                    className:
                                        'text-[2rem] font-bold border-b ',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: r
                                        ? 'Withdrawal'
                                        : 'Request For Funds',
                                }),
                                r
                                    ? d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: ue,
                                          children: [
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor: 'amount',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children: 'Amount',
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'relative flex items-center',
                                                          children: [
                                                              i('img', {
                                                                  src: '/icons/Naira.svg',
                                                                  alt: '',
                                                                  className:
                                                                      'absolute left-3',
                                                              }),
                                                              i('input', {
                                                                  type: 'number',
                                                                  required: !0,
                                                                  id: 'amount',
                                                                  className:
                                                                      'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                              }),
                                                          ],
                                                      }),
                                                  ],
                                              }),
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'description',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children:
                                                              'Description',
                                                      }),
                                                      i('input', {
                                                          type: 'text',
                                                          required: !0,
                                                          id: 'description',
                                                          className:
                                                              'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                      }),
                                                  ],
                                              }),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  children: 'Withdraw',
                                              }),
                                          ],
                                      })
                                    : d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: ue,
                                          children: [
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor: 'amount',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children: 'Amount',
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'relative flex items-center',
                                                          children: [
                                                              i('img', {
                                                                  src: '/icons/Naira.svg',
                                                                  alt: '',
                                                                  className:
                                                                      'absolute left-3',
                                                              }),
                                                              i('input', {
                                                                  type: 'number',
                                                                  required: !0,
                                                                  id: 'amount',
                                                                  className:
                                                                      'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                              }),
                                                          ],
                                                      }),
                                                  ],
                                              }),
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'description',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children:
                                                              'Description',
                                                      }),
                                                      i('input', {
                                                          type: 'text',
                                                          required: !0,
                                                          id: 'description',
                                                          className:
                                                              'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                      }),
                                                  ],
                                              }),
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'commissionWalletAttachment',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children:
                                                              'Attach An Item',
                                                      }),
                                                      i('input', {
                                                          type: 'file',
                                                          id: 'commissionWalletAttachment',
                                                          name: 'commissionWalletAttachment',
                                                          required: !0,
                                                          className:
                                                              'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] appearance-none',
                                                      }),
                                                  ],
                                              }),
                                              d('div', {
                                                  className:
                                                      'relative grid gap-4',
                                                  children: [
                                                      i('p', {
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children: 'SendTo',
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'relative flex items-center w-[20rem]',
                                                          children: [
                                                              i('p', {
                                                                  className:
                                                                      'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                  onClick: v,
                                                                  children: c,
                                                              }),
                                                              f
                                                                  ? i(dt, {
                                                                        className:
                                                                            'absolute right-4',
                                                                    })
                                                                  : i(le, {
                                                                        className:
                                                                            'absolute right-4',
                                                                    }),
                                                          ],
                                                      }),
                                                      f &&
                                                          i('div', {
                                                              className:
                                                                  'absolute top-[-2rem]  left-[22rem] border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                              children: t.map(
                                                                  (F, q) =>
                                                                      i(
                                                                          'p',
                                                                          {
                                                                              className:
                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                              onClick:
                                                                                  () =>
                                                                                      h(
                                                                                          F
                                                                                      ),
                                                                              children:
                                                                                  F,
                                                                          },
                                                                          q
                                                                      )
                                                              ),
                                                          }),
                                                  ],
                                              }),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  children: 'Request',
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'grid mt-12 pb-10 rounded-lg  items-baseline gap-10',
                    children: [
                        d('div', {
                            className:
                                'grid grid-cols-2 justify-between items-center content-start bg-white p-8 rounded-lg',
                            children: [
                                d('div', {
                                    className:
                                        'grid self-stretch justify-start',
                                    children: [
                                        i('div', {
                                            className: 'grid items-end',
                                            children: i(Xt, {
                                                amount: 4000832,
                                                title: 'Commission Wallet',
                                                isWalletScreen: !0,
                                                bgImgUri:
                                                    '/icons/overview/card/bgC.svg',
                                                lefIconUri:
                                                    '/icons/overview/card/leftC.svg',
                                                bgColor: 'bg-[#333333]',
                                            }),
                                        }),
                                        d('div', {
                                            className:
                                                'flex justify-center mt-auto gap-4',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () =>
                                                        ge('withdraw'),
                                                    children: 'Withdraw',
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () =>
                                                        ge('request'),
                                                    children: 'Request',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'border-l border-l-color-grey',
                                    children: [
                                        d('div', {
                                            className: 'flex justify-between',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'text-[1.6rem] font-bold p-8',
                                                    children: 'Wallet Trend',
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative grid gap-4',
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'relative flex items-center w-[12rem]',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                    onClick: m,
                                                                    children: o,
                                                                }),
                                                                a
                                                                    ? i(dt, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      })
                                                                    : i(le, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      }),
                                                            ],
                                                        }),
                                                        a &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children: e.map(
                                                                    (F, q) =>
                                                                        i(
                                                                            'p',
                                                                            {
                                                                                className:
                                                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                onClick:
                                                                                    () =>
                                                                                        b(
                                                                                            F
                                                                                        ),
                                                                                children:
                                                                                    F,
                                                                            },
                                                                            q
                                                                        )
                                                                ),
                                                            }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(go, {}),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className:
                                'grid text-[1.6rem] gap-10 bg-white p-8 rounded-lg',
                            children: [
                                d('div', {
                                    className:
                                        'flex w-full items-center gap-12 ',
                                    children: [
                                        d('p', {
                                            className: ' font-bold',
                                            children: [
                                                'Withdrawal History ',
                                                i('span', { children: '(10)' }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/search.svg',
                                                    alt: '',
                                                    className:
                                                        'absolute left-4 text-[4rem]',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder:
                                                        'Search Parameters',
                                                    className:
                                                        'pl-16 w-[20rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                    onClick: I,
                                                    children: _ || 'Today',
                                                }),
                                                k &&
                                                    i('div', {
                                                        className:
                                                            'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                        children: E.map(
                                                            (F, q) =>
                                                                i(
                                                                    'p',
                                                                    {
                                                                        className:
                                                                            'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                        onClick:
                                                                            () =>
                                                                                j(
                                                                                    F
                                                                                ),
                                                                        children:
                                                                            F,
                                                                    },
                                                                    q
                                                                )
                                                        ),
                                                    }),
                                                k
                                                    ? i(dt, {
                                                          className:
                                                              'absolute right-4 text-[1.3rem]',
                                                      })
                                                    : i(le, {
                                                          className:
                                                              'absolute right-4 text-[1.3rem]',
                                                      }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                    onClick: I,
                                                    children: _ || 'Sort By',
                                                }),
                                                k &&
                                                    i('div', {
                                                        className:
                                                            'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                        children: E.map(
                                                            (F, q) =>
                                                                i(
                                                                    'p',
                                                                    {
                                                                        className:
                                                                            'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                        onClick:
                                                                            () =>
                                                                                j(
                                                                                    F
                                                                                ),
                                                                        children:
                                                                            F,
                                                                    },
                                                                    q
                                                                )
                                                        ),
                                                    }),
                                                k
                                                    ? i(dt, {
                                                          className:
                                                              'absolute right-4 text-[1.3rem]',
                                                      })
                                                    : i(le, {
                                                          className:
                                                              'absolute right-4 text-[1.3rem]',
                                                      }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid',
                                    children: [
                                        d('div', {
                                            className:
                                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-8 gap-8 items-center',
                                            style: { fontSize: '1.4rem' },
                                            children: [
                                                d('p', {
                                                    className:
                                                        'flex items-center gap-2',
                                                    children: [
                                                        i('input', {
                                                            type: 'checkbox',
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                        i('p', {
                                                            children: 'Date',
                                                        }),
                                                    ],
                                                }),
                                                i('p', {
                                                    children:
                                                        'Transaction Type',
                                                }),
                                                i('p', {
                                                    children:
                                                        'Transaction Category',
                                                }),
                                                i('p', {
                                                    children: 'Transaction ID',
                                                }),
                                                i('p', { children: 'Amount' }),
                                                i('p', { children: 'Time' }),
                                                i('p', { children: 'Balance' }),
                                                i('p', { children: 'Actions' }),
                                            ],
                                        }),
                                        i('div', {
                                            className: 'grid gap-8 p-8',
                                            children:
                                                T.slicedPages &&
                                                T.slicedPages.length > 0
                                                    ? K.Children.toArray(
                                                          T.slicedPages[
                                                              T.index
                                                          ].map(
                                                              (
                                                                  {
                                                                      id: F,
                                                                      transactionCategory:
                                                                          q,
                                                                      transactionId:
                                                                          te,
                                                                      transactionType:
                                                                          z,
                                                                      balance:
                                                                          _e,
                                                                      time: se,
                                                                      date: Le,
                                                                      amount: Ye,
                                                                  },
                                                                  ht
                                                              ) => {
                                                                  const {
                                                                      isDropDownOpen:
                                                                          U,
                                                                      index: H,
                                                                  } = N
                                                                  return d(
                                                                      'div',
                                                                      {
                                                                          className:
                                                                              'grid justify-between border-b grid-cols-8 gap-8 items-center py-5',
                                                                          children:
                                                                              [
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-4',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'input',
                                                                                                      {
                                                                                                          type: 'checkbox',
                                                                                                          className:
                                                                                                              'cursor-pointer',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              Le,
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              z ===
                                                                                              'Credit'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-green-600',
                                                                                                            children:
                                                                                                                z,
                                                                                                        }
                                                                                                    )
                                                                                                  : i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-red-600',
                                                                                                            children:
                                                                                                                z,
                                                                                                        }
                                                                                                    ),
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              q,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              te,
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-.5',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'img',
                                                                                                      {
                                                                                                          src: '/icons/Naira.svg',
                                                                                                          alt: '',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              Ye,
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              se,
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-.5',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'img',
                                                                                                      {
                                                                                                          src: '/icons/Naira.svg',
                                                                                                          alt: '',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              _e,
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'relative',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'label',
                                                                                                      {
                                                                                                          className:
                                                                                                              'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                                          htmlFor:
                                                                                                              ht.toString(),
                                                                                                          onClick:
                                                                                                              () =>
                                                                                                                  S(
                                                                                                                      (
                                                                                                                          Z
                                                                                                                      ) => ({
                                                                                                                          isDropDownOpen:
                                                                                                                              !Z.isDropDownOpen,
                                                                                                                          index: ht,
                                                                                                                      })
                                                                                                                  ),
                                                                                                          children:
                                                                                                              i(
                                                                                                                  'span',
                                                                                                                  {
                                                                                                                      className:
                                                                                                                          'text-color-primary',
                                                                                                                      children:
                                                                                                                          i(
                                                                                                                              'img',
                                                                                                                              {
                                                                                                                                  src: '/icons/admins/threeDots.svg',
                                                                                                                                  alt: '',
                                                                                                                              }
                                                                                                                          ),
                                                                                                                  }
                                                                                                              ),
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'input',
                                                                                                      {
                                                                                                          type: 'radio',
                                                                                                          name: 'dropdown',
                                                                                                          className:
                                                                                                              'hidden',
                                                                                                          id: ht.toString(),
                                                                                                          onChange:
                                                                                                              (
                                                                                                                  Z
                                                                                                              ) =>
                                                                                                                  P(
                                                                                                                      Z,
                                                                                                                      ht
                                                                                                                  ),
                                                                                                      }
                                                                                                  ),
                                                                                                  U &&
                                                                                                      H ===
                                                                                                          ht &&
                                                                                                      i(
                                                                                                          'div',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                                              children:
                                                                                                                  y.map(
                                                                                                                      (
                                                                                                                          Z,
                                                                                                                          de
                                                                                                                      ) =>
                                                                                                                          i(
                                                                                                                              'p',
                                                                                                                              {
                                                                                                                                  className:
                                                                                                                                      'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                                                  onClick:
                                                                                                                                      (
                                                                                                                                          re
                                                                                                                                      ) =>
                                                                                                                                          Pe(
                                                                                                                                              Z,
                                                                                                                                              F
                                                                                                                                          ),
                                                                                                                                  children:
                                                                                                                                      Z,
                                                                                                                              },
                                                                                                                              de +
                                                                                                                                  ht
                                                                                                                          )
                                                                                                                  ),
                                                                                                          }
                                                                                                      ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }
                                                                  )
                                                              }
                                                          )
                                                      )
                                                    : i('div', {
                                                          children: i('div', {
                                                              className:
                                                                  'relative',
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'absolute w-full grid place-content-center',
                                                                      children:
                                                                          i(
                                                                              Ne,
                                                                              {
                                                                                  className:
                                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                                      }),
                                        }),
                                        d('footer', {
                                            className:
                                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex gap-8 items-center',
                                                    children: [
                                                        i('p', {
                                                            children: 'View',
                                                        }),
                                                        d('select', {
                                                            name: '',
                                                            id: '',
                                                            className:
                                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                            onChange: L,
                                                            children: [
                                                                i('option', {
                                                                    hidden: !0,
                                                                    children:
                                                                        ee,
                                                                }),
                                                                A.map((F, q) =>
                                                                    i(
                                                                        'option',
                                                                        {
                                                                            value: F,
                                                                            className:
                                                                                'capitalize cursor-pointer bg-white',
                                                                            children:
                                                                                F,
                                                                        },
                                                                        q
                                                                    )
                                                                ),
                                                            ],
                                                        }),
                                                        i('p', {
                                                            className: 'text',
                                                            children:
                                                                'List per page',
                                                        }),
                                                    ],
                                                }),
                                                d('ul', {
                                                    className:
                                                        'flex items-center gap-5 ml-10',
                                                    children: [
                                                        i(Ae, {
                                                            onClick: R,
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                        G == null
                                                            ? void 0
                                                            : G.map((F, q) =>
                                                                  i(
                                                                      'li',
                                                                      {
                                                                          children:
                                                                              q +
                                                                                  1 ===
                                                                              V
                                                                                  ? i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                            children:
                                                                                                q +
                                                                                                1,
                                                                                        }
                                                                                    )
                                                                                  : i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                            onClick:
                                                                                                (
                                                                                                    te
                                                                                                ) =>
                                                                                                    Q(
                                                                                                        te,
                                                                                                        q
                                                                                                    ),
                                                                                            children:
                                                                                                q +
                                                                                                1,
                                                                                        }
                                                                                    ),
                                                                      },
                                                                      q
                                                                  )
                                                              ),
                                                        i(Ee, {
                                                            onClick: D,
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    jne = () => (
        C.exports.useContext(Ha),
        i('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: d('section', {
                className: 'grid max-w-[65vw] gap-16',
                style: {
                    gridTemplateColumns: 'repeat(auto-fit, minmax(40rem, 1fr))',
                },
                children: [
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'commissionName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'commissionName',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '02-May-2022',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'withdrawalTime',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Time',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'withdrawalTime',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '3:00pm',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'status',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'status',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-green-500 disabled:cursor-not-allowed',
                                value: 'Credit',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Category',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Source',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction ID',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 1004238232,
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Narration',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase for 6000',
                            }),
                        ],
                    }),
                ],
            }),
        })
    ),
    Fne = [
        {
            id: '1',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '2',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '3',
            date: '07-Aug, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 8e3,
            time: '1:00pm',
            balance: 12e3,
        },
        {
            id: '4',
            date: '02-May, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '5',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '6',
            date: '02-May, 2021',
            transactionType: 'Credit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
        {
            id: '7',
            date: '02-May, 2021',
            transactionType: 'Debit',
            transactionCategory: 'Fund Wallet',
            transactionId: 100872323,
            amount: 6e3,
            time: '12:00pm',
            balance: 6e3,
        },
    ],
    Bne = () => {
        const e = ['This Week', 'This Month', 'This Year']
        C.exports.useState(!0)
        const [t, r] = C.exports.useState(!1),
            [n, a] = C.exports.useState('This Week'),
            l = () => r(!t),
            o = (L) => {
                a(L), r(!1)
            },
            [s, c] = C.exports.useState([])
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    c(Fne)
                }, 1e3)
            })()
        }, [])
        const u = Me(),
            f = ['View Details'],
            [p, m] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            v = (L, D) => {
                m(() => ({ isDropDownOpen: L.target.checked, index: D }))
            },
            b = ['A-Z', 'date'],
            [h, g] = C.exports.useState(!1),
            x = [2, 4, 6, 8],
            [w, y] = C.exports.useState(null),
            [N, S] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: 6,
                totalPage: Math.ceil(s.length / 2),
                slicedPages: null,
            }),
            P = () => g(!h),
            E = (L) => {
                y(L), g(!1)
            },
            k = (L) => {
                const D = parseInt(L.target.value),
                    R = []
                for (let V = 0; V < s.length; V += D) R.push(s.slice(V, V + D))
                S((V) => ({
                    ...V,
                    itemsPerPage: D,
                    index: 0,
                    currentPage: 1,
                    slicedPages: R,
                    totalPage: Math.ceil(s.length / D),
                }))
            }
        C.exports.useEffect(() => {
            console.log({ slicedPages: O })
        }, [N.slicedPages]),
            C.exports.useEffect(() => {
                const L = []
                for (let D = 0; D < s.length; D += N.itemsPerPage)
                    L.push(s.slice(D, D + N.itemsPerPage))
                S((D) => ({ ...D, slicedPages: L }))
            }, [s])
        const M = () => {
                N.currentPage !== N.totalPage &&
                    S((L) => ({
                        ...L,
                        index: L.index + 1,
                        currentPage: L.currentPage + 1,
                    }))
            },
            A = () => {
                N.currentPage !== 1 &&
                    S((L) => ({
                        ...L,
                        index: L.index - 1,
                        currentPage: L.currentPage - 1,
                    }))
            },
            { currentPage: _, slicedPages: O, itemsPerPage: T } = N,
            $ = (L, D) => {
                S((R) => ({ ...R, index: D, currentPage: D + 1 }))
            },
            I = [
                {
                    id: '1',
                    securityCompanyName: 'Peace SecurityCompany',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '2',
                    securityCompanyName: 'Peace SecurityCompany',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '3',
                    securityCompanyName: 'Peace SecurityCompany',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '4',
                    securityCompanyName: 'Peace SecurityCompany',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
                {
                    id: '5',
                    securityCompanyName: 'Peace SecurityCompany',
                    amount: 5e3,
                    imgUri: '/img/estate1.png',
                },
            ],
            j = (L, D) => {
                m(() => ({ isDropDownOpen: !1, index: null })),
                    L === 'View Details' &&
                        u(`/superAdmin/wallet/security-company/:${D}`)
            }
        return i('div', {
            children: d('div', {
                className: 'grid mt-12 pb-10 rounded-lg  items-baseline gap-10',
                children: [
                    d('div', {
                        className:
                            'flex justify-between items-center content-start bg-white p-8 rounded-lg',
                        children: [
                            i('div', {
                                className: '',
                                children: i(Xt, {
                                    amount: 20033350089e-2,
                                    title: 'SecurityCompany Wallet',
                                    isWalletScreen: !0,
                                }),
                            }),
                            d('div', {
                                className: 'border-l border-l-color-grey',
                                children: [
                                    d('div', {
                                        className: 'flex justify-between',
                                        children: [
                                            i('p', {
                                                className:
                                                    'text-[1.6rem] font-bold p-8',
                                                children: 'Wallet Trend',
                                            }),
                                            d('div', {
                                                className:
                                                    'relative grid gap-4',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'relative flex items-center w-[12rem]',
                                                        children: [
                                                            i('p', {
                                                                className:
                                                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                onClick: l,
                                                                children: n,
                                                            }),
                                                            t
                                                                ? i(dt, {
                                                                      className:
                                                                          'absolute right-4',
                                                                  })
                                                                : i(le, {
                                                                      className:
                                                                          'absolute right-4',
                                                                  }),
                                                        ],
                                                    }),
                                                    t &&
                                                        i('div', {
                                                            className:
                                                                'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                            children: e.map(
                                                                (L, D) =>
                                                                    i(
                                                                        'p',
                                                                        {
                                                                            className:
                                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                            onClick:
                                                                                () =>
                                                                                    o(
                                                                                        L
                                                                                    ),
                                                                            children:
                                                                                L,
                                                                        },
                                                                        D
                                                                    )
                                                            ),
                                                        }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    i(go, {}),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'grid gap-10',
                        children: [
                            d('div', {
                                className:
                                    'grid text-[1.6rem] gap-[3rem] bg-white p-8 rounded-lg',
                                children: [
                                    d('div', {
                                        className:
                                            'flex w-full items-center gap-12 ',
                                        children: [
                                            d('p', {
                                                className: ' font-bold',
                                                children: [
                                                    'Transactions ',
                                                    i('span', {
                                                        children: '(200)',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/search.svg',
                                                        alt: '',
                                                        className:
                                                            'absolute left-4 text-[4rem]',
                                                    }),
                                                    i('input', {
                                                        type: 'text',
                                                        placeholder:
                                                            'Search Parameters',
                                                        className:
                                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('table', {
                                        children: [
                                            i('thead', {
                                                children: d('tr', {
                                                    className:
                                                        'border-b border-b-color-grey',
                                                    children: [
                                                        i('th', {
                                                            align: 'left',
                                                            className: 'py-4',
                                                            children:
                                                                'Security Company',
                                                        }),
                                                        i('th', {
                                                            align: 'left',
                                                            className: 'py-4',
                                                            children:
                                                                'Wallet Balance',
                                                        }),
                                                        i('th', {
                                                            align: 'left',
                                                            className: 'py-4',
                                                            children:
                                                                'Security Company',
                                                        }),
                                                        i('th', {
                                                            align: 'left',
                                                            className: 'py-4',
                                                            children:
                                                                'Wallet Balance',
                                                        }),
                                                    ],
                                                }),
                                            }),
                                            i('tbody', {
                                                children: I.map((L, D) =>
                                                    d('tr', {
                                                        className: 'border-b',
                                                        children: [
                                                            d('td', {
                                                                children: [
                                                                    d('div', {
                                                                        className:
                                                                            'flex items-center gap-2  h-[5rem]',
                                                                        children:
                                                                            [
                                                                                i(
                                                                                    'img',
                                                                                    {
                                                                                        src: L.imgUri,
                                                                                        alt: '',
                                                                                        className:
                                                                                            'w-[3rem] h-[3rem] object-cover rounded-full',
                                                                                    }
                                                                                ),
                                                                                i(
                                                                                    'p',
                                                                                    {
                                                                                        children:
                                                                                            L.securityCompanyName,
                                                                                    }
                                                                                ),
                                                                            ],
                                                                    }),
                                                                    ' ',
                                                                ],
                                                            }),
                                                            d('td', {
                                                                children: [
                                                                    ' ',
                                                                    d('div', {
                                                                        className:
                                                                            'flex items-center',
                                                                        children:
                                                                            [
                                                                                i(
                                                                                    'img',
                                                                                    {
                                                                                        src: '/icons/Naira.svg',
                                                                                        alt: '',
                                                                                    }
                                                                                ),
                                                                                L.amount.toLocaleString(),
                                                                            ],
                                                                    }),
                                                                ],
                                                            }),
                                                            d('td', {
                                                                children: [
                                                                    d('div', {
                                                                        className:
                                                                            'flex items-center gap-2  h-[5rem]',
                                                                        children:
                                                                            [
                                                                                i(
                                                                                    'img',
                                                                                    {
                                                                                        src: L.imgUri,
                                                                                        alt: '',
                                                                                        className:
                                                                                            'w-[3rem] h-[3rem] object-cover rounded-full',
                                                                                    }
                                                                                ),
                                                                                i(
                                                                                    'p',
                                                                                    {
                                                                                        children:
                                                                                            L.securityCompanyName,
                                                                                    }
                                                                                ),
                                                                            ],
                                                                    }),
                                                                    ' ',
                                                                ],
                                                            }),
                                                            i('td', {
                                                                children: d(
                                                                    'div',
                                                                    {
                                                                        className:
                                                                            'flex items-center',
                                                                        children:
                                                                            [
                                                                                i(
                                                                                    'img',
                                                                                    {
                                                                                        src: '/icons/Naira.svg',
                                                                                        alt: '',
                                                                                    }
                                                                                ),
                                                                                L.amount.toLocaleString(),
                                                                            ],
                                                                    }
                                                                ),
                                                            }),
                                                        ],
                                                    })
                                                ),
                                            }),
                                        ],
                                    }),
                                    i('button', {
                                        className:
                                            'text-[1.6rem] place-self-end text-[#0660FE] font-semibold',
                                        children: 'View More',
                                    }),
                                ],
                            }),
                            d('div', {
                                className:
                                    'grid text-[1.6rem] gap-10 bg-white p-8 rounded-lg',
                                children: [
                                    d('div', {
                                        className:
                                            'flex w-full items-center gap-12 ',
                                        children: [
                                            d('p', {
                                                className: ' font-bold',
                                                children: [
                                                    'Withdrawal History ',
                                                    i('span', {
                                                        children: '(10)',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/search.svg',
                                                        alt: '',
                                                        className:
                                                            'absolute left-4 text-[4rem]',
                                                    }),
                                                    i('input', {
                                                        type: 'text',
                                                        placeholder:
                                                            'Search Parameters',
                                                        className:
                                                            'pl-16 w-[20rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                                children: [
                                                    i('p', {
                                                        className:
                                                            'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                        onClick: P,
                                                        children: w || 'Today',
                                                    }),
                                                    h &&
                                                        i('div', {
                                                            className:
                                                                'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                            children: b.map(
                                                                (L, D) =>
                                                                    i(
                                                                        'p',
                                                                        {
                                                                            className:
                                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                            onClick:
                                                                                () =>
                                                                                    E(
                                                                                        L
                                                                                    ),
                                                                            children:
                                                                                L,
                                                                        },
                                                                        D
                                                                    )
                                                            ),
                                                        }),
                                                    h
                                                        ? i(dt, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          })
                                                        : i(le, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center w-[20rem] justify-items-start cursor-pointer',
                                                children: [
                                                    i('p', {
                                                        className:
                                                            'border border-color-primary-light p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointe text-left',
                                                        onClick: P,
                                                        children:
                                                            w || 'Sort By',
                                                    }),
                                                    h &&
                                                        i('div', {
                                                            className:
                                                                'absolute top-[5rem]  left-0 border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                            children: b.map(
                                                                (L, D) =>
                                                                    i(
                                                                        'p',
                                                                        {
                                                                            className:
                                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer text-left',
                                                                            onClick:
                                                                                () =>
                                                                                    E(
                                                                                        L
                                                                                    ),
                                                                            children:
                                                                                L,
                                                                        },
                                                                        D
                                                                    )
                                                            ),
                                                        }),
                                                    h
                                                        ? i(dt, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          })
                                                        : i(le, {
                                                              className:
                                                                  'absolute right-4 text-[1.3rem]',
                                                          }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid',
                                        children: [
                                            d('div', {
                                                className:
                                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-8 gap-8 items-center',
                                                style: { fontSize: '1.4rem' },
                                                children: [
                                                    d('p', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('input', {
                                                                type: 'checkbox',
                                                                className:
                                                                    'cursor-pointer',
                                                            }),
                                                            i('p', {
                                                                children:
                                                                    'Date',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Type',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Category',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction ID',
                                                    }),
                                                    i('p', {
                                                        children: 'Amount',
                                                    }),
                                                    i('p', {
                                                        children: 'Time',
                                                    }),
                                                    i('p', {
                                                        children: 'Balance',
                                                    }),
                                                    i('p', {
                                                        children: 'Actions',
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className: 'grid gap-8 p-8',
                                                children:
                                                    N.slicedPages &&
                                                    N.slicedPages.length > 0
                                                        ? K.Children.toArray(
                                                              N.slicedPages[
                                                                  N.index
                                                              ].map(
                                                                  (
                                                                      {
                                                                          id: L,
                                                                          transactionCategory:
                                                                              D,
                                                                          transactionId:
                                                                              R,
                                                                          transactionType:
                                                                              V,
                                                                          balance:
                                                                              G,
                                                                          time: ee,
                                                                          date: Q,
                                                                          amount: B,
                                                                      },
                                                                      X
                                                                  ) => {
                                                                      const {
                                                                          isDropDownOpen:
                                                                              ge,
                                                                          index: Pe,
                                                                      } = p
                                                                      return d(
                                                                          'div',
                                                                          {
                                                                              className:
                                                                                  'grid justify-between border-b grid-cols-8 gap-8 items-center py-5',
                                                                              children:
                                                                                  [
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'flex items-center gap-4',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'input',
                                                                                                          {
                                                                                                              type: 'checkbox',
                                                                                                              className:
                                                                                                                  'cursor-pointer',
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'span',
                                                                                                          {
                                                                                                              children:
                                                                                                                  Q,
                                                                                                          }
                                                                                                      ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  V ===
                                                                                                  'Credit'
                                                                                                      ? i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-green-600',
                                                                                                                children:
                                                                                                                    V,
                                                                                                            }
                                                                                                        )
                                                                                                      : i(
                                                                                                            'span',
                                                                                                            {
                                                                                                                className:
                                                                                                                    'text-red-600',
                                                                                                                children:
                                                                                                                    V,
                                                                                                            }
                                                                                                        ),
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  D,
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  R,
                                                                                          }
                                                                                      ),
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'flex items-center gap-.5',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/Naira.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'span',
                                                                                                          {
                                                                                                              children:
                                                                                                                  B,
                                                                                                          }
                                                                                                      ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                      i(
                                                                                          'p',
                                                                                          {
                                                                                              children:
                                                                                                  ee,
                                                                                          }
                                                                                      ),
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  'flex items-center gap-.5',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/Naira.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'span',
                                                                                                          {
                                                                                                              children:
                                                                                                                  G,
                                                                                                          }
                                                                                                      ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                      d(
                                                                                          'div',
                                                                                          {
                                                                                              className:
                                                                                                  'relative',
                                                                                              children:
                                                                                                  [
                                                                                                      i(
                                                                                                          'label',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                                              htmlFor:
                                                                                                                  X.toString(),
                                                                                                              onClick:
                                                                                                                  () =>
                                                                                                                      m(
                                                                                                                          (
                                                                                                                              ue
                                                                                                                          ) => ({
                                                                                                                              isDropDownOpen:
                                                                                                                                  !ue.isDropDownOpen,
                                                                                                                              index: X,
                                                                                                                          })
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  i(
                                                                                                                      'span',
                                                                                                                      {
                                                                                                                          className:
                                                                                                                              'text-color-primary',
                                                                                                                          children:
                                                                                                                              i(
                                                                                                                                  'img',
                                                                                                                                  {
                                                                                                                                      src: '/icons/admins/threeDots.svg',
                                                                                                                                      alt: '',
                                                                                                                                  }
                                                                                                                              ),
                                                                                                                      }
                                                                                                                  ),
                                                                                                          }
                                                                                                      ),
                                                                                                      i(
                                                                                                          'input',
                                                                                                          {
                                                                                                              type: 'radio',
                                                                                                              name: 'dropdown',
                                                                                                              className:
                                                                                                                  'hidden',
                                                                                                              id: X.toString(),
                                                                                                              onChange:
                                                                                                                  (
                                                                                                                      ue
                                                                                                                  ) =>
                                                                                                                      v(
                                                                                                                          ue,
                                                                                                                          X
                                                                                                                      ),
                                                                                                          }
                                                                                                      ),
                                                                                                      ge &&
                                                                                                          Pe ===
                                                                                                              X &&
                                                                                                          i(
                                                                                                              'div',
                                                                                                              {
                                                                                                                  className:
                                                                                                                      'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                                                  children:
                                                                                                                      f.map(
                                                                                                                          (
                                                                                                                              ue,
                                                                                                                              F
                                                                                                                          ) =>
                                                                                                                              i(
                                                                                                                                  'p',
                                                                                                                                  {
                                                                                                                                      className:
                                                                                                                                          'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                                                      onClick:
                                                                                                                                          (
                                                                                                                                              q
                                                                                                                                          ) =>
                                                                                                                                              j(
                                                                                                                                                  ue,
                                                                                                                                                  L
                                                                                                                                              ),
                                                                                                                                      children:
                                                                                                                                          ue,
                                                                                                                                  },
                                                                                                                                  F +
                                                                                                                                      X
                                                                                                                              )
                                                                                                                      ),
                                                                                                              }
                                                                                                          ),
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                                  ],
                                                                          }
                                                                      )
                                                                  }
                                                              )
                                                          )
                                                        : i('div', {
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'absolute w-full grid place-content-center',
                                                                                  children:
                                                                                      i(
                                                                                          Ne,
                                                                                          {
                                                                                              className:
                                                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                            }),
                                        ],
                                    }),
                                    d('footer', {
                                        className:
                                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                        children: [
                                            d('div', {
                                                className:
                                                    'flex gap-8 items-center',
                                                children: [
                                                    i('p', {
                                                        children: 'View',
                                                    }),
                                                    d('select', {
                                                        name: '',
                                                        id: '',
                                                        className:
                                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                        onChange: k,
                                                        children: [
                                                            i('option', {
                                                                hidden: !0,
                                                                children: T,
                                                            }),
                                                            x.map((L, D) =>
                                                                i(
                                                                    'option',
                                                                    {
                                                                        value: L,
                                                                        className:
                                                                            'capitalize cursor-pointer bg-white',
                                                                        children:
                                                                            L,
                                                                    },
                                                                    D
                                                                )
                                                            ),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        className: 'text',
                                                        children:
                                                            'List per page',
                                                    }),
                                                ],
                                            }),
                                            d('ul', {
                                                className:
                                                    'flex items-center gap-5 ml-10',
                                                children: [
                                                    i(Ae, {
                                                        onClick: A,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    O == null
                                                        ? void 0
                                                        : O.map((L, D) =>
                                                              i(
                                                                  'li',
                                                                  {
                                                                      children:
                                                                          D +
                                                                              1 ===
                                                                          _
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                        children:
                                                                                            D +
                                                                                            1,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                        onClick:
                                                                                            (
                                                                                                R
                                                                                            ) =>
                                                                                                $(
                                                                                                    R,
                                                                                                    D
                                                                                                ),
                                                                                        children:
                                                                                            D +
                                                                                            1,
                                                                                    }
                                                                                ),
                                                                  },
                                                                  D
                                                              )
                                                          ),
                                                    i(Ee, {
                                                        onClick: M,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    },
    zne = () => (
        C.exports.useContext(Ha),
        i('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: d('section', {
                className: 'grid max-w-[65vw] gap-16',
                style: {
                    gridTemplateColumns: 'repeat(auto-fit, minmax(40rem, 1fr))',
                },
                children: [
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'securityCompanyName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'securityCompanyName',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '02-May-2022',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'withdrawalTime',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Time',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'withdrawalTime',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '3:00pm',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'status',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'status',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-green-500 disabled:cursor-not-allowed',
                                value: 'Credit',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Category',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Source',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction ID',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 1004238232,
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Narration',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase for 6000',
                            }),
                        ],
                    }),
                ],
            }),
        })
    ),
    Vne = ({ fetchedArtisanCategories: e }) => {
        const t = Me(),
            [r, n] = C.exports.useState(!0),
            a = (A) => {
                A.preventDefault(),
                    P(),
                    fe('Category Created successfully', {
                        type: 'success',
                        className:
                            'bg-green-100 text-green-600 text-[1.4rem] outline-green-200 outline',
                    })
            },
            l = ['View Details', 'Delete'],
            [o, s] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            c = (A, _) => {
                s(() => ({ isDropDownOpen: A.target.checked, index: _ }))
            },
            u = (A, _) => {
                _ === 'Delete' && E('warning'),
                    _ === 'View Details' &&
                        t('/superAdmin/artisan/category/:Id'),
                    s({ isDropDownOpen: !1, index: null })
            },
            f = [2, 4, 6, 8],
            p = 6,
            [m, v] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: p,
                totalPage: Math.ceil(e.length / p),
                slicedPages: null,
            }),
            b = (A) => {
                const _ = parseInt(A.target.value),
                    O = []
                for (let T = 0; T < e.length; T += _) O.push(e.slice(T, T + _))
                v((T) => ({
                    ...T,
                    itemsPerPage: _,
                    index: 0,
                    currentPage: 1,
                    slicedPages: O,
                    totalPage: Math.ceil(e.length / _),
                }))
            }
        C.exports.useEffect(() => {
            const A = []
            for (let _ = 0; _ < e.length; _ += m.itemsPerPage)
                A.push(e.slice(_, _ + m.itemsPerPage))
            v((_) => ({ ..._, slicedPages: A }))
        }, [e])
        const h = () => {
                m.currentPage !== m.totalPage &&
                    v((A) => ({
                        ...A,
                        index: A.index + 1,
                        currentPage: A.currentPage + 1,
                    }))
            },
            g = () => {
                m.currentPage !== 1 &&
                    v((A) => ({
                        ...A,
                        index: A.index - 1,
                        currentPage: A.currentPage - 1,
                    }))
            },
            { currentPage: x, slicedPages: w, itemsPerPage: y } = m,
            N = (A, _) => {
                v((O) => ({ ...O, index: _, currentPage: _ + 1 }))
            },
            S = C.exports.useRef(null),
            P = () => {
                S.current && S.current.close()
            },
            E = (A) => {
                n(A === 'warning'), S.current && S.current.showModal()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: S,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => P(),
                                }),
                                r
                                    ? d('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  children:
                                                      'Are you sure you want to delete this Artisan Category?',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => P(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              P(),
                                                                  fe(
                                                                      'Category deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: a,
                                          children: [
                                              i('h3', {
                                                  className:
                                                      'text-[2rem] font-bold border-b ',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Create Artisan Category',
                                              }),
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'artisanName',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children: 'Name',
                                                      }),
                                                      i('input', {
                                                          type: 'text',
                                                          required: !0,
                                                          id: 'artisanName',
                                                          className:
                                                              'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                      }),
                                                  ],
                                              }),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  children: 'Create',
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem]',
                    children: [
                        d('div', {
                            className:
                                'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                            children: [
                                d('p', {
                                    className: ' font-bold',
                                    children: [
                                        'Artisan Category ',
                                        i('span', { children: '(10)' }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className:
                                                'absolute left-4 text-[4rem]',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg ml-auto',
                                    onClick: () => {
                                        E('add-Category')
                                    },
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Artisan Category',
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid',
                            children: [
                                d('div', {
                                    className:
                                        'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-4 gap-8',
                                    style: { fontSize: '1.4rem' },
                                    children: [
                                        d('p', {
                                            className:
                                                'flex items-center gap-2',
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                    className: 'cursor-pointer',
                                                }),
                                                i('p', { children: ' Name' }),
                                            ],
                                        }),
                                        i('p', { children: 'No of Artisans' }),
                                        i('p', { children: 'Created At' }),
                                        i('p', { children: 'Actions' }),
                                    ],
                                }),
                                i('div', {
                                    className: 'grid gap-8 mt-8 p-8',
                                    children:
                                        w && w.length > 0
                                            ? K.Children.toArray(
                                                  w[m.index].map(
                                                      (
                                                          {
                                                              name: A,
                                                              createdAt: _,
                                                              NoOfArtisans: O,
                                                              id: T,
                                                          },
                                                          $
                                                      ) => {
                                                          const {
                                                              isDropDownOpen: I,
                                                              index: j,
                                                          } = o
                                                          return d('div', {
                                                              className:
                                                                  'grid justify-between border-b grid-cols-4 gap-8 ',
                                                              children: [
                                                                  d('p', {
                                                                      className:
                                                                          'flex items-center gap-4',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'checkbox',
                                                                                      className:
                                                                                          'cursor-pointer',
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'span',
                                                                                  {
                                                                                      children:
                                                                                          A,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          O,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          _,
                                                                  }),
                                                                  d('div', {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'label',
                                                                                  {
                                                                                      className:
                                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                      htmlFor:
                                                                                          $.toString(),
                                                                                      onClick:
                                                                                          () =>
                                                                                              s(
                                                                                                  (
                                                                                                      L
                                                                                                  ) => ({
                                                                                                      isDropDownOpen:
                                                                                                          !L.isDropDownOpen,
                                                                                                      index: $,
                                                                                                  })
                                                                                              ),
                                                                                      children:
                                                                                          i(
                                                                                              'span',
                                                                                              {
                                                                                                  className:
                                                                                                      'text-color-primary',
                                                                                                  children:
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'radio',
                                                                                      name: 'dropdown',
                                                                                      className:
                                                                                          'hidden',
                                                                                      id: $.toString(),
                                                                                      onChange:
                                                                                          (
                                                                                              L
                                                                                          ) =>
                                                                                              c(
                                                                                                  L,
                                                                                                  $
                                                                                              ),
                                                                                  }
                                                                              ),
                                                                              I &&
                                                                                  j ===
                                                                                      $ &&
                                                                                  i(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                          children:
                                                                                              l.map(
                                                                                                  (
                                                                                                      L,
                                                                                                      D
                                                                                                  ) =>
                                                                                                      i(
                                                                                                          'p',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                              onClick:
                                                                                                                  (
                                                                                                                      R
                                                                                                                  ) =>
                                                                                                                      u(
                                                                                                                          R,
                                                                                                                          L
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  L ===
                                                                                                                  'Delete'
                                                                                                                      ? i(
                                                                                                                            'span',
                                                                                                                            {
                                                                                                                                className:
                                                                                                                                    'text-red-600',
                                                                                                                                children:
                                                                                                                                    L,
                                                                                                                            }
                                                                                                                        )
                                                                                                                      : L,
                                                                                                          },
                                                                                                          D +
                                                                                                              $
                                                                                                      )
                                                                                              ),
                                                                                      }
                                                                                  ),
                                                                          ],
                                                                  }),
                                                              ],
                                                          })
                                                      }
                                                  )
                                              )
                                            : i('div', {
                                                  children: i('div', {
                                                      className: 'relative',
                                                      children: i('div', {
                                                          className:
                                                              'absolute w-full grid place-content-center',
                                                          children: i(Ne, {
                                                              className:
                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                          }),
                                                      }),
                                                  }),
                                              }),
                                }),
                            ],
                        }),
                        d('footer', {
                            className:
                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                            children: [
                                d('div', {
                                    className: 'flex gap-8 items-center',
                                    children: [
                                        i('p', { children: 'View' }),
                                        i('select', {
                                            name: '',
                                            id: '',
                                            className:
                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                            onChange: b,
                                            children: f.map((A, _) =>
                                                i(
                                                    'option',
                                                    {
                                                        value: A,
                                                        selected: A === y,
                                                        className:
                                                            'capitalize cursor-pointer bg-white',
                                                        children: A,
                                                    },
                                                    _
                                                )
                                            ),
                                        }),
                                        i('p', {
                                            className: 'text',
                                            children: 'List per page',
                                        }),
                                    ],
                                }),
                                d('ul', {
                                    className: 'flex items-center gap-5 ml-10',
                                    children: [
                                        i(Ae, {
                                            onClick: g,
                                            className: 'cursor-pointer',
                                        }),
                                        w == null
                                            ? void 0
                                            : w.map((A, _) =>
                                                  i(
                                                      'li',
                                                      {
                                                          children:
                                                              _ + 1 === x
                                                                  ? i('span', {
                                                                        className:
                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    })
                                                                  : i('span', {
                                                                        className:
                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                        onClick:
                                                                            (
                                                                                O
                                                                            ) =>
                                                                                N(
                                                                                    O,
                                                                                    _
                                                                                ),
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    }),
                                                      },
                                                      _
                                                  )
                                              ),
                                        i(Ee, {
                                            onClick: h,
                                            className: 'cursor-pointer',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Une = ({ fetchedArtisanGroups: e }) => {
        const t = Me(),
            [r, n] = C.exports.useState('Deactivate'),
            a = ['View Details', 'Edit Details', 'Deactivate', 'Delete'],
            [l, o] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            s = (A, _) => {
                o(() => ({ isDropDownOpen: A.target.checked, index: _ }))
            },
            c = [2, 4, 6, 8],
            u = 4,
            [f, p] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: u,
                totalPage: Math.ceil(e.length / u),
                slicedPages: null,
            }),
            m = (A) => {
                const _ = parseInt(A.target.value),
                    O = []
                for (let T = 0; T < e.length; T += _) O.push(e.slice(T, T + _))
                p((T) => ({
                    ...T,
                    itemsPerPage: _,
                    index: 0,
                    currentPage: 1,
                    slicedPages: O,
                    totalPage: Math.ceil(e.length / _),
                }))
            }
        C.exports.useEffect(() => {
            const A = []
            for (let _ = 0; _ < e.length; _ += f.itemsPerPage)
                A.push(e.slice(_, _ + f.itemsPerPage))
            p((_) => ({ ..._, slicedPages: A }))
        }, [e])
        const v = () => {
                console.log(f.currentPage, f.totalPage, g),
                    f.currentPage !== f.totalPage &&
                        p((A) => ({
                            ...A,
                            index: A.index + 1,
                            currentPage: A.currentPage + 1,
                        }))
            },
            b = () => {
                f.currentPage !== 1 &&
                    p((A) => ({
                        ...A,
                        index: A.index - 1,
                        currentPage: A.currentPage - 1,
                    }))
            },
            { currentPage: h, slicedPages: g, itemsPerPage: x } = f,
            w = (A, _) => {
                p((O) => ({ ...O, index: _, currentPage: _ + 1 }))
            },
            y = C.exports.useRef(null),
            N = () => {
                y.current && y.current.close()
            },
            S = (A) => {
                A === 'Deactivate' && n('Deactivate'),
                    A === 'Delete' && n('Delete'),
                    y.current && y.current.showModal()
            },
            P = (A, _) => {
                o(() => ({ isDropDownOpen: !1, index: null })),
                    A === 'View Details' &&
                        t(`/superAdmin/artisan/group/:${_}`),
                    A === 'Deactivate' && S('Deactivate'),
                    A === 'Delete' && S('Delete')
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: y,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children:
                                r === 'Deactivate'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to deactivate this Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => N(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              N(),
                                                                  fe(
                                                                      'Artisan deactivated successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children:
                                                              'Deactivate',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to delete this Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => N(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              N(),
                                                                  fe(
                                                                      'Artisan deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem]',
                    children: [
                        d('div', {
                            className:
                                'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                            children: [
                                d('p', {
                                    className: ' font-bold',
                                    children: [
                                        'Artisan Group ',
                                        i('span', { children: '(10)' }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className:
                                                'absolute left-4 text-[4rem]',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg ml-auto',
                                    onClick: () => {
                                        t('/superAdmin/artisan/group/add')
                                    },
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Artisan Group',
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid',
                            children: [
                                d('div', {
                                    className:
                                        'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-6 gap-8',
                                    style: { fontSize: '1.4rem' },
                                    children: [
                                        d('p', {
                                            className:
                                                'flex items-center gap-2',
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                    className: 'cursor-pointer',
                                                }),
                                                i('p', { children: ' Name' }),
                                            ],
                                        }),
                                        i('p', { children: 'No of Artisans' }),
                                        i('p', { children: 'No of Estates' }),
                                        i('p', { children: 'Status' }),
                                        i('p', { children: 'Created At' }),
                                        i('p', { children: 'Actions' }),
                                    ],
                                }),
                                i('div', {
                                    className: 'grid gap-8 mt-8 p-8',
                                    children:
                                        g && g.length > 0
                                            ? K.Children.toArray(
                                                  g[f.index].map(
                                                      (
                                                          {
                                                              name: A,
                                                              createdAt: _,
                                                              NoOfArtisans: O,
                                                              id: T,
                                                              NoOfEstates: $,
                                                              status: I,
                                                          },
                                                          j
                                                      ) => {
                                                          const {
                                                              isDropDownOpen: L,
                                                              index: D,
                                                          } = l
                                                          return d('div', {
                                                              className:
                                                                  'grid justify-between border-b grid-cols-6 gap-8 ',
                                                              children: [
                                                                  d('p', {
                                                                      className:
                                                                          'flex items-center gap-4',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'checkbox',
                                                                                      className:
                                                                                          'cursor-pointer',
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'span',
                                                                                  {
                                                                                      children:
                                                                                          A,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          O,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          $,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          I ===
                                                                          'Active'
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-green-600',
                                                                                        children:
                                                                                            I,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-red-600',
                                                                                        children:
                                                                                            I,
                                                                                    }
                                                                                ),
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          _,
                                                                  }),
                                                                  d('div', {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'label',
                                                                                  {
                                                                                      className:
                                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                      htmlFor:
                                                                                          j.toString(),
                                                                                      onClick:
                                                                                          () =>
                                                                                              o(
                                                                                                  (
                                                                                                      R
                                                                                                  ) => ({
                                                                                                      isDropDownOpen:
                                                                                                          !R.isDropDownOpen,
                                                                                                      index: j,
                                                                                                  })
                                                                                              ),
                                                                                      children:
                                                                                          i(
                                                                                              'span',
                                                                                              {
                                                                                                  className:
                                                                                                      'text-color-primary',
                                                                                                  children:
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'radio',
                                                                                      name: 'dropdown',
                                                                                      className:
                                                                                          'hidden',
                                                                                      id: j.toString(),
                                                                                      onChange:
                                                                                          (
                                                                                              R
                                                                                          ) =>
                                                                                              s(
                                                                                                  R,
                                                                                                  j
                                                                                              ),
                                                                                  }
                                                                              ),
                                                                              L &&
                                                                                  D ===
                                                                                      j &&
                                                                                  i(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                          children:
                                                                                              a.map(
                                                                                                  (
                                                                                                      R,
                                                                                                      V
                                                                                                  ) =>
                                                                                                      i(
                                                                                                          'p',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                              onClick:
                                                                                                                  (
                                                                                                                      G
                                                                                                                  ) =>
                                                                                                                      P(
                                                                                                                          R,
                                                                                                                          T
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  R ===
                                                                                                                  'Delete'
                                                                                                                      ? i(
                                                                                                                            'span',
                                                                                                                            {
                                                                                                                                className:
                                                                                                                                    'text-red-600',
                                                                                                                                children:
                                                                                                                                    R,
                                                                                                                            }
                                                                                                                        )
                                                                                                                      : R,
                                                                                                          },
                                                                                                          V +
                                                                                                              j
                                                                                                      )
                                                                                              ),
                                                                                      }
                                                                                  ),
                                                                          ],
                                                                  }),
                                                              ],
                                                          })
                                                      }
                                                  )
                                              )
                                            : i('div', {
                                                  children: i('div', {
                                                      className: 'relative',
                                                      children: i('div', {
                                                          className:
                                                              'absolute w-full grid place-content-center',
                                                          children: i(Ne, {
                                                              className:
                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                          }),
                                                      }),
                                                  }),
                                              }),
                                }),
                            ],
                        }),
                        d('footer', {
                            className:
                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                            children: [
                                d('div', {
                                    className: 'flex gap-8 items-center',
                                    children: [
                                        i('p', { children: 'View' }),
                                        i('select', {
                                            name: '',
                                            id: '',
                                            className:
                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                            onChange: m,
                                            children: c.map((A, _) =>
                                                i(
                                                    'option',
                                                    {
                                                        value: A,
                                                        selected: A === x,
                                                        className:
                                                            'capitalize cursor-pointer bg-white',
                                                        children: A,
                                                    },
                                                    _
                                                )
                                            ),
                                        }),
                                        i('p', {
                                            className: 'text',
                                            children: 'List per page',
                                        }),
                                    ],
                                }),
                                d('ul', {
                                    className: 'flex items-center gap-5 ml-10',
                                    children: [
                                        i(Ae, {
                                            onClick: b,
                                            className: 'cursor-pointer',
                                        }),
                                        g == null
                                            ? void 0
                                            : g.map((A, _) =>
                                                  i(
                                                      'li',
                                                      {
                                                          children:
                                                              _ + 1 === h
                                                                  ? i('span', {
                                                                        className:
                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    })
                                                                  : i('span', {
                                                                        className:
                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                        onClick:
                                                                            (
                                                                                O
                                                                            ) =>
                                                                                w(
                                                                                    O,
                                                                                    _
                                                                                ),
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    }),
                                                      },
                                                      _
                                                  )
                                              ),
                                        i(Ee, {
                                            onClick: v,
                                            className: 'cursor-pointer',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    xu = ({ starsNum: e }) => (
        C.exports.useState(0),
        C.exports.useState(0),
        i('div', {
            children: [...Array(e)].map(
                (t, r) => (
                    (r += 1),
                    i(
                        'button',
                        {
                            type: 'button',
                            children: i('span', {
                                className: 'text-[#E69B55]',
                                children: '\u2605',
                            }),
                        },
                        r
                    )
                )
            ),
        })
    ),
    Wne = ({ fetchedArtisanList: e }) => {
        const t = Me(),
            r = ['View Details', 'Edit Details', 'Deactivate', 'Delete'],
            [n, a] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            l = (A, _) => {
                a(() => ({ isDropDownOpen: A.target.checked, index: _ }))
            },
            [o, s] = C.exports.useState('Deactivate'),
            c = [2, 4, 6, 8],
            u = 6,
            [f, p] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: u,
                totalPage: Math.ceil(e.length / u),
                slicedPages: null,
            }),
            m = (A) => {
                const _ = parseInt(A.target.value),
                    O = []
                for (let T = 0; T < e.length; T += _) O.push(e.slice(T, T + _))
                p((T) => ({
                    ...T,
                    itemsPerPage: _,
                    index: 0,
                    currentPage: 1,
                    slicedPages: O,
                    totalPage: Math.ceil(e.length / _),
                }))
            }
        C.exports.useEffect(() => {
            const A = []
            for (let _ = 0; _ < e.length; _ += f.itemsPerPage)
                A.push(e.slice(_, _ + f.itemsPerPage))
            p((_) => ({ ..._, slicedPages: A }))
        }, [e])
        const v = () => {
                f.currentPage !== f.totalPage &&
                    p((A) => ({
                        ...A,
                        index: A.index + 1,
                        currentPage: A.currentPage + 1,
                    }))
            },
            b = () => {
                f.currentPage !== 1 &&
                    p((A) => ({
                        ...A,
                        index: A.index - 1,
                        currentPage: A.currentPage - 1,
                    }))
            },
            { currentPage: h, slicedPages: g, itemsPerPage: x } = f,
            w = (A, _) => {
                p((O) => ({ ...O, index: _, currentPage: _ + 1 }))
            },
            y = () => {
                t('/superAdmin/artisan/add')
            },
            N = C.exports.useRef(null),
            S = () => {
                N.current && N.current.close()
            },
            P = (A) => {
                A === 'Deactivate' && s('Deactivate'),
                    A === 'Delete' && s('Delete'),
                    N.current && N.current.showModal()
            },
            E = (A, _) => {
                a(() => ({ isDropDownOpen: !1, index: null })),
                    A === 'View Details' &&
                        t(`/superAdmin/artisan/detail/:${_}`),
                    A === 'Deactivate' && P('Deactivate'),
                    A === 'Delete' && P('Delete')
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: N,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children:
                                o === 'Deactivate'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to deactivate this Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => S(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              S(),
                                                                  fe(
                                                                      'Artisan deactivated successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children:
                                                              'Deactivate',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to delete this Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => S(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              S(),
                                                                  fe(
                                                                      'Artisan deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem]',
                    children: [
                        d('div', {
                            className:
                                'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                            children: [
                                d('p', {
                                    className: ' font-bold',
                                    children: [
                                        'Artisan List ',
                                        i('span', { children: '(10)' }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className:
                                                'absolute left-4 text-[4rem]',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg ml-auto',
                                    onClick: y,
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Artisan',
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid',
                            children: [
                                d('div', {
                                    className:
                                        'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-7 items-center gap-8',
                                    style: { fontSize: '1.4rem' },
                                    children: [
                                        d('p', {
                                            className:
                                                'flex items-center gap-2',
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                    className: 'cursor-pointer',
                                                }),
                                                i('p', { children: ' Name' }),
                                            ],
                                        }),
                                        i('p', { children: 'Business Name' }),
                                        i('p', { children: 'Phone Number' }),
                                        i('p', { children: 'category' }),
                                        i('p', { children: 'Assigned Group' }),
                                        i('p', { children: 'Rating' }),
                                        i('p', { children: 'Actions' }),
                                    ],
                                }),
                                i('div', {
                                    className: 'grid gap-8 mt-8 p-8',
                                    children:
                                        g && g.length > 0
                                            ? K.Children.toArray(
                                                  g[f.index].map(
                                                      (
                                                          {
                                                              artisanName: A,
                                                              businessName: _,
                                                              rating: O,
                                                              category: T,
                                                              phoneNumber: $,
                                                              assignedGroup: I,
                                                              id: j,
                                                          },
                                                          L
                                                      ) => {
                                                          const {
                                                              isDropDownOpen: D,
                                                              index: R,
                                                          } = n
                                                          return d('div', {
                                                              className:
                                                                  'grid justify-between border-b grid-cols-7 items-center gap-8 text-[1.6rem]',
                                                              children: [
                                                                  d('p', {
                                                                      className:
                                                                          'flex items-center gap-4',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'checkbox',
                                                                                      className:
                                                                                          'cursor-pointer',
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'span',
                                                                                  {
                                                                                      children:
                                                                                          A,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          _,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          $,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          T,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          I,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          i(
                                                                              xu,
                                                                              {
                                                                                  starsNum:
                                                                                      O,
                                                                              }
                                                                          ),
                                                                  }),
                                                                  d('div', {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'label',
                                                                                  {
                                                                                      className:
                                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                      htmlFor:
                                                                                          L.toString(),
                                                                                      onClick:
                                                                                          () =>
                                                                                              a(
                                                                                                  (
                                                                                                      V
                                                                                                  ) => ({
                                                                                                      isDropDownOpen:
                                                                                                          !V.isDropDownOpen,
                                                                                                      index: L,
                                                                                                  })
                                                                                              ),
                                                                                      children:
                                                                                          i(
                                                                                              'span',
                                                                                              {
                                                                                                  className:
                                                                                                      'text-color-primary',
                                                                                                  children:
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'radio',
                                                                                      name: 'dropdown',
                                                                                      className:
                                                                                          'hidden',
                                                                                      id: L.toString(),
                                                                                      onChange:
                                                                                          (
                                                                                              V
                                                                                          ) =>
                                                                                              l(
                                                                                                  V,
                                                                                                  L
                                                                                              ),
                                                                                  }
                                                                              ),
                                                                              D &&
                                                                                  R ===
                                                                                      L &&
                                                                                  i(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                          children:
                                                                                              r.map(
                                                                                                  (
                                                                                                      V,
                                                                                                      G
                                                                                                  ) =>
                                                                                                      i(
                                                                                                          'p',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                              onClick:
                                                                                                                  () =>
                                                                                                                      E(
                                                                                                                          V,
                                                                                                                          j
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  V ===
                                                                                                                  'Delete'
                                                                                                                      ? i(
                                                                                                                            'span',
                                                                                                                            {
                                                                                                                                className:
                                                                                                                                    'text-red-600',
                                                                                                                                children:
                                                                                                                                    V,
                                                                                                                            }
                                                                                                                        )
                                                                                                                      : V,
                                                                                                          },
                                                                                                          G +
                                                                                                              L
                                                                                                      )
                                                                                              ),
                                                                                      }
                                                                                  ),
                                                                          ],
                                                                  }),
                                                              ],
                                                          })
                                                      }
                                                  )
                                              )
                                            : i('div', {
                                                  children: i('div', {
                                                      className: 'relative',
                                                      children: i('div', {
                                                          className:
                                                              'absolute w-full grid place-content-center',
                                                          children: i(Ne, {
                                                              className:
                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                          }),
                                                      }),
                                                  }),
                                              }),
                                }),
                            ],
                        }),
                        d('footer', {
                            className:
                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                            children: [
                                d('div', {
                                    className: 'flex gap-8 items-center',
                                    children: [
                                        i('p', { children: 'View' }),
                                        i('select', {
                                            name: '',
                                            id: '',
                                            className:
                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                            onChange: m,
                                            children: c.map((A, _) =>
                                                i(
                                                    'option',
                                                    {
                                                        value: A,
                                                        selected: A === x,
                                                        className:
                                                            'capitalize cursor-pointer bg-white',
                                                        children: A,
                                                    },
                                                    _
                                                )
                                            ),
                                        }),
                                        i('p', {
                                            className: 'text',
                                            children: 'List per page',
                                        }),
                                    ],
                                }),
                                d('ul', {
                                    className: 'flex items-center gap-5 ml-10',
                                    children: [
                                        i(Ae, {
                                            onClick: b,
                                            className: 'cursor-pointer',
                                        }),
                                        g == null
                                            ? void 0
                                            : g.map((A, _) =>
                                                  i(
                                                      'li',
                                                      {
                                                          children:
                                                              _ + 1 === h
                                                                  ? i('span', {
                                                                        className:
                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    })
                                                                  : i('span', {
                                                                        className:
                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                        onClick:
                                                                            (
                                                                                O
                                                                            ) =>
                                                                                w(
                                                                                    O,
                                                                                    _
                                                                                ),
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    }),
                                                      },
                                                      _
                                                  )
                                              ),
                                        i(Ee, {
                                            onClick: v,
                                            className: 'cursor-pointer',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Hne = [
        {
            id: '1',
            artisanName: 'John Doe',
            businessName: 'Robert Fox',
            phoneNumber: '(+234) 8012345678',
            category: 'Plumber',
            assignedGroup: 'Group 1',
            rating: 5,
        },
        {
            id: '1',
            artisanName: 'John Doe',
            businessName: 'Robert Fox',
            phoneNumber: '(+234) 8012345678',
            category: 'Plumber',
            assignedGroup: 'Group 1',
            rating: 5,
        },
        {
            id: '1',
            artisanName: 'John Doe',
            businessName: 'Robert Fox',
            phoneNumber: '(+234) 8012345678',
            category: 'Plumber',
            assignedGroup: 'Group 1',
            rating: 3,
        },
        {
            id: '1',
            artisanName: 'John Doe',
            businessName: 'Robert Fox',
            phoneNumber: '(+234) 8012345678',
            category: 'Plumber',
            assignedGroup: 'Group 1',
            rating: 4,
        },
        {
            id: '1',
            artisanName: 'John Doe',
            businessName: 'Robert Fox',
            phoneNumber: '(+234) 8012345678',
            category: 'Plumber',
            assignedGroup: 'Group 1',
            rating: 4,
        },
        {
            id: '1',
            artisanName: 'John Doe',
            businessName: 'Robert Fox',
            phoneNumber: '(+234) 8012345678',
            category: 'Plumber',
            assignedGroup: 'Group 1',
            rating: 5,
        },
    ],
    Gne = [
        {
            id: '1',
            name: 'Plumber',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
        },
        {
            id: '1',
            name: 'Plumber',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
        },
        {
            id: '1',
            name: 'Plumber',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
        },
        {
            id: '1',
            name: 'Plumber',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
        },
        {
            id: '1',
            name: 'Plumber',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
        },
    ],
    qne = [
        {
            id: '1',
            name: 'Group 1',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
            NoOfEstates: 4,
            status: 'Active',
        },
        {
            id: '1',
            name: 'Group 1',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
            NoOfEstates: 4,
            status: 'Inactive',
        },
        {
            id: '1',
            name: 'Group 1',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
            NoOfEstates: 4,
            status: 'Inactive',
        },
        {
            id: '1',
            name: 'Group 1',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
            NoOfEstates: 4,
            status: 'Active',
        },
        {
            id: '1',
            name: 'Group 1',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
            NoOfEstates: 4,
            status: 'Active',
        },
        {
            id: '1',
            name: 'Group 1',
            createdAt: '04 May 2021',
            NoOfArtisans: 10,
            NoOfEstates: 4,
            status: 'Active',
        },
    ]
function Kne() {
    const [e, t] = C.exports.useState(null),
        [r, n] = C.exports.useState(null),
        [a, l] = C.exports.useState(null),
        [o, s] = C.exports.useState('artisanCategory')
    C.exports.useEffect(() => {
        ;(async () => {
            setTimeout(() => {
                t(Hne), n(Gne), l(qne)
            }, 1e3)
        })()
    }, [])
    const c = {
        artisanCategory: i(Vne, {
            fetchedArtisanCategories: r != null ? r : [],
        }),
        artisanList: i(Wne, { fetchedArtisanList: e != null ? e : [] }),
        artisanGroup: i(Une, { fetchedArtisanGroups: a != null ? a : [] }),
    }
    return d('div', {
        children: [
            d('div', {
                className: 'estateDetail__radioBox',
                children: [
                    i('input', {
                        type: 'radio',
                        name: 'artisan',
                        id: 'artisanCategory',
                        className: 'hidden',
                        onChange: () => s('artisanCategory'),
                        defaultChecked: !0,
                    }),
                    i('label', {
                        htmlFor: 'artisanCategory',
                        children: 'Artisan Category',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'artisan',
                        id: 'artisanList',
                        className: 'hidden',
                        onChange: () => s('artisanList'),
                    }),
                    i('label', {
                        htmlFor: 'artisanList',
                        className: 'capitalize',
                        children: 'Artisan List',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'artisan',
                        id: 'artisanGroup',
                        className: 'hidden',
                        onChange: () => s('artisanGroup'),
                    }),
                    i('label', {
                        htmlFor: 'artisanGroup',
                        className: 'capitalize',
                        children: 'Artisan Group',
                    }),
                ],
            }),
            i('div', {
                className: 'mt-8 grid gap-8',
                children: i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children:
                        e && e.length > 0
                            ? c[o]
                            : i('section', {
                                  className:
                                      'relative w-[70vw] h-[60vh] mx-auto grid',
                                  children: i('div', {
                                      className:
                                          'absolute w-full h-full grid place-content-center',
                                      children: i(Ne, {
                                          className:
                                              'animate-spin text-color-green-light text-5xl',
                                      }),
                                  }),
                              }),
                }),
            }),
        ],
    })
}
function Yne() {
    Me()
    const [e, t] = C.exports.useState(!1)
    return i('div', {
        children: i('div', {
            className: 'rounded-lg mt-[3rem] h-[80vh]',
            children: e
                ? i('section', { children: i(Kne, {}) })
                : d('section', {
                      className:
                          'grid  place-content-center w-full h-full justify-items-center gap-4 bg-white rounded-lg',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any Artisan yet',
                          }),
                          d('button', {
                              className:
                                  'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                              onClick: () => {
                                  t(!0)
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Artisan',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const Xne = [
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
    ],
    Zne = () => {
        const e = Me(),
            [t, r] = C.exports.useState(!0)
        C.exports.useState(!1)
        const [n, a] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                a(Xne)
            }, 1e3)
        }, [])
        const l = (A) => {
                A.preventDefault(),
                    E(),
                    fe('Category Created successfully', {
                        type: 'success',
                        className: 'bg-green-100 text-green-600 text-[1.4rem]',
                    })
            },
            o = ['View Details', 'Delete'],
            [s, c] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            u = (A, _) => {
                c(() => ({ isDropDownOpen: A.target.checked, index: _ }))
            },
            f = (A, _) => {
                _ === 'Delete' && k('warning'),
                    _ === 'View Details' &&
                        e('/superAdmin/artisan/category/:Id'),
                    c({ isDropDownOpen: !1, index: null })
            },
            p = [2, 4, 6, 8],
            m = 4,
            [v, b] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: m,
                totalPage: Math.ceil(n.length / m),
                slicedPages: null,
            }),
            h = (A) => {
                const _ = parseInt(A.target.value),
                    O = []
                for (let T = 0; T < n.length; T += _) O.push(n.slice(T, T + _))
                b((T) => ({
                    ...T,
                    itemsPerPage: _,
                    index: 0,
                    currentPage: 1,
                    slicedPages: O,
                    totalPage: Math.ceil(n.length / _),
                }))
            }
        C.exports.useEffect(() => {
            const A = []
            for (let _ = 0; _ < n.length; _ += v.itemsPerPage)
                A.push(n.slice(_, _ + v.itemsPerPage))
            b((_) => ({
                ..._,
                slicedPages: A,
                totalPage: Math.ceil(n.length / v.itemsPerPage),
            }))
        }, [n])
        const g = () => {
                v.currentPage !== v.totalPage &&
                    b((A) => ({
                        ...A,
                        index: A.index + 1,
                        currentPage: A.currentPage + 1,
                    }))
            },
            x = () => {
                v.currentPage !== 1 &&
                    b((A) => ({
                        ...A,
                        index: A.index - 1,
                        currentPage: A.currentPage - 1,
                    }))
            },
            { currentPage: w, slicedPages: y, itemsPerPage: N } = v,
            S = (A, _) => {
                b((O) => ({ ...O, index: _, currentPage: _ + 1 }))
            },
            P = C.exports.useRef(null),
            E = () => {
                P.current && P.current.close()
            },
            k = (A) => {
                r(A === 'warning'), P.current && P.current.showModal()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: P,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => E(),
                                }),
                                t
                                    ? d('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  children:
                                                      'Are you sure you want to delete this Artisan?',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => E(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              E(),
                                                                  fe(
                                                                      'Artisan deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: l,
                                          children: [
                                              i('h3', {
                                                  className:
                                                      'text-[2rem] font-bold border-b ',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Create Artisan Category',
                                              }),
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'artisanName',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children: 'Name',
                                                      }),
                                                      i('input', {
                                                          type: 'text',
                                                          required: !0,
                                                          id: 'artisanName',
                                                          className:
                                                              'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                      }),
                                                  ],
                                              }),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  children: 'Create',
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem] bg-white px-10 rounded-lg',
                    children: [
                        d('div', {
                            className:
                                'flex gap-8 py-10 max-w-[50rem] items-end',
                            children: [
                                d('div', {
                                    className: 'w-full grid gap-4',
                                    children: [
                                        i('label', {
                                            htmlFor: 'categoryName',
                                            className:
                                                'text-[1.4rem] font-semibold',
                                            children: 'Category Name',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            placeholder: 'Plumber',
                                            id: 'categoryName',
                                            className:
                                                'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                        }),
                                    ],
                                }),
                                i('button', {
                                    className:
                                        'btn bg-[#0556E5] text-white rounded-lg py-4 w-[15rem]',
                                    children: 'Update',
                                }),
                            ],
                        }),
                        d('div', {
                            className:
                                'flex w-full items-center gap-12 py-8 bg-white rounded-lg',
                            children: [
                                d('p', {
                                    className: ' font-bold',
                                    children: [
                                        'Category Users ',
                                        i('span', { children: '(3)' }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className:
                                                'absolute left-4 text-[4rem]',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid gap-10',
                            children: [
                                d('div', {
                                    className:
                                        'grid justify-between text-color-dark-1 bg-color-grey items-center p-8 grid-cols-4 gap-8',
                                    style: { fontSize: '1.4rem' },
                                    children: [
                                        d('p', {
                                            className:
                                                'flex items-center gap-2',
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                    className: 'cursor-pointer',
                                                }),
                                                i('p', { children: ' Name' }),
                                            ],
                                        }),
                                        i('p', { children: 'Business Name' }),
                                        i('p', { children: 'Phone Number' }),
                                        i('p', { children: 'Actions' }),
                                    ],
                                }),
                                i('div', {
                                    className: 'grid gap-8 p-8',
                                    children:
                                        y && y.length > 0
                                            ? K.Children.toArray(
                                                  y[v.index].map(
                                                      (
                                                          {
                                                              artisanName: A,
                                                              businessName: _,
                                                              phoneNumber: O,
                                                          },
                                                          T
                                                      ) => {
                                                          const {
                                                              isDropDownOpen: $,
                                                              index: I,
                                                          } = s
                                                          return d('div', {
                                                              className:
                                                                  'grid justify-between border-b grid-cols-4 gap-8 ',
                                                              children: [
                                                                  d('p', {
                                                                      className:
                                                                          'flex items-center gap-4',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'checkbox',
                                                                                      className:
                                                                                          'cursor-pointer',
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'span',
                                                                                  {
                                                                                      children:
                                                                                          A,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          _,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          O,
                                                                  }),
                                                                  d('div', {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'label',
                                                                                  {
                                                                                      className:
                                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                      htmlFor:
                                                                                          T.toString(),
                                                                                      onClick:
                                                                                          () =>
                                                                                              c(
                                                                                                  (
                                                                                                      j
                                                                                                  ) => ({
                                                                                                      isDropDownOpen:
                                                                                                          !j.isDropDownOpen,
                                                                                                      index: T,
                                                                                                  })
                                                                                              ),
                                                                                      children:
                                                                                          i(
                                                                                              'span',
                                                                                              {
                                                                                                  className:
                                                                                                      'text-color-primary',
                                                                                                  children:
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'radio',
                                                                                      name: 'dropdown',
                                                                                      className:
                                                                                          'hidden',
                                                                                      id: T.toString(),
                                                                                      onChange:
                                                                                          (
                                                                                              j
                                                                                          ) =>
                                                                                              u(
                                                                                                  j,
                                                                                                  T
                                                                                              ),
                                                                                  }
                                                                              ),
                                                                              $ &&
                                                                                  I ===
                                                                                      T &&
                                                                                  i(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                          children:
                                                                                              o.map(
                                                                                                  (
                                                                                                      j,
                                                                                                      L
                                                                                                  ) =>
                                                                                                      i(
                                                                                                          'p',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                              onClick:
                                                                                                                  (
                                                                                                                      D
                                                                                                                  ) =>
                                                                                                                      f(
                                                                                                                          D,
                                                                                                                          j
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  j ===
                                                                                                                  'Delete'
                                                                                                                      ? i(
                                                                                                                            'span',
                                                                                                                            {
                                                                                                                                className:
                                                                                                                                    'text-red-600',
                                                                                                                                children:
                                                                                                                                    j,
                                                                                                                            }
                                                                                                                        )
                                                                                                                      : j,
                                                                                                          },
                                                                                                          L +
                                                                                                              T
                                                                                                      )
                                                                                              ),
                                                                                      }
                                                                                  ),
                                                                          ],
                                                                  }),
                                                              ],
                                                          })
                                                      }
                                                  )
                                              )
                                            : i('div', {
                                                  children: i('div', {
                                                      className: 'relative',
                                                      children: i('div', {
                                                          className:
                                                              'absolute w-full grid place-content-center',
                                                          children: i(Ne, {
                                                              className:
                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                          }),
                                                      }),
                                                  }),
                                              }),
                                }),
                            ],
                        }),
                        d('footer', {
                            className:
                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                            children: [
                                d('div', {
                                    className: 'flex gap-8 items-center',
                                    children: [
                                        i('p', { children: 'View' }),
                                        i('select', {
                                            name: '',
                                            id: '',
                                            className:
                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                            onChange: h,
                                            children: p.map((A, _) =>
                                                i(
                                                    'option',
                                                    {
                                                        value: A,
                                                        selected: A === N,
                                                        className:
                                                            'capitalize cursor-pointer bg-white',
                                                        children: A,
                                                    },
                                                    _
                                                )
                                            ),
                                        }),
                                        i('p', {
                                            className: 'text',
                                            children: 'List per page',
                                        }),
                                    ],
                                }),
                                d('ul', {
                                    className: 'flex items-center gap-5 ml-10',
                                    children: [
                                        i(Ae, {
                                            onClick: x,
                                            className: 'cursor-pointer',
                                        }),
                                        y == null
                                            ? void 0
                                            : y.map((A, _) =>
                                                  i(
                                                      'li',
                                                      {
                                                          children:
                                                              _ + 1 === w
                                                                  ? i('span', {
                                                                        className:
                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    })
                                                                  : i('span', {
                                                                        className:
                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                        onClick:
                                                                            (
                                                                                O
                                                                            ) =>
                                                                                S(
                                                                                    O,
                                                                                    _
                                                                                ),
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    }),
                                                      },
                                                      _
                                                  )
                                              ),
                                        i(Ee, {
                                            onClick: g,
                                            className: 'cursor-pointer',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    }
function Jne(e) {
    return nt({
        tag: 'svg',
        attr: { fill: 'currentColor', viewBox: '0 0 16 16' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z',
                },
            },
        ],
    })(e)
}
function Wn(e) {
    return nt({
        tag: 'svg',
        attr: { fill: 'currentColor', viewBox: '0 0 16 16' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z',
                },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286zm1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94z',
                },
            },
        ],
    })(e)
}
const Pt = ({
        state: e,
        selectedState: t,
        setSelectedState: r,
        label: n,
        placeholder: a,
        validate: l,
        isSearchable: o = !1,
    }) => {
        const [s, c] = C.exports.useState(!1),
            u = () => c(!s),
            [f, p] = C.exports.useState(''),
            [m, v] = C.exports.useState(e),
            b = (g) => {
                r(g), c(!1)
            }
        return d('div', {
            className: 'relative grid gap-4',
            children: [
                i('p', {
                    className: 'text-[1.4rem] font-semibold',
                    children: n,
                }),
                d('div', {
                    className: 'relative flex items-center',
                    children: [
                        i('p', {
                            className:
                                'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer min-h-[5rem]',
                            onClick: u,
                            children:
                                t ||
                                i('span', {
                                    className: 'text-gray-500',
                                    children: a || '',
                                }),
                        }),
                        s
                            ? i(dt, { className: 'absolute right-4' })
                            : i(le, { className: 'absolute right-4' }),
                    ],
                }),
                s &&
                    d('div', {
                        className:
                            'absolute top-[8rem]  left-0 border border-color-primary-light min-w-[12rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                        children: [
                            o &&
                                d('div', {
                                    className:
                                        'relative flex items-center text-[1.4rem]',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className: 'absolute left-4',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            value: f,
                                            onChange: (g) => {
                                                const { value: x } = g.target
                                                p(x),
                                                    x.length > 0
                                                        ? v((w) =>
                                                              w.filter((y) =>
                                                                  y
                                                                      .toLowerCase()
                                                                      .includes(
                                                                          x.toLowerCase()
                                                                      )
                                                              )
                                                          )
                                                        : v(m)
                                            },
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light py-4 px-8 outline-none appearance-none',
                                        }),
                                    ],
                                }),
                            m.map((g, x) =>
                                i(
                                    'p',
                                    {
                                        className:
                                            'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                        onClick: () => b(g),
                                        children: g,
                                    },
                                    x
                                )
                            ),
                        ],
                    }),
            ],
        })
    },
    Ur = ({
        state: e,
        selectedState: t,
        setSelectedState: r,
        label: n,
        placeholder: a,
        isSearchable: l = !1,
    }) => {
        const [o, s] = C.exports.useState(!1),
            c = () => s(!o),
            [u, f] = C.exports.useState(''),
            [p, m] = C.exports.useState(e),
            v = (h) => {
                r(h), s(!1)
            }
        return d('div', {
            className: 'relative grid gap-4',
            children: [
                i('p', {
                    className: 'text-[1.4rem] font-semibold',
                    children: n,
                }),
                d('div', {
                    className: 'relative flex items-center',
                    children: [
                        i('p', {
                            className:
                                'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer min-h-[5rem]',
                            onClick: c,
                            children:
                                t ||
                                i('span', {
                                    className: 'text-gray-500',
                                    children: a || '',
                                }),
                        }),
                        o
                            ? i(dt, { className: 'absolute right-4' })
                            : i(le, { className: 'absolute right-4' }),
                    ],
                }),
                o &&
                    d('div', {
                        className:
                            'absolute top-[8rem]  left-0 border border-color-primary-light min-w-[12rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                        children: [
                            l &&
                                d('div', {
                                    className:
                                        'relative flex items-center text-[1.4rem]',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className: 'absolute left-4',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            value: u,
                                            onChange: (h) => {
                                                const { value: g } = h.target
                                                f(g),
                                                    g.length > 0
                                                        ? m((x) =>
                                                              x.filter((w) =>
                                                                  w.name
                                                                      .toLowerCase()
                                                                      .includes(
                                                                          g.toLowerCase()
                                                                      )
                                                              )
                                                          )
                                                        : m(p)
                                            },
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light py-4 px-8 outline-none appearance-none',
                                        }),
                                    ],
                                }),
                            p.map((h, g) =>
                                d(
                                    'p',
                                    {
                                        className:
                                            'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer flex justify-between',
                                        onClick: () => v(h.name),
                                        children: [
                                            i('span', { children: h.name }),
                                            i('span', { children: h.No }),
                                        ],
                                    },
                                    g
                                )
                            ),
                        ],
                    }),
            ],
        })
    },
    ef = ({
        selectFrom: e,
        selected: t,
        setSelected: r,
        label: n,
        placeholder: a,
    }) => {
        const [l, o] = C.exports.useState(!1),
            [s, c] = C.exports.useState(''),
            [u, f] = C.exports.useState(e),
            p = () => o(!l),
            m = (g, x) => {
                const w = g.target.checked
                r(w ? (y) => [...y, x] : (y) => y.filter((N) => N !== x))
            },
            v = (g) => {
                const { value: x } = g.target
                c(x),
                    x.length > 0
                        ? f((w) =>
                              w.filter((y) =>
                                  y.toLowerCase().includes(x.toLowerCase())
                              )
                          )
                        : f(e)
            },
            b = C.exports.useMemo(
                () =>
                    u.map((g, x) =>
                        d(
                            'div',
                            {
                                className:
                                    'flex items-center pl-4 cursor-pointer hover:bg-color-grey',
                                children: [
                                    i('input', {
                                        type: 'checkbox',
                                        className: 'cursor-pointer',
                                        name: g + x,
                                        id: g + x,
                                        value: g,
                                        checked: t.includes(g),
                                        onChange: (w) => m(w, g),
                                    }),
                                    i('label', {
                                        htmlFor: g + x,
                                        className:
                                            'text-[1.4rem] p-4 cursor-pointer w-full',
                                        children: g,
                                    }),
                                ],
                            },
                            x
                        )
                    ),
                [u, t]
            ),
            h = (g) => {
                r((x) => x.filter((w) => w !== g))
            }
        return d('div', {
            className: 'relative grid gap-4',
            children: [
                i('p', {
                    className: 'text-[1.4rem] font-semibold',
                    children: n,
                }),
                d('div', {
                    className: 'relative items-center max-w-[40rem] flex',
                    children: [
                        i('p', {
                            className:
                                'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer h-[5rem] overflow-hidden overflow-x-scroll flex gap-4 items-center pr-16',
                            style: {
                                gridTemplateColumns:
                                    'repeat(auto-fit, minmax(12rem, 1fr))',
                            },
                            children:
                                t && t.length > 0
                                    ? t.map((g, x) =>
                                          d(
                                              'span',
                                              {
                                                  className:
                                                      'text-white whitespace-nowrap bg-color-blue-1 rounded-lg px-4 relative flex items-center h-[3.8rem] z-[2] pr-12',
                                                  children: [
                                                      g,
                                                      i(Vt, {
                                                          className:
                                                              'absolute right-2 text-[1.4rem] cursor-pointer',
                                                          onClick: () => h(g),
                                                      }),
                                                  ],
                                              },
                                              x
                                          )
                                      )
                                    : i('span', {
                                          className: 'text-gray-500',
                                          children: a || '',
                                      }),
                        }),
                        l
                            ? i('div', {
                                  className:
                                      'absolute w-full h-full z-[1] left-0 flex items-center justify-end pr-3 cursor-pointer',
                                  onClick: p,
                                  children: i(dt, {}),
                              })
                            : i('div', {
                                  className:
                                      'absolute w-full h-full z-[1] left-0 flex items-center justify-end pr-3 cursor-pointer',
                                  onClick: p,
                                  children: i(le, {}),
                              }),
                    ],
                }),
                l &&
                    d('div', {
                        className:
                            'absolute top-[8rem]  left-0 border border-color-primary-light min-w-[12rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                        children: [
                            d('div', {
                                className:
                                    'relative flex items-center text-[1.4rem]',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/search.svg',
                                        alt: '',
                                        className: 'absolute left-4',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                        value: s,
                                        onChange: v,
                                        className:
                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light py-4 px-8 outline-none appearance-none',
                                    }),
                                ],
                            }),
                            b,
                        ],
                    }),
            ],
        })
    },
    Qne = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState(null),
            [a, l] = C.exports.useState(null),
            [o, s] = C.exports.useState(!0),
            [c, u] = C.exports.useState('Phone Number'),
            [f, p] = C.exports.useState(''),
            m = async (E) => {
                const k = await kr('#photoUpload')
                p(k)
            },
            v = (E) => {
                E.preventDefault()
            },
            b = C.exports.useRef(null),
            h = C.exports.useRef(null),
            g = () => {
                b.current && b.current.close()
            },
            x = () => {
                h.current && h.current.close()
            },
            w = () => {
                h.current && h.current.showModal()
            },
            y = (E) => {
                s(E === 'validate'), b.current && b.current.showModal()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: h,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[90rem] min-h-[30rem] p-10 text-[1.6rem] relative gap-20',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => x(),
                                }),
                                i('div', {
                                    className:
                                        'relative h-[14rem] bg-blue-600 w-full mt-10 rounded-lg',
                                    children: i('img', {
                                        src: '/img/me.jpeg',
                                        alt: '',
                                        className:
                                            'w-[10rem] h-[10rem] border rounded-full border-green-600 object-cover absolute bottom-[-6rem] left-10 object-top',
                                    }),
                                }),
                                d('div', {
                                    className: 'mt-20',
                                    children: [
                                        i('h2', {
                                            children: 'Validation Result',
                                        }),
                                        d('div', {
                                            className: 'border grid mt-5',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Validation Option',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Phone Number | (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Full Name',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Michael Okonkwo',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Date of Birth',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                '15 May, 1998',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Phone Number',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                ' (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2  gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: 'Gender',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children: 'Male',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                i('button', {
                                    className:
                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem] justify-self-center',
                                    onClick: () => x(),
                                    children: 'Ok',
                                }),
                            ],
                        }),
                    }),
                }),
                i('dialog', {
                    className: 'dialog',
                    ref: b,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => g(),
                                }),
                                o
                                    ? d('form', {
                                          className:
                                              'grid gap-12 max-w-[40rem]',
                                          onSubmit: (E) => {
                                              E.preventDefault(), g(), w()
                                          },
                                          children: [
                                              i('h3', {
                                                  className:
                                                      'text-[2rem] font-bold border-b ',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Know Your Artisan (KYA)',
                                              }),
                                              i(Pt, {
                                                  state: [
                                                      'Phone Number',
                                                      'Name',
                                                  ],
                                                  label: 'Validation Option',
                                                  selectedState: c,
                                                  setSelectedState: u,
                                              }),
                                              d('div', {
                                                  className: 'grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'phoneNumber',
                                                          className:
                                                              'text-[1.4rem] font-Satoshi-Medium',
                                                          children:
                                                              'Phone Number',
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'flex text-[1.6rem] gap-4 h-[5rem]',
                                                          children: [
                                                              i('select', {
                                                                  className:
                                                                      'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                                  children: i(
                                                                      'option',
                                                                      {
                                                                          value: '234',
                                                                          children:
                                                                              '+234',
                                                                      }
                                                                  ),
                                                              }),
                                                              i('input', {
                                                                  required: !0,
                                                                  type: 'number',
                                                                  inputMode:
                                                                      'numeric',
                                                                  id: 'phoneNumber',
                                                                  placeholder:
                                                                      'Phone Number',
                                                                  className:
                                                                      'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                              }),
                                                          ],
                                                      }),
                                                  ],
                                              }),
                                              d('p', {
                                                  className:
                                                      'text-[#043FA7] flex items-center gap-2',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Light',
                                                  },
                                                  children: [
                                                      'What is KYA ',
                                                      i(Wn, {}),
                                                  ],
                                              }),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  children: 'Validate',
                                              }),
                                          ],
                                      })
                                    : d('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalSuccess.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  children:
                                                      'You have successfully added an Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => g(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              g()
                                                          },
                                                          children: 'Ok',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'grid p-8 bg-white h-[80vh] items-baseline overflow-y-scroll rounded-lg',
                    children: [
                        d('div', {
                            className: 'grid gap-8 max-w-[40rem]',
                            children: [
                                d('p', {
                                    className: 'text-[2rem] font-bold',
                                    children: [
                                        'KYA ',
                                        i('span', {
                                            className: 'text-gray-500',
                                            children: '(Optional)',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'flex justify-between text-[1.6rem]',
                                    children: [
                                        i('p', {
                                            className:
                                                'text-[#098DFF] cursor-pointer',
                                            onClick: () => y('validate'),
                                            children:
                                                'Click her to validate this person',
                                        }),
                                        d('p', {
                                            className:
                                                'text-[#043FA7] flex items-center gap-2',
                                            style: {
                                                fontFamily: 'Satoshi-Light',
                                            },
                                            children: [
                                                'What is KYA ',
                                                i(Wn, {}),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('form', {
                            onSubmit: v,
                            className: 'grid max-w-[84rem] gap-16 mt-12',
                            style: {
                                gridTemplateColumns:
                                    ' repeat(auto-fit, minmax(35rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'firstName',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'First Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'firstName',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'lastName',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Last Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'lastName',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                i(Pt, {
                                    label: 'Gender',
                                    state: ['Male', 'Female'],
                                    selectedState: a,
                                    setSelectedState: l,
                                }),
                                d('div', {
                                    className: 'grid gap-4',
                                    children: [
                                        i('label', {
                                            htmlFor: 'phoneNumber',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Phone Number *',
                                        }),
                                        d('div', {
                                            className:
                                                'flex text-[1.6rem] gap-4   h-[5rem]',
                                            children: [
                                                i('select', {
                                                    className:
                                                        'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                    children: i('option', {
                                                        value: '234',
                                                        children: '+234',
                                                    }),
                                                }),
                                                i('input', {
                                                    required: !0,
                                                    type: 'number',
                                                    inputMode: 'numeric',
                                                    id: 'phoneNumber',
                                                    placeholder: 'Phone Number',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'email',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Email Address *',
                                        }),
                                        i('input', {
                                            type: 'email',
                                            required: !0,
                                            id: 'email',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'address1',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Address Line 1*',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'address1',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'address2',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Address Line 2*',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'address2',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                i(Pt, {
                                    label: 'State',
                                    state: ['Lagos', 'Imo', 'Abia', 'FCT'],
                                    placeholder: 'Select State',
                                    selectedState: e,
                                    setSelectedState: t,
                                }),
                                i(Pt, {
                                    label: 'Artisan Category',
                                    state: [
                                        'Plumber',
                                        'Electrician',
                                        'Carpenter',
                                        'Painter',
                                    ],
                                    selectedState: r,
                                    setSelectedState: n,
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'businessName',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Business Name',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Optional',
                                            id: 'businessName',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'col-span-full rounded-lg border border-width-[.2rem] border-dashed border-color-grey-1 p-8 text-[1.6rem] relative w-full',
                                    children: [
                                        d('label', {
                                            htmlFor: 'photoUpload',
                                            className:
                                                'flex justify-center gap-4 items-center cursor-pointer',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/photo_library.svg',
                                                    alt: '',
                                                }),
                                                d('p', {
                                                    className:
                                                        'text-color-dark-1',
                                                    style: {
                                                        fontFamily:
                                                            'Satoshi-Light',
                                                    },
                                                    children: [
                                                        'Drag estate manager picture here or',
                                                        ' ',
                                                        i('span', {
                                                            className:
                                                                'text-color-blue font-bold',
                                                            children: 'click',
                                                        }),
                                                        ' ',
                                                        'to upload',
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i('input', {
                                            type: 'file',
                                            name: 'photoUpload',
                                            id: 'photoUpload',
                                            accept: 'image/*',
                                            className: 'hidden',
                                            onClick: m,
                                        }),
                                        f &&
                                            i('div', {
                                                className:
                                                    'flex justify-center justify-self-center',
                                                children: i('img', {
                                                    src: f,
                                                    alt: 'photoPreview',
                                                    className:
                                                        'object-cover w-[11rem] h-[11rem] rounded-full',
                                                }),
                                            }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                    style: { justifySelf: 'start' },
                                    onClick: () => {
                                        y('add-Artisan')
                                    },
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Artisan',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    eae = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState('Deactivate'),
            [a, l] = C.exports.useState(''),
            o = async (b) => {
                const h = await kr('#photoUpload')
                l(h)
            },
            s = (b) => {
                b.preventDefault()
            },
            c = C.exports.useRef(null),
            u = () => {
                c.current && c.current.close()
            },
            f = (b) => {
                b === 'Deactivate' && n('Deactivate'),
                    b === 'Delete' && n('Delete'),
                    c.current && c.current.showModal()
            },
            p = (b) => {
                b === 'Deactivate' && f('Deactivate'),
                    b === 'Delete' && f('Delete')
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: c,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children:
                                r === 'Deactivate'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to deactivate this Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => u(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              u(),
                                                                  fe(
                                                                      'Artisan deactivated successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children:
                                                              'Deactivate',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to delete this Artisan',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => u(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              u(),
                                                                  fe(
                                                                      'Artisan deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid p-8 bg-white  rounded-lg gap-[10rem]',
                    children: [
                        d('div', {
                            children: [
                                d('div', {
                                    className:
                                        'flex justify-between items-center',
                                    children: [
                                        d('label', {
                                            htmlFor: 'photoUpload',
                                            className:
                                                'grid gap-4 cursor-pointer justify-items-center',
                                            children: [
                                                i('img', {
                                                    src: a || '/img/me.jpeg',
                                                    alt: 'photoPreview',
                                                    className:
                                                        'object-cover w-[11rem] h-[11rem] rounded-full object-top',
                                                }),
                                                i('span', {
                                                    className:
                                                        'text-color-blue-1 text-[1.4rem]',
                                                    children: 'Edit',
                                                }),
                                            ],
                                        }),
                                        i('input', {
                                            type: 'file',
                                            name: 'photoUpload',
                                            id: 'photoUpload',
                                            accept: 'image/*',
                                            className: 'hidden',
                                            onClick: o,
                                        }),
                                        d('div', {
                                            className: 'flex gap-8',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'border border-color-blue-1 text-color-blue-1 px-16 py-4 flex items-center  rounded-lg gap-4',
                                                    onClick: () =>
                                                        p('Deactivate'),
                                                    children: i('span', {
                                                        className:
                                                            ' text-[1.4rem] font-semibold',
                                                        children: 'Deactivate',
                                                    }),
                                                }),
                                                d('button', {
                                                    className:
                                                        'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                                    onClick: () => p('Delete'),
                                                    children: [
                                                        i('img', {
                                                            src: '/icons/admins/delete.svg',
                                                            alt: '',
                                                        }),
                                                        i('span', {
                                                            className:
                                                                'text-red-600 text-[1.4rem] font-semibold',
                                                            children: 'Delete',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('form', {
                                    onSubmit: s,
                                    className:
                                        'grid max-w-[84rem] gap-16 mt-12',
                                    style: {
                                        gridTemplateColumns:
                                            ' repeat(auto-fit, minmax(35rem, 1fr))',
                                    },
                                    children: [
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'fullName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Full Name *',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'fullName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'artisanCode',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Artisan Code',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'artisanCode',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'DateOfBirth',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Date of Birth',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'DateOfBirth',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'email',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Email Address',
                                                }),
                                                i('input', {
                                                    type: 'email',
                                                    required: !0,
                                                    id: 'email',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'phoneNumber',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Phone Number *',
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex text-[1.6rem] gap-4   h-[5rem]',
                                                    children: [
                                                        i('select', {
                                                            className:
                                                                'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                            children: i(
                                                                'option',
                                                                {
                                                                    value: '234',
                                                                    children:
                                                                        '+234',
                                                                }
                                                            ),
                                                        }),
                                                        i('input', {
                                                            required: !0,
                                                            type: 'number',
                                                            inputMode:
                                                                'numeric',
                                                            id: 'phoneNumber',
                                                            placeholder:
                                                                'Phone Number',
                                                            className:
                                                                'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(Pt, {
                                            label: 'Gender',
                                            state: ['Male', 'Female'],
                                            placeholder: 'Male',
                                            selectedState: e,
                                            setSelectedState: t,
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'homeAddress',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Home Address',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'homeAddress',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'businessName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Business Name',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'businessName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'artisanGroup',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Artisan Group',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'artisanGroup',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'overallRating',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Overall Rating',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'overallRating',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'idNumber',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'ID Number',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'idNumber',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'dateOfOnboarding',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children:
                                                        'Date of Onboarding',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'dateOfOnboarding',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'status',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Status',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'status',
                                                    value: 'Active',
                                                    className:
                                                        'w-full rounded-lg border-none text-[1.6rem] outline-none text-green-500',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'kya',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'KYA',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'kya',
                                                    value: 'Not validated',
                                                    className:
                                                        'w-full rounded-lg border-none text-[1.6rem] outline-none underline text-red-500',
                                                }),
                                            ],
                                        }),
                                        d('button', {
                                            className:
                                                'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full mt-10',
                                            style: { justifySelf: 'start' },
                                            children: [
                                                i('span', {
                                                    children: i('img', {
                                                        src: '/icons/admins/saveDisk.svg',
                                                        alt: '',
                                                        className:
                                                            'w-[1.7rem] h-[1.7rem]',
                                                    }),
                                                }),
                                                ' ',
                                                'Save Changes',
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            children: [
                                i('h2', {
                                    className: 'text-[2rem] py-10',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Testimonials',
                                }),
                                d('div', {
                                    className:
                                        'grid grid-cols-2 rounded-lg border p-10 border-color-grey',
                                    style: {
                                        boxShadow:
                                            '0px 12.6316px 31.5789px rgba(102, 104, 105, 0.15)',
                                    },
                                    children: [
                                        d('div', {
                                            className: 'grid gap-8 ',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex gap-4 justify-between items-center border rounded-lg h-[9rem] max-w-[38rem] px-10',
                                                    style: {
                                                        boxShadow:
                                                            '0px 12.6316px 31.5789px rgba(102, 104, 105, 0.15)',
                                                    },
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'flex gap-4 items-center',
                                                            children: [
                                                                i('img', {
                                                                    src: '/img/avatar1.png',
                                                                    alt: '',
                                                                    className:
                                                                        'w-[5rem] h-[5rem] object-cover rounded-full',
                                                                }),
                                                                d('div', {
                                                                    children: [
                                                                        i('p', {
                                                                            className:
                                                                                'text-[1.4rem]',
                                                                            style: {
                                                                                fontFamily:
                                                                                    'Satoshi-Medium',
                                                                            },
                                                                            children:
                                                                                'Jessica Okafor',
                                                                        }),
                                                                        i(xu, {
                                                                            starsNum: 4,
                                                                        }),
                                                                    ],
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'text-[1.4rem]',
                                                            children: [
                                                                i('p', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        '7 Aug 2022',
                                                                }),
                                                                i('p', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Peace Estate',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex gap-4 justify-between items-center border rounded-lg h-[9rem] max-w-[38rem] px-10',
                                                    style: {
                                                        boxShadow:
                                                            '0px 12.6316px 31.5789px rgba(102, 104, 105, 0.15)',
                                                    },
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'flex gap-4 items-center',
                                                            children: [
                                                                i('img', {
                                                                    src: '/img/avatar2.png',
                                                                    alt: '',
                                                                    className:
                                                                        'w-[5rem] h-[5rem] object-cover rounded-full',
                                                                }),
                                                                d('div', {
                                                                    children: [
                                                                        i('p', {
                                                                            className:
                                                                                'text-[1.4rem]',
                                                                            style: {
                                                                                fontFamily:
                                                                                    'Satoshi-Medium',
                                                                            },
                                                                            children:
                                                                                'Jessica Okafor',
                                                                        }),
                                                                        i(xu, {
                                                                            starsNum: 4,
                                                                        }),
                                                                    ],
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'text-[1.4rem]',
                                                            children: [
                                                                i('p', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        '7 Aug 2022',
                                                                }),
                                                                i('p', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Peace Estate',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex gap-4 justify-between items-center border rounded-lg h-[9rem] max-w-[38rem] px-10',
                                                    style: {
                                                        boxShadow:
                                                            '0px 12.6316px 31.5789px rgba(102, 104, 105, 0.15)',
                                                    },
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'flex gap-4 items-center',
                                                            children: [
                                                                i('img', {
                                                                    src: '/img/avatar3.png',
                                                                    alt: '',
                                                                    className:
                                                                        'w-[5rem] h-[5rem] object-cover rounded-full',
                                                                }),
                                                                d('div', {
                                                                    children: [
                                                                        i('p', {
                                                                            className:
                                                                                'text-[1.4rem]',
                                                                            style: {
                                                                                fontFamily:
                                                                                    'Satoshi-Medium',
                                                                            },
                                                                            children:
                                                                                'Jessica Okafor',
                                                                        }),
                                                                        i(xu, {
                                                                            starsNum: 4,
                                                                        }),
                                                                    ],
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'text-[1.4rem]',
                                                            children: [
                                                                i('p', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        '7 Aug 2022',
                                                                }),
                                                                i('p', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Peace Estate',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-8',
                                            children: [
                                                i('h3', {
                                                    className: 'text-[2rem]',
                                                    style: {
                                                        fontFamily:
                                                            'Satoshi-Medium',
                                                    },
                                                    children:
                                                        'Wonderful Service',
                                                }),
                                                i('p', {
                                                    className: 'text-[1.8rem]',
                                                    children:
                                                        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Nulla optio labore autem provident, dolore dolorum dicta vel tempore voluptatibus deserunt recusandae porro deleniti dolores illum, temporibus eveniet earum. Ducimus, repellendus? Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos adipisci voluptatem molestias, obcaecati molestiae veritatis libero eveniet porro accusamus, reiciendis facilis. Illum et doloremque fuga quo aut laudantium consequatur nemo.',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            className: 'grid w-full',
                            children: [
                                i('h3', {
                                    className: 'text-[2rem]',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Know Your Artisan (KYA)',
                                }),
                                d('div', {
                                    className:
                                        'bg-white rounded-2xl grid items-baseline  p-10 text-[1.6rem] relative gap-20',
                                    children: [
                                        i('div', {
                                            className:
                                                'relative h-[14rem] bg-blue-600 w-full mt-10 rounded-lg',
                                            children: i('img', {
                                                src: '/img/me.jpeg',
                                                alt: '',
                                                className:
                                                    'w-[10rem] h-[10rem] border rounded-full border-green-600 object-cover absolute bottom-[-6rem] left-10 object-top',
                                            }),
                                        }),
                                        d('div', {
                                            className: 'mt-20',
                                            children: [
                                                i('h2', {
                                                    children:
                                                        'Validation Result',
                                                }),
                                                d('div', {
                                                    className:
                                                        'border grid mt-5',
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'grid grid-cols-2 border-b gap-4',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border-r py-4 pl-4 text-gray-700',
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Validation Option',
                                                                }),
                                                                i('p', {
                                                                    className:
                                                                        'py-4',
                                                                    children:
                                                                        'Phone Number | (+234) 813238432',
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'grid grid-cols-2 border-b gap-4',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border-r py-4 pl-4 text-gray-700',
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Full Name',
                                                                }),
                                                                i('p', {
                                                                    className:
                                                                        'py-4',
                                                                    children:
                                                                        'Michael Okonkwo',
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'grid grid-cols-2 border-b gap-4',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border-r py-4 pl-4 text-gray-700',
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Date of Birth',
                                                                }),
                                                                i('p', {
                                                                    className:
                                                                        'py-4',
                                                                    children:
                                                                        '15 May, 1998',
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'grid grid-cols-2 border-b gap-4',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border-r py-4 pl-4 text-gray-700',
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Phone Number',
                                                                }),
                                                                i('p', {
                                                                    className:
                                                                        'py-4',
                                                                    children:
                                                                        ' (+234) 813238432',
                                                                }),
                                                            ],
                                                        }),
                                                        d('div', {
                                                            className:
                                                                'grid grid-cols-2  gap-4',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border-r py-4 pl-4 text-gray-700',
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Light',
                                                                    },
                                                                    children:
                                                                        'Gender',
                                                                }),
                                                                i('p', {
                                                                    className:
                                                                        'py-4',
                                                                    children:
                                                                        'Male',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    tae = () => {
        C.exports.useState(!0)
        const [e, t] = C.exports.useState([]),
            [r, n] = C.exports.useState([])
        return d(me, {
            children: [
                i(ct, {}),
                d('div', {
                    className: 'p-8 bg-white rounded-lg ',
                    children: [
                        i('div', {
                            className: 'grid gap-8 border-b py-10 self-start',
                            children: i('h2', {
                                className: 'text-[2rem] ',
                                style: { fontFamily: 'Satoshi-medium' },
                                children: 'Add Artisan Group',
                            }),
                        }),
                        d('form', {
                            onSubmit: (o) => {
                                o.preventDefault()
                            },
                            className:
                                'flex flex-col gap-16 max-w-[40rem] h-[60vh] mt-10',
                            children: [
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'name',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Name',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'name',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                i(ef, {
                                    selectFrom: [
                                        'Artisan 1',
                                        'Artisan 2',
                                        'Artisan 3',
                                    ],
                                    label: 'Artisans',
                                    placeholder: 'Select Artisans',
                                    selected: e,
                                    setSelected: t,
                                }),
                                i(ef, {
                                    selectFrom: [
                                        'Estate 1',
                                        'Estate 2',
                                        'Estate 3',
                                        'Estate 4',
                                        'Estate 5',
                                        'Estate 6',
                                        'Estate 7',
                                    ],
                                    label: 'Estates',
                                    placeholder: 'Select Estate',
                                    selected: r,
                                    setSelected: n,
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full mt-auto mr-auto',
                                    onClick: () => {},
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Artisan Group',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    rae = [
        { id: '1', name: 'Jacintha Sage', location: 'Lagos' },
        { id: '1', name: 'Jacintha Sage', location: 'Lagos' },
        { id: '1', name: 'Jacintha Sage', location: 'Lagos' },
        { id: '1', name: 'Jacintha Sage', location: 'Lagos' },
        { id: '1', name: 'Jacintha Sage', location: 'Lagos' },
        { id: '1', name: 'Jacintha Sage', location: 'Lagos' },
    ]
function nae() {
    const [e, t] = C.exports.useState([])
    C.exports.useEffect(() => {
        setTimeout(() => {
            t(rae)
        }, 1e3)
    }, [])
    const r = [2, 4, 6, 8],
        n = 4,
        [a, l] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: n,
            totalPage: Math.ceil(e.length / n),
            slicedPages: null,
        }),
        o = (v) => {
            const b = parseInt(v.target.value),
                h = []
            for (let g = 0; g < e.length; g += b) h.push(e.slice(g, g + b))
            l((g) => ({
                ...g,
                itemsPerPage: b,
                index: 0,
                currentPage: 1,
                slicedPages: h,
                totalPage: Math.ceil(e.length / b),
            }))
        }
    C.exports.useEffect(() => {
        const v = []
        for (let b = 0; b < e.length; b += a.itemsPerPage)
            v.push(e.slice(b, b + a.itemsPerPage))
        l((b) => ({
            ...b,
            slicedPages: v,
            totalPage: Math.ceil(e.length / a.itemsPerPage),
        }))
    }, [e])
    const s = () => {
            console.log(a.currentPage, a.totalPage, f),
                a.currentPage !== a.totalPage &&
                    l((v) => ({
                        ...v,
                        index: v.index + 1,
                        currentPage: v.currentPage + 1,
                    }))
        },
        c = () => {
            a.currentPage !== 1 &&
                l((v) => ({
                    ...v,
                    index: v.index - 1,
                    currentPage: v.currentPage - 1,
                }))
        },
        { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
        m = (v, b) => {
            l((h) => ({ ...h, index: b, currentPage: b + 1 }))
        }
    return d('div', {
        className: 'grid text-[1.6rem] bg-white rounded-lg mt-20',
        children: [
            d('div', {
                className:
                    'flex w-full items-center gap-12 py-8 bg-white rounded-lg',
                children: [
                    d('p', {
                        className: ' font-bold',
                        children: [
                            'Estate List ',
                            i('span', { children: '(5)' }),
                        ],
                    }),
                    d('div', {
                        className: 'relative flex items-center',
                        children: [
                            i('img', {
                                src: '/icons/admins/search.svg',
                                alt: '',
                                className: 'absolute left-4 text-[4rem]',
                            }),
                            i('input', {
                                type: 'text',
                                placeholder: 'Search Parameters',
                                className:
                                    'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                            }),
                        ],
                    }),
                ],
            }),
            d('div', {
                className: 'grid gap-10',
                children: [
                    d('div', {
                        className:
                            'grid justify-between text-color-dark-1 bg-color-grey items-center p-8 grid-cols-4 gap-8',
                        style: { fontSize: '1.4rem' },
                        children: [
                            d('p', {
                                className: 'flex items-center gap-2',
                                children: [
                                    i('input', {
                                        type: 'checkbox',
                                        className: 'cursor-pointer',
                                    }),
                                    i('p', { children: ' Name' }),
                                ],
                            }),
                            i('p', { children: 'Location' }),
                        ],
                    }),
                    i('div', {
                        className: 'grid gap-8 p-8',
                        children:
                            f && f.length > 0
                                ? K.Children.toArray(
                                      f[a.index].map(
                                          ({ name: v, location: b }, h) =>
                                              d('div', {
                                                  className:
                                                      'grid justify-between border-b grid-cols-4 gap-8 ',
                                                  children: [
                                                      d('p', {
                                                          className:
                                                              'flex items-center gap-4',
                                                          children: [
                                                              i('input', {
                                                                  type: 'checkbox',
                                                                  className:
                                                                      'cursor-pointer',
                                                              }),
                                                              i('span', {
                                                                  children: v,
                                                              }),
                                                          ],
                                                      }),
                                                      i('p', { children: b }),
                                                  ],
                                              })
                                      )
                                  )
                                : i('div', {
                                      children: i('div', {
                                          className: 'relative',
                                          children: i('div', {
                                              className:
                                                  'absolute w-full grid place-content-center',
                                              children: i(Ne, {
                                                  className:
                                                      'animate-spin text-[#0660FE] text-4xl',
                                              }),
                                          }),
                                      }),
                                  }),
                    }),
                ],
            }),
            d('footer', {
                className:
                    'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                children: [
                    d('div', {
                        className: 'flex gap-8 items-center',
                        children: [
                            i('p', { children: 'View' }),
                            i('select', {
                                name: '',
                                id: '',
                                className:
                                    'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                onChange: o,
                                children: r.map((v, b) =>
                                    i(
                                        'option',
                                        {
                                            value: v,
                                            selected: v === p,
                                            className:
                                                'capitalize cursor-pointer bg-white',
                                            children: v,
                                        },
                                        b
                                    )
                                ),
                            }),
                            i('p', {
                                className: 'text',
                                children: 'List per page',
                            }),
                        ],
                    }),
                    d('ul', {
                        className: 'flex items-center gap-5 ml-10',
                        children: [
                            i(Ae, { onClick: c, className: 'cursor-pointer' }),
                            f == null
                                ? void 0
                                : f.map((v, b) =>
                                      i(
                                          'li',
                                          {
                                              children:
                                                  b + 1 === u
                                                      ? i('span', {
                                                            className:
                                                                'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                            children: b + 1,
                                                        })
                                                      : i('span', {
                                                            className:
                                                                'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                            onClick: (h) =>
                                                                m(h, b),
                                                            children: b + 1,
                                                        }),
                                          },
                                          b
                                      )
                                  ),
                            i(Ee, { onClick: s, className: 'cursor-pointer' }),
                        ],
                    }),
                ],
            }),
        ],
    })
}
const aae = [
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
        {
            id: '1',
            artisanName: 'Chibuzor Okafor',
            businessName: 'Lariza Orjo',
            phoneNumber: '08012345678',
        },
    ],
    iae = () => {
        const e = Me(),
            [t, r] = C.exports.useState(!0)
        C.exports.useState(!1)
        const [n, a] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                a(aae)
            }, 1e3)
        }, [])
        const l = (A) => {
                A.preventDefault(),
                    E(),
                    fe('Group Created successfully', {
                        type: 'success',
                        className: 'bg-green-100 text-green-600 text-[1.4rem]',
                    })
            },
            o = ['View Details', 'Edit Details', 'Delete'],
            [s, c] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            u = (A, _) => {
                c(() => ({ isDropDownOpen: A.target.checked, index: _ }))
            },
            f = (A, _) => {
                _ === 'Delete' && k('warning'),
                    _ === 'View Details' && e('/superAdmin/artisan/group/:Id'),
                    c({ isDropDownOpen: !1, index: null })
            },
            p = [2, 4, 6, 8],
            m = 4,
            [v, b] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: m,
                totalPage: Math.ceil(n.length / m),
                slicedPages: null,
            }),
            h = (A) => {
                const _ = parseInt(A.target.value),
                    O = []
                for (let T = 0; T < n.length; T += _) O.push(n.slice(T, T + _))
                b((T) => ({
                    ...T,
                    itemsPerPage: _,
                    index: 0,
                    currentPage: 1,
                    slicedPages: O,
                    totalPage: Math.ceil(n.length / _),
                }))
            }
        C.exports.useEffect(() => {
            const A = []
            for (let _ = 0; _ < n.length; _ += v.itemsPerPage)
                A.push(n.slice(_, _ + v.itemsPerPage))
            b((_) => ({
                ..._,
                slicedPages: A,
                totalPage: Math.ceil(n.length / v.itemsPerPage),
            }))
        }, [n])
        const g = () => {
                console.log(v.currentPage, v.totalPage, y),
                    v.currentPage !== v.totalPage &&
                        b((A) => ({
                            ...A,
                            index: A.index + 1,
                            currentPage: A.currentPage + 1,
                        }))
            },
            x = () => {
                v.currentPage !== 1 &&
                    b((A) => ({
                        ...A,
                        index: A.index - 1,
                        currentPage: A.currentPage - 1,
                    }))
            },
            { currentPage: w, slicedPages: y, itemsPerPage: N } = v,
            S = (A, _) => {
                b((O) => ({ ...O, index: _, currentPage: _ + 1 }))
            },
            P = C.exports.useRef(null),
            E = () => {
                P.current && P.current.close()
            },
            k = (A) => {
                r(A === 'warning'), P.current && P.current.showModal()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: P,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => E(),
                                }),
                                t
                                    ? d('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  children:
                                                      'Are you sure you want to delete this Artisan Group?',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => E(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              E(),
                                                                  fe(
                                                                      'Artisan Group deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: l,
                                          children: [
                                              i('h3', {
                                                  className:
                                                      'text-[2rem] font-bold border-b ',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Create Artisan Group',
                                              }),
                                              d('div', {
                                                  className:
                                                      'w-full grid gap-4',
                                                  children: [
                                                      i('label', {
                                                          htmlFor:
                                                              'artisanName',
                                                          className:
                                                              'text-[1.4rem] font-semibold',
                                                          children: 'Name',
                                                      }),
                                                      i('input', {
                                                          type: 'text',
                                                          required: !0,
                                                          id: 'artisanName',
                                                          className:
                                                              'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                      }),
                                                  ],
                                              }),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  children: 'Create',
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem] bg-white px-10 rounded-lg',
                    children: [
                        d('div', {
                            className:
                                'flex gap-8 py-10 max-w-[50rem] items-end',
                            children: [
                                d('div', {
                                    className: 'w-full grid gap-4',
                                    children: [
                                        i('label', {
                                            htmlFor: 'groupName',
                                            className:
                                                'text-[1.4rem] font-semibold',
                                            children: 'Group Name',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            placeholder: 'Mainland group 1',
                                            id: 'groupName',
                                            className:
                                                'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                        }),
                                    ],
                                }),
                                i('button', {
                                    className:
                                        'btn bg-[#0556E5] text-white rounded-lg py-4 w-[15rem]',
                                    children: 'Update',
                                }),
                            ],
                        }),
                        d('div', {
                            className:
                                'flex w-full items-center gap-12 py-8 bg-white rounded-lg',
                            children: [
                                d('p', {
                                    className: ' font-bold',
                                    children: [
                                        'Group Users ',
                                        i('span', { children: '(5)' }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className:
                                                'absolute left-4 text-[4rem]',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid gap-10',
                            children: [
                                d('div', {
                                    className:
                                        'grid justify-between text-color-dark-1 bg-color-grey items-center p-8 grid-cols-4 gap-8',
                                    style: { fontSize: '1.4rem' },
                                    children: [
                                        d('p', {
                                            className:
                                                'flex items-center gap-2',
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                    className: 'cursor-pointer',
                                                }),
                                                i('p', { children: ' Name' }),
                                            ],
                                        }),
                                        i('p', { children: 'Business Name' }),
                                        i('p', { children: 'Phone Number' }),
                                        i('p', { children: 'Actions' }),
                                    ],
                                }),
                                i('div', {
                                    className: 'grid gap-8 p-8',
                                    children:
                                        y && y.length > 0
                                            ? K.Children.toArray(
                                                  y[v.index].map(
                                                      (
                                                          {
                                                              artisanName: A,
                                                              businessName: _,
                                                              phoneNumber: O,
                                                          },
                                                          T
                                                      ) => {
                                                          const {
                                                              isDropDownOpen: $,
                                                              index: I,
                                                          } = s
                                                          return d('div', {
                                                              className:
                                                                  'grid justify-between border-b grid-cols-4 gap-8 ',
                                                              children: [
                                                                  d('p', {
                                                                      className:
                                                                          'flex items-center gap-4',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'checkbox',
                                                                                      className:
                                                                                          'cursor-pointer',
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'span',
                                                                                  {
                                                                                      children:
                                                                                          A,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          _,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          O,
                                                                  }),
                                                                  d('div', {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'label',
                                                                                  {
                                                                                      className:
                                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                      htmlFor:
                                                                                          T.toString(),
                                                                                      onClick:
                                                                                          () =>
                                                                                              c(
                                                                                                  (
                                                                                                      j
                                                                                                  ) => ({
                                                                                                      isDropDownOpen:
                                                                                                          !j.isDropDownOpen,
                                                                                                      index: T,
                                                                                                  })
                                                                                              ),
                                                                                      children:
                                                                                          i(
                                                                                              'span',
                                                                                              {
                                                                                                  className:
                                                                                                      'text-color-primary',
                                                                                                  children:
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'radio',
                                                                                      name: 'dropdown',
                                                                                      className:
                                                                                          'hidden',
                                                                                      id: T.toString(),
                                                                                      onChange:
                                                                                          (
                                                                                              j
                                                                                          ) =>
                                                                                              u(
                                                                                                  j,
                                                                                                  T
                                                                                              ),
                                                                                  }
                                                                              ),
                                                                              $ &&
                                                                                  I ===
                                                                                      T &&
                                                                                  i(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                          children:
                                                                                              o.map(
                                                                                                  (
                                                                                                      j,
                                                                                                      L
                                                                                                  ) =>
                                                                                                      i(
                                                                                                          'p',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                              onClick:
                                                                                                                  (
                                                                                                                      D
                                                                                                                  ) =>
                                                                                                                      f(
                                                                                                                          D,
                                                                                                                          j
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  j ===
                                                                                                                  'Delete'
                                                                                                                      ? i(
                                                                                                                            'span',
                                                                                                                            {
                                                                                                                                className:
                                                                                                                                    'text-red-600',
                                                                                                                                children:
                                                                                                                                    j,
                                                                                                                            }
                                                                                                                        )
                                                                                                                      : j,
                                                                                                          },
                                                                                                          L +
                                                                                                              T
                                                                                                      )
                                                                                              ),
                                                                                      }
                                                                                  ),
                                                                          ],
                                                                  }),
                                                              ],
                                                          })
                                                      }
                                                  )
                                              )
                                            : i('div', {
                                                  children: i('div', {
                                                      className: 'relative',
                                                      children: i('div', {
                                                          className:
                                                              'absolute w-full grid place-content-center',
                                                          children: i(Ne, {
                                                              className:
                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                          }),
                                                      }),
                                                  }),
                                              }),
                                }),
                            ],
                        }),
                        d('footer', {
                            className:
                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                            children: [
                                d('div', {
                                    className: 'flex gap-8 items-center',
                                    children: [
                                        i('p', { children: 'View' }),
                                        i('select', {
                                            name: '',
                                            id: '',
                                            className:
                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                            onChange: h,
                                            children: p.map((A, _) =>
                                                i(
                                                    'option',
                                                    {
                                                        value: A,
                                                        selected: A === N,
                                                        className:
                                                            'capitalize cursor-pointer bg-white',
                                                        children: A,
                                                    },
                                                    _
                                                )
                                            ),
                                        }),
                                        i('p', {
                                            className: 'text',
                                            children: 'List per page',
                                        }),
                                    ],
                                }),
                                d('ul', {
                                    className: 'flex items-center gap-5 ml-10',
                                    children: [
                                        i(Ae, {
                                            onClick: x,
                                            className: 'cursor-pointer',
                                        }),
                                        y == null
                                            ? void 0
                                            : y.map((A, _) =>
                                                  i(
                                                      'li',
                                                      {
                                                          children:
                                                              _ + 1 === w
                                                                  ? i('span', {
                                                                        className:
                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    })
                                                                  : i('span', {
                                                                        className:
                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                        onClick:
                                                                            (
                                                                                O
                                                                            ) =>
                                                                                S(
                                                                                    O,
                                                                                    _
                                                                                ),
                                                                        children:
                                                                            _ +
                                                                            1,
                                                                    }),
                                                      },
                                                      _
                                                  )
                                              ),
                                        i(Ee, {
                                            onClick: g,
                                            className: 'cursor-pointer',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        i(nae, {}),
                    ],
                }),
            ],
        })
    },
    lae = ({ fetchedAdvertList: e }) => {
        const t = Me(),
            [r, n] = C.exports.useState('Delete'),
            a = ['View Details', 'Edit Details', 'Delete'],
            [l, o] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            s = (M, A) => {
                o(() => ({ isDropDownOpen: M.target.checked, index: A }))
            },
            c = [2, 4, 6, 8],
            u = 4,
            [f, p] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: u,
                totalPage: Math.ceil(e.length / u),
                slicedPages: null,
            }),
            m = (M) => {
                const A = parseInt(M.target.value),
                    _ = []
                for (let O = 0; O < e.length; O += A) _.push(e.slice(O, O + A))
                p((O) => ({
                    ...O,
                    itemsPerPage: A,
                    index: 0,
                    currentPage: 1,
                    slicedPages: _,
                    totalPage: Math.ceil(e.length / A),
                }))
            }
        C.exports.useEffect(() => {
            const M = []
            for (let A = 0; A < e.length; A += f.itemsPerPage)
                M.push(e.slice(A, A + f.itemsPerPage))
            p((A) => ({ ...A, slicedPages: M }))
        }, [e])
        const v = () => {
                console.log(f.currentPage, f.totalPage, g),
                    f.currentPage !== f.totalPage &&
                        p((M) => ({
                            ...M,
                            index: M.index + 1,
                            currentPage: M.currentPage + 1,
                        }))
            },
            b = () => {
                f.currentPage !== 1 &&
                    p((M) => ({
                        ...M,
                        index: M.index - 1,
                        currentPage: M.currentPage - 1,
                    }))
            },
            { currentPage: h, slicedPages: g, itemsPerPage: x } = f,
            w = (M, A) => {
                p((_) => ({ ..._, index: A, currentPage: A + 1 }))
            },
            y = C.exports.useRef(null),
            N = () => {
                y.current && y.current.close()
            },
            S = (M) => {
                M === 'Delete' && n('Delete'),
                    y.current && y.current.showModal()
            },
            P = (M, A) => {
                o(() => ({ isDropDownOpen: !1, index: null })),
                    M === 'View Details' &&
                        t(`/superAdmin/advert/detail/:${A}`),
                    M === 'Delete' && S('Delete')
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: y,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children: [
                                i('img', {
                                    src: '/icons/admins/modalWarning.svg',
                                    alt: '',
                                }),
                                i('p', {
                                    className: 'text-[1.6rem]',
                                    children:
                                        'Are you sure you want to delete this Advert',
                                }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => N(),
                                            children: 'Cancel',
                                        }),
                                        i('button', {
                                            className:
                                                'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                            onClick: () => {
                                                N(),
                                                    fe(
                                                        'Advert deleted successfully',
                                                        {
                                                            type: 'error',
                                                            className:
                                                                'bg-red-100 text-red-600 text-[1.4rem]',
                                                        }
                                                    )
                                            },
                                            children: 'Delete',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem]',
                    children: [
                        d('div', {
                            className:
                                'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                            children: [
                                d('p', {
                                    className: ' font-bold',
                                    children: [
                                        'Total Advert ',
                                        i('span', { children: '(10)' }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative flex items-center',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/search.svg',
                                            alt: '',
                                            className:
                                                'absolute left-4 text-[4rem]',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Search Parameters',
                                            className:
                                                'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg ml-auto',
                                    onClick: () => {
                                        t('/superAdmin/advert/add')
                                    },
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Advert',
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid',
                            children: [
                                d('div', {
                                    className:
                                        'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-6 gap-8',
                                    style: { fontSize: '1.4rem' },
                                    children: [
                                        d('p', {
                                            className:
                                                'flex items-center gap-2',
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                    className: 'cursor-pointer',
                                                }),
                                                i('p', {
                                                    children: 'Advert Name',
                                                }),
                                            ],
                                        }),
                                        i('p', { children: 'Start Date' }),
                                        i('p', { children: 'End Date' }),
                                        i('p', { children: 'End Date' }),
                                        i('p', { children: 'Status' }),
                                    ],
                                }),
                                i('div', {
                                    className: 'grid gap-8 mt-8 p-8',
                                    children:
                                        g && g.length > 0
                                            ? K.Children.toArray(
                                                  g[f.index].map(
                                                      (
                                                          {
                                                              id: M,
                                                              advertName: A,
                                                              startDate: _,
                                                              endDate: O,
                                                              status: T,
                                                          },
                                                          $
                                                      ) => {
                                                          const {
                                                              isDropDownOpen: I,
                                                              index: j,
                                                          } = l
                                                          return d('div', {
                                                              className:
                                                                  'grid justify-between border-b grid-cols-6 gap-8 ',
                                                              children: [
                                                                  d('p', {
                                                                      className:
                                                                          'flex items-center gap-4',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'checkbox',
                                                                                      className:
                                                                                          'cursor-pointer',
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'span',
                                                                                  {
                                                                                      children:
                                                                                          A,
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          _,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          O,
                                                                  }),
                                                                  i('p', {
                                                                      children:
                                                                          T ===
                                                                          'Active'
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-green-600',
                                                                                        children:
                                                                                            T,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-red-600',
                                                                                        children:
                                                                                            T,
                                                                                    }
                                                                                ),
                                                                  }),
                                                                  d('div', {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          [
                                                                              i(
                                                                                  'label',
                                                                                  {
                                                                                      className:
                                                                                          'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                      htmlFor:
                                                                                          $.toString(),
                                                                                      onClick:
                                                                                          () =>
                                                                                              o(
                                                                                                  (
                                                                                                      L
                                                                                                  ) => ({
                                                                                                      isDropDownOpen:
                                                                                                          !L.isDropDownOpen,
                                                                                                      index: $,
                                                                                                  })
                                                                                              ),
                                                                                      children:
                                                                                          i(
                                                                                              'span',
                                                                                              {
                                                                                                  className:
                                                                                                      'text-color-primary',
                                                                                                  children:
                                                                                                      i(
                                                                                                          'img',
                                                                                                          {
                                                                                                              src: '/icons/admins/threeDots.svg',
                                                                                                              alt: '',
                                                                                                          }
                                                                                                      ),
                                                                                              }
                                                                                          ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'input',
                                                                                  {
                                                                                      type: 'radio',
                                                                                      name: 'dropdown',
                                                                                      className:
                                                                                          'hidden',
                                                                                      id: $.toString(),
                                                                                      onChange:
                                                                                          (
                                                                                              L
                                                                                          ) =>
                                                                                              s(
                                                                                                  L,
                                                                                                  $
                                                                                              ),
                                                                                  }
                                                                              ),
                                                                              I &&
                                                                                  j ===
                                                                                      $ &&
                                                                                  i(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'absolute top-0 translate-x-[4rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                          children:
                                                                                              a.map(
                                                                                                  (
                                                                                                      L,
                                                                                                      D
                                                                                                  ) =>
                                                                                                      i(
                                                                                                          'p',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                              onClick:
                                                                                                                  (
                                                                                                                      R
                                                                                                                  ) =>
                                                                                                                      P(
                                                                                                                          L,
                                                                                                                          M
                                                                                                                      ),
                                                                                                              children:
                                                                                                                  L ===
                                                                                                                  'Delete'
                                                                                                                      ? i(
                                                                                                                            'span',
                                                                                                                            {
                                                                                                                                className:
                                                                                                                                    'text-red-600',
                                                                                                                                children:
                                                                                                                                    L,
                                                                                                                            }
                                                                                                                        )
                                                                                                                      : L,
                                                                                                          },
                                                                                                          D +
                                                                                                              $
                                                                                                      )
                                                                                              ),
                                                                                      }
                                                                                  ),
                                                                          ],
                                                                  }),
                                                              ],
                                                          })
                                                      }
                                                  )
                                              )
                                            : i('div', {
                                                  children: i('div', {
                                                      className: 'relative',
                                                      children: i('div', {
                                                          className:
                                                              'absolute w-full grid place-content-center',
                                                          children: i(Ne, {
                                                              className:
                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                          }),
                                                      }),
                                                  }),
                                              }),
                                }),
                            ],
                        }),
                        d('footer', {
                            className:
                                'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                            children: [
                                d('div', {
                                    className: 'flex gap-8 items-center',
                                    children: [
                                        i('p', { children: 'View' }),
                                        i('select', {
                                            name: '',
                                            id: '',
                                            className:
                                                'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                            onChange: m,
                                            children: c.map((M, A) =>
                                                i(
                                                    'option',
                                                    {
                                                        value: M,
                                                        selected: M === x,
                                                        className:
                                                            'capitalize cursor-pointer bg-white',
                                                        children: M,
                                                    },
                                                    A
                                                )
                                            ),
                                        }),
                                        i('p', {
                                            className: 'text',
                                            children: 'List per page',
                                        }),
                                    ],
                                }),
                                d('ul', {
                                    className: 'flex items-center gap-5 ml-10',
                                    children: [
                                        i(Ae, {
                                            onClick: b,
                                            className: 'cursor-pointer',
                                        }),
                                        g == null
                                            ? void 0
                                            : g.map((M, A) =>
                                                  i(
                                                      'li',
                                                      {
                                                          children:
                                                              A + 1 === h
                                                                  ? i('span', {
                                                                        className:
                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                        children:
                                                                            A +
                                                                            1,
                                                                    })
                                                                  : i('span', {
                                                                        className:
                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                        onClick:
                                                                            (
                                                                                _
                                                                            ) =>
                                                                                w(
                                                                                    _,
                                                                                    A
                                                                                ),
                                                                        children:
                                                                            A +
                                                                            1,
                                                                    }),
                                                      },
                                                      A
                                                  )
                                              ),
                                        i(Ee, {
                                            onClick: v,
                                            className: 'cursor-pointer',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    oae = ({ fetchedAvailableEstateAdvert: e }) => {
        Me()
        const t = [2, 4, 6, 8],
            r = 4,
            [n, a] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: r,
                totalPage: Math.ceil(e.length / r),
                slicedPages: null,
            }),
            l = (m) => {
                const v = parseInt(m.target.value),
                    b = []
                for (let h = 0; h < e.length; h += v) b.push(e.slice(h, h + v))
                a((h) => ({
                    ...h,
                    itemsPerPage: v,
                    index: 0,
                    currentPage: 1,
                    slicedPages: b,
                    totalPage: Math.ceil(e.length / v),
                }))
            }
        C.exports.useEffect(() => {
            const m = []
            for (let v = 0; v < e.length; v += n.itemsPerPage)
                m.push(e.slice(v, v + n.itemsPerPage))
            a((v) => ({ ...v, slicedPages: m }))
        }, [e])
        const o = () => {
                console.log(n.currentPage, n.totalPage, u),
                    n.currentPage !== n.totalPage &&
                        a((m) => ({
                            ...m,
                            index: m.index + 1,
                            currentPage: m.currentPage + 1,
                        }))
            },
            s = () => {
                n.currentPage !== 1 &&
                    a((m) => ({
                        ...m,
                        index: m.index - 1,
                        currentPage: m.currentPage - 1,
                    }))
            },
            { currentPage: c, slicedPages: u, itemsPerPage: f } = n,
            p = (m, v) => {
                a((b) => ({ ...b, index: v, currentPage: v + 1 }))
            }
        return i(me, {
            children: d('div', {
                className: 'grid text-[1.6rem]',
                children: [
                    d('div', {
                        className:
                            'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                        children: [
                            d('p', {
                                className: ' font-bold',
                                children: [
                                    'Availabe Estate Adverts ',
                                    i('span', { children: '(10)' }),
                                ],
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/search.svg',
                                        alt: '',
                                        className:
                                            'absolute left-4 text-[4rem]',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                        className:
                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'grid',
                        children: [
                            d('div', {
                                className:
                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-4 gap-8',
                                style: { fontSize: '1.4rem' },
                                children: [
                                    d('p', {
                                        className: 'flex items-center gap-2',
                                        children: [
                                            i('input', {
                                                type: 'checkbox',
                                                className: 'cursor-pointer',
                                            }),
                                            i('p', { children: 'Estate Name' }),
                                        ],
                                    }),
                                    i('p', { children: 'State' }),
                                    i('p', { children: 'Address' }),
                                    i('p', { children: 'No of Residents' }),
                                ],
                            }),
                            i('div', {
                                className: 'grid gap-8 mt-8 p-8',
                                children:
                                    u && u.length > 0
                                        ? K.Children.toArray(
                                              u[n.index].map(
                                                  (
                                                      {
                                                          estateName: m,
                                                          state: v,
                                                          address: b,
                                                          noOfResidents: h,
                                                      },
                                                      g
                                                  ) =>
                                                      d('div', {
                                                          className:
                                                              'grid justify-between border-b grid-cols-4 items-center gap-8 ',
                                                          children: [
                                                              d('p', {
                                                                  className:
                                                                      'flex items-center gap-4',
                                                                  children: [
                                                                      i(
                                                                          'input',
                                                                          {
                                                                              type: 'checkbox',
                                                                              className:
                                                                                  'cursor-pointer',
                                                                          }
                                                                      ),
                                                                      i(
                                                                          'span',
                                                                          {
                                                                              children:
                                                                                  m,
                                                                          }
                                                                      ),
                                                                  ],
                                                              }),
                                                              i('p', {
                                                                  children: v,
                                                              }),
                                                              i('p', {
                                                                  children: b,
                                                              }),
                                                              i('p', {
                                                                  children: h,
                                                              }),
                                                          ],
                                                      })
                                              )
                                          )
                                        : i('div', {
                                              children: i('div', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className:
                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    i('select', {
                                        name: '',
                                        id: '',
                                        className:
                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                        onChange: l,
                                        children: t.map((m, v) =>
                                            i(
                                                'option',
                                                {
                                                    value: m,
                                                    selected: m === f,
                                                    className:
                                                        'capitalize cursor-pointer bg-white',
                                                    children: m,
                                                },
                                                v
                                            )
                                        ),
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {
                                        onClick: s,
                                        className: 'cursor-pointer',
                                    }),
                                    u == null
                                        ? void 0
                                        : u.map((m, v) =>
                                              i(
                                                  'li',
                                                  {
                                                      children:
                                                          v + 1 === c
                                                              ? i('span', {
                                                                    className:
                                                                        'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                    children:
                                                                        v + 1,
                                                                })
                                                              : i('span', {
                                                                    className:
                                                                        'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                    onClick: (
                                                                        b
                                                                    ) =>
                                                                        p(b, v),
                                                                    children:
                                                                        v + 1,
                                                                }),
                                                  },
                                                  v
                                              )
                                          ),
                                    i(Ee, {
                                        onClick: o,
                                        className: 'cursor-pointer',
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    },
    sae = [
        {
            id: '1',
            advertName: 'Pepsi Advert',
            startDate: '02-May-22',
            endDate: '22-May-22',
            status: 'Active',
        },
        {
            id: '1',
            advertName: 'Pepsi Advert',
            startDate: '02-May-22',
            endDate: '22-May-22',
            status: 'Inactive',
        },
        {
            id: '1',
            advertName: 'Pepsi Advert',
            startDate: '02-May-22',
            endDate: '22-May-22',
            status: 'Inactive',
        },
        {
            id: '1',
            advertName: 'Pepsi Advert',
            startDate: '02-May-22',
            endDate: '22-May-22',
            status: 'Active',
        },
        {
            id: '1',
            advertName: 'Pepsi Advert',
            startDate: '02-May-22',
            endDate: '22-May-22',
            status: 'Active',
        },
        {
            id: '1',
            advertName: 'Pepsi Advert',
            startDate: '02-May-22',
            endDate: '22-May-22',
            status: 'Active',
        },
    ],
    cae = [
        {
            id: '1',
            estateName: 'Pepsi Estate',
            state: 'Lagos',
            address: 'No 1, Pepsi Street, Pepsi Estate',
            noOfResidents: 50,
        },
        {
            id: '1',
            estateName: 'Pepsi Estate',
            state: 'Lagos',
            address: 'No 1, Pepsi Street, Pepsi Estate',
            noOfResidents: 50,
        },
        {
            id: '1',
            estateName: 'Pepsi Estate',
            state: 'Lagos',
            address: 'No 1, Pepsi Street, Pepsi Estate',
            noOfResidents: 50,
        },
        {
            id: '1',
            estateName: 'Pepsi Estate',
            state: 'Lagos',
            address: 'No 1, Pepsi Street, Pepsi Estate',
            noOfResidents: 50,
        },
        {
            id: '1',
            estateName: 'Pepsi Estate',
            state: 'Lagos',
            address: 'No 1, Pepsi Street, Pepsi Estate',
            noOfResidents: 50,
        },
        {
            id: '1',
            estateName: 'Pepsi Estate',
            state: 'Lagos',
            address: 'No 1, Pepsi Street, Pepsi Estate',
            noOfResidents: 50,
        },
    ]
function uae() {
    const [e, t] = C.exports.useState(null),
        [r, n] = C.exports.useState(null),
        [a, l] = C.exports.useState('advertList')
    C.exports.useEffect(() => {
        ;(async () => {
            setTimeout(() => {
                t(sae), n(cae)
            }, 1e3)
        })()
    }, [])
    const o = {
        advertList: i(lae, { fetchedAdvertList: e != null ? e : [] }),
        availableEstates: i(oae, {
            fetchedAvailableEstateAdvert: r != null ? r : [],
        }),
    }
    return d('div', {
        children: [
            d('div', {
                className: 'estateDetail__radioBox',
                children: [
                    i('input', {
                        type: 'radio',
                        name: 'advert',
                        id: 'advertList',
                        className: 'hidden',
                        defaultChecked: !0,
                        onChange: () => l('advertList'),
                    }),
                    i('label', {
                        htmlFor: 'advertList',
                        className: 'capitalize',
                        children: 'Advert List',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'advert',
                        id: 'availableEstates',
                        className: 'hidden',
                        onChange: () => l('availableEstates'),
                    }),
                    i('label', {
                        htmlFor: 'availableEstates',
                        children: 'Available Estates',
                    }),
                ],
            }),
            i('div', {
                className: 'mt-8 grid gap-8',
                children: i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children:
                        e && e.length > 0
                            ? o[a]
                            : i('section', {
                                  className:
                                      'relative w-[70vw] h-[60vh] mx-auto grid',
                                  children: i('div', {
                                      className:
                                          'absolute w-full h-full grid place-content-center',
                                      children: i(Ne, {
                                          className:
                                              'animate-spin text-color-green-light text-5xl',
                                      }),
                                  }),
                              }),
                }),
            }),
        ],
    })
}
function dae() {
    return i('div', {
        children: i('div', {
            className: 'rounded-lg mt-[3rem] h-[80vh]',
            children: i(uae, {}),
        }),
    })
}
const fae = () => {
    const [e, t] = C.exports.useState([]),
        [r, n] = C.exports.useState(''),
        a = async (f) => {
            const p = await kr('#photoUpload')
            n(p)
        },
        l = (f) => {
            f.preventDefault()
        },
        o = C.exports.useRef(null)
    C.exports.useRef(null)
    const s = () => {
            o.current && o.current.close()
        },
        c = () => {
            o.current && o.current.showModal()
        }
    return d(me, {
        children: [
            i('dialog', {
                className: 'dialog',
                ref: o,
                children: i('section', {
                    className: 'grid place-content-center w-full h-[100vh]',
                    children: d('div', {
                        className:
                            'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                        children: [
                            i(Vt, {
                                className:
                                    'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                onClick: () => s(),
                            }),
                            d('div', {
                                className:
                                    'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/modalSuccess.svg',
                                        alt: '',
                                    }),
                                    i('p', {
                                        children:
                                            'You have successfully added an Advert',
                                    }),
                                    d('div', {
                                        className:
                                            'flex w-full justify-center gap-8',
                                        children: [
                                            i('button', {
                                                className:
                                                    'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[15rem]',
                                                onClick: () => s(),
                                                children: 'Cancel',
                                            }),
                                            i('button', {
                                                className:
                                                    'bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                onClick: () => {
                                                    s()
                                                },
                                                children: 'Ok',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                }),
            }),
            i('div', {
                className:
                    'grid p-8 bg-white h-[80vh] items-baseline overflow-y-scroll rounded-lg',
                children: d('form', {
                    onSubmit: l,
                    className: 'grid max-w-[84rem] gap-16 mt-12',
                    style: {
                        gridTemplateColumns:
                            ' repeat(auto-fit, minmax(35rem, 1fr))',
                    },
                    children: [
                        d('div', {
                            className: 'grid gap-4 relative ',
                            children: [
                                i('label', {
                                    htmlFor: 'advertName',
                                    className:
                                        'text-[1.4rem] font-Satoshi-Medium',
                                    children: 'Advert Name *',
                                }),
                                i('input', {
                                    type: 'text',
                                    required: !0,
                                    id: 'advertName',
                                    className:
                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                }),
                            ],
                        }),
                        i(ef, {
                            label: 'Estates',
                            placeholder: 'Select Estates',
                            selected: e,
                            selectFrom: ['Estate 1', 'Estate 2', 'Estate 3'],
                            setSelected: t,
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'startDate',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'Start Date',
                                }),
                                i('input', {
                                    type: 'date',
                                    required: !0,
                                    id: 'startDate',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid gap-4',
                            children: [
                                i('label', {
                                    htmlFor: 'endDate',
                                    className: 'text-[1.4rem] font-semibold',
                                    children: 'End Date',
                                }),
                                i('input', {
                                    type: 'date',
                                    required: !0,
                                    id: 'endDate',
                                    className:
                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid gap-4 relative',
                            children: [
                                i('label', {
                                    htmlFor: 'url',
                                    className:
                                        'text-[1.4rem] font-Satoshi-Medium',
                                    children: 'URL',
                                }),
                                i('input', {
                                    type: 'text',
                                    required: !0,
                                    id: 'url',
                                    className:
                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className:
                                'col-span-full rounded-lg border border-width-[.2rem] border-dashed border-color-grey-1 p-8 text-[1.6rem] relative w-full',
                            children: [
                                d('label', {
                                    htmlFor: 'photoUpload',
                                    className:
                                        'flex justify-center gap-4 items-center cursor-pointer',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/photo_library.svg',
                                            alt: '',
                                        }),
                                        d('p', {
                                            className: 'text-color-dark-1',
                                            style: {
                                                fontFamily: 'Satoshi-Light',
                                            },
                                            children: [
                                                'Drag estate manager picture here or',
                                                ' ',
                                                i('span', {
                                                    className:
                                                        'text-color-blue font-bold',
                                                    children: 'click',
                                                }),
                                                ' ',
                                                'to upload',
                                            ],
                                        }),
                                    ],
                                }),
                                i('input', {
                                    type: 'file',
                                    name: 'photoUpload',
                                    id: 'photoUpload',
                                    accept: 'image/*',
                                    className: 'hidden',
                                    onClick: a,
                                }),
                                r &&
                                    i('div', {
                                        className:
                                            'flex justify-center justify-self-center',
                                        children: i('img', {
                                            src: r,
                                            alt: 'photoPreview',
                                            className:
                                                'object-cover w-[11rem] h-[11rem] rounded-full',
                                        }),
                                    }),
                            ],
                        }),
                        d('button', {
                            className:
                                'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full',
                            style: { justifySelf: 'start' },
                            onClick: () => c(),
                            children: [
                                i('span', {
                                    children: i('img', {
                                        src: '/icons/admins/saveDisk.svg',
                                        alt: '',
                                        className: 'w-[1.7rem] h-[1.7rem]',
                                    }),
                                }),
                                ' ',
                                'Save Changes',
                            ],
                        }),
                    ],
                }),
            }),
        ],
    })
}
var Ep = {},
    pae = function () {
        var e = document.getSelection()
        if (!e.rangeCount) return function () {}
        for (
            var t = document.activeElement, r = [], n = 0;
            n < e.rangeCount;
            n++
        )
            r.push(e.getRangeAt(n))
        switch (t.tagName.toUpperCase()) {
            case 'INPUT':
            case 'TEXTAREA':
                t.blur()
                break
            default:
                t = null
                break
        }
        return (
            e.removeAllRanges(),
            function () {
                e.type === 'Caret' && e.removeAllRanges(),
                    e.rangeCount ||
                        r.forEach(function (a) {
                            e.addRange(a)
                        }),
                    t && t.focus()
            }
        )
    },
    hae = pae,
    Hw = { 'text/plain': 'Text', 'text/html': 'Url', default: 'Text' },
    mae = 'Copy to clipboard: #{key}, Enter'
function gae(e) {
    var t = (/mac os x/i.test(navigator.userAgent) ? '\u2318' : 'Ctrl') + '+C'
    return e.replace(/#{\s*key\s*}/g, t)
}
function vae(e, t) {
    var r,
        n,
        a,
        l,
        o,
        s,
        c = !1
    t || (t = {}), (r = t.debug || !1)
    try {
        ;(a = hae()),
            (l = document.createRange()),
            (o = document.getSelection()),
            (s = document.createElement('span')),
            (s.textContent = e),
            (s.ariaHidden = 'true'),
            (s.style.all = 'unset'),
            (s.style.position = 'fixed'),
            (s.style.top = 0),
            (s.style.clip = 'rect(0, 0, 0, 0)'),
            (s.style.whiteSpace = 'pre'),
            (s.style.webkitUserSelect = 'text'),
            (s.style.MozUserSelect = 'text'),
            (s.style.msUserSelect = 'text'),
            (s.style.userSelect = 'text'),
            s.addEventListener('copy', function (f) {
                if ((f.stopPropagation(), t.format))
                    if ((f.preventDefault(), typeof f.clipboardData > 'u')) {
                        r && console.warn('unable to use e.clipboardData'),
                            r && console.warn('trying IE specific stuff'),
                            window.clipboardData.clearData()
                        var p = Hw[t.format] || Hw.default
                        window.clipboardData.setData(p, e)
                    } else
                        f.clipboardData.clearData(),
                            f.clipboardData.setData(t.format, e)
                t.onCopy && (f.preventDefault(), t.onCopy(f.clipboardData))
            }),
            document.body.appendChild(s),
            l.selectNodeContents(s),
            o.addRange(l)
        var u = document.execCommand('copy')
        if (!u) throw new Error('copy command was unsuccessful')
        c = !0
    } catch (f) {
        r && console.error('unable to copy using execCommand: ', f),
            r && console.warn('trying IE specific stuff')
        try {
            window.clipboardData.setData(t.format || 'text', e),
                t.onCopy && t.onCopy(window.clipboardData),
                (c = !0)
        } catch (p) {
            r && console.error('unable to copy using clipboardData: ', p),
                r && console.error('falling back to prompt'),
                (n = gae('message' in t ? t.message : mae)),
                window.prompt(n, e)
        }
    } finally {
        o &&
            (typeof o.removeRange == 'function'
                ? o.removeRange(l)
                : o.removeAllRanges()),
            s && document.body.removeChild(s),
            a()
    }
    return c
}
var yae = vae
function N1(e) {
    return (
        (N1 =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (t) {
                      return typeof t
                  }
                : function (t) {
                      return t &&
                          typeof Symbol == 'function' &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? 'symbol'
                          : typeof t
                  }),
        N1(e)
    )
}
Object.defineProperty(Ep, '__esModule', { value: !0 })
Ep.CopyToClipboard = void 0
var au = ES(C.exports),
    bae = ES(yae),
    xae = ['text', 'onCopy', 'options', 'children']
function ES(e) {
    return e && e.__esModule ? e : { default: e }
}
function Gw(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function qw(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? Gw(Object(r), !0).forEach(function (n) {
                  qv(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : Gw(Object(r)).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function wae(e, t) {
    if (e == null) return {}
    var r = Nae(e, t),
        n,
        a
    if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(e)
        for (a = 0; a < l.length; a++)
            (n = l[a]),
                !(t.indexOf(n) >= 0) &&
                    (!Object.prototype.propertyIsEnumerable.call(e, n) ||
                        (r[n] = e[n]))
    }
    return r
}
function Nae(e, t) {
    if (e == null) return {}
    var r = {},
        n = Object.keys(e),
        a,
        l
    for (l = 0; l < n.length; l++)
        (a = n[l]), !(t.indexOf(a) >= 0) && (r[a] = e[a])
    return r
}
function Sae(e, t) {
    if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function')
}
function Kw(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r]
        ;(n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n)
    }
}
function Cae(e, t, r) {
    return (
        t && Kw(e.prototype, t),
        r && Kw(e, r),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        e
    )
}
function Pae(e, t) {
    if (typeof t != 'function' && t !== null)
        throw new TypeError(
            'Super expression must either be null or a function'
        )
    ;(e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, writable: !0, configurable: !0 },
    })),
        Object.defineProperty(e, 'prototype', { writable: !1 }),
        t && S1(e, t)
}
function S1(e, t) {
    return (
        (S1 =
            Object.setPrototypeOf ||
            function (n, a) {
                return (n.__proto__ = a), n
            }),
        S1(e, t)
    )
}
function _ae(e) {
    var t = Eae()
    return function () {
        var n = tf(e),
            a
        if (t) {
            var l = tf(this).constructor
            a = Reflect.construct(n, arguments, l)
        } else a = n.apply(this, arguments)
        return Aae(this, a)
    }
}
function Aae(e, t) {
    if (t && (N1(t) === 'object' || typeof t == 'function')) return t
    if (t !== void 0)
        throw new TypeError(
            'Derived constructors may only return object or undefined'
        )
    return kS(e)
}
function kS(e) {
    if (e === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        )
    return e
}
function Eae() {
    if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1
    if (typeof Proxy == 'function') return !0
    try {
        return (
            Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
            ),
            !0
        )
    } catch {
        return !1
    }
}
function tf(e) {
    return (
        (tf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (r) {
                  return r.__proto__ || Object.getPrototypeOf(r)
              }),
        tf(e)
    )
}
function qv(e, t, r) {
    return (
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
var OS = (function (e) {
    Pae(r, e)
    var t = _ae(r)
    function r() {
        var n
        Sae(this, r)
        for (var a = arguments.length, l = new Array(a), o = 0; o < a; o++)
            l[o] = arguments[o]
        return (
            (n = t.call.apply(t, [this].concat(l))),
            qv(kS(n), 'onClick', function (s) {
                var c = n.props,
                    u = c.text,
                    f = c.onCopy,
                    p = c.children,
                    m = c.options,
                    v = au.default.Children.only(p),
                    b = (0, bae.default)(u, m)
                f && f(u, b),
                    v &&
                        v.props &&
                        typeof v.props.onClick == 'function' &&
                        v.props.onClick(s)
            }),
            n
        )
    }
    return (
        Cae(r, [
            {
                key: 'render',
                value: function () {
                    var a = this.props
                    a.text, a.onCopy, a.options
                    var l = a.children,
                        o = wae(a, xae),
                        s = au.default.Children.only(l)
                    return au.default.cloneElement(
                        s,
                        qw(qw({}, o), {}, { onClick: this.onClick })
                    )
                },
            },
        ]),
        r
    )
})(au.default.PureComponent)
Ep.CopyToClipboard = OS
qv(OS, 'defaultProps', { onCopy: void 0, options: void 0 })
var kae = Ep,
    C1 = kae.CopyToClipboard
C1.CopyToClipboard = C1
var Oae = C1
function gl(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 1024 1024' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5zm-63.57-320.64L836 122.88a8 8 0 0 0-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 0 0 0 11.31L155.17 889a8 8 0 0 0 11.31 0l712.15-712.12a8 8 0 0 0 0-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 0 0-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 0 1 146.2-106.69L401.31 546.2A112 112 0 0 1 396 512z',
                },
            },
            {
                tag: 'path',
                attr: {
                    d: 'M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 0 0 227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 0 1-112 112z',
                },
            },
        ],
    })(e)
}
function vl(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 1024 1024' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z',
                },
            },
        ],
    })(e)
}
function Tae(e) {
    return nt({
        tag: 'svg',
        attr: { viewBox: '0 0 1024 1024' },
        child: [
            {
                tag: 'path',
                attr: {
                    d: 'M574 665.4a8.03 8.03 0 0 0-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8a8.03 8.03 0 0 0-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zm258.6-474c-84.6-84.6-221.5-84.6-306 0L410.3 307.6a8.03 8.03 0 0 0 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6a8.03 8.03 0 0 0 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1zM610.1 372.3a8.03 8.03 0 0 0-11.3 0L372.3 598.7a8.03 8.03 0 0 0 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z',
                },
            },
        ],
    })(e)
}
const Mae = [
    {
        name: 'Click Rate',
        data: [
            { category: 'Mon', value: 14 },
            { category: 'Tue', value: 17 },
            { category: 'Wed', value: 5 },
            { category: 'Thur', value: 12 },
            { category: 'Fri', value: 16 },
            { category: 'Sat', value: 13 },
            { category: 'Sun', value: 18 },
        ],
    },
]
function Dae() {
    return d(Gee, {
        width: 1e3,
        height: 300,
        margin: { top: 5, right: 30, left: 20, bottom: 5 },
        children: [
            i(Ii, {
                dataKey: 'category',
                type: 'category',
                allowDuplicatedCategory: !1,
            }),
            i(Ri, { dataKey: 'value' }),
            i(jn, {}),
            Mae.map((e) =>
                i(
                    Nc,
                    {
                        fill: '#08D231',
                        stroke: '#08D231',
                        dataKey: 'value',
                        data: e.data,
                        name: e.name,
                    },
                    e.name
                )
            ),
        ],
    })
}
const Yw = 'https://sesadigital.com/thelink_copyhere',
    $ae = ['This Week', 'This Month', 'This Year'],
    Iae = () => {
        const e = Me(),
            [t, r] = C.exports.useState(!1),
            n = () => r(!t),
            [a, l] = C.exports.useState('This Week'),
            o = (x) => {
                l(x), r(!1)
            },
            [s, c] = C.exports.useState('Deactivate'),
            u = C.exports.useRef(null),
            f = () => {
                u.current && u.current.close()
            },
            p = (x) => {
                x === 'Deactivate' && c('Deactivate'),
                    x === 'Delete' && c('Delete'),
                    u.current && u.current.showModal()
            },
            m = (x) => {
                x === 'Deactivate' && p('Deactivate'),
                    x === 'Delete' && p('Delete')
            },
            v = () => {
                f(),
                    fe('Advert deleted successfully', {
                        type: 'error',
                        className: 'bg-red-100 text-red-600 text-[1.4rem]',
                    })
            },
            b = () => {
                f(),
                    fe('Advert deactivated successfully', {
                        type: 'error',
                        className: 'bg-red-100 text-red-600 text-[1.4rem]',
                    })
            },
            h = () => {
                e('/superAdmin/advert/clickrate/increase')
            },
            g = () => {
                e('/superAdmin/advert/clickrate/decrease')
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: u,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children:
                                s === 'Deactivate'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to deactivate this Advert',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => f(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: b,
                                                          children:
                                                              'Deactivate',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to delete this Advert',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => f(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: v,
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'grid p-8 bg-white h-[85vh] items-baseline overflow-y-scroll rounded-lg text-[1.6rem] gap-[10rem]',
                    children: [
                        d('section', {
                            className: 'grid gap-8',
                            children: [
                                i('h2', {
                                    className:
                                        'text-[2rem] font-Satoshi-Medium',
                                    children: 'Advert Preview',
                                }),
                                i('img', {
                                    src: '/img/advertHero.png',
                                    alt: '',
                                    className:
                                        'h-[40rem] w-[120rem] object-cover rounded-lg flex self-stretch',
                                }),
                                d('div', {
                                    className: 'pt-20 grid gap-10',
                                    children: [
                                        i('h2', {
                                            className:
                                                'text-[2rem] font-Satoshi-Medium',
                                            children: 'Advert Overview',
                                        }),
                                        d('div', {
                                            className: 'flex justify-between',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex gap-4 items-center',
                                                    children: [
                                                        i('img', {
                                                            src: '/img/video.svg',
                                                            alt: '',
                                                            className:
                                                                'object-cover w-[4rem] h-[4rem] rounded-full',
                                                        }),
                                                        d('div', {
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'font-Satoshi-Light',
                                                                    children:
                                                                        'Advert Name',
                                                                }),
                                                                i('p', {
                                                                    children:
                                                                        'Pepsi Advert',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex gap-4 items-center',
                                                    children: [
                                                        i('img', {
                                                            src: '/img/startDate.svg',
                                                            alt: '',
                                                            className:
                                                                'object-cover w-[4rem] h-[4rem] rounded-full',
                                                        }),
                                                        d('div', {
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'font-Satoshi-Light',
                                                                    children:
                                                                        'Start Date',
                                                                }),
                                                                i('p', {
                                                                    children:
                                                                        '12 May, 2022',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex gap-4 items-center',
                                                    children: [
                                                        i('img', {
                                                            src: '/img/endDate.svg',
                                                            alt: '',
                                                            className:
                                                                'object-cover w-[4rem] h-[4rem] rounded-full',
                                                        }),
                                                        d('div', {
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'font-Satoshi-Light',
                                                                    children:
                                                                        'End Date',
                                                                }),
                                                                i('p', {
                                                                    children:
                                                                        '12 Aug, 2022',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'bg-gray-100 text-gray-400 rounded-lg px-5 flex items-center py-2 gap-4',
                                            children: [
                                                i(Tae, {
                                                    className: 'text-[1.8rem]',
                                                }),
                                                i('p', {
                                                    className:
                                                        'border-l border-l-gray-300 pl-4',
                                                    children: Yw,
                                                }),
                                                i(Oae.CopyToClipboard, {
                                                    text: Yw,
                                                    children: i('button', {
                                                        className:
                                                            'btn text-white bg-color-blue-1 w-[10rem] rounded-lg ml-auto',
                                                        children: 'Copy',
                                                    }),
                                                }),
                                                ' ',
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            className: 'grid gap-8',
                            children: [
                                i('h2', {
                                    className:
                                        'text-[2rem] font-Satoshi-Medium',
                                    children: 'Advert Numbers',
                                }),
                                d('div', {
                                    className: 'grid',
                                    style: {
                                        gridTemplateColumns: '2fr 1fr 2fr',
                                    },
                                    children: [
                                        d('div', {
                                            className:
                                                'grid justify-items-start',
                                            children: [
                                                i('p', {
                                                    children: 'Advert Clicks',
                                                }),
                                                d('div', {
                                                    className: 'flex gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[3rem]',
                                                            children: '164',
                                                        }),
                                                        d('p', {
                                                            className:
                                                                ' font-Satoshi-Light text-green-500 flex items-center',
                                                            children: [
                                                                i(oA, {}),
                                                                i('span', {
                                                                    children:
                                                                        '5% increase from yesterday',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                i('button', {
                                                    className:
                                                        ' text-color-blue-1',
                                                    onClick: h,
                                                    children: 'View Details',
                                                }),
                                            ],
                                        }),
                                        i('div', {
                                            className:
                                                'h-full w-[1px] bg-gray-300',
                                            children: '\xA0',
                                        }),
                                        d('div', {
                                            className:
                                                'grid justify-items-start',
                                            children: [
                                                i('p', {
                                                    children: 'Advert Views',
                                                }),
                                                d('div', {
                                                    className: 'flex gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[3rem]',
                                                            children: '164',
                                                        }),
                                                        d('p', {
                                                            className:
                                                                ' font-Satoshi-Light text-red-500 flex items-center',
                                                            children: [
                                                                i(lA, {}),
                                                                i('span', {
                                                                    children:
                                                                        '5% decrease from yesterday',
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                i('button', {
                                                    className:
                                                        ' text-color-blue-1',
                                                    onClick: g,
                                                    children: 'View Details',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        d('div', {
                                            className: 'flex justify-between',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'text-[1.6rem] font-bold p-8',
                                                    children: 'Click Rate',
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative grid gap-4',
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'relative flex items-center w-[12rem]',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                    onClick: n,
                                                                    children: a,
                                                                }),
                                                                t
                                                                    ? i(dt, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      })
                                                                    : i(le, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      }),
                                                            ],
                                                        }),
                                                        t &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children:
                                                                    $ae.map(
                                                                        (
                                                                            x,
                                                                            w
                                                                        ) =>
                                                                            i(
                                                                                'p',
                                                                                {
                                                                                    className:
                                                                                        'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                    onClick:
                                                                                        () =>
                                                                                            o(
                                                                                                x
                                                                                            ),
                                                                                    children:
                                                                                        x,
                                                                                },
                                                                                w
                                                                            )
                                                                    ),
                                                            }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(Dae, {}),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            className: 'flex gap-8',
                            children: [
                                i('button', {
                                    className:
                                        'border border-color-blue-1 text-color-blue-1 px-16 py-4 flex items-center  rounded-lg gap-4',
                                    onClick: () => m('Deactivate'),
                                    children: i('span', {
                                        className:
                                            ' text-[1.4rem] font-semibold',
                                        children: 'Deactivate',
                                    }),
                                }),
                                d('button', {
                                    className:
                                        'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                    onClick: () => m('Delete'),
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/delete.svg',
                                            alt: '',
                                        }),
                                        i('span', {
                                            className:
                                                'text-red-600 text-[1.4rem] font-semibold',
                                            children: 'Delete',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    }
function TS(e) {
    return nt({
        tag: 'svg',
        attr: {
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
        },
        child: [
            {
                tag: 'path',
                attr: { d: 'M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4' },
            },
            { tag: 'polyline', attr: { points: '7 10 12 15 17 10' } },
            { tag: 'line', attr: { x1: '12', y1: '15', x2: '12', y2: '3' } },
        ],
    })(e)
}
const Rae = [
        {
            id: '1',
            estateName: 'Sun City',
            location: 'Lagos',
            noOfResidents: 50,
            noOfViews: 100,
        },
        {
            id: '1',
            estateName: 'Sun City',
            location: 'Lagos',
            noOfResidents: 50,
            noOfViews: 100,
        },
        {
            id: '1',
            estateName: 'Sun City',
            location: 'Lagos',
            noOfResidents: 50,
            noOfViews: 100,
        },
        {
            id: '1',
            estateName: 'Sun City',
            location: 'Lagos',
            noOfResidents: 50,
            noOfViews: 100,
        },
        {
            id: '1',
            estateName: 'Sun City',
            location: 'Lagos',
            noOfResidents: 50,
            noOfViews: 100,
        },
        {
            id: '1',
            estateName: 'Sun City',
            location: 'Lagos',
            noOfResidents: 50,
            noOfViews: 100,
        },
    ],
    Lae = () => {
        Me()
        const [e, t] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                t(Rae)
            }, 1e3)
        }, [])
        const r = [2, 4, 6, 8],
            n = 4,
            [a, l] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: n,
                totalPage: Math.ceil(e.length / n),
                slicedPages: null,
            }),
            o = (b) => {
                const h = parseInt(b.target.value),
                    g = []
                for (let x = 0; x < e.length; x += h) g.push(e.slice(x, x + h))
                l((x) => ({
                    ...x,
                    itemsPerPage: h,
                    index: 0,
                    currentPage: 1,
                    slicedPages: g,
                    totalPage: Math.ceil(e.length / h),
                }))
            }
        C.exports.useEffect(() => {
            const b = []
            for (let h = 0; h < e.length; h += a.itemsPerPage)
                b.push(e.slice(h, h + a.itemsPerPage))
            l((h) => ({
                ...h,
                slicedPages: b,
                totalPage: Math.ceil(e.length / a.itemsPerPage),
            }))
        }, [e])
        const s = () => {
                console.log(a.currentPage, a.totalPage),
                    a.currentPage !== a.totalPage &&
                        l((b) => ({
                            ...b,
                            index: b.index + 1,
                            currentPage: b.currentPage + 1,
                        }))
            },
            c = () => {
                a.currentPage !== 1 &&
                    l((b) => ({
                        ...b,
                        index: b.index - 1,
                        currentPage: b.currentPage - 1,
                    }))
            },
            { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
            m = (b, h) => {
                l((g) => ({ ...g, index: h, currentPage: h + 1 }))
            }
        return i(me, {
            children: d('div', {
                className: 'grid text-[1.6rem] border',
                children: [
                    d('div', {
                        className:
                            'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                        children: [
                            d('p', {
                                className: ' font-bold',
                                children: [
                                    'Total Views ',
                                    i('span', { children: '(10)' }),
                                ],
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/search.svg',
                                        alt: '',
                                        className:
                                            'absolute left-4 text-[4rem]',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                        className:
                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                    }),
                                ],
                            }),
                            d('button', {
                                className:
                                    'btn border-[#0556E5] text-[#0556E5] border rounded-lg gap-3 ml-auto flex items-center',
                                onClick: () => {
                                    console.log('download csv')
                                },
                                children: [i(TS, {}), 'Download CSV'],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'grid bg-white',
                        children: [
                            d('div', {
                                className:
                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-4 gap-8',
                                style: { fontSize: '1.4rem' },
                                children: [
                                    d('p', {
                                        className: 'flex items-center gap-2',
                                        children: [
                                            i('input', {
                                                type: 'checkbox',
                                                className: 'cursor-pointer',
                                            }),
                                            i('p', { children: 'Estate Name' }),
                                        ],
                                    }),
                                    i('p', { children: 'Location' }),
                                    i('p', { children: 'No of Views' }),
                                    i('p', { children: 'No of Residents' }),
                                ],
                            }),
                            i('div', {
                                className: 'grid gap-8 mt-8 p-8',
                                children:
                                    f && f.length > 0
                                        ? K.Children.toArray(
                                              f[a.index].map(
                                                  (
                                                      {
                                                          estateName: b,
                                                          location: h,
                                                          noOfResidents: g,
                                                          noOfViews: x,
                                                      },
                                                      w
                                                  ) =>
                                                      d('div', {
                                                          className:
                                                              'grid justify-between border-b grid-cols-4 items-center gap-8 ',
                                                          children: [
                                                              d('p', {
                                                                  className:
                                                                      'flex items-center gap-4',
                                                                  children: [
                                                                      i(
                                                                          'input',
                                                                          {
                                                                              type: 'checkbox',
                                                                              className:
                                                                                  'cursor-pointer',
                                                                          }
                                                                      ),
                                                                      i(
                                                                          'span',
                                                                          {
                                                                              children:
                                                                                  b,
                                                                          }
                                                                      ),
                                                                  ],
                                                              }),
                                                              i('p', {
                                                                  children: h,
                                                              }),
                                                              i('p', {
                                                                  children: g,
                                                              }),
                                                              i('p', {
                                                                  children: x,
                                                              }),
                                                          ],
                                                      })
                                              )
                                          )
                                        : i('div', {
                                              children: i('div', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className:
                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    i('select', {
                                        name: '',
                                        id: '',
                                        className:
                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                        onChange: o,
                                        children: r.map((b, h) =>
                                            i(
                                                'option',
                                                {
                                                    value: b,
                                                    selected: b === p,
                                                    className:
                                                        'capitalize cursor-pointer bg-white',
                                                    children: b,
                                                },
                                                h
                                            )
                                        ),
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {
                                        onClick: c,
                                        className: 'cursor-pointer',
                                    }),
                                    f == null
                                        ? void 0
                                        : f.map((b, h) =>
                                              i(
                                                  'li',
                                                  {
                                                      children:
                                                          h + 1 === u
                                                              ? i('span', {
                                                                    className:
                                                                        'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                    children:
                                                                        h + 1,
                                                                })
                                                              : i('span', {
                                                                    className:
                                                                        'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                    onClick: (
                                                                        g
                                                                    ) =>
                                                                        m(g, h),
                                                                    children:
                                                                        h + 1,
                                                                }),
                                                  },
                                                  h
                                              )
                                          ),
                                    i(Ee, {
                                        onClick: s,
                                        className: 'cursor-pointer',
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    },
    jae = Array.from({ length: 10 }).map((e, t) => ({
        id: t,
        estateName: 'Sun City',
        location: 'Lagos',
        noOfResidents: Math.floor(Math.random() * 100 + 10),
        noOfViews: Math.floor(Math.random() * 100 + 10),
    })),
    Fae = () => {
        Me()
        const [e, t] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                t(jae)
            }, 1e3)
        }, [])
        const r = [2, 4, 6, 8],
            n = 4,
            [a, l] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: n,
                totalPage: Math.ceil(e.length / n),
                slicedPages: null,
            }),
            o = (b) => {
                const h = parseInt(b.target.value),
                    g = []
                for (let x = 0; x < e.length; x += h) g.push(e.slice(x, x + h))
                l((x) => ({
                    ...x,
                    itemsPerPage: h,
                    index: 0,
                    currentPage: 1,
                    slicedPages: g,
                    totalPage: Math.ceil(e.length / h),
                }))
            }
        C.exports.useEffect(() => {
            const b = []
            for (let h = 0; h < e.length; h += a.itemsPerPage)
                b.push(e.slice(h, h + a.itemsPerPage))
            l((h) => ({
                ...h,
                slicedPages: b,
                totalPage: Math.ceil(e.length / a.itemsPerPage),
            }))
        }, [e])
        const s = () => {
                console.log(a.currentPage, a.totalPage),
                    a.currentPage !== a.totalPage &&
                        l((b) => ({
                            ...b,
                            index: b.index + 1,
                            currentPage: b.currentPage + 1,
                        }))
            },
            c = () => {
                a.currentPage !== 1 &&
                    l((b) => ({
                        ...b,
                        index: b.index - 1,
                        currentPage: b.currentPage - 1,
                    }))
            },
            { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
            m = (b, h) => {
                l((g) => ({ ...g, index: h, currentPage: h + 1 }))
            }
        return i(me, {
            children: d('div', {
                className: 'grid text-[1.6rem] border',
                children: [
                    d('div', {
                        className:
                            'flex w-full items-center gap-12 p-10 bg-white rounded-lg',
                        children: [
                            d('p', {
                                className: ' font-bold',
                                children: [
                                    'Total Views ',
                                    i('span', { children: '(10)' }),
                                ],
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/search.svg',
                                        alt: '',
                                        className:
                                            'absolute left-4 text-[4rem]',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                        className:
                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                    }),
                                ],
                            }),
                            d('button', {
                                className:
                                    'btn border-[#0556E5] text-[#0556E5] border rounded-lg gap-3 ml-auto flex items-center',
                                onClick: () => {
                                    console.log('download csv')
                                },
                                children: [i(TS, {}), 'Download CSV'],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'grid bg-white',
                        children: [
                            d('div', {
                                className:
                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-4 gap-8',
                                style: { fontSize: '1.4rem' },
                                children: [
                                    d('p', {
                                        className: 'flex items-center gap-2',
                                        children: [
                                            i('input', {
                                                type: 'checkbox',
                                                className: 'cursor-pointer',
                                            }),
                                            i('p', { children: 'Estate Name' }),
                                        ],
                                    }),
                                    i('p', { children: 'Location' }),
                                    i('p', { children: 'No of Views' }),
                                    i('p', { children: 'No of Residents' }),
                                ],
                            }),
                            i('div', {
                                className: 'grid gap-8 mt-8 p-8',
                                children:
                                    f && f.length > 0
                                        ? K.Children.toArray(
                                              f[a.index].map(
                                                  (
                                                      {
                                                          estateName: b,
                                                          location: h,
                                                          noOfResidents: g,
                                                          noOfViews: x,
                                                      },
                                                      w
                                                  ) =>
                                                      d('div', {
                                                          className:
                                                              'grid justify-between border-b grid-cols-4 items-center gap-8 ',
                                                          children: [
                                                              d('p', {
                                                                  className:
                                                                      'flex items-center gap-4',
                                                                  children: [
                                                                      i(
                                                                          'input',
                                                                          {
                                                                              type: 'checkbox',
                                                                              className:
                                                                                  'cursor-pointer',
                                                                          }
                                                                      ),
                                                                      i(
                                                                          'span',
                                                                          {
                                                                              children:
                                                                                  b,
                                                                          }
                                                                      ),
                                                                  ],
                                                              }),
                                                              i('p', {
                                                                  children: h,
                                                              }),
                                                              i('p', {
                                                                  children: g,
                                                              }),
                                                              i('p', {
                                                                  children: x,
                                                              }),
                                                          ],
                                                      })
                                              )
                                          )
                                        : i('div', {
                                              children: i('div', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className:
                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    i('select', {
                                        name: '',
                                        id: '',
                                        className:
                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                        onChange: o,
                                        children: r.map((b, h) =>
                                            i(
                                                'option',
                                                {
                                                    value: b,
                                                    selected: b === p,
                                                    className:
                                                        'capitalize cursor-pointer bg-white',
                                                    children: b,
                                                },
                                                h
                                            )
                                        ),
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {
                                        onClick: c,
                                        className: 'cursor-pointer',
                                    }),
                                    f == null
                                        ? void 0
                                        : f.map((b, h) =>
                                              i(
                                                  'li',
                                                  {
                                                      children:
                                                          h + 1 === u
                                                              ? i('span', {
                                                                    className:
                                                                        'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                    children:
                                                                        h + 1,
                                                                })
                                                              : i('span', {
                                                                    className:
                                                                        'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                    onClick: (
                                                                        g
                                                                    ) =>
                                                                        m(g, h),
                                                                    children:
                                                                        h + 1,
                                                                }),
                                                  },
                                                  h
                                              )
                                          ),
                                    i(Ee, {
                                        onClick: s,
                                        className: 'cursor-pointer',
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    },
    Bae = () => {
        C.exports.useState(!0)
        const [e, t] = C.exports.useState(''),
            [r, n] = C.exports.useState(!1),
            a = () => n(!r)
        return d(me, {
            children: [
                i(ct, {}),
                d('div', {
                    className:
                        ' p-8 bg-white h-[80vh] overflow-y-scroll rounded-lg',
                    children: [
                        d('figure', {
                            className: 'grid text-center justify-start',
                            children: [
                                i('input', {
                                    type: 'file',
                                    name: 'photoUpload',
                                    id: 'photoUpload',
                                    accept: 'image/*',
                                    className: 'hidden',
                                    onClick: async (s) => {
                                        const c = await kr('#photoUpload')
                                        t(c)
                                    },
                                }),
                                i('img', {
                                    src: e || '/img/me.jpeg',
                                    alt: 'photoPreview',
                                    className:
                                        'object-cover w-[11rem] h-[11rem] rounded-full object-top',
                                }),
                                i('label', {
                                    htmlFor: 'photoUpload',
                                    className:
                                        'cursor-pointer text-color-blue-1 text-[1.6rem] text-center',
                                    children: 'Edit',
                                }),
                            ],
                        }),
                        d('form', {
                            onSubmit: (s) => {
                                s.preventDefault(),
                                    fe('Password Updated successfully', {
                                        type: 'success',
                                        className:
                                            'bg-green-100 text-green-600 text-[1.4rem]',
                                    })
                            },
                            className:
                                'grid max-w-[84rem] text-[1.6rem] mt-[5rem] gap-10',
                            style: {
                                gridTemplateColumns:
                                    ' repeat(auto-fit, minmax(35rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    children: [
                                        i('label', {
                                            className: 'font-Satoshi-Medium',
                                            children: 'Current Password',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('input', {
                                                    type: r
                                                        ? 'text'
                                                        : 'password',
                                                    className:
                                                        'border pr-12 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                    name: 'password',
                                                }),
                                                i('span', {
                                                    className:
                                                        'absolute right-2 cursor-pointer',
                                                    children: r
                                                        ? i(gl, { onClick: a })
                                                        : i(vl, { onClick: a }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('label', {
                                            className: 'font-Satoshi-Medium',
                                            children: 'New Password',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('input', {
                                                    type: r
                                                        ? 'text'
                                                        : 'password',
                                                    className:
                                                        'border pr-12 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                    name: 'password',
                                                }),
                                                i('span', {
                                                    className:
                                                        'absolute right-2 cursor-pointer',
                                                    children: r
                                                        ? i(gl, { onClick: a })
                                                        : i(vl, { onClick: a }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('label', {
                                            className: 'font-Satoshi-Medium',
                                            children: 'Re-Enter New Password',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('input', {
                                                    type: r
                                                        ? 'text'
                                                        : 'password',
                                                    className:
                                                        'border pr-12 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                    name: 'password',
                                                }),
                                                i('span', {
                                                    className:
                                                        'absolute right-2 cursor-pointer',
                                                    children: r
                                                        ? i(gl, { onClick: a })
                                                        : i(vl, { onClick: a }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full mt-[10rem]',
                                    style: { justifySelf: 'start' },
                                    children: [
                                        i('span', {
                                            children: i('img', {
                                                src: '/icons/admins/saveDisk.svg',
                                                alt: '',
                                                className:
                                                    'w-[1.7rem] h-[1.7rem]',
                                            }),
                                        }),
                                        ' ',
                                        'Save Changes',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    MS = () => {
        Me()
        const e = C.exports.useRef(null),
            t = () => {
                e.current && e.current.close()
            },
            r = () => {
                e.current && e.current.showModal()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: e,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children: [
                                i('img', {
                                    src: '/icons/admins/modalWarning.svg',
                                    alt: '',
                                }),
                                i('p', {
                                    className: 'text-[1.6rem]',
                                    children:
                                        'Are you sure you want to delete this Property Type',
                                }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => t(),
                                            children: 'Cancel',
                                        }),
                                        i('button', {
                                            className:
                                                'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                            onClick: () => {
                                                t(),
                                                    fe(
                                                        'Property Deleted successfully',
                                                        {
                                                            type: 'success',
                                                            className:
                                                                'bg-green-100 text-green-600 text-[1.4rem]',
                                                        }
                                                    )
                                            },
                                            children: 'Delete',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid text-[1.6rem] border rounded-lg bg-white',
                    children: [
                        i('div', {
                            className: ' p-10  rounded-lg ',
                            children: d('div', {
                                className:
                                    'flex w-full border-b items-center pb-5 justify-between',
                                children: [
                                    i('h2', {
                                        className: 'heading2',
                                        children: 'Property Type',
                                    }),
                                    d('button', {
                                        className:
                                            'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                        onClick: () => r(),
                                        children: [
                                            i('img', {
                                                src: '/icons/admins/delete.svg',
                                                alt: '',
                                            }),
                                            i('span', {
                                                className:
                                                    'text-red-600 text-[1.4rem] font-semibold',
                                                children: 'Delete',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        }),
                        d('form', {
                            className: 'grid gap-8 mt-8 p-8 max-w-[60rem]',
                            onSubmit: (l) => {
                                l.preventDefault()
                            },
                            children: [
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'propertyType',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Property Type',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'propertyType',
                                            className:
                                                'w-[40rem] rounded-lg border border-color-grey text-[1.6rem] outline-color-blue-1 py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'description',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Description',
                                        }),
                                        i('textarea', {
                                            required: !0,
                                            rows: 4,
                                            id: 'description',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-color-blue-1 py-4 px-4',
                                        }),
                                        i('p', {
                                            className:
                                                ' text-[1.2rem] text-gray-400',
                                            children:
                                                'Maximum of 30 Characters',
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full mt-[10rem]',
                                    style: { justifySelf: 'start' },
                                    children: [
                                        i('span', {
                                            children: i('img', {
                                                src: '/icons/admins/saveDisk.svg',
                                                alt: '',
                                                className:
                                                    'w-[1.7rem] h-[1.7rem]',
                                            }),
                                        }),
                                        ' ',
                                        'Save Changes',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    zae = () =>
        d(me, {
            children: [
                i(ct, {}),
                d('div', {
                    className: 'p-8 bg-white h-[80vh] rounded-lg',
                    children: [
                        i('h2', {
                            className: 'heading2 border-b pb-10',
                            children: 'Platform Changes',
                        }),
                        d('form', {
                            onSubmit: (t) => {
                                t.preventDefault(),
                                    fe('Changes saved successfully', {
                                        type: 'success',
                                        className:
                                            'bg-green-100 text-green-600 text-[1.4rem]',
                                    })
                            },
                            className:
                                'grid max-w-[84rem] gap-16 mt-12 items-center',
                            style: {
                                gridTemplateColumns:
                                    ' repeat(auto-fit, minmax(35rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    children: [
                                        i('label', {
                                            htmlFor: 'KYR',
                                            children: i('p', {
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'KYR Validation',
                                            }),
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('img', {
                                                    src: '/icons/Naira.svg',
                                                    alt: '',
                                                    className:
                                                        'absolute left-3',
                                                }),
                                                i('input', {
                                                    type: 'number',
                                                    required: !0,
                                                    placeholder: '40',
                                                    id: 'description',
                                                    className:
                                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                }),
                                            ],
                                        }),
                                        i('p', {
                                            className:
                                                ' text-[1.2rem] text-gray-400',
                                            children: 'Charges Per Validation',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('label', {
                                            htmlFor: 'KYR',
                                            children: i('p', {
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'SMS Notification',
                                            }),
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('img', {
                                                    src: '/icons/Naira.svg',
                                                    alt: '',
                                                    className:
                                                        'absolute left-3',
                                                }),
                                                i('input', {
                                                    type: 'number',
                                                    required: !0,
                                                    placeholder: '40',
                                                    id: 'description',
                                                    className:
                                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                }),
                                            ],
                                        }),
                                        i('p', {
                                            className:
                                                ' text-[1.2rem] text-gray-400',
                                            children:
                                                'Charges Per sms notification',
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full mt-[10rem]',
                                    style: { justifySelf: 'start' },
                                    children: [
                                        i('span', {
                                            children: i('img', {
                                                src: '/icons/admins/saveDisk.svg',
                                                alt: '',
                                                className:
                                                    'w-[1.7rem] h-[1.7rem]',
                                            }),
                                        }),
                                        ' ',
                                        'Save Changes',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        }),
    Vae = [
        {
            id: '1',
            file: 'file 1',
            count: 2,
            estates: 2,
            createdAt: '01 Feb 2023 12:00pm',
        },
        {
            id: '2',
            file: 'file 2',
            count: 22,
            estates: 42,
            createdAt: '01 Feb 2023 12:00pm',
        },
        {
            id: '1',
            file: 'file 3',
            count: 31,
            estates: 12,
            createdAt: '01 Feb 2023 12:00pm',
        },
        {
            id: '1',
            file: 'file 4',
            count: 2,
            estates: 2,
            createdAt: '01 Feb 2023 12:00pm',
        },
    ],
    Uae = () => {
        const e = Me(),
            [t, r] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                r(Vae)
            }, 1e3)
        }, [])
        const n = [2, 4, 6, 8],
            a = 4,
            [l, o] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: a,
                totalPage: Math.ceil(t.length / a),
                slicedPages: null,
            }),
            s = (g) => {
                const x = parseInt(g.target.value),
                    w = []
                for (let y = 0; y < t.length; y += x) w.push(t.slice(y, y + x))
                o((y) => ({
                    ...y,
                    itemsPerPage: x,
                    index: 0,
                    currentPage: 1,
                    slicedPages: w,
                    totalPage: Math.ceil(t.length / x),
                }))
            }
        C.exports.useEffect(() => {
            const g = []
            for (let x = 0; x < t.length; x += l.itemsPerPage)
                g.push(t.slice(x, x + l.itemsPerPage))
            o((x) => ({
                ...x,
                slicedPages: g,
                totalPage: Math.ceil(t.length / l.itemsPerPage),
            }))
        }, [t])
        const c = () => {
                console.log(l.currentPage, l.totalPage),
                    l.currentPage !== l.totalPage &&
                        o((g) => ({
                            ...g,
                            index: g.index + 1,
                            currentPage: g.currentPage + 1,
                        }))
            },
            u = () => {
                l.currentPage !== 1 &&
                    o((g) => ({
                        ...g,
                        index: g.index - 1,
                        currentPage: g.currentPage - 1,
                    }))
            },
            { currentPage: f, slicedPages: p, itemsPerPage: m } = l,
            v = (g, x) => {
                o((w) => ({ ...w, index: x, currentPage: x + 1 }))
            },
            b = () => {
                e('/superAdmin/platformSettings/addSOS')
            },
            h = (g) => {
                e(`/superAdmin/platformSettings/SOSDetails/${g}`)
            }
        return i(me, {
            children: d('div', {
                className: 'grid text-[1.6rem] border rounded-lg',
                children: [
                    i('div', {
                        className: ' p-10 bg-white rounded-lg ',
                        children: d('div', {
                            className: 'flex w-full border-b items-center pb-5',
                            children: [
                                i('h2', {
                                    className: 'heading2',
                                    children: 'SOS Table',
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg ml-auto',
                                    onClick: b,
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add SOS',
                                    ],
                                }),
                            ],
                        }),
                    }),
                    d('div', {
                        className: 'grid bg-white',
                        children: [
                            d('div', {
                                className:
                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-5 gap-8 text-[1.6rem]',
                                children: [
                                    d('p', {
                                        className: 'flex items-center gap-4',
                                        children: [
                                            i('input', {
                                                type: 'checkbox',
                                                name: 'sos',
                                                id: 'sos',
                                                className: 'cursor-pointer',
                                            }),
                                            i('label', {
                                                htmlFor: 'sos',
                                                children: 'Files',
                                            }),
                                        ],
                                    }),
                                    i('p', { children: 'Count' }),
                                    i('p', { children: 'Estates' }),
                                    i('p', { children: 'Created At' }),
                                    i('p', { children: 'Actions' }),
                                ],
                            }),
                            i('div', {
                                className: 'grid gap-8 mt-8 p-8',
                                children:
                                    p && p.length > 0
                                        ? K.Children.toArray(
                                              p[l.index].map(
                                                  ({
                                                      id: g,
                                                      file: x,
                                                      estates: w,
                                                      count: y,
                                                      createdAt: N,
                                                  }) =>
                                                      d('div', {
                                                          className:
                                                              'grid justify-between border-b grid-cols-5 items-center gap-8 ',
                                                          children: [
                                                              d('p', {
                                                                  className:
                                                                      'flex items-center gap-4',
                                                                  children: [
                                                                      i(
                                                                          'input',
                                                                          {
                                                                              type: 'checkbox',
                                                                              className:
                                                                                  'cursor-pointer',
                                                                              name: 'file',
                                                                              id: 'file',
                                                                          }
                                                                      ),
                                                                      i(
                                                                          'label',
                                                                          {
                                                                              htmlFor:
                                                                                  'file',
                                                                              children:
                                                                                  x,
                                                                          }
                                                                      ),
                                                                  ],
                                                              }),
                                                              i('p', {
                                                                  children: y,
                                                              }),
                                                              i('p', {
                                                                  children: w,
                                                              }),
                                                              i('p', {
                                                                  children: N,
                                                              }),
                                                              i('button', {
                                                                  className:
                                                                      'text-color-primary text-left',
                                                                  onClick: () =>
                                                                      h(g),
                                                                  children:
                                                                      'View Details',
                                                              }),
                                                          ],
                                                      })
                                              )
                                          )
                                        : i('div', {
                                              children: i('div', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className:
                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    i('select', {
                                        name: '',
                                        id: '',
                                        className:
                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                        onChange: s,
                                        children: n.map((g, x) =>
                                            i(
                                                'option',
                                                {
                                                    value: g,
                                                    selected: g === m,
                                                    className:
                                                        'capitalize cursor-pointer bg-white',
                                                    children: g,
                                                },
                                                x
                                            )
                                        ),
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {
                                        onClick: u,
                                        className: 'cursor-pointer',
                                    }),
                                    p == null
                                        ? void 0
                                        : p.map((g, x) =>
                                              i(
                                                  'li',
                                                  {
                                                      children:
                                                          x + 1 === f
                                                              ? i('span', {
                                                                    className:
                                                                        'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                    children:
                                                                        x + 1,
                                                                })
                                                              : i('span', {
                                                                    className:
                                                                        'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                    onClick: (
                                                                        w
                                                                    ) =>
                                                                        v(w, x),
                                                                    children:
                                                                        x + 1,
                                                                }),
                                                  },
                                                  x
                                              )
                                          ),
                                    i(Ee, {
                                        onClick: c,
                                        className: 'cursor-pointer',
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    }
function Wae() {
    const [e, t] = C.exports.useState('platformChanges')
    return d('div', {
        children: [
            d('div', {
                className: 'estateDetail__radioBox',
                children: [
                    i('input', {
                        type: 'radio',
                        name: 'platform',
                        id: 'platformChanges',
                        className: 'hidden',
                        defaultChecked: !0,
                        onChange: () => t('platformChanges'),
                    }),
                    i('label', {
                        htmlFor: 'platformChanges',
                        className: 'capitalize',
                        children: 'Platform Changes',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'platform',
                        id: 'propertyType',
                        className: 'hidden',
                        onChange: () => t('propertyType'),
                    }),
                    i('label', {
                        htmlFor: 'propertyType',
                        children: 'Property Type',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'platform',
                        id: 'SOSTable',
                        className: 'hidden',
                        onChange: () => t('SOSTable'),
                    }),
                    i('label', { htmlFor: 'SOSTable', children: 'SOS Table' }),
                    i('input', {
                        type: 'radio',
                        name: 'platform',
                        id: 'accountSettings',
                        className: 'hidden',
                        onChange: () => t('accountSettings'),
                    }),
                    i('label', {
                        htmlFor: 'accountSettings',
                        children: 'Account Settings',
                    }),
                ],
            }),
            i('div', {
                className: 'mt-8 grid gap-8',
                children: i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children: {
                        platformChanges: i(zae, {}),
                        propertyType: i(MS, {}),
                        SOSTable: i(Uae, {}),
                        accountSettings: i(Bae, {}),
                    }[e],
                }),
            }),
        ],
    })
}
const Hae = () => {
        const [e, t] = C.exports.useState([]),
            r = (s) => {
                s.preventDefault()
            },
            n = C.exports.useRef(null),
            a = () => {
                n.current && n.current.close()
            },
            l = () => {
                n.current && n.current.showModal()
            }
        return d(me, {
            children: [
                i('dialog', {
                    className: 'dialog',
                    ref: n,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => a(),
                                }),
                                d('div', {
                                    className:
                                        'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                    children: [
                                        i('img', {
                                            src: '/icons/admins/modalSuccess.svg',
                                            alt: '',
                                        }),
                                        i('p', {
                                            children:
                                                'You have successfully added SOS',
                                        }),
                                        d('div', {
                                            className:
                                                'flex w-full justify-center gap-8',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () => a(),
                                                    children: 'Cancel',
                                                }),
                                                i('button', {
                                                    className:
                                                        'bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                    onClick: () => {
                                                        console.log('hellow ')
                                                    },
                                                    children: 'Ok',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                i('div', {
                    className:
                        'grid p-8 bg-white h-[80vh] items-baseline overflow-y-scroll rounded-lg',
                    children: d('form', {
                        onSubmit: r,
                        className: 'grid max-w-[84rem] gap-16 mt-12',
                        style: {
                            gridTemplateColumns:
                                ' repeat(auto-fit, minmax(35rem, 1fr))',
                        },
                        children: [
                            d('div', {
                                className: 'grid gap-4 relative ',
                                children: [
                                    i('label', {
                                        htmlFor: 'SOSName',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Name',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'SOSName',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'phoneNumber',
                                        className:
                                            'text-[1.4rem] font-semibold',
                                        children: 'Phone Number',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'phoneNumber',
                                        className:
                                            'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] ',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'email',
                                        className:
                                            'text-[1.4rem] font-semibold',
                                        children: 'Email',
                                    }),
                                    i('input', {
                                        type: 'email',
                                        placeholder: 'Optional',
                                        id: 'email',
                                        className:
                                            'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'phoneNumber',
                                        className:
                                            'text-[1.4rem] font-semibold',
                                        children: 'Phone Number',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'phoneNumber',
                                        className:
                                            'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] ',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'Address',
                                        className:
                                            'text-[1.4rem] font-semibold',
                                        children: 'Address',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'Address',
                                        placeholder:
                                            'Felix Drive, Lekki, Lagos',
                                        className:
                                            'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'w-full grid gap-4',
                                children: [
                                    i('label', {
                                        htmlFor: 'phoneNumber',
                                        className:
                                            'text-[1.4rem] font-semibold',
                                        children: 'Phone Number',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'phoneNumber',
                                        className:
                                            'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] ',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'col-span-full',
                                children: [
                                    i('p', {
                                        className:
                                            'text-[2rem] font-Satoshi-Medium py-8',
                                        children: 'Add Estates',
                                    }),
                                    i(ef, {
                                        label: 'Estates',
                                        placeholder: 'Select Estates',
                                        selected: e,
                                        selectFrom: [
                                            'Estate 1',
                                            'Estate 2',
                                            'Estate 3',
                                        ],
                                        setSelected: t,
                                    }),
                                ],
                            }),
                            i('button', {
                                className:
                                    'btn border border-color-blue-1 text-color-blue-1 py-4 px-16 rounded-lg col-span-full w-[20rem] text-center font-Satoshi-Medium',
                                onClick: () => l(),
                                children: 'Add SOS',
                            }),
                        ],
                    }),
                }),
            ],
        })
    },
    Gae = () =>
        d('div', {
            className: 'grid overflow-y-scroll ',
            children: [
                i('p', {
                    className: 'text-[2rem] font-Satoshi-Medium pb-8',
                    children: 'SOS Details',
                }),
                d('div', {
                    className: 'bg-white h-[80vh] rounded-lg p-8 text-[1.6rem]',
                    children: [
                        d('div', {
                            className: 'grid relative border-b pb-4',
                            children: [
                                i('img', {
                                    src: '/img/closeIcon.svg',
                                    alt: '',
                                    className: 'self-end justify-self-end',
                                }),
                                d('div', {
                                    className:
                                        'flex justify-between max-w-[70rem] ',
                                    children: [
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4 justify-items-start',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Name :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Adiyan Police Station',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Email :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Adiyan@gmail.com',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Name :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Felix Drive, Lekki Lagos',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 1 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 2 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 3 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid relative border-b pb-4',
                            children: [
                                i('img', {
                                    src: '/img/closeIcon.svg',
                                    alt: '',
                                    className: 'self-end justify-self-end',
                                }),
                                d('div', {
                                    className:
                                        'flex justify-between max-w-[70rem] ',
                                    children: [
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4 justify-items-start',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Name :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Adiyan Police Station',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Email :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Adiyan@gmail.com',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Name :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Felix Drive, Lekki Lagos',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 1 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 2 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 3 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'grid relative border-b pb-4',
                            children: [
                                i('img', {
                                    src: '/img/closeIcon.svg',
                                    alt: '',
                                    className: 'self-end justify-self-end',
                                }),
                                d('div', {
                                    className:
                                        'flex justify-between max-w-[70rem] ',
                                    children: [
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4 justify-items-start',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Name :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Adiyan Police Station',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Email :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Adiyan@gmail.com',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children: 'Name :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Felix Drive, Lekki Lagos',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 1 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 2 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex items-center justify-start gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'font-Satoshi-Light',
                                                            children:
                                                                'Phone Number 3 :',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                '+234 803 587 6489',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        }),
    qae = () => {
        const e = ['Lagos', 'Imo', 'Abia', 'FCT'],
            [t, r] = C.exports.useState(!1),
            [n, a] = C.exports.useState(null),
            [l, o] = C.exports.useState(!0),
            s = () => r(!t),
            c = (x) => {
                a(x), r(!1)
            },
            [u, f] = C.exports.useState(''),
            p = async (x) => {
                const w = await kr('#photoUpload')
                f(w)
            },
            m = (x) => {
                x.preventDefault(), h('success')
            },
            v = C.exports.useRef(null),
            b = () => {
                v.current && v.current.close()
            },
            h = (x) => {
                o(x === 'warning'), v.current && v.current.showModal()
            }
        return d(me, {
            children: [
                i('dialog', {
                    className: 'dialog',
                    ref: v,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8 text-[1.6rem]',
                            children: [
                                l
                                    ? i('img', {
                                          src: '/icons/admins/modalWarning.svg',
                                          alt: '',
                                      })
                                    : i('img', {
                                          src: '/icons/admins/modalSuccess.svg',
                                          alt: '',
                                      }),
                                l
                                    ? i('p', {
                                          children:
                                              'Are you sure you want to deactivate this security company?',
                                      })
                                    : i('p', {
                                          children:
                                              'You have successfully added a security Company',
                                      }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        l
                                            ? i('button', {
                                                  className:
                                                      'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                  onClick: () => b(),
                                                  children: 'Cancel',
                                              })
                                            : i('button', {
                                                  className:
                                                      'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                  onClick: () => b(),
                                                  children: 'View Details',
                                              }),
                                        l
                                            ? i('button', {
                                                  className:
                                                      'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                  onClick: () => {
                                                      b()
                                                  },
                                                  children: 'Deactivate',
                                              })
                                            : i('button', {
                                                  className:
                                                      'btn text-white bg-[#0556E5] border rounded-lg w-[15rem]',
                                                  onClick: () => b(),
                                                  children: 'View Details',
                                              }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'grid p-8 bg-white h-[80vh] items-baseline overflow-y-scroll rounded-lg',
                    children: [
                        i('div', {
                            className: 'flex justify-end',
                            children: d('button', {
                                className:
                                    'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                onClick: () => h('warning'),
                                children: [
                                    i('img', {
                                        src: '/icons/admins/delete.svg',
                                        alt: '',
                                    }),
                                    i('span', {
                                        className:
                                            'text-red-600 text-[1.4rem] font-semibold',
                                        children: 'Deactivate',
                                    }),
                                ],
                            }),
                        }),
                        d('form', {
                            onSubmit: m,
                            className: 'grid max-w-[84rem] gap-16 mt-12',
                            style: {
                                gridTemplateColumns:
                                    ' repeat(auto-fit, minmax(35rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'securityCompany',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Security Company *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'securityCompany',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'email',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Email Address *',
                                        }),
                                        i('input', {
                                            type: 'email',
                                            required: !0,
                                            id: 'email',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4',
                                    children: [
                                        i('label', {
                                            htmlFor: 'phoneNumber',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Phone Number *',
                                        }),
                                        d('div', {
                                            className:
                                                'flex text-[1.6rem] gap-4   h-[5rem]',
                                            children: [
                                                i('select', {
                                                    className:
                                                        'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                    children: i('option', {
                                                        value: '234',
                                                        children: '+234',
                                                    }),
                                                }),
                                                i('input', {
                                                    required: !0,
                                                    type: 'number',
                                                    inputMode: 'numeric',
                                                    id: 'phoneNumber',
                                                    placeholder: 'Phone Number',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'address',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Address *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'address',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'relative grid gap-4',
                                    children: [
                                        i('p', {
                                            className:
                                                'text-[1.4rem] font-semibold',
                                            children: 'State',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                    onClick: s,
                                                    children:
                                                        n ||
                                                        i('span', {
                                                            className:
                                                                'text-gray-500',
                                                            children:
                                                                'Select State',
                                                        }),
                                                }),
                                                t
                                                    ? i(dt, {
                                                          className:
                                                              'absolute right-4',
                                                      })
                                                    : i(le, {
                                                          className:
                                                              'absolute right-4',
                                                      }),
                                            ],
                                        }),
                                        t &&
                                            i('div', {
                                                className:
                                                    'absolute top-[8rem]  left-0 border border-color-primary-light w-[24rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                children: e.map((x, w) =>
                                                    i(
                                                        'p',
                                                        {
                                                            className:
                                                                'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                            onClick: () => c(x),
                                                            children: x,
                                                        },
                                                        w
                                                    )
                                                ),
                                            }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'col-span-full rounded-lg border border-width-[.2rem] border-dashed border-color-grey-1 p-8 text-[1.6rem] relative w-full',
                                    children: [
                                        d('label', {
                                            htmlFor: 'photoUpload',
                                            className:
                                                'flex justify-center gap-4 items-center cursor-pointer',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/photo_library.svg',
                                                    alt: '',
                                                }),
                                                d('p', {
                                                    className:
                                                        'text-color-dark-1',
                                                    style: {
                                                        fontFamily:
                                                            'Satoshi-Light',
                                                    },
                                                    children: [
                                                        'Drag estate manager picture here or',
                                                        ' ',
                                                        i('span', {
                                                            className:
                                                                'text-color-blue font-bold',
                                                            children: 'click',
                                                        }),
                                                        ' ',
                                                        'to upload',
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i('input', {
                                            type: 'file',
                                            name: 'photoUpload',
                                            id: 'photoUpload',
                                            accept: 'image/*',
                                            className: 'hidden',
                                            onClick: p,
                                        }),
                                        u &&
                                            i('div', {
                                                className:
                                                    'flex justify-center justify-self-center',
                                                children: i('img', {
                                                    src: u,
                                                    alt: 'photoPreview',
                                                    className:
                                                        'object-cover w-[11rem] h-[11rem] rounded-full',
                                                }),
                                            }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                    style: { justifySelf: 'start' },
                                    onClick: () => h('success'),
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Company',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    }
function Kv({ fullName: e, role: t, imgUrl: r }) {
    const n = () => new Date().toLocaleString('en-GB', { dateStyle: 'full' }),
        a = n()
    return (
        n(),
        d('div', {
            className: 'header shadow',
            children: [
                i('div', { className: 'header__left', children: a }),
                d('div', {
                    className: 'header__right',
                    children: [
                        d('div', {
                            className: 'header__right--icon',
                            children: [
                                i('span', { children: '\xA0' }),
                                i(Jne, {}),
                            ],
                        }),
                        d('figure', {
                            className: 'header__profile',
                            children: [
                                i('img', { src: r, alt: '' }),
                                d('div', {
                                    className: 'header__profile--details',
                                    children: [
                                        d('div', {
                                            children: [
                                                i('h2', { children: e }),
                                                i('p', { children: t }),
                                            ],
                                        }),
                                        i(dt, { onClick: () => {} }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    )
}
const Kae = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    d: 'M16 21V19C16 16.7909 14.2091 15 12 15H5C2.79086 15 1 16.7909 1 19V21',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M8.5 11C10.7091 11 12.5 9.20914 12.5 7C12.5 4.79086 10.7091 3 8.5 3C6.29086 3 4.5 4.79086 4.5 7C4.5 9.20914 6.29086 11 8.5 11Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M20 8V14',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M23 11H17',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    Yae = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    d: 'M20 21V19C20 16.7909 18.2091 15 16 15H8C5.79086 15 4 16.7909 4 19V21',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    Xae = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M23 7L16 12L23 17V7V7Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M1 7C1 5.89543 1.89543 5 3 5H14C15.1046 5 16 5.89543 16 7V17C16 18.1046 15.1046 19 14 19H3C1.89543 19 1 18.1046 1 17V7Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    Zae = () =>
        i('svg', {
            width: '22',
            height: '14',
            viewBox: '0 0 22 14',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.0006 8.16981V7.99981C19.0015 6.92983 18.7879 5.87053 18.3722 4.88459C17.9565 3.89866 17.3473 3.00612 16.5806 2.25981C15.6854 1.38879 14.5952 0.744236 13.4006 0.379813H13.3506C12.513 0.115945 11.6386 -0.0123403 10.7606 -0.000187429C8.66896 0.114617 6.70035 1.02458 5.25773 2.54341C3.81512 4.06225 3.00763 6.07507 3.00057 8.16981C2.33224 8.40492 1.76868 8.86896 1.4097 9.47977C1.05073 10.0906 0.919508 10.8087 1.03928 11.507C1.15906 12.2053 1.52209 12.8386 2.0641 13.2949C2.6061 13.7512 3.29209 14.0009 4.00057 13.9998H18.0006C18.709 14.0009 19.395 13.7512 19.937 13.2949C20.479 12.8386 20.8421 12.2053 20.9619 11.507C21.0816 10.8087 20.9504 10.0906 20.5914 9.47977C20.2325 8.86896 19.6689 8.40492 19.0006 8.16981ZM18.0006 11.9998H4.00057C3.73535 11.9998 3.481 11.8945 3.29346 11.7069C3.10593 11.5194 3.00057 11.265 3.00057 10.9998C3.00057 10.7346 3.10593 10.4802 3.29346 10.2927C3.481 10.1052 3.73535 9.99981 4.00057 9.99981H6.00057C6.26579 9.99981 6.52014 9.89445 6.70768 9.70692C6.89521 9.51938 7.00057 9.26503 7.00057 8.99981C7.00057 8.7346 6.89521 8.48024 6.70768 8.29271C6.52014 8.10517 6.26579 7.99981 6.00057 7.99981H5.00057C5.04618 6.96262 5.34303 5.95202 5.86561 5.05493C6.38819 4.15784 7.12084 3.40111 8.00057 2.84981V5.99981C8.00057 6.26503 8.10593 6.51938 8.29346 6.70692C8.481 6.89446 8.73535 6.99981 9.00057 6.99981C9.26579 6.99981 9.52014 6.89446 9.70768 6.70692C9.89521 6.51938 10.0006 6.26503 10.0006 5.99981V2.08981C10.272 2.04446 10.5458 2.01442 10.8206 1.99981H11.0006C11.3362 2.00289 11.6709 2.03636 12.0006 2.09981V5.99981C12.0006 6.26503 12.1059 6.51938 12.2935 6.70692C12.481 6.89446 12.7354 6.99981 13.0006 6.99981C13.2658 6.99981 13.5201 6.89446 13.7077 6.70692C13.8952 6.51938 14.0006 6.26503 14.0006 5.99981V2.81981C14.4248 3.06544 14.8205 3.35721 15.1806 3.68981C15.7571 4.24971 16.2153 4.91973 16.528 5.66011C16.8406 6.40049 17.0013 7.19613 17.0006 7.99981H16.0006C15.7354 7.99981 15.481 8.10517 15.2935 8.29271C15.1059 8.48024 15.0006 8.7346 15.0006 8.99981C15.0006 9.26503 15.1059 9.51938 15.2935 9.70692C15.481 9.89445 15.7354 9.99981 16.0006 9.99981H18.0006C18.2658 9.99981 18.5201 10.1052 18.7077 10.2927C18.8952 10.4802 19.0006 10.7346 19.0006 10.9998C19.0006 11.265 18.8952 11.5194 18.7077 11.7069C18.5201 11.8945 18.2658 11.9998 18.0006 11.9998Z',
            }),
        }),
    Jae = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M13.3 12.22C13.8336 11.7581 14.2616 11.1869 14.5549 10.545C14.8482 9.90316 15 9.20571 15 8.5C15 7.17392 14.4732 5.90215 13.5355 4.96447C12.5979 4.02678 11.3261 3.5 10 3.5C8.67392 3.5 7.40215 4.02678 6.46447 4.96447C5.52678 5.90215 5 7.17392 5 8.5C4.99999 9.20571 5.1518 9.90316 5.44513 10.545C5.73845 11.1869 6.16642 11.7581 6.7 12.22C5.30014 12.8539 4.11247 13.8775 3.27898 15.1685C2.4455 16.4596 2.00147 17.9633 2 19.5C2 19.7652 2.10536 20.0196 2.29289 20.2071C2.48043 20.3946 2.73478 20.5 3 20.5C3.26522 20.5 3.51957 20.3946 3.70711 20.2071C3.89464 20.0196 4 19.7652 4 19.5C4 17.9087 4.63214 16.3826 5.75736 15.2574C6.88258 14.1321 8.4087 13.5 10 13.5C11.5913 13.5 13.1174 14.1321 14.2426 15.2574C15.3679 16.3826 16 17.9087 16 19.5C16 19.7652 16.1054 20.0196 16.2929 20.2071C16.4804 20.3946 16.7348 20.5 17 20.5C17.2652 20.5 17.5196 20.3946 17.7071 20.2071C17.8946 20.0196 18 19.7652 18 19.5C17.9985 17.9633 17.5545 16.4596 16.721 15.1685C15.8875 13.8775 14.6999 12.8539 13.3 12.22ZM10 11.5C9.40666 11.5 8.82664 11.3241 8.33329 10.9944C7.83994 10.6648 7.45542 10.1962 7.22836 9.64805C7.0013 9.09987 6.94189 8.49667 7.05764 7.91473C7.1734 7.33279 7.45912 6.79824 7.87868 6.37868C8.29824 5.95912 8.83279 5.6734 9.41473 5.55764C9.99667 5.44189 10.5999 5.5013 11.1481 5.72836C11.6962 5.95542 12.1648 6.33994 12.4944 6.83329C12.8241 7.32664 13 7.90666 13 8.5C13 9.29565 12.6839 10.0587 12.1213 10.6213C11.5587 11.1839 10.7956 11.5 10 11.5ZM20.91 12L21.71 11.21C21.8032 11.1168 21.8772 11.0061 21.9277 10.8842C21.9781 10.7624 22.0041 10.6319 22.0041 10.5C22.0041 10.3681 21.9781 10.2376 21.9277 10.1158C21.8772 9.99393 21.8032 9.88324 21.71 9.79C21.6168 9.69676 21.5061 9.6228 21.3842 9.57234C21.2624 9.52188 21.1319 9.49591 21 9.49591C20.8681 9.49591 20.7376 9.52188 20.6158 9.57234C20.4939 9.6228 20.3832 9.69676 20.29 9.79L19.5 10.59L18.71 9.79C18.6168 9.69676 18.5061 9.6228 18.3842 9.57234C18.2624 9.52188 18.1319 9.49591 18 9.49591C17.7337 9.49591 17.4783 9.6017 17.29 9.79C17.1968 9.88324 17.1228 9.99393 17.0723 10.1158C17.0219 10.2376 16.9959 10.3681 16.9959 10.5C16.9959 10.7663 17.1017 11.0217 17.29 11.21L18.09 12L17.29 12.79C17.1963 12.883 17.1219 12.9936 17.0711 13.1154C17.0203 13.2373 16.9942 13.368 16.9942 13.5C16.9942 13.632 17.0203 13.7627 17.0711 13.8846C17.1219 14.0064 17.1963 14.117 17.29 14.21C17.383 14.3037 17.4936 14.3781 17.6154 14.4289C17.7373 14.4797 17.868 14.5058 18 14.5058C18.132 14.5058 18.2627 14.4797 18.3846 14.4289C18.5064 14.3781 18.617 14.3037 18.71 14.21L19.5 13.41L20.29 14.21C20.383 14.3037 20.4936 14.3781 20.6154 14.4289C20.7373 14.4797 20.868 14.5058 21 14.5058C21.132 14.5058 21.2627 14.4797 21.3846 14.4289C21.5064 14.3781 21.617 14.3037 21.71 14.21C21.8037 14.117 21.8781 14.0064 21.9289 13.8846C21.9797 13.7627 22.0058 13.632 22.0058 13.5C22.0058 13.368 21.9797 13.2373 21.9289 13.1154C21.8781 12.9936 21.8037 12.883 21.71 12.79L20.91 12Z',
            }),
        }),
    Qae = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M20.0001 7.99952L14.0001 2.73952C13.4501 2.24756 12.738 1.97559 12.0001 1.97559C11.2622 1.97559 10.5501 2.24756 10.0001 2.73952L4.00009 7.99952C3.68246 8.28359 3.42899 8.63207 3.25657 9.02176C3.08414 9.41145 2.99671 9.8334 3.00009 10.2595V18.9995C3.00009 19.7952 3.31617 20.5582 3.87877 21.1208C4.44138 21.6834 5.20445 21.9995 6.00009 21.9995H18.0001C18.7957 21.9995 19.5588 21.6834 20.1214 21.1208C20.684 20.5582 21.0001 19.7952 21.0001 18.9995V10.2495C21.0021 9.82508 20.9139 9.40506 20.7416 9.0172C20.5692 8.62934 20.3165 8.28247 20.0001 7.99952ZM14.0001 19.9995H10.0001V14.9995C10.0001 14.7343 10.1055 14.4799 10.293 14.2924C10.4805 14.1049 10.7349 13.9995 11.0001 13.9995H13.0001C13.2653 13.9995 13.5197 14.1049 13.7072 14.2924C13.8947 14.4799 14.0001 14.7343 14.0001 14.9995V19.9995ZM19.0001 18.9995C19.0001 19.2647 18.8947 19.5191 18.7072 19.7066C18.5197 19.8942 18.2653 19.9995 18.0001 19.9995H16.0001V14.9995C16.0001 14.2039 15.684 13.4408 15.1214 12.8782C14.5588 12.3156 13.7957 11.9995 13.0001 11.9995H11.0001C10.2044 11.9995 9.44138 12.3156 8.87877 12.8782C8.31616 13.4408 8.00009 14.2039 8.00009 14.9995V19.9995H6.00009C5.73488 19.9995 5.48052 19.8942 5.29299 19.7066C5.10545 19.5191 5.00009 19.2647 5.00009 18.9995V10.2495C5.00027 10.1075 5.03069 9.96721 5.08931 9.8379C5.14794 9.70858 5.23343 9.59323 5.3401 9.49952L11.3401 4.24952C11.5226 4.0892 11.7572 4.00078 12.0001 4.00078C12.243 4.00078 12.4776 4.0892 12.6601 4.24952L18.6601 9.49952C18.7668 9.59323 18.8523 9.70858 18.9109 9.8379C18.9695 9.96721 18.9999 10.1075 19.0001 10.2495V18.9995Z',
            }),
        }),
    eie = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M3 3H10V10H3V3Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M14 3H21V10H14V3Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M14 14H21V21H14V14Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M3 14H10V21H3V14Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    tie = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    d: 'M17 21V19C17 16.7909 15.2091 15 13 15H5C2.79086 15 1 16.7909 1 19V21',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M9 11C11.2091 11 13 9.20914 13 7C13 4.79086 11.2091 3 9 3C6.79086 3 5 4.79086 5 7C5 9.20914 6.79086 11 9 11Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M23 20.9999V18.9999C22.9986 17.177 21.765 15.5856 20 15.1299',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M16 3.12988C17.7699 3.58305 19.0078 5.17787 19.0078 7.00488C19.0078 8.83189 17.7699 10.4267 16 10.8799',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    rie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.63 3.64982C19.5138 3.55584 19.3781 3.48909 19.2327 3.45448C19.0873 3.41987 18.9361 3.41828 18.79 3.44982C17.7214 3.67376 16.6183 3.67662 15.5486 3.4582C14.4789 3.23979 13.4653 2.80473 12.57 2.17982C12.4026 2.06369 12.2037 2.00146 12 2.00146C11.7963 2.00146 11.5974 2.06369 11.43 2.17982C10.5348 2.80473 9.52108 3.23979 8.45137 3.4582C7.38166 3.67662 6.27857 3.67376 5.21001 3.44982C5.06394 3.41828 4.91267 3.41987 4.76731 3.45448C4.62194 3.48909 4.48618 3.55584 4.37001 3.64982C4.25399 3.74394 4.16053 3.86286 4.0965 3.99784C4.03247 4.13282 3.9995 4.28043 4.00001 4.42982V11.8798C3.99912 13.3136 4.34078 14.7268 4.99654 16.0018C5.6523 17.2768 6.60319 18.3767 7.77001 19.2098L11.42 21.8098C11.5894 21.9304 11.7921 21.9952 12 21.9952C12.2079 21.9952 12.4106 21.9304 12.58 21.8098L16.23 19.2098C17.3968 18.3767 18.3477 17.2768 19.0035 16.0018C19.6592 14.7268 20.0009 13.3136 20 11.8798V4.42982C20.0005 4.28043 19.9675 4.13282 19.9035 3.99784C19.8395 3.86286 19.746 3.74394 19.63 3.64982ZM18 11.8798C18.0008 12.9946 17.7353 14.0934 17.2257 15.0848C16.716 16.0763 15.977 16.9317 15.07 17.5798L12 19.7698L8.93001 17.5798C8.02304 16.9317 7.28399 16.0763 6.77435 15.0848C6.26472 14.0934 5.99924 12.9946 6.00001 11.8798V5.57982C8.09643 5.75925 10.196 5.27284 12 4.18982C13.804 5.27284 15.9036 5.75925 18 5.57982V11.8798ZM13.54 9.58982L10.85 12.2898L9.96001 11.3898C9.7717 11.2015 9.51631 11.0957 9.25001 11.0957C8.9837 11.0957 8.72831 11.2015 8.54001 11.3898C8.3517 11.5781 8.24591 11.8335 8.24591 12.0998C8.24591 12.3661 8.3517 12.6215 8.54001 12.8098L10.14 14.4098C10.233 14.5035 10.3436 14.5779 10.4654 14.6287C10.5873 14.6795 10.718 14.7056 10.85 14.7056C10.982 14.7056 11.1127 14.6795 11.2346 14.6287C11.3564 14.5779 11.467 14.5035 11.56 14.4098L15 10.9998C15.1883 10.8115 15.2941 10.5561 15.2941 10.2898C15.2941 10.0235 15.1883 9.76812 15 9.57982C14.8117 9.39152 14.5563 9.28573 14.29 9.28573C14.0237 9.28573 13.7683 9.39152 13.58 9.57982L13.54 9.58982Z',
            }),
        }),
    nie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.9009 12.6599C19.7406 12.4774 19.6521 12.2428 19.6521 11.9999C19.6521 11.757 19.7406 11.5224 19.9009 11.3399L21.1809 9.89989C21.3219 9.74256 21.4095 9.5446 21.4311 9.3344C21.4526 9.12421 21.407 8.91258 21.3009 8.72989L19.3009 5.2699C19.1958 5.08742 19.0358 4.94277 18.8436 4.85658C18.6515 4.77039 18.437 4.74705 18.2309 4.7899L16.3509 5.1699C16.1117 5.21932 15.8626 5.17948 15.6508 5.0579C15.4389 4.93631 15.2789 4.74138 15.2009 4.5099L14.5909 2.6799C14.5238 2.48127 14.396 2.30876 14.2255 2.18674C14.055 2.06471 13.8505 1.99935 13.6409 1.9999H9.64087C9.42281 1.98851 9.20701 2.04882 9.02644 2.17161C8.84587 2.2944 8.71045 2.47291 8.64087 2.6799L8.08087 4.5099C8.00287 4.74138 7.84284 4.93631 7.63099 5.0579C7.41913 5.17948 7.17009 5.21932 6.93087 5.1699L5.00087 4.7899C4.80542 4.76228 4.60617 4.79312 4.42822 4.87853C4.25027 4.96395 4.10157 5.10012 4.00087 5.2699L2.00087 8.72989C1.89203 8.91054 1.84309 9.12098 1.86106 9.33112C1.87902 9.54126 1.96296 9.74034 2.10087 9.89989L3.37087 11.3399C3.53119 11.5224 3.61961 11.757 3.61961 11.9999C3.61961 12.2428 3.53119 12.4774 3.37087 12.6599L2.10087 14.0999C1.96296 14.2595 1.87902 14.4585 1.86106 14.6687C1.84309 14.8788 1.89203 15.0892 2.00087 15.2699L4.00087 18.7299C4.10597 18.9124 4.26599 19.057 4.45812 19.1432C4.65026 19.2294 4.8647 19.2527 5.07087 19.2099L6.95087 18.8299C7.19009 18.7805 7.43913 18.8203 7.65099 18.9419C7.86284 19.0635 8.02287 19.2584 8.10087 19.4899L8.71087 21.3199C8.78045 21.5269 8.91587 21.7054 9.09644 21.8282C9.27701 21.951 9.49281 22.0113 9.71087 21.9999H13.7109C13.9205 22.0004 14.125 21.9351 14.2955 21.8131C14.466 21.691 14.5938 21.5185 14.6609 21.3199L15.2709 19.4899C15.3489 19.2584 15.5089 19.0635 15.7208 18.9419C15.9326 18.8203 16.1817 18.7805 16.4209 18.8299L18.3009 19.2099C18.507 19.2527 18.7215 19.2294 18.9136 19.1432C19.1058 19.057 19.2658 18.9124 19.3709 18.7299L21.3709 15.2699C21.477 15.0872 21.5226 14.8756 21.5011 14.6654C21.4795 14.4552 21.3919 14.2572 21.2509 14.0999L19.9009 12.6599ZM18.4109 13.9999L19.2109 14.8999L17.9309 17.1199L16.7509 16.8799C16.0307 16.7327 15.2814 16.855 14.6455 17.2237C14.0095 17.5924 13.531 18.1817 13.3009 18.8799L12.9209 19.9999H10.3609L10.0009 18.8599C9.77073 18.1617 9.29225 17.5724 8.65628 17.2037C8.0203 16.835 7.27109 16.7127 6.55087 16.8599L5.37087 17.0999L4.07087 14.8899L4.87087 13.9899C5.36283 13.4399 5.6348 12.7278 5.6348 11.9899C5.6348 11.252 5.36283 10.5399 4.87087 9.98989L4.07087 9.0899L5.35087 6.88989L6.53087 7.1299C7.25109 7.27712 8.0003 7.15478 8.63628 6.78609C9.27225 6.41741 9.75073 5.82805 9.98087 5.1299L10.3609 3.9999H12.9209L13.3009 5.13989C13.531 5.83805 14.0095 6.42741 14.6455 6.79609C15.2814 7.16478 16.0307 7.28712 16.7509 7.13989L17.9309 6.8999L19.2109 9.11989L18.4109 10.0199C17.9244 10.5687 17.6558 11.2766 17.6558 12.0099C17.6558 12.7432 17.9244 13.4511 18.4109 13.9999ZM11.6409 7.9999C10.8497 7.9999 10.0764 8.23449 9.41859 8.67402C8.76079 9.11354 8.24811 9.73826 7.94535 10.4692C7.6426 11.2001 7.56339 12.0043 7.71773 12.7803C7.87207 13.5562 8.25304 14.2689 8.81245 14.8283C9.37186 15.3877 10.0846 15.7687 10.8605 15.923C11.6364 16.0774 12.4407 15.9982 13.1716 15.6954C13.9025 15.3927 14.5272 14.88 14.9668 14.2222C15.4063 13.5644 15.6409 12.791 15.6409 11.9999C15.6409 10.939 15.2194 9.92161 14.4693 9.17147C13.7192 8.42132 12.7017 7.9999 11.6409 7.9999ZM11.6409 13.9999C11.2453 13.9999 10.8586 13.8826 10.5297 13.6628C10.2008 13.4431 9.94449 13.1307 9.79311 12.7653C9.64174 12.3998 9.60213 11.9977 9.6793 11.6097C9.75647 11.2218 9.94695 10.8654 10.2267 10.5857C10.5064 10.306 10.8627 10.1155 11.2507 10.0383C11.6387 9.96115 12.0408 10.0008 12.4062 10.1521C12.7717 10.3035 13.084 10.5599 13.3038 10.8888C13.5236 11.2177 13.6409 11.6043 13.6409 11.9999C13.6409 12.5303 13.4302 13.039 13.0551 13.4141C12.68 13.7892 12.1713 13.9999 11.6409 13.9999Z',
            }),
        }),
    aie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19 7H18V6C18 5.20435 17.6839 4.44129 17.1213 3.87868C16.5587 3.31607 15.7956 3 15 3H5C4.20435 3 3.44129 3.31607 2.87868 3.87868C2.31607 4.44129 2 5.20435 2 6V18C2 18.7956 2.31607 19.5587 2.87868 20.1213C3.44129 20.6839 4.20435 21 5 21H19C19.7956 21 20.5587 20.6839 21.1213 20.1213C21.6839 19.5587 22 18.7956 22 18V10C22 9.20435 21.6839 8.44129 21.1213 7.87868C20.5587 7.31607 19.7956 7 19 7ZM5 5H15C15.2652 5 15.5196 5.10536 15.7071 5.29289C15.8946 5.48043 16 5.73478 16 6V7H5C4.73478 7 4.48043 6.89464 4.29289 6.70711C4.10536 6.51957 4 6.26522 4 6C4 5.73478 4.10536 5.48043 4.29289 5.29289C4.48043 5.10536 4.73478 5 5 5ZM20 15H19C18.7348 15 18.4804 14.8946 18.2929 14.7071C18.1054 14.5196 18 14.2652 18 14C18 13.7348 18.1054 13.4804 18.2929 13.2929C18.4804 13.1054 18.7348 13 19 13H20V15ZM20 11H19C18.2044 11 17.4413 11.3161 16.8787 11.8787C16.3161 12.4413 16 13.2044 16 14C16 14.7956 16.3161 15.5587 16.8787 16.1213C17.4413 16.6839 18.2044 17 19 17H20V18C20 18.2652 19.8946 18.5196 19.7071 18.7071C19.5196 18.8946 19.2652 19 19 19H5C4.73478 19 4.48043 18.8946 4.29289 18.7071C4.10536 18.5196 4 18.2652 4 18V8.83C4.32127 8.94302 4.65943 9.00051 5 9H19C19.2652 9 19.5196 9.10536 19.7071 9.29289C19.8946 9.48043 20 9.73478 20 10V11Z',
            }),
        })
function iie() {
    return d('ul', {
        className: 'iconsBox',
        children: [
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin',
                    children: [i(eie, {}), i('span', { children: 'Overview' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/admins',
                    children: [
                        ' ',
                        i(Yae, {}),
                        i('span', { children: 'Admins' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/estates',
                    className: 'fillIcon',
                    children: [i(Qae, {}), i('span', { children: 'Estates' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/estateManagers',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(Jae, {}),
                        i('span', { children: 'Estate Manager' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/rolesAndPerm',
                    children: [
                        i(tie, {}),
                        i('span', { children: 'Roles & Permissions' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/additional-resident',
                    children: [
                        ' ',
                        i(Kae, {}),
                        i('span', { children: 'Additional Resident' }),
                        ' ',
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/security-company',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(rie, {}),
                        i('span', { children: 'Security Company' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/wallet',
                    className: 'fillIcon',
                    children: [i(aie, {}), i('span', { children: 'Wallet' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/artisan',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(Zae, {}),
                        i('span', { children: 'Artisan' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/advert',
                    children: [i(Xae, {}), i('span', { children: 'Advert' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/superAdmin/platformSettings',
                    className: 'fillIcon',
                    children: [i(nie, {}), i('span', { children: 'Settings' })],
                }),
            }),
        ],
    })
}
function lie() {
    const e = C.exports.useRef(null),
        [t, r] = C.exports.useState(!0)
    return i('div', {
        className: 'sidebar shadow overflow-scroll',
        ref: e,
        children: d('div', {
            className: `sidebar__container ${
                t ? 'items-start' : 'items-center justify-center'
            }`,
            children: [
                d('section', {
                    className: 'section-1',
                    children: [
                        i('div', {
                            className: 'section-1__box',
                            children: i('img', {
                                src: '/logo.svg',
                                alt: '',
                                width: 127,
                                height: 33,
                            }),
                        }),
                        i('span', {
                            onClick: () => {
                                e.current.classList.toggle('sidebarToggle'),
                                    r((l) => !l)
                            },
                            children: i(Hv, {}),
                        }),
                    ],
                }),
                i('section', { className: 'section-2', children: i(iie, {}) }),
            ],
        }),
    })
}
const oie = ({ children: e }) => {
    const t = C.exports.useRef(null),
        [r, n] = C.exports.useState(null),
        a = _n(),
        l = () => {
            t.current && t.current.close()
        },
        o = (c) => {
            c && n(c), t.current && t.current.showModal()
        },
        s = () => {
            if ((l(), r))
                switch (r) {
                    case 'renderedEstates':
                        return a($0(r))
                    case 'renderedAdmins':
                        return a(I0(r))
                    case 'renderedEstateManagers':
                        return a(R0(r))
                }
        }
    return i(Ha.Provider, {
        value: { handleClose: l, handleOpen: o },
        children: d('div', {
            children: [
                i('dialog', {
                    className: 'dialog',
                    ref: t,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children: [
                                i('img', {
                                    src: '/icons/admins/modalSuccess.svg',
                                    alt: '',
                                }),
                                i('p', {
                                    children:
                                        'You have successfully added an Estate',
                                }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            children: 'View details',
                                        }),
                                        i('button', {
                                            className:
                                                'bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                            onClick: s,
                                            children: 'Ok',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                e,
            ],
        }),
    })
}
function Yv() {
    Me()
    const e = Wa(),
        t = y_(),
        r = nA(),
        n = Object.keys(t),
        l = (() => {
            const o = e.pathname.split('/')
            return n.length < 1 ? o.length - 1 : o.length - 2
        })()
    return i('div', {
        className: 'flex gap-4 mb-[2rem]',
        children: r.map(({ match: o, breadcrumb: s }, c) => {
            const u = Object.keys(o.params)
            if (c > 1 && u.length < 1) {
                const p = Object.keys(t)
                return (
                    p.length > 0 && e.pathname,
                    d(
                        'p',
                        {
                            className: 'flex items-center gap-2',
                            onClick: () =>
                                console.log({
                                    breadcrumb: s,
                                    isParams: p,
                                    location: e,
                                }),
                            children: [
                                i(F_, {
                                    to: o.pathname,
                                    className:
                                        l === c
                                            ? 'text-color-blue-1'
                                            : 'text-color-gray-1',
                                    children: i('span', { children: s }),
                                }),
                                c !== l &&
                                    u.length < 1 &&
                                    i('span', { children: i(dne, {}) }),
                            ],
                        },
                        o.pathname
                    )
                )
            }
        }),
    })
}
function sie() {
    return i(oie, {
        children: d('div', {
            className: 'dashboard',
            children: [
                i(lie, {}),
                d('div', {
                    className: 'dashboard__container',
                    children: [
                        i(Kv, {
                            fullName: 'Collins Igboanugwo',
                            role: 'Super Admin',
                            imgUrl: '/img/me.jpeg',
                        }),
                        d('div', {
                            className: 'p-10 overflow-scroll max-h-[90vh]',
                            children: [i(Yv, {}), i(P0, {})],
                        }),
                    ],
                }),
            ],
        }),
    })
}
const cie = () => {
        const e = C.exports.useContext(Ha),
            { handleOpen: t } = e,
            [r, n] = C.exports.useState('')
        return d('div', {
            className: 'addAdmin',
            children: [
                i('p', {
                    className: 'addAdmin__heading',
                    children: 'Personal Information',
                }),
                i('form', {
                    onSubmit: (o) => {
                        o.preventDefault(), t('renderedAdmins')
                    },
                    className: 'addAdmin__formBox',
                    children: d('section', {
                        className: 'addAdmin__form',
                        children: [
                            d('div', {
                                className: 'addAdmin__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'firstName',
                                        children: 'First Name *',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'firstName',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addAdmin__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'lastName',
                                        children: 'Last Name *',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'lastName',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addAdmin__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'date',
                                        children: 'Date of Birth *',
                                    }),
                                    i('input', {
                                        type: 'date',
                                        id: 'date',
                                        required: !0,
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addAdmin__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'gender',
                                        children: 'Gender *',
                                    }),
                                    d('div', {
                                        className: 'item__select',
                                        children: [
                                            d('select', {
                                                id: 'gender',
                                                children: [
                                                    i('option', {
                                                        hidden: !0,
                                                        children: '\xA0',
                                                    }),
                                                    i('option', {
                                                        value: 'male',
                                                        children: 'Male',
                                                    }),
                                                    i('option', {
                                                        value: 'female',
                                                        children: 'Female',
                                                    }),
                                                ],
                                            }),
                                            i(le, {}),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addAdmin__form--phoneNumber',
                                children: [
                                    i('label', {
                                        htmlFor: 'phoneNumber',
                                        children: 'Phone Number *',
                                    }),
                                    d('div', {
                                        className: 'phoneNumber__box',
                                        children: [
                                            i('select', {
                                                children: i('option', {
                                                    value: '234',
                                                    children: '+234',
                                                }),
                                            }),
                                            i('input', {
                                                required: !0,
                                                type: 'number',
                                                inputMode: 'numeric',
                                                id: 'phoneNumber',
                                                placeholder: 'Phone Number',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addAdmin__form--item',
                                children: [
                                    i('label', {
                                        htmlFor: 'email',
                                        children: 'Email Address *',
                                    }),
                                    i('input', {
                                        required: !0,
                                        type: 'email',
                                        id: 'email',
                                        placeholder: 'Your Email',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'addAdmin__form--file',
                                children: [
                                    d('label', {
                                        htmlFor: 'photoUpload',
                                        children: [
                                            i('img', {
                                                src: '/icons/admins/photo_library.svg',
                                                alt: '',
                                            }),
                                            d('p', {
                                                children: [
                                                    'Drag estate manager picture here or',
                                                    ' ',
                                                    i('span', {
                                                        children: 'click',
                                                    }),
                                                    ' to upload',
                                                ],
                                            }),
                                        ],
                                    }),
                                    i('input', {
                                        type: 'file',
                                        name: 'photoUpload',
                                        id: 'photoUpload',
                                        accept: 'image/*',
                                        className: 'hidden',
                                        onClick: async (o) => {
                                            const s = await kr('#photoUpload')
                                            n(s)
                                        },
                                    }),
                                    r &&
                                        i('div', {
                                            className: 'file__uploadImgBox',
                                            children: i('img', {
                                                src: r,
                                                alt: 'photoPreview',
                                                className: 'object-contain',
                                            }),
                                        }),
                                ],
                            }),
                            d('button', {
                                className: 'btn admins__btn',
                                style: { justifySelf: 'start' },
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    'Add Admin',
                                ],
                            }),
                        ],
                    }),
                }),
            ],
        })
    },
    uie = [
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
        {
            id: '1',
            name: 'Jacintha Sage',
            gender: 'Male',
            phoneNumber: '(+234) 814 324 6719',
            onboardingDate: '02-May-22',
            status: 'Active',
        },
    ]
function die() {
    const e = _n(),
        [t, r] = C.exports.useState([])
    return (
        C.exports.useEffect(() => {
            ;(async () => {
                setTimeout(() => {
                    r(uie)
                }, 1e3)
            })()
        }, []),
        i('div', {
            className: 'renderedAdmins',
            children: d('table', {
                className: 'renderedAdmins__tableBox',
                children: [
                    d('caption', {
                        className: 'renderedAdmins__caption',
                        children: [
                            d('p', {
                                className: 'caption__title',
                                children: [
                                    'Admin List ',
                                    i('span', { children: '(200)' }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__searchBox',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/search.svg',
                                        alt: '',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        placeholder: 'Search Parameters',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'caption__select',
                                children: [
                                    d('select', {
                                        children: [
                                            i('option', {
                                                hidden: !0,
                                                value: '',
                                                children: 'Sort By',
                                            }),
                                            i('option', {
                                                value: 'date',
                                                children: 'date',
                                            }),
                                            i('option', {
                                                value: 'alpha',
                                                children: 'Alpha',
                                            }),
                                        ],
                                    }),
                                    i(le, {}),
                                ],
                            }),
                            d('button', {
                                className: 'btn admins__btn',
                                onClick: () => {
                                    e(I0('addAdmin'))
                                },
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    i('p', { children: 'Add Admin' }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'renderedAdmins__table',
                        children: [
                            i('thead', {
                                className: 'renderedAdmins__table--head',
                                children: d('tr', {
                                    children: [
                                        d('th', {
                                            children: [
                                                i('input', {
                                                    type: 'checkbox',
                                                }),
                                                i('p', { children: 'Name' }),
                                            ],
                                        }),
                                        i('th', { children: 'Gender' }),
                                        i('th', { children: 'Phone Number' }),
                                        i('th', { children: 'Joined' }),
                                        i('th', { children: 'Status' }),
                                        i('th', { children: 'Actions' }),
                                    ],
                                }),
                            }),
                            i('tbody', {
                                className: 'renderedAdmins__table--body',
                                children:
                                    t && t.length > 0
                                        ? t.map((a, l) =>
                                              d(
                                                  'tr',
                                                  {
                                                      children: [
                                                          d('td', {
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                  }),
                                                                  i('img', {
                                                                      src: '/img/me.jpeg',
                                                                      alt: '',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          a.name,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.gender,
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.phoneNumber,
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.onboardingDate,
                                                          }),
                                                          i('td', {
                                                              children:
                                                                  a.status,
                                                          }),
                                                          i('td', {
                                                              children: i(
                                                                  'button',
                                                                  {
                                                                      children:
                                                                          i(
                                                                              'img',
                                                                              {
                                                                                  src: '/icons/admins/threeDots.svg',
                                                                                  alt: '',
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                                      ],
                                                  },
                                                  l
                                              )
                                          )
                                        : i('tr', {
                                              children: i('td', {
                                                  className: 'relative',
                                                  children: i('div', {
                                                      className:
                                                          'absolute w-full grid place-content-center',
                                                      children: i(Ne, {
                                                          className:
                                                              'animate-spin text-[#0660FE] text-4xl',
                                                      }),
                                                  }),
                                              }),
                                          }),
                            }),
                        ],
                    }),
                    d('footer', {
                        className: 'renderedAdmins__footer',
                        children: [
                            d('div', {
                                className: 'flex gap-8 items-center',
                                children: [
                                    i('p', { children: 'View' }),
                                    d('div', {
                                        className:
                                            'flex items-center border px-4 rounded-lg',
                                        children: [
                                            i('input', {
                                                type: 'number',
                                                className:
                                                    'w-8 outline-none border-none cursor-pointer',
                                                value: 6,
                                            }),
                                            i(le, {
                                                className: 'text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                    i('p', {
                                        className: 'text',
                                        children: 'List per page',
                                    }),
                                ],
                            }),
                            d('ul', {
                                className: 'flex items-center gap-5 ml-10',
                                children: [
                                    i(Ae, {}),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '1',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '2',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '3',
                                    }),
                                    i('li', {
                                        className:
                                            'grid place-content-center border w-[3rem] h-[3rem]',
                                        children: '4',
                                    }),
                                    i(Ee, {}),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
    )
}
function fie() {
    const e = _n(),
        { adminPath: t } = Hf(Sf),
        [r, n] = C.exports.useState(!1)
    return i('div', {
        className: 'admins',
        children: i('div', {
            className: 'admins__container',
            children: r
                ? i('section', {
                      children: {
                          renderedAdmins: i(die, {}),
                          addAdmin: i(cie, {}),
                      }[t],
                  })
                : d('section', {
                      className: 'admins__wrapper',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any Admin yet',
                          }),
                          d('button', {
                              className: 'btn admins__btn',
                              onClick: () => {
                                  n(!0), e(I0('renderedAdmins'))
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Admin',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const pie = d(oe, {
        path: '/superAdmin',
        element: i(sie, {}),
        children: [
            i(oe, { index: !0, element: i(mne, {}) }),
            i(oe, { path: 'admins', element: i(fie, {}) }),
            i(oe, { path: 'estates', element: i(JE, {}) }),
            i(oe, { path: 'estates/detail/:Id', element: i(pA, {}) }),
            i(oe, { path: 'estates/detail/report/:Id', element: i(dA, {}) }),
            i(oe, { path: 'security-company', element: i(uk, {}) }),
            i(oe, { path: 'security-company/:Id', element: i(dk, {}) }),
            i(oe, { path: 'security-company/add', element: i(qae, {}) }),
            i(oe, { path: 'estateManagers', element: i(YE, {}) }),
            i(oe, { path: 'rolesAndPerm', element: i(tk, {}) }),
            i(oe, { path: 'additional-resident', element: i(lk, {}) }),
            i(oe, { path: 'additional-resident/:Id', element: i(ok, {}) }),
            i(oe, { path: 'wallet', element: i(vne, {}) }),
            i(oe, { path: 'wallet/estate', element: i(kne, {}) }),
            i(oe, { path: 'wallet/estate/:id', element: i(One, {}) }),
            i(oe, { path: 'wallet/resident', element: i($ne, {}) }),
            i(oe, { path: 'wallet/resident/:id', element: i(Ine, {}) }),
            i(oe, { path: 'wallet/commission', element: i(Lne, {}) }),
            i(oe, { path: 'wallet/commission/:id', element: i(jne, {}) }),
            i(oe, { path: 'wallet/security-company', element: i(Bne, {}) }),
            i(oe, { path: 'wallet/security-company/:id', element: i(zne, {}) }),
            i(oe, { path: 'artisan', element: i(Yne, {}) }),
            i(oe, { path: 'artisan/category/:Id', element: i(Zne, {}) }),
            i(oe, { path: 'artisan/detail/:Id', element: i(eae, {}) }),
            i(oe, { path: 'artisan/add', element: i(Qne, {}) }),
            i(oe, { path: 'artisan/group/add', element: i(tae, {}) }),
            i(oe, { path: 'artisan/group/:Id', element: i(iae, {}) }),
            i(oe, { path: 'advert', element: i(dae, {}) }),
            i(oe, { path: 'advert/add', element: i(fae, {}) }),
            i(oe, { path: 'advert/detail/:Id', element: i(Iae, {}) }),
            i(oe, { path: 'advert/clickrate/increase', element: i(Lae, {}) }),
            i(oe, { path: 'advert/clickrate/decrease', element: i(Fae, {}) }),
            i(oe, { path: 'platformSettings', element: i(Wae, {}) }),
            i(oe, { path: 'platformSettings/addProperty', element: i(MS, {}) }),
            i(oe, { path: 'platformSettings/addSOS', element: i(Hae, {}) }),
            i(oe, {
                path: 'platformSettings/SOSDetails/:Id',
                element: i(Gae, {}),
            }),
        ],
    }),
    hie = [
        {
            id: 1,
            estateName: 'Estate 1',
            address: 'No 1, Ogunlana Drive, Surulere, Lagos',
            noOfSecurityGuards: 10,
        },
        {
            id: 2,
            estateName: 'Estate 1',
            address: 'No 1, Ogunlana Drive, Surulere, Lagos',
            noOfSecurityGuards: 10,
        },
        {
            id: 3,
            estateName: 'Estate 1',
            address: 'No 1, Ogunlana Drive, Surulere, Lagos',
            noOfSecurityGuards: 10,
        },
        {
            id: 4,
            estateName: 'Estate 1',
            address: 'No 1, Ogunlana Drive, Surulere, Lagos',
            noOfSecurityGuards: 10,
        },
    ]
function mie() {
    Me()
    const [e, t] = C.exports.useState([])
    C.exports.useEffect(() => {
        setTimeout(() => {
            t(hie)
        }, 1e3)
    }, [])
    const r = [2, 4, 6, 8],
        n = 4,
        [a, l] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: n,
            totalPage: Math.ceil(e.length / n),
            slicedPages: null,
        }),
        o = (b) => {
            const h = parseInt(b.target.value),
                g = []
            for (let x = 0; x < e.length; x += h) g.push(e.slice(x, x + h))
            l((x) => ({
                ...x,
                itemsPerPage: h,
                index: 0,
                currentPage: 1,
                slicedPages: g,
                totalPage: Math.ceil(e.length / h),
            }))
        }
    C.exports.useEffect(() => {
        const b = []
        for (let h = 0; h < e.length; h += a.itemsPerPage)
            b.push(e.slice(h, h + a.itemsPerPage))
        l((h) => ({
            ...h,
            slicedPages: b,
            totalPage: Math.ceil(e.length / a.itemsPerPage),
        }))
    }, [e])
    const s = () => {
            console.log(a.currentPage, a.totalPage),
                a.currentPage !== a.totalPage &&
                    l((b) => ({
                        ...b,
                        index: b.index + 1,
                        currentPage: b.currentPage + 1,
                    }))
        },
        c = () => {
            a.currentPage !== 1 &&
                l((b) => ({
                    ...b,
                    index: b.index - 1,
                    currentPage: b.currentPage - 1,
                }))
        },
        { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
        m = (b, h) => {
            l((g) => ({ ...g, index: h, currentPage: h + 1 }))
        },
        v = (b) => {
            alert('navigate' + b)
        }
    return i('div', {
        className: 'estateDetail',
        children: d('div', {
            className: 'mt-8 grid gap-8',
            children: [
                d('section', {
                    className: ' text-[1.4rem] grid ',
                    style: { gridTemplateColumns: '60% auto' },
                    children: [
                        d('div', {
                            className:
                                'overview justify-between bg-white rounded-lg p-8 grid gap-10',
                            style: {
                                gridTemplateColumns:
                                    'repeat(auto-fit, minmax(30rem, 1fr))',
                            },
                            children: [
                                i(qe, {
                                    title: 'Total Estates',
                                    number: 18e3,
                                    iconUrl:
                                        '/icons/securityCompany/totalEstates.svg',
                                    percent: 5,
                                    arrow: '/icons/securityCompany/arrowUp.svg',
                                    bgColor: 'bg-[#DDFCDC]',
                                    textColor: 'text-[#1A8F56]',
                                }),
                                i(qe, {
                                    title: 'Security Guard',
                                    number: 1532,
                                    iconUrl:
                                        '/icons/securityCompany/securityGuards.svg',
                                    percent: 5,
                                    arrow: '/icons/securityCompany/arrowUp.svg',
                                    bgColor: 'bg-[#F5F9FA]',
                                    textColor: 'text-[#00C2FF]',
                                }),
                                i(qe, {
                                    title: 'Assigned Security Guards',
                                    number: 1200,
                                    iconUrl:
                                        '/icons/securityCompany/AssignedSecurityGuards.svg',
                                    percent: 5,
                                    arrow: '/icons/securityCompany/arrowUp.svg',
                                    bgColor: 'bg-[#FCF3FA]',
                                    textColor: 'text-[#B6008E]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'w-full grid justify-center',
                            children: [
                                i(Xt, {
                                    amount: 2033350089e-2,
                                    title: 'Security Wallet',
                                    isWalletScreen: !0,
                                    bgImgUri: '/icons/overview/card/bgS.svg',
                                    lefIconUri:
                                        '/icons/overview/card/leftS.svg',
                                    bgColor: 'bg-[#6AB95F]',
                                }),
                                i('button', {
                                    className:
                                        'btn bg-green-700 text-white self-center rounded-lg',
                                    children: 'Fund Wallet',
                                }),
                            ],
                        }),
                    ],
                }),
                i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem]',
                    children: d('div', {
                        className: 'grid text-[1.6rem] border rounded-lg',
                        children: [
                            d('div', {
                                className:
                                    'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                children: [
                                    d('p', {
                                        className: ' font-bold',
                                        children: [
                                            'HouseHold List ',
                                            i('span', { children: '(200)' }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            i('img', {
                                                src: '/icons/admins/search.svg',
                                                alt: '',
                                                className:
                                                    'absolute left-4 text-[4rem]',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                placeholder:
                                                    'Search Parameters',
                                                className:
                                                    'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            d('select', {
                                                className:
                                                    ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                children: [
                                                    i('option', {
                                                        hidden: !0,
                                                        value: '',
                                                        children: 'Sort By',
                                                    }),
                                                    i('option', {
                                                        value: 'date',
                                                        children: 'date',
                                                    }),
                                                    i('option', {
                                                        value: 'alpha',
                                                        children: 'Alpha',
                                                    }),
                                                ],
                                            }),
                                            i(le, {
                                                className:
                                                    'absolute right-4 text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid bg-white',
                                children: [
                                    d('div', {
                                        className:
                                            'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-4 gap-8 text-[1.6rem]',
                                        children: [
                                            d('p', {
                                                className:
                                                    'flex items-center gap-4',
                                                children: [
                                                    i('input', {
                                                        type: 'checkbox',
                                                        name: 'sos',
                                                        id: 'sos',
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    i('label', {
                                                        htmlFor: 'sos',
                                                        children: 'Estate Name',
                                                    }),
                                                ],
                                            }),
                                            i('p', { children: 'Address' }),
                                            i('p', {
                                                children:
                                                    'No of Security Guards',
                                            }),
                                            i('p', { children: 'Actions' }),
                                        ],
                                    }),
                                    i('div', {
                                        className: 'grid gap-8 mt-8 p-8',
                                        children:
                                            f && f.length > 0
                                                ? K.Children.toArray(
                                                      f[a.index].map(
                                                          ({
                                                              id: b,
                                                              estateName: h,
                                                              noOfSecurityGuards:
                                                                  g,
                                                              address: x,
                                                          }) =>
                                                              d('div', {
                                                                  className:
                                                                      'grid justify-between border-b grid-cols-4 items-center gap-8 ',
                                                                  children: [
                                                                      d('p', {
                                                                          className:
                                                                              'flex items-center gap-4',
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'input',
                                                                                      {
                                                                                          type: 'checkbox',
                                                                                          className:
                                                                                              'cursor-pointer',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'label',
                                                                                      {
                                                                                          htmlFor:
                                                                                              'file',
                                                                                          children:
                                                                                              h,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              x,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              g,
                                                                      }),
                                                                      i(
                                                                          'button',
                                                                          {
                                                                              className:
                                                                                  'text-color-primary text-left',
                                                                              onClick:
                                                                                  () =>
                                                                                      v(
                                                                                          b
                                                                                      ),
                                                                              children:
                                                                                  'View Details',
                                                                          }
                                                                      ),
                                                                  ],
                                                              })
                                                      )
                                                  )
                                                : i('div', {
                                                      children: i('div', {
                                                          className: 'relative',
                                                          children: i('div', {
                                                              className:
                                                                  'absolute w-full grid place-content-center',
                                                              children: i(Ne, {
                                                                  className:
                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                              }),
                                                          }),
                                                      }),
                                                  }),
                                    }),
                                ],
                            }),
                            d('footer', {
                                className:
                                    'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                children: [
                                    d('div', {
                                        className: 'flex gap-8 items-center',
                                        children: [
                                            i('p', { children: 'View' }),
                                            i('select', {
                                                name: '',
                                                id: '',
                                                className:
                                                    'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                onChange: o,
                                                children: r.map((b, h) =>
                                                    i(
                                                        'option',
                                                        {
                                                            value: b,
                                                            selected: b === p,
                                                            className:
                                                                'capitalize cursor-pointer bg-white',
                                                            children: b,
                                                        },
                                                        h
                                                    )
                                                ),
                                            }),
                                            i('p', {
                                                className: 'text',
                                                children: 'List per page',
                                            }),
                                        ],
                                    }),
                                    d('ul', {
                                        className:
                                            'flex items-center gap-5 ml-10',
                                        children: [
                                            i(Ae, {
                                                onClick: c,
                                                className: 'cursor-pointer',
                                            }),
                                            f == null
                                                ? void 0
                                                : f.map((b, h) =>
                                                      i(
                                                          'li',
                                                          {
                                                              children:
                                                                  h + 1 === u
                                                                      ? i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                children:
                                                                                    h +
                                                                                    1,
                                                                            }
                                                                        )
                                                                      : i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                onClick:
                                                                                    (
                                                                                        g
                                                                                    ) =>
                                                                                        m(
                                                                                            g,
                                                                                            h
                                                                                        ),
                                                                                children:
                                                                                    h +
                                                                                    1,
                                                                            }
                                                                        ),
                                                          },
                                                          h
                                                      )
                                                  ),
                                            i(Ee, {
                                                onClick: s,
                                                className: 'cursor-pointer',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                }),
            ],
        }),
    })
}
const gie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M20.0001 7.99952L14.0001 2.73952C13.4501 2.24756 12.738 1.97559 12.0001 1.97559C11.2622 1.97559 10.5501 2.24756 10.0001 2.73952L4.00009 7.99952C3.68246 8.28359 3.42899 8.63207 3.25657 9.02176C3.08414 9.41145 2.99671 9.8334 3.00009 10.2595V18.9995C3.00009 19.7952 3.31617 20.5582 3.87877 21.1208C4.44138 21.6834 5.20445 21.9995 6.00009 21.9995H18.0001C18.7957 21.9995 19.5588 21.6834 20.1214 21.1208C20.684 20.5582 21.0001 19.7952 21.0001 18.9995V10.2495C21.0021 9.82508 20.9139 9.40506 20.7416 9.0172C20.5692 8.62934 20.3165 8.28247 20.0001 7.99952ZM14.0001 19.9995H10.0001V14.9995C10.0001 14.7343 10.1055 14.4799 10.293 14.2924C10.4805 14.1049 10.7349 13.9995 11.0001 13.9995H13.0001C13.2653 13.9995 13.5197 14.1049 13.7072 14.2924C13.8947 14.4799 14.0001 14.7343 14.0001 14.9995V19.9995ZM19.0001 18.9995C19.0001 19.2647 18.8947 19.5191 18.7072 19.7066C18.5197 19.8942 18.2653 19.9995 18.0001 19.9995H16.0001V14.9995C16.0001 14.2039 15.684 13.4408 15.1214 12.8782C14.5588 12.3156 13.7957 11.9995 13.0001 11.9995H11.0001C10.2044 11.9995 9.44138 12.3156 8.87877 12.8782C8.31616 13.4408 8.00009 14.2039 8.00009 14.9995V19.9995H6.00009C5.73488 19.9995 5.48052 19.8942 5.29299 19.7066C5.10545 19.5191 5.00009 19.2647 5.00009 18.9995V10.2495C5.00027 10.1075 5.03069 9.96721 5.08931 9.8379C5.14794 9.70858 5.23343 9.59323 5.3401 9.49952L11.3401 4.24952C11.5226 4.0892 11.7572 4.00078 12.0001 4.00078C12.243 4.00078 12.4776 4.0892 12.6601 4.24952L18.6601 9.49952C18.7668 9.59323 18.8523 9.70858 18.9109 9.8379C18.9695 9.96721 18.9999 10.1075 19.0001 10.2495V18.9995Z',
            }),
        }),
    vie = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M23 7L16 12L23 17V7V7Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M1 7C1 5.89543 1.89543 5 3 5H14C15.1046 5 16 5.89543 16 7V17C16 18.1046 15.1046 19 14 19H3C1.89543 19 1 18.1046 1 17V7Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    yie = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M3 3H10V10H3V3Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M14 3H21V10H14V3Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M14 14H21V21H14V14Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M3 14H10V21H3V14Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    bie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.63 3.64982C19.5138 3.55584 19.3781 3.48909 19.2327 3.45448C19.0873 3.41987 18.9361 3.41828 18.79 3.44982C17.7214 3.67376 16.6183 3.67662 15.5486 3.4582C14.4789 3.23979 13.4653 2.80473 12.57 2.17982C12.4026 2.06369 12.2037 2.00146 12 2.00146C11.7963 2.00146 11.5974 2.06369 11.43 2.17982C10.5348 2.80473 9.52108 3.23979 8.45137 3.4582C7.38166 3.67662 6.27857 3.67376 5.21001 3.44982C5.06394 3.41828 4.91267 3.41987 4.76731 3.45448C4.62194 3.48909 4.48618 3.55584 4.37001 3.64982C4.25399 3.74394 4.16053 3.86286 4.0965 3.99784C4.03247 4.13282 3.9995 4.28043 4.00001 4.42982V11.8798C3.99912 13.3136 4.34078 14.7268 4.99654 16.0018C5.6523 17.2768 6.60319 18.3767 7.77001 19.2098L11.42 21.8098C11.5894 21.9304 11.7921 21.9952 12 21.9952C12.2079 21.9952 12.4106 21.9304 12.58 21.8098L16.23 19.2098C17.3968 18.3767 18.3477 17.2768 19.0035 16.0018C19.6592 14.7268 20.0009 13.3136 20 11.8798V4.42982C20.0005 4.28043 19.9675 4.13282 19.9035 3.99784C19.8395 3.86286 19.746 3.74394 19.63 3.64982ZM18 11.8798C18.0008 12.9946 17.7353 14.0934 17.2257 15.0848C16.716 16.0763 15.977 16.9317 15.07 17.5798L12 19.7698L8.93001 17.5798C8.02304 16.9317 7.28399 16.0763 6.77435 15.0848C6.26472 14.0934 5.99924 12.9946 6.00001 11.8798V5.57982C8.09643 5.75925 10.196 5.27284 12 4.18982C13.804 5.27284 15.9036 5.75925 18 5.57982V11.8798ZM13.54 9.58982L10.85 12.2898L9.96001 11.3898C9.7717 11.2015 9.51631 11.0957 9.25001 11.0957C8.9837 11.0957 8.72831 11.2015 8.54001 11.3898C8.3517 11.5781 8.24591 11.8335 8.24591 12.0998C8.24591 12.3661 8.3517 12.6215 8.54001 12.8098L10.14 14.4098C10.233 14.5035 10.3436 14.5779 10.4654 14.6287C10.5873 14.6795 10.718 14.7056 10.85 14.7056C10.982 14.7056 11.1127 14.6795 11.2346 14.6287C11.3564 14.5779 11.467 14.5035 11.56 14.4098L15 10.9998C15.1883 10.8115 15.2941 10.5561 15.2941 10.2898C15.2941 10.0235 15.1883 9.76812 15 9.57982C14.8117 9.39152 14.5563 9.28573 14.29 9.28573C14.0237 9.28573 13.7683 9.39152 13.58 9.57982L13.54 9.58982Z',
            }),
        }),
    xie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.9009 12.6599C19.7406 12.4774 19.6521 12.2428 19.6521 11.9999C19.6521 11.757 19.7406 11.5224 19.9009 11.3399L21.1809 9.89989C21.3219 9.74256 21.4095 9.5446 21.4311 9.3344C21.4526 9.12421 21.407 8.91258 21.3009 8.72989L19.3009 5.2699C19.1958 5.08742 19.0358 4.94277 18.8436 4.85658C18.6515 4.77039 18.437 4.74705 18.2309 4.7899L16.3509 5.1699C16.1117 5.21932 15.8626 5.17948 15.6508 5.0579C15.4389 4.93631 15.2789 4.74138 15.2009 4.5099L14.5909 2.6799C14.5238 2.48127 14.396 2.30876 14.2255 2.18674C14.055 2.06471 13.8505 1.99935 13.6409 1.9999H9.64087C9.42281 1.98851 9.20701 2.04882 9.02644 2.17161C8.84587 2.2944 8.71045 2.47291 8.64087 2.6799L8.08087 4.5099C8.00287 4.74138 7.84284 4.93631 7.63099 5.0579C7.41913 5.17948 7.17009 5.21932 6.93087 5.1699L5.00087 4.7899C4.80542 4.76228 4.60617 4.79312 4.42822 4.87853C4.25027 4.96395 4.10157 5.10012 4.00087 5.2699L2.00087 8.72989C1.89203 8.91054 1.84309 9.12098 1.86106 9.33112C1.87902 9.54126 1.96296 9.74034 2.10087 9.89989L3.37087 11.3399C3.53119 11.5224 3.61961 11.757 3.61961 11.9999C3.61961 12.2428 3.53119 12.4774 3.37087 12.6599L2.10087 14.0999C1.96296 14.2595 1.87902 14.4585 1.86106 14.6687C1.84309 14.8788 1.89203 15.0892 2.00087 15.2699L4.00087 18.7299C4.10597 18.9124 4.26599 19.057 4.45812 19.1432C4.65026 19.2294 4.8647 19.2527 5.07087 19.2099L6.95087 18.8299C7.19009 18.7805 7.43913 18.8203 7.65099 18.9419C7.86284 19.0635 8.02287 19.2584 8.10087 19.4899L8.71087 21.3199C8.78045 21.5269 8.91587 21.7054 9.09644 21.8282C9.27701 21.951 9.49281 22.0113 9.71087 21.9999H13.7109C13.9205 22.0004 14.125 21.9351 14.2955 21.8131C14.466 21.691 14.5938 21.5185 14.6609 21.3199L15.2709 19.4899C15.3489 19.2584 15.5089 19.0635 15.7208 18.9419C15.9326 18.8203 16.1817 18.7805 16.4209 18.8299L18.3009 19.2099C18.507 19.2527 18.7215 19.2294 18.9136 19.1432C19.1058 19.057 19.2658 18.9124 19.3709 18.7299L21.3709 15.2699C21.477 15.0872 21.5226 14.8756 21.5011 14.6654C21.4795 14.4552 21.3919 14.2572 21.2509 14.0999L19.9009 12.6599ZM18.4109 13.9999L19.2109 14.8999L17.9309 17.1199L16.7509 16.8799C16.0307 16.7327 15.2814 16.855 14.6455 17.2237C14.0095 17.5924 13.531 18.1817 13.3009 18.8799L12.9209 19.9999H10.3609L10.0009 18.8599C9.77073 18.1617 9.29225 17.5724 8.65628 17.2037C8.0203 16.835 7.27109 16.7127 6.55087 16.8599L5.37087 17.0999L4.07087 14.8899L4.87087 13.9899C5.36283 13.4399 5.6348 12.7278 5.6348 11.9899C5.6348 11.252 5.36283 10.5399 4.87087 9.98989L4.07087 9.0899L5.35087 6.88989L6.53087 7.1299C7.25109 7.27712 8.0003 7.15478 8.63628 6.78609C9.27225 6.41741 9.75073 5.82805 9.98087 5.1299L10.3609 3.9999H12.9209L13.3009 5.13989C13.531 5.83805 14.0095 6.42741 14.6455 6.79609C15.2814 7.16478 16.0307 7.28712 16.7509 7.13989L17.9309 6.8999L19.2109 9.11989L18.4109 10.0199C17.9244 10.5687 17.6558 11.2766 17.6558 12.0099C17.6558 12.7432 17.9244 13.4511 18.4109 13.9999ZM11.6409 7.9999C10.8497 7.9999 10.0764 8.23449 9.41859 8.67402C8.76079 9.11354 8.24811 9.73826 7.94535 10.4692C7.6426 11.2001 7.56339 12.0043 7.71773 12.7803C7.87207 13.5562 8.25304 14.2689 8.81245 14.8283C9.37186 15.3877 10.0846 15.7687 10.8605 15.923C11.6364 16.0774 12.4407 15.9982 13.1716 15.6954C13.9025 15.3927 14.5272 14.88 14.9668 14.2222C15.4063 13.5644 15.6409 12.791 15.6409 11.9999C15.6409 10.939 15.2194 9.92161 14.4693 9.17147C13.7192 8.42132 12.7017 7.9999 11.6409 7.9999ZM11.6409 13.9999C11.2453 13.9999 10.8586 13.8826 10.5297 13.6628C10.2008 13.4431 9.94449 13.1307 9.79311 12.7653C9.64174 12.3998 9.60213 11.9977 9.6793 11.6097C9.75647 11.2218 9.94695 10.8654 10.2267 10.5857C10.5064 10.306 10.8627 10.1155 11.2507 10.0383C11.6387 9.96115 12.0408 10.0008 12.4062 10.1521C12.7717 10.3035 13.084 10.5599 13.3038 10.8888C13.5236 11.2177 13.6409 11.6043 13.6409 11.9999C13.6409 12.5303 13.4302 13.039 13.0551 13.4141C12.68 13.7892 12.1713 13.9999 11.6409 13.9999Z',
            }),
        }),
    wie = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19 7H18V6C18 5.20435 17.6839 4.44129 17.1213 3.87868C16.5587 3.31607 15.7956 3 15 3H5C4.20435 3 3.44129 3.31607 2.87868 3.87868C2.31607 4.44129 2 5.20435 2 6V18C2 18.7956 2.31607 19.5587 2.87868 20.1213C3.44129 20.6839 4.20435 21 5 21H19C19.7956 21 20.5587 20.6839 21.1213 20.1213C21.6839 19.5587 22 18.7956 22 18V10C22 9.20435 21.6839 8.44129 21.1213 7.87868C20.5587 7.31607 19.7956 7 19 7ZM5 5H15C15.2652 5 15.5196 5.10536 15.7071 5.29289C15.8946 5.48043 16 5.73478 16 6V7H5C4.73478 7 4.48043 6.89464 4.29289 6.70711C4.10536 6.51957 4 6.26522 4 6C4 5.73478 4.10536 5.48043 4.29289 5.29289C4.48043 5.10536 4.73478 5 5 5ZM20 15H19C18.7348 15 18.4804 14.8946 18.2929 14.7071C18.1054 14.5196 18 14.2652 18 14C18 13.7348 18.1054 13.4804 18.2929 13.2929C18.4804 13.1054 18.7348 13 19 13H20V15ZM20 11H19C18.2044 11 17.4413 11.3161 16.8787 11.8787C16.3161 12.4413 16 13.2044 16 14C16 14.7956 16.3161 15.5587 16.8787 16.1213C17.4413 16.6839 18.2044 17 19 17H20V18C20 18.2652 19.8946 18.5196 19.7071 18.7071C19.5196 18.8946 19.2652 19 19 19H5C4.73478 19 4.48043 18.8946 4.29289 18.7071C4.10536 18.5196 4 18.2652 4 18V8.83C4.32127 8.94302 4.65943 9.00051 5 9H19C19.2652 9 19.5196 9.10536 19.7071 9.29289C19.8946 9.48043 20 9.73478 20 10V11Z',
            }),
        })
function Nie() {
    return d('ul', {
        className: 'iconsBox',
        children: [
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/securityCompany',
                    children: [i(yie, {}), i('span', { children: 'Overview' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/securityCompany/estates',
                    className: 'fillIcon',
                    children: [i(gie, {}), i('span', { children: 'Estates' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/securityCompany/security-guard',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(bie, {}),
                        i('span', { children: 'Security Guard' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/securityCompany/wallet',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(wie, {}),
                        i('span', { children: 'Wallet' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/securityCompany/messages',
                    className: '',
                    children: [
                        ' ',
                        i(vie, {}),
                        i('span', { children: 'Messages' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/securityCompany/settings',
                    className: 'fillIcon',
                    children: [
                        i(xie, {}),
                        i('span', { children: 'Platform Settings' }),
                    ],
                }),
            }),
        ],
    })
}
function Sie() {
    const e = C.exports.useRef(null),
        [t, r] = C.exports.useState(!0)
    return i('div', {
        className: 'sidebar shadow overflow-scroll',
        ref: e,
        children: d('div', {
            className: `sidebar__container ${
                t ? 'items-start' : 'items-center justify-center'
            }`,
            children: [
                d('section', {
                    className: 'section-1',
                    children: [
                        i('div', {
                            className: 'section-1__box',
                            children: i('img', {
                                src: '/logo.svg',
                                alt: '',
                                width: 127,
                                height: 33,
                            }),
                        }),
                        i('span', {
                            onClick: () => {
                                e.current.classList.toggle('sidebarToggle'),
                                    r((l) => !l)
                            },
                            children: i(Hv, {}),
                        }),
                    ],
                }),
                i('section', { className: 'section-2', children: i(Nie, {}) }),
            ],
        }),
    })
}
function Cie() {
    return d('div', {
        className: 'dashboard',
        children: [
            i(Sie, {}),
            d('div', {
                className: 'dashboard__container',
                children: [
                    i(Kv, {
                        fullName: 'Collins Igboanugwo',
                        role: 'Security Guard',
                        imgUrl: '/img/me.jpeg',
                    }),
                    d('div', {
                        className: 'p-10 overflow-scroll max-h-[90vh]',
                        children: [i(Yv, {}), i(P0, {})],
                    }),
                ],
            }),
        ],
    })
}
const Xw = Array.from({ length: 10 }).map((e, t) => ({
    id: t + 1,
    estateName: `Estate ${t + 1}`,
    address: 'No 1, Ogunlana Drive, Surulere, Lagos',
    noOfSecurityGuards: 10,
}))
function Pie() {
    const e = Me(),
        [t, r] = C.exports.useState([]),
        [n, a] = C.exports.useState('')
    C.exports.useEffect(() => {
        setTimeout(() => {
            r(Xw)
        }, 1e3)
    }, [])
    const l = [2, 4, 6, 8],
        o = 4,
        [s, c] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: o,
            totalPage: Math.ceil(t.length / o),
            slicedPages: null,
        }),
        u = (w) => {
            const y = parseInt(w.target.value),
                N = []
            for (let S = 0; S < t.length; S += y) N.push(t.slice(S, S + y))
            c((S) => ({
                ...S,
                itemsPerPage: y,
                index: 0,
                currentPage: 1,
                slicedPages: N,
                totalPage: Math.ceil(t.length / y),
            }))
        }
    C.exports.useEffect(() => {
        const w = []
        for (let y = 0; y < t.length; y += s.itemsPerPage)
            w.push(t.slice(y, y + s.itemsPerPage))
        c((y) => ({
            ...y,
            slicedPages: w,
            totalPage: Math.ceil(t.length / s.itemsPerPage),
        }))
    }, [t])
    const f = () => {
            console.log(s.currentPage, s.totalPage),
                s.currentPage !== s.totalPage &&
                    c((w) => ({
                        ...w,
                        index: w.index + 1,
                        currentPage: w.currentPage + 1,
                    }))
        },
        p = () => {
            s.currentPage !== 1 &&
                c((w) => ({
                    ...w,
                    index: w.index - 1,
                    currentPage: w.currentPage - 1,
                }))
        },
        { currentPage: m, slicedPages: v, itemsPerPage: b } = s,
        h = (w, y) => {
            c((N) => ({ ...N, index: y, currentPage: y + 1 }))
        },
        g = (w) => {
            e(`/securityCompany/estates/detail/:${w}`)
        }
    return i('div', {
        className: 'estateDetail',
        children: d('div', {
            className: 'mt-8 grid gap-8',
            children: [
                i('div', {
                    className:
                        ' justify-center bg-white rounded-lg p-8 grid w-[40rem] ',
                    children: i(qe, {
                        title: 'Total Estates',
                        number: 18e3,
                        iconUrl: '/icons/securityCompany/totalEstates.svg',
                        percent: 5,
                        arrow: '/icons/securityCompany/arrowUp.svg',
                        bgColor: 'bg-[#DDFCDC]',
                        textColor: 'text-[#1A8F56]',
                    }),
                }),
                i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem]',
                    children: d('div', {
                        className: 'grid text-[1.6rem] border rounded-lg',
                        children: [
                            d('div', {
                                className:
                                    'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                children: [
                                    d('p', {
                                        className: ' font-bold',
                                        children: [
                                            'HouseHold List ',
                                            i('span', { children: '(200)' }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            i('img', {
                                                src: '/icons/admins/search.svg',
                                                alt: '',
                                                className:
                                                    'absolute left-4 text-[4rem]',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                value: n,
                                                onChange: (w) => {
                                                    const { value: y } =
                                                        w.target
                                                    a(y)
                                                    const N = Xw.filter((S) =>
                                                        S.estateName
                                                            .toLowerCase()
                                                            .includes(
                                                                y.toLowerCase()
                                                            )
                                                    )
                                                    r([...N])
                                                },
                                                placeholder:
                                                    'Search Parameters',
                                                className:
                                                    'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            d('select', {
                                                className:
                                                    ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                children: [
                                                    i('option', {
                                                        hidden: !0,
                                                        value: '',
                                                        children: 'Sort By',
                                                    }),
                                                    i('option', {
                                                        value: 'date',
                                                        children: 'date',
                                                    }),
                                                    i('option', {
                                                        value: 'alpha',
                                                        children: 'Alpha',
                                                    }),
                                                ],
                                            }),
                                            i(le, {
                                                className:
                                                    'absolute right-4 text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid bg-white',
                                children: [
                                    d('div', {
                                        className:
                                            'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-4 gap-8 text-[1.6rem]',
                                        children: [
                                            d('p', {
                                                className:
                                                    'flex items-center gap-4',
                                                children: [
                                                    i('input', {
                                                        type: 'checkbox',
                                                        name: 'sos',
                                                        id: 'sos',
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    i('label', {
                                                        htmlFor: 'sos',
                                                        children: 'Estate Name',
                                                    }),
                                                ],
                                            }),
                                            i('p', { children: 'Address' }),
                                            i('p', {
                                                children:
                                                    'No of Security Guards',
                                            }),
                                            i('p', { children: 'Actions' }),
                                        ],
                                    }),
                                    i('div', {
                                        className: 'grid gap-8 mt-8 p-8',
                                        children:
                                            v && v.length > 0
                                                ? K.Children.toArray(
                                                      v[s.index].map(
                                                          ({
                                                              id: w,
                                                              estateName: y,
                                                              noOfSecurityGuards:
                                                                  N,
                                                              address: S,
                                                          }) =>
                                                              d('div', {
                                                                  className:
                                                                      'grid justify-between border-b grid-cols-4 items-center gap-8 ',
                                                                  children: [
                                                                      d('p', {
                                                                          className:
                                                                              'flex items-center gap-4',
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'input',
                                                                                      {
                                                                                          type: 'checkbox',
                                                                                          className:
                                                                                              'cursor-pointer',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'label',
                                                                                      {
                                                                                          htmlFor:
                                                                                              'file',
                                                                                          children:
                                                                                              y,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              S,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              N,
                                                                      }),
                                                                      i(
                                                                          'button',
                                                                          {
                                                                              className:
                                                                                  'text-color-primary text-left',
                                                                              onClick:
                                                                                  () =>
                                                                                      g(
                                                                                          w
                                                                                      ),
                                                                              children:
                                                                                  'View Details',
                                                                          }
                                                                      ),
                                                                  ],
                                                              })
                                                      )
                                                  )
                                                : i('div', {
                                                      children: i('div', {
                                                          className: 'relative',
                                                          children: i('div', {
                                                              className:
                                                                  'absolute w-full grid place-content-center',
                                                              children: i(Ne, {
                                                                  className:
                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                              }),
                                                          }),
                                                      }),
                                                  }),
                                    }),
                                ],
                            }),
                            d('footer', {
                                className:
                                    'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                children: [
                                    d('div', {
                                        className: 'flex gap-8 items-center',
                                        children: [
                                            i('p', { children: 'View' }),
                                            i('select', {
                                                name: '',
                                                id: '',
                                                className:
                                                    'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                onChange: u,
                                                children: l.map((w, y) =>
                                                    i(
                                                        'option',
                                                        {
                                                            value: w,
                                                            selected: w === b,
                                                            className:
                                                                'capitalize cursor-pointer bg-white',
                                                            children: w,
                                                        },
                                                        y
                                                    )
                                                ),
                                            }),
                                            i('p', {
                                                className: 'text',
                                                children: 'List per page',
                                            }),
                                        ],
                                    }),
                                    d('ul', {
                                        className:
                                            'flex items-center gap-5 ml-10',
                                        children: [
                                            i(Ae, {
                                                onClick: p,
                                                className: 'cursor-pointer',
                                            }),
                                            v == null
                                                ? void 0
                                                : v.map((w, y) =>
                                                      i(
                                                          'li',
                                                          {
                                                              children:
                                                                  y + 1 === m
                                                                      ? i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                children:
                                                                                    y +
                                                                                    1,
                                                                            }
                                                                        )
                                                                      : i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                onClick:
                                                                                    (
                                                                                        N
                                                                                    ) =>
                                                                                        h(
                                                                                            N,
                                                                                            y
                                                                                        ),
                                                                                children:
                                                                                    y +
                                                                                    1,
                                                                            }
                                                                        ),
                                                          },
                                                          y
                                                      )
                                                  ),
                                            i(Ee, {
                                                onClick: f,
                                                className: 'cursor-pointer',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                }),
            ],
        }),
    })
}
const Zw = Array.from({ length: 10 }, (e, t) => ({
    id: t + 1,
    guardName: `John Doe ${t + 1}`,
    guardCode: 123456,
    phoneNumber: '+234 8023238423',
    kyc: 'Validated',
}))
function _ie() {
    const e = Me(),
        [t, r] = C.exports.useState([]),
        [n, a] = C.exports.useState('')
    C.exports.useEffect(() => {
        setTimeout(() => {
            r(Zw)
        }, 1e3)
    }, [])
    const l = [2, 4, 6, 8],
        o = 4,
        [s, c] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: o,
            totalPage: Math.ceil(t.length / o),
            slicedPages: null,
        }),
        u = (w) => {
            const y = parseInt(w.target.value),
                N = []
            for (let S = 0; S < t.length; S += y) N.push(t.slice(S, S + y))
            c((S) => ({
                ...S,
                itemsPerPage: y,
                index: 0,
                currentPage: 1,
                slicedPages: N,
                totalPage: Math.ceil(t.length / y),
            }))
        }
    C.exports.useEffect(() => {
        const w = []
        for (let y = 0; y < t.length; y += s.itemsPerPage)
            w.push(t.slice(y, y + s.itemsPerPage))
        c((y) => ({
            ...y,
            slicedPages: w,
            totalPage: Math.ceil(t.length / s.itemsPerPage),
        }))
    }, [t])
    const f = () => {
            console.log(s.currentPage, s.totalPage),
                s.currentPage !== s.totalPage &&
                    c((w) => ({
                        ...w,
                        index: w.index + 1,
                        currentPage: w.currentPage + 1,
                    }))
        },
        p = () => {
            s.currentPage !== 1 &&
                c((w) => ({
                    ...w,
                    index: w.index - 1,
                    currentPage: w.currentPage - 1,
                }))
        },
        { currentPage: m, slicedPages: v, itemsPerPage: b } = s,
        h = (w, y) => {
            c((N) => ({ ...N, index: y, currentPage: y + 1 }))
        },
        g = (w) => {
            e(`/securityCompany/estates/securityGuard/${w}`)
        }
    return i('div', {
        children: d('div', {
            className: 'mt-8 grid gap-8',
            children: [
                d('section', {
                    className:
                        'w-full flex bg-white p-8 rounded-lg gap-16 relative',
                    children: [
                        i('div', {
                            children: i('img', {
                                src: '/img/img3.png',
                                alt: '',
                                className:
                                    'w-[42rem] h-[26rem] object-cover rounded-lg',
                            }),
                        }),
                        d('div', {
                            className: 'grid',
                            children: [
                                d('div', {
                                    children: [
                                        i('p', {
                                            className:
                                                'text-[1.4rem] text-[#043FA7]',
                                            children: 'Estate\xA0Name',
                                        }),
                                        i('p', {
                                            className:
                                                'font-[1.6rem] whitespace-nowrap',
                                            children: 'Iba Housing Estate',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('p', {
                                            className: 'text-[#043FA7]',
                                            children:
                                                'Number of Security Guards',
                                        }),
                                        i('p', { children: '21' }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('p', {
                                            className: 'text-[#043FA7]',
                                            children: 'Status',
                                        }),
                                        i('p', {
                                            className: 'text-[#1D9F5F]',
                                            children: 'Active',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        i('div', {
                            className:
                                'flex justify-end absolute right-0 bottom-0 p-8',
                            children: i(ye, {
                                to: '/securityCompany/estates/workrate',
                                className: 'text-[#0660FE] text-[1.4rem]',
                                children: 'View Work Rate',
                            }),
                        }),
                    ],
                }),
                d('section', {
                    className:
                        'bg-white rounded-lg p-8 grid h-[28rem] text-[1.4rem]',
                    children: [
                        d('div', {
                            className: 'flex w-full justify-between',
                            children: [
                                i('p', { children: 'Iba Housing Estate' }),
                                d('p', {
                                    className: 'text-[#666869]',
                                    children: [
                                        'Joined:',
                                        ' ',
                                        i('span', {
                                            className: 'text-black',
                                            children: '08 May, 2022',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'overview flex justify-between',
                            children: [
                                i(qe, {
                                    title: 'Residents',
                                    number: 18e3,
                                    iconUrl: '/icons/overview/residents.svg',
                                    bgColor: 'bg-[#DDFCDC]',
                                    textColor: 'text-[#1A8F56]',
                                }),
                                i(qe, {
                                    title: 'Property',
                                    number: 4,
                                    iconUrl: '/icons/overview/property.svg',
                                    bgColor: 'bg-[#F5F9FA]',
                                    textColor: 'text-[#00C2FF]',
                                }),
                                i(qe, {
                                    title: 'Household',
                                    number: 40,
                                    iconUrl: '/icons/overview/household2.svg',
                                    bgColor: 'bg-[#FCF3FA]',
                                    textColor: 'text-[#B6008E]',
                                }),
                            ],
                        }),
                        i('div', {
                            className: 'flex justify-end',
                            children: i(ye, {
                                to: '/securityCompany/estates/estateReport',
                                className: 'text-[#0660FE] text-[1.4rem]',
                                children: 'View Estate Report',
                            }),
                        }),
                    ],
                }),
                i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem]',
                    children: d('div', {
                        className: 'grid text-[1.6rem] border rounded-lg',
                        children: [
                            d('div', {
                                className:
                                    'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                children: [
                                    d('p', {
                                        className: ' font-bold',
                                        children: [
                                            'Security Guards ',
                                            i('span', { children: '(200)' }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            i('img', {
                                                src: '/icons/admins/search.svg',
                                                alt: '',
                                                className:
                                                    'absolute left-4 text-[4rem]',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                value: n,
                                                onChange: (w) => {
                                                    const { value: y } =
                                                        w.target
                                                    a(y)
                                                    const N = Zw.filter((S) =>
                                                        S.guardName
                                                            .toLowerCase()
                                                            .includes(
                                                                y.toLowerCase()
                                                            )
                                                    )
                                                    r([...N])
                                                },
                                                placeholder:
                                                    'Search Parameters',
                                                className:
                                                    'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            d('select', {
                                                className:
                                                    ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                children: [
                                                    i('option', {
                                                        hidden: !0,
                                                        value: '',
                                                        children: 'Sort By',
                                                    }),
                                                    i('option', {
                                                        value: 'date',
                                                        children: 'date',
                                                    }),
                                                    i('option', {
                                                        value: 'alpha',
                                                        children: 'Alpha',
                                                    }),
                                                ],
                                            }),
                                            i(le, {
                                                className:
                                                    'absolute right-4 text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid bg-white',
                                children: [
                                    d('div', {
                                        className:
                                            'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-5 gap-8 text-[1.6rem]',
                                        children: [
                                            d('p', {
                                                className:
                                                    'flex items-center gap-4',
                                                children: [
                                                    i('input', {
                                                        type: 'checkbox',
                                                        name: 'sos',
                                                        id: 'sos',
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    i('label', {
                                                        htmlFor: 'sos',
                                                        children: 'Guard Name',
                                                    }),
                                                ],
                                            }),
                                            i('p', { children: 'Guard Code' }),
                                            i('p', {
                                                children: 'Phone Number',
                                            }),
                                            i('p', { children: 'KYC' }),
                                            i('p', { children: 'Actions' }),
                                        ],
                                    }),
                                    i('div', {
                                        className: 'grid gap-8 mt-8 p-8',
                                        children:
                                            v && v.length > 0
                                                ? K.Children.toArray(
                                                      v[s.index].map(
                                                          ({
                                                              id: w,
                                                              guardName: y,
                                                              guardCode: N,
                                                              phoneNumber: S,
                                                              kyc: P,
                                                          }) =>
                                                              d('div', {
                                                                  className:
                                                                      'grid justify-between border-b grid-cols-5 items-center gap-8 ',
                                                                  children: [
                                                                      d('p', {
                                                                          className:
                                                                              'flex items-center gap-4',
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'input',
                                                                                      {
                                                                                          type: 'checkbox',
                                                                                          className:
                                                                                              'cursor-pointer',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'label',
                                                                                      {
                                                                                          htmlFor:
                                                                                              'file',
                                                                                          children:
                                                                                              y,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              N,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              S,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              P ===
                                                                              'Validated'
                                                                                  ? i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-green-600',
                                                                                            children:
                                                                                                P,
                                                                                        }
                                                                                    )
                                                                                  : i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-red-600',
                                                                                            children:
                                                                                                P,
                                                                                        }
                                                                                    ),
                                                                      }),
                                                                      i(
                                                                          'button',
                                                                          {
                                                                              className:
                                                                                  'text-color-primary text-left',
                                                                              onClick:
                                                                                  () =>
                                                                                      g(
                                                                                          w
                                                                                      ),
                                                                              children:
                                                                                  'View Details',
                                                                          }
                                                                      ),
                                                                  ],
                                                              })
                                                      )
                                                  )
                                                : i('div', {
                                                      children: i('div', {
                                                          className: 'relative',
                                                          children: i('div', {
                                                              className:
                                                                  'absolute w-full grid place-content-center',
                                                              children: i(Ne, {
                                                                  className:
                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                              }),
                                                          }),
                                                      }),
                                                  }),
                                    }),
                                ],
                            }),
                            d('footer', {
                                className:
                                    'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                children: [
                                    d('div', {
                                        className: 'flex gap-8 items-center',
                                        children: [
                                            i('p', { children: 'View' }),
                                            i('select', {
                                                name: '',
                                                id: '',
                                                className:
                                                    'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                onChange: u,
                                                children: l.map((w, y) =>
                                                    i(
                                                        'option',
                                                        {
                                                            value: w,
                                                            selected: w === b,
                                                            className:
                                                                'capitalize cursor-pointer bg-white',
                                                            children: w,
                                                        },
                                                        y
                                                    )
                                                ),
                                            }),
                                            i('p', {
                                                className: 'text',
                                                children: 'List per page',
                                            }),
                                        ],
                                    }),
                                    d('ul', {
                                        className:
                                            'flex items-center gap-5 ml-10',
                                        children: [
                                            i(Ae, {
                                                onClick: p,
                                                className: 'cursor-pointer',
                                            }),
                                            v == null
                                                ? void 0
                                                : v.map((w, y) =>
                                                      i(
                                                          'li',
                                                          {
                                                              children:
                                                                  y + 1 === m
                                                                      ? i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                children:
                                                                                    y +
                                                                                    1,
                                                                            }
                                                                        )
                                                                      : i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                onClick:
                                                                                    (
                                                                                        N
                                                                                    ) =>
                                                                                        h(
                                                                                            N,
                                                                                            y
                                                                                        ),
                                                                                children:
                                                                                    y +
                                                                                    1,
                                                                            }
                                                                        ),
                                                          },
                                                          y
                                                      )
                                                  ),
                                            i(Ee, {
                                                onClick: f,
                                                className: 'cursor-pointer',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                }),
            ],
        }),
    })
}
const Aie = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState(null),
            [a, l] = C.exports.useState(null),
            [o, s] = C.exports.useState(null),
            [c, u] = C.exports.useState(null),
            [f, p] = C.exports.useState(!1),
            [m, v] = C.exports.useState('Deactivate'),
            [b, h] = C.exports.useState(''),
            g = async (O) => {
                const T = await kr('#photoUpload')
                h(T)
            },
            x = (O) => {
                O.preventDefault()
            },
            w = C.exports.useRef(null),
            y = C.exports.useRef(null),
            N = () => {
                w.current && w.current.close()
            },
            S = () => {
                y.current && y.current.close()
            },
            P = () => {
                y.current && y.current.showModal()
            },
            E = (O) => {
                O === 'Deactivate' && v('Deactivate'),
                    O === 'Delete' && v('Delete'),
                    O === 'ReAssign' && v('ReAssign'),
                    w.current && w.current.showModal()
            },
            k = (O) => {
                O === 'Deactivate' && E('Deactivate'),
                    O === 'Delete' && E('Delete'),
                    O === 'ReAssign' && E('ReAssign')
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: y,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[90rem] min-h-[30rem] p-10 text-[1.6rem] relative gap-20',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => S(),
                                }),
                                i('div', {
                                    className:
                                        'relative h-[14rem] bg-blue-600 w-full mt-10 rounded-lg',
                                    children: i('img', {
                                        src: '/img/me.jpeg',
                                        alt: '',
                                        className:
                                            'w-[10rem] h-[10rem] border rounded-full border-green-600 object-cover absolute bottom-[-6rem] left-10 object-top',
                                    }),
                                }),
                                d('div', {
                                    className: 'mt-20',
                                    children: [
                                        i('h2', {
                                            children: 'Validation Result',
                                        }),
                                        d('div', {
                                            className: 'border grid mt-5',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Validation Option',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Phone Number | (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Full Name',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Michael Okonkwo',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Date of Birth',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                '15 May, 1998',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Phone Number',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                ' (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2  gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: 'Gender',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children: 'Male',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                i('button', {
                                    className:
                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem] justify-self-center',
                                    onClick: () => S(),
                                    children: 'Ok',
                                }),
                            ],
                        }),
                    }),
                }),
                i('dialog', {
                    className: 'dialog',
                    ref: w,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children:
                                m === 'Deactivate'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to deactivate this SecurityGuard',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => N(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              N(),
                                                                  fe(
                                                                      'SecurityGuard deactivated successfully',
                                                                      {
                                                                          type: 'success',
                                                                          className:
                                                                              'bg-green-100 text-green-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children:
                                                              'Deactivate',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : m === 'Delete'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to delete this SecurityGuard',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => N(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              N(),
                                                                  fe(
                                                                      'SecurityGuard deleted successfully',
                                                                      {
                                                                          type: 'success',
                                                                          className:
                                                                              'bg-green-100 text-green-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to reassign this security guard primary estate',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => N(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              ' bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              N(),
                                                                  fe(
                                                                      ' Reassigned successfully',
                                                                      {
                                                                          type: 'success',
                                                                          className:
                                                                              'bg-green-100 text-green-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Yes',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                        }),
                    }),
                }),
                d('div', {
                    className: 'grid p-8 bg-white  rounded-lg gap-[5rem]',
                    children: [
                        d('div', {
                            className: 'border-b border-b-light-100 pb-20',
                            children: [
                                d('div', {
                                    className:
                                        'flex justify-between items-center',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex gap-8 items-center',
                                            children: [
                                                d('label', {
                                                    htmlFor: 'photoUpload',
                                                    className:
                                                        'grid gap-4 cursor-pointer justify-items-center',
                                                    children: [
                                                        i('img', {
                                                            src:
                                                                b ||
                                                                '/img/me.jpeg',
                                                            alt: 'photoPreview',
                                                            className:
                                                                'object-cover w-[11rem] h-[11rem] rounded-full object-top',
                                                        }),
                                                        i('span', {
                                                            className:
                                                                'text-color-blue-1 text-[1.4rem]',
                                                            children: 'Edit',
                                                        }),
                                                    ],
                                                }),
                                                i('input', {
                                                    type: 'file',
                                                    name: 'photoUpload',
                                                    id: 'photoUpload',
                                                    accept: 'image/*',
                                                    className: 'hidden',
                                                    onClick: g,
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid gap-2 justify-items-start',
                                                    children: [
                                                        d('p', {
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: [
                                                                'Guard Code :',
                                                                ' ',
                                                                i('span', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Medium',
                                                                    },
                                                                    children:
                                                                        'SG09897',
                                                                }),
                                                            ],
                                                        }),
                                                        d('p', {
                                                            className:
                                                                'flex items-center gap-4',
                                                            children: [
                                                                d('span', {
                                                                    className:
                                                                        'flex items-center gap-2',
                                                                    children: [
                                                                        'KYG Status ',
                                                                        i(
                                                                            Wn,
                                                                            {}
                                                                        ),
                                                                        ':',
                                                                    ],
                                                                }),
                                                                f
                                                                    ? i(
                                                                          'span',
                                                                          {
                                                                              className:
                                                                                  'text-green-600',
                                                                              style: {
                                                                                  fontFamily:
                                                                                      'Satoshi-Light',
                                                                              },
                                                                              children:
                                                                                  'Validated',
                                                                          }
                                                                      )
                                                                    : i(
                                                                          'span',
                                                                          {
                                                                              className:
                                                                                  'text-red-600',
                                                                              style: {
                                                                                  fontFamily:
                                                                                      'Satoshi-Light',
                                                                              },
                                                                              children:
                                                                                  'Not Validated',
                                                                          }
                                                                      ),
                                                            ],
                                                        }),
                                                        i('button', {
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Medium',
                                                            },
                                                            className:
                                                                'text-color-blue',
                                                            onClick: () => P(),
                                                            children:
                                                                'Click here to view results',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'flex gap-8',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'border border-color-blue-1 text-color-blue-1 px-16 py-4 flex items-center  rounded-lg gap-4',
                                                    onClick: () =>
                                                        k('Deactivate'),
                                                    children: i('span', {
                                                        className:
                                                            ' text-[1.4rem] font-semibold',
                                                        children: 'Deactivate',
                                                    }),
                                                }),
                                                d('button', {
                                                    className:
                                                        'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                                    onClick: () => k('Delete'),
                                                    children: [
                                                        i('img', {
                                                            src: '/icons/admins/delete.svg',
                                                            alt: '',
                                                        }),
                                                        i('span', {
                                                            className:
                                                                'text-red-600 text-[1.4rem] font-semibold',
                                                            children: 'Delete',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('form', {
                                    onSubmit: x,
                                    className:
                                        'grid max-w-[84rem] gap-16 mt-12',
                                    style: {
                                        gridTemplateColumns:
                                            ' repeat(auto-fit, minmax(35rem, 1fr))',
                                    },
                                    children: [
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'fullName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Full Name *',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'fullName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor:
                                                        'SecurityGuardCode',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children:
                                                        'Security Guard Code',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'SecurityGuardCode',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'DateOfBirth',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Date of Birth',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'DateOfBirth',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'email',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Email Address',
                                                }),
                                                i('input', {
                                                    type: 'email',
                                                    required: !0,
                                                    id: 'email',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'phoneNumber',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Phone Number *',
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex text-[1.6rem] gap-4   h-[5rem]',
                                                    children: [
                                                        i('select', {
                                                            className:
                                                                'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                            children: i(
                                                                'option',
                                                                {
                                                                    value: '234',
                                                                    children:
                                                                        '+234',
                                                                }
                                                            ),
                                                        }),
                                                        i('input', {
                                                            required: !0,
                                                            type: 'number',
                                                            inputMode:
                                                                'numeric',
                                                            id: 'phoneNumber',
                                                            placeholder:
                                                                'Phone Number',
                                                            className:
                                                                'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(Pt, {
                                            label: 'Gender',
                                            state: ['Male', 'Female'],
                                            placeholder: 'Male',
                                            selectedState: e,
                                            setSelectedState: t,
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'homeAddress',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Home Address',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'homeAddress',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'idType',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'ID Type',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'idType',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'idNumber',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'ID Number',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'idNumber',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'kya',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'KYA',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'kya',
                                                    value: 'Validated',
                                                    className:
                                                        'w-full rounded-lg border-none text-[1.6rem] outline-none underline text-green-500',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'dateOfOnboarding',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children:
                                                        'Date of Onboarding',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder: 'Optional',
                                                    id: 'dateOfOnboarding',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            children: [
                                i('h2', {
                                    className: 'text-[2rem] mb-10',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Assigned Estate Details',
                                }),
                                d('div', {
                                    className: 'grid gap-4',
                                    children: [
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Gwarimpa Estate',
                                                        selectedState: r,
                                                        isSearchable: !0,
                                                        setSelectedState: n,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () =>
                                                        k('ReAssign'),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Secondary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Iba Estate',
                                                        selectedState: a,
                                                        isSearchable: !0,
                                                        setSelectedState: l,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () =>
                                                        k('ReAssign'),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Peace Estate',
                                                        selectedState: o,
                                                        isSearchable: !0,
                                                        setSelectedState: s,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () =>
                                                        k('ReAssign'),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Gwarimpa Estate',
                                                        selectedState: c,
                                                        isSearchable: !0,
                                                        setSelectedState: u,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () =>
                                                        k('ReAssign'),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Eie = () =>
        i('div', {
            children: d('main', {
                className: 'grid gap-10',
                children: [
                    d('div', {
                        className: 'mt-8 flex gap-8 justify-between',
                        children: [
                            d('div', {
                                className:
                                    'bg-white p-8 rounded-lg grid justify-center',
                                children: [
                                    d('section', {
                                        className: 'flex items-center mb-20',
                                        children: [
                                            i('p', {
                                                className:
                                                    'text-[1.8rem] whitespace-nowrap',
                                                children: 'Check-In',
                                            }),
                                            d('div', {
                                                className:
                                                    'flex justify-center gap-20 w-full ',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#08d231] w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'Security Guard',
                                                            }),
                                                        ],
                                                    }),
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#f7e541] w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'System',
                                                            }),
                                                        ],
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    i(Uw, {
                                        color1: '#08D231',
                                        color2: '#f7e541',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'bg-white p-8 rounded-lg',
                                children: [
                                    d('section', {
                                        className: 'overviewChart__box',
                                        children: [
                                            i(Fw, {}),
                                            d('div', {
                                                className:
                                                    'overviewChart__label',
                                                children: [
                                                    i('p', {
                                                        className:
                                                            'text-[3rem] font-bold relative',
                                                        children: '50,000',
                                                    }),
                                                    i('p', {
                                                        className:
                                                            'text-[1.2rem] max-w-[9.8rem]',
                                                        children:
                                                            'Total Check-Out',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        children: [
                                            d('section', {
                                                className:
                                                    'flex items-center justify-between',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#08d231] rounded-full w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'Security Guard',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children: '20,000',
                                                    }),
                                                ],
                                            }),
                                            d('section', {
                                                className:
                                                    'flex items-center justify-between',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#f7e541] rounded-full w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'SESA',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children: '30,000',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'mt-8 flex gap-8 justify-between',
                        children: [
                            d('div', {
                                className:
                                    'bg-white p-8 rounded-lg grid justify-center',
                                children: [
                                    d('section', {
                                        className: 'flex items-center mb-20',
                                        children: [
                                            i('p', {
                                                className:
                                                    'text-[1.8rem] whitespace-nowrap',
                                                children: 'Check-Out',
                                            }),
                                            d('div', {
                                                className:
                                                    'flex justify-center gap-20 w-full ',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#08d231] w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'Security Guard',
                                                            }),
                                                        ],
                                                    }),
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#f7e541] w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'System',
                                                            }),
                                                        ],
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    i(Uw, {
                                        color1: '#3d08d2',
                                        color2: '#F74183',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'bg-white p-8 rounded-lg',
                                children: [
                                    d('section', {
                                        className: 'overviewChart__box',
                                        children: [
                                            i(Fw, {
                                                color1: '#3d08d2',
                                                color2: '#F74183',
                                            }),
                                            d('div', {
                                                className:
                                                    'overviewChart__label',
                                                children: [
                                                    i('p', {
                                                        className:
                                                            'text-[3rem] font-bold relative',
                                                        children: '50,000',
                                                    }),
                                                    i('p', {
                                                        className:
                                                            'text-[1.2rem] max-w-[9.8rem]',
                                                        children:
                                                            'Total Check-Out',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        children: [
                                            d('section', {
                                                className:
                                                    'flex items-center justify-between',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#3d08d2] rounded-full w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'Security Guard',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children: '20,000',
                                                    }),
                                                ],
                                            }),
                                            d('section', {
                                                className:
                                                    'flex items-center justify-between',
                                                children: [
                                                    d('div', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('span', {
                                                                className:
                                                                    'bg-[#F74183] rounded-full w-[1rem] h-[1rem] flex',
                                                                children: ' ',
                                                            }),
                                                            ' ',
                                                            i('p', {
                                                                children:
                                                                    'SESA',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children: '30,000',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        }),
    kie = Array.from({ length: 20 }).map((e, t) => ({
        id: t,
        guardName: 'John Doe',
        date: '12-May-2023',
        phoneNumber: '+2347024954270',
        guardCode: Math.floor(Math.random() * 3e3 + 1e3),
        clockInCount: Math.floor(Math.random() * 10 + 1),
        clockOutCount: Math.floor(Math.random() * 10 + 1),
    })),
    Oie = Array.from({ length: 20 }).map((e, t) => ({
        id: t,
        guardName: 'John Doe',
        date: '12-May-2023',
        guardCode: Math.floor(Math.random() * 3e3 + 1e3),
        clockInCount: Math.floor(Math.random() * 10 + 1),
        clockOutCount: Math.floor(Math.random() * 10 + 1),
    })),
    Tie = () => {
        const [e, t] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                t(Oie)
            }, 1e3)
        }, [])
        const r = [2, 4, 6, 8],
            n = 4,
            [a, l] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: n,
                totalPage: Math.ceil(e.length / n),
                slicedPages: null,
            }),
            o = (v) => {
                const b = parseInt(v.target.value),
                    h = []
                for (let g = 0; g < e.length; g += b) h.push(e.slice(g, g + b))
                l((g) => ({
                    ...g,
                    itemsPerPage: b,
                    index: 0,
                    currentPage: 1,
                    slicedPages: h,
                    totalPage: Math.ceil(e.length / b),
                }))
            }
        C.exports.useEffect(() => {
            const v = []
            for (let b = 0; b < e.length; b += a.itemsPerPage)
                v.push(e.slice(b, b + a.itemsPerPage))
            l((b) => ({
                ...b,
                slicedPages: v,
                totalPage: Math.ceil(e.length / a.itemsPerPage),
            }))
        }, [e])
        const s = () => {
                console.log(a.currentPage, a.totalPage),
                    a.currentPage !== a.totalPage &&
                        l((v) => ({
                            ...v,
                            index: v.index + 1,
                            currentPage: v.currentPage + 1,
                        }))
            },
            c = () => {
                a.currentPage !== 1 &&
                    l((v) => ({
                        ...v,
                        index: v.index - 1,
                        currentPage: v.currentPage - 1,
                    }))
            },
            { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
            m = (v, b) => {
                l((h) => ({ ...h, index: b, currentPage: b + 1 }))
            }
        return d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('caption', {
                    className:
                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        d('p', {
                            className: ' font-bold',
                            children: [
                                'Activity Report List ',
                                i('span', { children: '(4)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Sort By',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Start Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'End Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid',
                    children: [
                        d('div', {
                            className:
                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-6 gap-8',
                            style: { fontSize: '1.6rem' },
                            children: [
                                d('p', {
                                    className: 'flex items-center gap-2',
                                    children: [
                                        i('input', {
                                            type: 'checkbox',
                                            className: 'cursor-pointer',
                                        }),
                                        i('p', { children: 'Guard Name' }),
                                    ],
                                }),
                                i('p', { children: 'Date' }),
                                i('p', { children: 'Guard Code' }),
                                i('p', { children: 'Clock-In Count' }),
                                i('p', { children: 'Clock-Out Count' }),
                                i('p', { children: 'Panic Alert' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                f && f.length > 0
                                    ? K.Children.toArray(
                                          f[a.index].map(
                                              (
                                                  {
                                                      guardName: v,
                                                      date: b,
                                                      guardCode: h,
                                                      clockInCount: g,
                                                      clockOutCount: x,
                                                  },
                                                  w
                                              ) =>
                                                  d('div', {
                                                      className:
                                                          'grid justify-between border-b grid-cols-6 gap-8 ',
                                                      children: [
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-4',
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                      className:
                                                                          'cursor-pointer',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          v,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: b,
                                                          }),
                                                          i('p', {
                                                              children: h,
                                                          }),
                                                          i('p', {
                                                              children: g,
                                                          }),
                                                          i('p', {
                                                              children: x,
                                                          }),
                                                          i('p', {
                                                              children: '0',
                                                          }),
                                                      ],
                                                  })
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                i('select', {
                                    name: '',
                                    id: '',
                                    className:
                                        'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                    onChange: o,
                                    children: r.map((v, b) =>
                                        i(
                                            'option',
                                            {
                                                value: v,
                                                selected: v === p,
                                                className:
                                                    'capitalize cursor-pointer bg-white',
                                                children: v,
                                            },
                                            b
                                        )
                                    ),
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {
                                    onClick: c,
                                    className: 'cursor-pointer',
                                }),
                                f == null
                                    ? void 0
                                    : f.map((v, b) =>
                                          i(
                                              'li',
                                              {
                                                  children:
                                                      b + 1 === u
                                                          ? i('span', {
                                                                className:
                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                children: b + 1,
                                                            })
                                                          : i('span', {
                                                                className:
                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                onClick: (h) =>
                                                                    m(h, b),
                                                                children: b + 1,
                                                            }),
                                              },
                                              b
                                          )
                                      ),
                                i(Ee, {
                                    onClick: s,
                                    className: 'cursor-pointer',
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Mie = () => {
        const [e, t] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                t(kie)
            }, 1e3)
        }, [])
        const r = [2, 4, 6, 8],
            n = 4,
            [a, l] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: n,
                totalPage: Math.ceil(e.length / n),
                slicedPages: null,
            }),
            o = (v) => {
                const b = parseInt(v.target.value),
                    h = []
                for (let g = 0; g < e.length; g += b) h.push(e.slice(g, g + b))
                l((g) => ({
                    ...g,
                    itemsPerPage: b,
                    index: 0,
                    currentPage: 1,
                    slicedPages: h,
                    totalPage: Math.ceil(e.length / b),
                }))
            }
        C.exports.useEffect(() => {
            const v = []
            for (let b = 0; b < e.length; b += a.itemsPerPage)
                v.push(e.slice(b, b + a.itemsPerPage))
            l((b) => ({
                ...b,
                slicedPages: v,
                totalPage: Math.ceil(e.length / a.itemsPerPage),
            }))
        }, [e])
        const s = () => {
                console.log(a.currentPage, a.totalPage),
                    a.currentPage !== a.totalPage &&
                        l((v) => ({
                            ...v,
                            index: v.index + 1,
                            currentPage: v.currentPage + 1,
                        }))
            },
            c = () => {
                a.currentPage !== 1 &&
                    l((v) => ({
                        ...v,
                        index: v.index - 1,
                        currentPage: v.currentPage - 1,
                    }))
            },
            { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
            m = (v, b) => {
                l((h) => ({ ...h, index: b, currentPage: b + 1 }))
            }
        return d('div', {
            className: 'grid text-[1.6rem]',
            children: [
                d('caption', {
                    className:
                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                    children: [
                        d('p', {
                            className: ' font-bold',
                            children: [
                                'Attendance Report List ',
                                i('span', { children: '(4)' }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/admins/search.svg',
                                    alt: '',
                                    className: 'absolute left-4 text-[4rem]',
                                }),
                                i('input', {
                                    type: 'text',
                                    placeholder: 'Search Parameters',
                                    className:
                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Sort By',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'Start Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                d('select', {
                                    className:
                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                    children: [
                                        i('option', {
                                            hidden: !0,
                                            value: '',
                                            children: 'End Date',
                                        }),
                                        i('option', {
                                            value: 'date',
                                            children: 'date',
                                        }),
                                        i('option', {
                                            value: 'alpha',
                                            children: 'Alpha',
                                        }),
                                    ],
                                }),
                                i(le, {
                                    className: 'absolute right-4 text-[1.3rem]',
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'grid',
                    children: [
                        d('div', {
                            className:
                                'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-6 gap-8',
                            style: { fontSize: '1.6rem' },
                            children: [
                                d('p', {
                                    className: 'flex items-center gap-2',
                                    children: [
                                        i('input', {
                                            type: 'checkbox',
                                            className: 'cursor-pointer',
                                        }),
                                        i('p', { children: 'Guard Name' }),
                                    ],
                                }),
                                i('p', { children: 'Date' }),
                                i('p', { children: 'Guard Code' }),
                                i('p', { children: 'Phone Number' }),
                                i('p', { children: 'Clock In' }),
                                i('p', { children: 'Clock Out ' }),
                            ],
                        }),
                        i('div', {
                            className: 'grid gap-8 mt-8 p-8',
                            children:
                                f && f.length > 0
                                    ? K.Children.toArray(
                                          f[a.index].map(
                                              ({
                                                  guardCode: v,
                                                  guardName: b,
                                                  date: h,
                                                  clockInCount: g,
                                                  clockOutCount: x,
                                                  phoneNumber: w,
                                              }) =>
                                                  d('div', {
                                                      className:
                                                          'grid justify-between border-b grid-cols-6 gap-8 ',
                                                      children: [
                                                          d('p', {
                                                              className:
                                                                  'flex items-center gap-4',
                                                              children: [
                                                                  i('input', {
                                                                      type: 'checkbox',
                                                                      className:
                                                                          'cursor-pointer',
                                                                  }),
                                                                  i('span', {
                                                                      children:
                                                                          b,
                                                                  }),
                                                              ],
                                                          }),
                                                          i('p', {
                                                              children: h,
                                                          }),
                                                          i('p', {
                                                              children: v,
                                                          }),
                                                          i('p', {
                                                              children: w,
                                                          }),
                                                          i('p', {
                                                              children: g,
                                                          }),
                                                          i('p', {
                                                              children: x,
                                                          }),
                                                      ],
                                                  })
                                          )
                                      )
                                    : i('div', {
                                          children: i('div', {
                                              className: 'relative',
                                              children: i('div', {
                                                  className:
                                                      'absolute w-full grid place-content-center',
                                                  children: i(Ne, {
                                                      className:
                                                          'animate-spin text-[#0660FE] text-4xl',
                                                  }),
                                              }),
                                          }),
                                      }),
                        }),
                    ],
                }),
                d('footer', {
                    className:
                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                    children: [
                        d('div', {
                            className: 'flex gap-8 items-center',
                            children: [
                                i('p', { children: 'View' }),
                                i('select', {
                                    name: '',
                                    id: '',
                                    className:
                                        'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                    onChange: o,
                                    children: r.map((v, b) =>
                                        i(
                                            'option',
                                            {
                                                value: v,
                                                selected: v === p,
                                                className:
                                                    'capitalize cursor-pointer bg-white',
                                                children: v,
                                            },
                                            b
                                        )
                                    ),
                                }),
                                i('p', {
                                    className: 'text',
                                    children: 'List per page',
                                }),
                            ],
                        }),
                        d('ul', {
                            className: 'flex items-center gap-5 ml-10',
                            children: [
                                i(Ae, {
                                    onClick: c,
                                    className: 'cursor-pointer',
                                }),
                                f == null
                                    ? void 0
                                    : f.map((v, b) =>
                                          i(
                                              'li',
                                              {
                                                  children:
                                                      b + 1 === u
                                                          ? i('span', {
                                                                className:
                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                children: b + 1,
                                                            })
                                                          : i('span', {
                                                                className:
                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                onClick: (h) =>
                                                                    m(h, b),
                                                                children: b + 1,
                                                            }),
                                              },
                                              b
                                          )
                                      ),
                                i(Ee, {
                                    onClick: s,
                                    className: 'cursor-pointer',
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    }
function Die() {
    const [e, t] = C.exports.useState('activityReport'),
        r = () => new Date().toLocaleString('en-GB', { dateStyle: 'full' }),
        n = r()
    return (
        r(),
        d('div', {
            className: 'estateDetail',
            children: [
                d('div', {
                    className: 'estateDetail__radioBox',
                    children: [
                        i('input', {
                            defaultChecked: !0,
                            type: 'radio',
                            name: 'report',
                            id: 'activityReport',
                            className: 'hidden',
                            onChange: () => t('activityReport'),
                        }),
                        i('label', {
                            htmlFor: 'activityReport',
                            children: 'Activity Report',
                        }),
                        i('input', {
                            type: 'radio',
                            name: 'report',
                            id: 'attendanceReport',
                            className: 'hidden',
                            onChange: () => t('attendanceReport'),
                        }),
                        i('label', {
                            htmlFor: 'attendanceReport',
                            children: 'Attendance Report',
                        }),
                    ],
                }),
                d('div', {
                    className: 'mt-8 grid gap-8',
                    children: [
                        e === 'attendanceReport' &&
                            d('section', {
                                className:
                                    'bg-white rounded-lg p-8 grid h-[28rem] text-[1.4rem]',
                                children: [
                                    d('div', {
                                        className:
                                            'flex w-full justify-between',
                                        children: [
                                            i('p', {
                                                className:
                                                    'font-Satoshi-Medium text-[2rem]',
                                                children: 'Security Report',
                                            }),
                                            d('p', {
                                                className: 'text-[#666869]',
                                                children: [
                                                    'Showing current Day:',
                                                    ' ',
                                                    i('span', {
                                                        className: 'text-black',
                                                        children: n,
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'overview flex gap-8',
                                        children: [
                                            i(qe, {
                                                title: 'Total Estates',
                                                number: 18e3,
                                                iconUrl:
                                                    '/icons/securityCompany/totalEstates.svg',
                                                bgColor: 'bg-[#DDFCDC]',
                                                textColor: 'text-[#1A8F56]',
                                            }),
                                            i(qe, {
                                                title: 'Security Guard',
                                                number: 1532,
                                                iconUrl:
                                                    '/icons/securityCompany/securityGuards.svg',
                                                bgColor: 'bg-[#F5F9FA]',
                                                textColor: 'text-[#00C2FF]',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        i('section', {
                            className:
                                'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                            children: {
                                activityReport: i(Tie, {}),
                                attendanceReport: i(Mie, {}),
                            }[e],
                        }),
                    ],
                }),
            ],
        })
    )
}
const $ie = Array.from({ length: 20 }).map((e, t) => ({
        id: t,
        guardName: 'John Doe',
        phoneNumber: '+2347024954270',
        guardCode: Math.floor(Math.random() * 3e3 + 1e3),
        assignedEstate: 'Estate 1',
        status: Math.random() > 0.5 ? 'Active' : 'Deactivated',
        kys: Math.random() > 0.5 ? 'Validated' : 'Not Validated',
    })),
    Iie = () => {
        const e = Me(),
            [t, r] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                r($ie)
            }, 1e3)
        }, [])
        const n = [2, 4, 6, 8],
            a = 4,
            [l, o] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: a,
                totalPage: Math.ceil(t.length / a),
                slicedPages: null,
            }),
            s = (g) => {
                const x = parseInt(g.target.value),
                    w = []
                for (let y = 0; y < t.length; y += x) w.push(t.slice(y, y + x))
                o((y) => ({
                    ...y,
                    itemsPerPage: x,
                    index: 0,
                    currentPage: 1,
                    slicedPages: w,
                    totalPage: Math.ceil(t.length / x),
                }))
            }
        C.exports.useEffect(() => {
            const g = []
            for (let x = 0; x < t.length; x += l.itemsPerPage)
                g.push(t.slice(x, x + l.itemsPerPage))
            o((x) => ({
                ...x,
                slicedPages: g,
                totalPage: Math.ceil(t.length / l.itemsPerPage),
            }))
        }, [t])
        const c = () => {
                console.log(l.currentPage, l.totalPage),
                    l.currentPage !== l.totalPage &&
                        o((g) => ({
                            ...g,
                            index: g.index + 1,
                            currentPage: g.currentPage + 1,
                        }))
            },
            u = () => {
                l.currentPage !== 1 &&
                    o((g) => ({
                        ...g,
                        index: g.index - 1,
                        currentPage: g.currentPage - 1,
                    }))
            },
            { currentPage: f, slicedPages: p, itemsPerPage: m } = l,
            v = (g, x) => {
                o((w) => ({ ...w, index: x, currentPage: x + 1 }))
            },
            b = () => {
                console.log('add security guard'),
                    e('/securityCompany/security-guard/addSecurity')
            },
            h = (g) => {
                console.log(g),
                    e(`/securityCompany/security-guard/viewGuard/:${g}`)
            }
        return i('div', {
            children: d('main', {
                className: 'mt-10 grid gap-9',
                children: [
                    i('section', {
                        className:
                            'bg-white rounded-lg p-8 grid text-[1.4rem] w-max',
                        children: d('div', {
                            className: 'overview flex gap-8',
                            children: [
                                i(qe, {
                                    title: 'Security Guard',
                                    number: 1532,
                                    iconUrl:
                                        '/icons/securityCompany/securityGuards.svg',
                                    bgColor: 'bg-[#F5F9FA]',
                                    textColor: 'text-[#00C2FF]',
                                }),
                                i(qe, {
                                    title: 'Assigned Security Guards',
                                    number: 18e3,
                                    iconUrl:
                                        '/icons/securityCompany/totalEstates.svg',
                                    bgColor: 'bg-[#DDFCDC]',
                                    textColor: 'text-[#1A8F56]',
                                }),
                            ],
                        }),
                    }),
                    d('section', {
                        className:
                            'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                        children: [
                            d('div', {
                                className: 'grid text-[1.6rem]',
                                children: [
                                    d('caption', {
                                        className:
                                            'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                        children: [
                                            d('p', {
                                                className: ' font-bold',
                                                children: [
                                                    'Security Guard List ',
                                                    i('span', {
                                                        children: '(4)',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/search.svg',
                                                        alt: '',
                                                        className:
                                                            'absolute left-4 text-[4rem]',
                                                    }),
                                                    i('input', {
                                                        type: 'text',
                                                        placeholder:
                                                            'Search Parameters',
                                                        className:
                                                            'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    d('select', {
                                                        className:
                                                            ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                                        children: [
                                                            i('option', {
                                                                hidden: !0,
                                                                value: '',
                                                                children:
                                                                    'Sort By',
                                                            }),
                                                            i('option', {
                                                                value: 'date',
                                                                children:
                                                                    'date',
                                                            }),
                                                            i('option', {
                                                                value: 'alpha',
                                                                children:
                                                                    'Alpha',
                                                            }),
                                                        ],
                                                    }),
                                                    i(le, {
                                                        className:
                                                            'absolute right-4 text-[1.3rem]',
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className: 'ml-auto',
                                                children: d('button', {
                                                    className:
                                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                                    onClick: b,
                                                    children: [
                                                        i('span', {
                                                            children: i($e, {}),
                                                        }),
                                                        ' ',
                                                        'Add Security Guard',
                                                    ],
                                                }),
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid',
                                        children: [
                                            d('div', {
                                                className:
                                                    'grid justify-between text-color-dark-1 bg-gray-100 p-8 grid-cols-7 gap-8',
                                                style: { fontSize: '1.6rem' },
                                                children: [
                                                    d('p', {
                                                        className:
                                                            'flex items-center gap-2',
                                                        children: [
                                                            i('input', {
                                                                type: 'checkbox',
                                                                className:
                                                                    'cursor-pointer',
                                                            }),
                                                            i('p', {
                                                                children:
                                                                    'Guard Code',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children: 'Guard Name',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Phone Number',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Assigned Estate',
                                                    }),
                                                    i('p', {
                                                        children: 'Status',
                                                    }),
                                                    i('p', { children: 'KYG' }),
                                                    i('p', {
                                                        children: 'Action ',
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className:
                                                    'grid gap-8 mt-8 p-8',
                                                children:
                                                    p && p.length > 0
                                                        ? K.Children.toArray(
                                                              p[l.index].map(
                                                                  ({
                                                                      guardCode:
                                                                          g,
                                                                      guardName:
                                                                          x,
                                                                      assignedEstate:
                                                                          w,
                                                                      kys: y,
                                                                      status: N,
                                                                      id: S,
                                                                      phoneNumber:
                                                                          P,
                                                                  }) =>
                                                                      d('div', {
                                                                          className:
                                                                              'grid justify-between border-b grid-cols-7 gap-8 py-4',
                                                                          children:
                                                                              [
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-4',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'input',
                                                                                                      {
                                                                                                          type: 'checkbox',
                                                                                                          className:
                                                                                                              'cursor-pointer',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              g,
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              x,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              P,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              w,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              N ===
                                                                                              'Active'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-[#1A8F56]',
                                                                                                            children:
                                                                                                                N,
                                                                                                        }
                                                                                                    )
                                                                                                  : i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-red-600',
                                                                                                            children:
                                                                                                                N,
                                                                                                        }
                                                                                                    ),
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              y ===
                                                                                              'Validated'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-[#1A8F56]',
                                                                                                            children:
                                                                                                                y,
                                                                                                        }
                                                                                                    )
                                                                                                  : i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-red-600',
                                                                                                            children:
                                                                                                                y,
                                                                                                        }
                                                                                                    ),
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'button',
                                                                                      {
                                                                                          className:
                                                                                              'text-color-primary text-left',
                                                                                          onClick:
                                                                                              () =>
                                                                                                  h(
                                                                                                      S
                                                                                                  ),
                                                                                          children:
                                                                                              'View Details',
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      })
                                                              )
                                                          )
                                                        : i('div', {
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'absolute w-full grid place-content-center',
                                                                                  children:
                                                                                      i(
                                                                                          Ne,
                                                                                          {
                                                                                              className:
                                                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                            }),
                                        ],
                                    }),
                                    d('footer', {
                                        className:
                                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                        children: [
                                            d('div', {
                                                className:
                                                    'flex gap-8 items-center',
                                                children: [
                                                    i('p', {
                                                        children: 'View',
                                                    }),
                                                    i('select', {
                                                        name: '',
                                                        id: '',
                                                        className:
                                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                        onChange: s,
                                                        children: n.map(
                                                            (g, x) =>
                                                                i(
                                                                    'option',
                                                                    {
                                                                        value: g,
                                                                        selected:
                                                                            g ===
                                                                            m,
                                                                        className:
                                                                            'capitalize cursor-pointer bg-white',
                                                                        children:
                                                                            g,
                                                                    },
                                                                    x
                                                                )
                                                        ),
                                                    }),
                                                    i('p', {
                                                        className: 'text',
                                                        children:
                                                            'List per page',
                                                    }),
                                                ],
                                            }),
                                            d('ul', {
                                                className:
                                                    'flex items-center gap-5 ml-10',
                                                children: [
                                                    i(Ae, {
                                                        onClick: u,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    p == null
                                                        ? void 0
                                                        : p.map((g, x) =>
                                                              i(
                                                                  'li',
                                                                  {
                                                                      children:
                                                                          x +
                                                                              1 ===
                                                                          f
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                        children:
                                                                                            x +
                                                                                            1,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                        onClick:
                                                                                            (
                                                                                                w
                                                                                            ) =>
                                                                                                v(
                                                                                                    w,
                                                                                                    x
                                                                                                ),
                                                                                        children:
                                                                                            x +
                                                                                            1,
                                                                                    }
                                                                                ),
                                                                  },
                                                                  x
                                                              )
                                                          ),
                                                    i(Ee, {
                                                        onClick: c,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            ' ',
                        ],
                    }),
                ],
            }),
        })
    },
    Rie = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState(null),
            [a, l] = C.exports.useState(null),
            [o, s] = C.exports.useState(null),
            [c, u] = C.exports.useState(null),
            [f, p] = C.exports.useState(null),
            [m, v] = C.exports.useState(!0),
            [b, h] = C.exports.useState(!1),
            [g, x] = C.exports.useState(''),
            w = async (D) => {
                const R = await kr('#photoUpload')
                x(R)
            },
            y = (D) => {
                D.preventDefault()
            },
            N = C.exports.useRef(null),
            S = C.exports.useRef(null),
            P = C.exports.useRef(null),
            [E, k] = C.exports.useState('Deactivate'),
            M = () => {
                N.current && N.current.close()
            },
            A = () => {
                N.current && N.current.showModal()
            },
            _ = () => {
                S.current && S.current.close()
            },
            O = () => {
                S.current && S.current.showModal()
            },
            T = (D) => {
                D === 'Deactivate' && k('Deactivate'),
                    D === 'Delete' && k('Delete'),
                    P.current && P.current.showModal()
            },
            $ = () => {
                P.current && P.current.close()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: N,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[90rem] min-h-[30rem] p-10 text-[1.6rem] relative justify-items-center',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => _(),
                                }),
                                i('img', {
                                    src: '/icons/admins/modalDeactivate.svg',
                                    alt: '',
                                }),
                                i('p', {
                                    className: 'text-[1.6rem]',
                                    children:
                                        'Are you sure you want to reassign this security guard primary estate',
                                }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => M(),
                                            children: 'Cancel',
                                        }),
                                        i('button', {
                                            className:
                                                ' bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                            onClick: () => {
                                                M(),
                                                    fe(
                                                        ' Reassigned successfully',
                                                        {
                                                            type: 'success',
                                                            className:
                                                                'bg-green-100 text-green-600 text-[1.4rem]',
                                                        }
                                                    )
                                            },
                                            children: 'Yes',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                i('dialog', {
                    className: 'dialog',
                    ref: S,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[90rem] min-h-[30rem] p-10 text-[1.6rem] relative gap-20',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => _(),
                                }),
                                i('div', {
                                    className:
                                        'relative h-[14rem] bg-blue-600 w-full mt-10 rounded-lg',
                                    children: i('img', {
                                        src: '/img/me.jpeg',
                                        alt: '',
                                        className:
                                            'w-[10rem] h-[10rem] border rounded-full border-green-600 object-cover absolute bottom-[-6rem] left-10 object-top',
                                    }),
                                }),
                                d('div', {
                                    className: 'mt-20',
                                    children: [
                                        i('h2', {
                                            children: 'Validation Result',
                                        }),
                                        d('div', {
                                            className: 'border grid mt-5',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Validation Option',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Phone Number | (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Full Name',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Michael Okonkwo',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Date of Birth',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                '15 May, 1998',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Phone Number',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                ' (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2  gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: 'Gender',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children: 'Male',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                i('button', {
                                    className:
                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem] justify-self-center',
                                    onClick: () => _(),
                                    children: 'Ok',
                                }),
                            ],
                        }),
                    }),
                }),
                i('dialog', {
                    className: 'dialog',
                    ref: P,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children:
                                E === 'Deactivate'
                                    ? d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to deactivate this Security Guard',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => $(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              $(),
                                                                  fe(
                                                                      'Security Guard deactivated successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children:
                                                              'Deactivate',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d(me, {
                                          children: [
                                              i('img', {
                                                  src: '/icons/admins/modalWarning.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to delete this Security Guard',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => $(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: () => {
                                                              $(),
                                                                  fe(
                                                                      'Security Guard deleted successfully',
                                                                      {
                                                                          type: 'error',
                                                                          className:
                                                                              'bg-red-100 text-red-600 text-[1.4rem]',
                                                                      }
                                                                  )
                                                          },
                                                          children: 'Delete',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                        }),
                    }),
                }),
                d('main', {
                    className: 'bg-white grid gap-10 rounded-lg py-10',
                    children: [
                        d('section', {
                            className:
                                'grid p-8 bg-white items-baseline rounded-lg',
                            children: [
                                d('div', {
                                    className:
                                        'flex justify-between items-center',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex gap-8 items-center',
                                            children: [
                                                d('label', {
                                                    htmlFor: 'photoUpload',
                                                    className:
                                                        'grid gap-4 cursor-pointer justify-items-center',
                                                    children: [
                                                        i('img', {
                                                            src:
                                                                g ||
                                                                '/img/me.jpeg',
                                                            alt: 'photoPreview',
                                                            className:
                                                                'object-cover w-[11rem] h-[11rem] rounded-full object-top',
                                                        }),
                                                        i('span', {
                                                            className:
                                                                'text-color-blue-1 text-[1.4rem]',
                                                            children: 'Edit',
                                                        }),
                                                    ],
                                                }),
                                                i('input', {
                                                    type: 'file',
                                                    name: 'photoUpload',
                                                    id: 'photoUpload',
                                                    accept: 'image/*',
                                                    className: 'hidden',
                                                    onClick: w,
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid gap-2 justify-items-start',
                                                    children: [
                                                        d('p', {
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: [
                                                                'Guard Code :',
                                                                ' ',
                                                                i('span', {
                                                                    style: {
                                                                        fontFamily:
                                                                            'Satoshi-Medium',
                                                                    },
                                                                    children:
                                                                        'SG09897',
                                                                }),
                                                            ],
                                                        }),
                                                        d('p', {
                                                            className:
                                                                'flex items-center gap-4',
                                                            children: [
                                                                d('span', {
                                                                    className:
                                                                        'flex items-center gap-2',
                                                                    children: [
                                                                        'KYG Status ',
                                                                        i(
                                                                            Wn,
                                                                            {}
                                                                        ),
                                                                        ':',
                                                                    ],
                                                                }),
                                                                b
                                                                    ? i(
                                                                          'span',
                                                                          {
                                                                              className:
                                                                                  'text-green-600',
                                                                              style: {
                                                                                  fontFamily:
                                                                                      'Satoshi-Light',
                                                                              },
                                                                              children:
                                                                                  'Validated',
                                                                          }
                                                                      )
                                                                    : i(
                                                                          'span',
                                                                          {
                                                                              className:
                                                                                  'text-red-600',
                                                                              style: {
                                                                                  fontFamily:
                                                                                      'Satoshi-Light',
                                                                              },
                                                                              children:
                                                                                  'Not Validated',
                                                                          }
                                                                      ),
                                                            ],
                                                        }),
                                                        i('button', {
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Medium',
                                                            },
                                                            className:
                                                                'text-color-blue',
                                                            onClick: () => O(),
                                                            children:
                                                                'Click here to view results',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'flex gap-8',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'border border-color-blue-1 text-color-blue-1 px-16 py-4 flex items-center  rounded-lg gap-4',
                                                    onClick: () =>
                                                        T('Deactivate'),
                                                    children: i('span', {
                                                        className:
                                                            ' text-[1.4rem] font-semibold',
                                                        children: 'Deactivate',
                                                    }),
                                                }),
                                                d('button', {
                                                    className:
                                                        'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                                    onClick: () => T('Delete'),
                                                    children: [
                                                        i('img', {
                                                            src: '/icons/admins/delete.svg',
                                                            alt: '',
                                                        }),
                                                        i('span', {
                                                            className:
                                                                'text-red-600 text-[1.4rem] font-semibold',
                                                            children: 'Delete',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('form', {
                                    onSubmit: y,
                                    className:
                                        'grid max-w-[84rem] gap-16 mt-12',
                                    style: {
                                        gridTemplateColumns:
                                            ' repeat(auto-fit, minmax(35rem, 1fr))',
                                    },
                                    children: [
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'firstName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'First Name *',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'firstName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'lastName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Last Name *',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'lastName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'lastName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Middle Name *',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'lastName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative ',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'lastName',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Date of Birth',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'lastName',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'phoneNumber',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Phone Number *',
                                                }),
                                                d('div', {
                                                    className:
                                                        'flex text-[1.6rem] gap-4   h-[5rem]',
                                                    children: [
                                                        i('select', {
                                                            className:
                                                                'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                            children: i(
                                                                'option',
                                                                {
                                                                    value: '234',
                                                                    children:
                                                                        '+234',
                                                                }
                                                            ),
                                                        }),
                                                        i('input', {
                                                            required: !0,
                                                            type: 'number',
                                                            inputMode:
                                                                'numeric',
                                                            id: 'phoneNumber',
                                                            placeholder:
                                                                'Phone Number',
                                                            className:
                                                                'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(Pt, {
                                            label: 'Gender',
                                            state: ['Male', 'Female'],
                                            selectedState: f,
                                            setSelectedState: p,
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'email',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Email Address *',
                                                }),
                                                i('input', {
                                                    type: 'email',
                                                    required: !0,
                                                    id: 'email',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className: 'grid gap-4 relative',
                                            children: [
                                                i('label', {
                                                    htmlFor: 'address1',
                                                    className:
                                                        'text-[1.4rem] font-Satoshi-Medium',
                                                    children: 'Address',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    required: !0,
                                                    id: 'address1',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                }),
                                            ],
                                        }),
                                        i(Pt, {
                                            label: 'State',
                                            state: [
                                                'Lagos',
                                                'Imo',
                                                'Abia',
                                                'FCT',
                                            ],
                                            placeholder: 'Select State',
                                            selectedState: c,
                                            setSelectedState: u,
                                        }),
                                        d('div', {
                                            className:
                                                'col-span-full rounded-lg border border-width-[.2rem] border-dashed border-color-grey-1 p-8 text-[1.6rem] relative w-full',
                                            children: [
                                                d('label', {
                                                    htmlFor: 'photoUpload',
                                                    className:
                                                        'flex justify-center gap-4 items-center cursor-pointer',
                                                    children: [
                                                        i('img', {
                                                            src: '/icons/admins/photo_library.svg',
                                                            alt: '',
                                                        }),
                                                        d('p', {
                                                            className:
                                                                'text-color-dark-1',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: [
                                                                'Drag Security Guard picture here or',
                                                                ' ',
                                                                i('span', {
                                                                    className:
                                                                        'text-color-blue font-bold',
                                                                    children:
                                                                        'click',
                                                                }),
                                                                ' ',
                                                                'to upload',
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                i('input', {
                                                    type: 'file',
                                                    name: 'photoUpload',
                                                    id: 'photoUpload',
                                                    accept: 'image/*',
                                                    className: 'hidden',
                                                    onClick: w,
                                                }),
                                                g &&
                                                    i('div', {
                                                        className:
                                                            'flex justify-center justify-self-center',
                                                        children: i('img', {
                                                            src: g,
                                                            alt: 'photoPreview',
                                                            className:
                                                                'object-cover w-[11rem] h-[11rem] rounded-full',
                                                        }),
                                                    }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            className:
                                'grid p-8 bg-white border-t-gray-100 border-t',
                            children: [
                                i('h2', {
                                    className: 'text-[2rem] mb-10',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Assigned Estate Details',
                                }),
                                d('div', {
                                    className: 'grid gap-4',
                                    children: [
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Gwarimpa Estate',
                                                        selectedState: e,
                                                        isSearchable: !0,
                                                        setSelectedState: t,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () => A(),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Secondary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Iba Estate',
                                                        selectedState: r,
                                                        isSearchable: !0,
                                                        setSelectedState: n,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () => A(),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Peace Estate',
                                                        selectedState: a,
                                                        isSearchable: !0,
                                                        setSelectedState: l,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () => A(),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Gwarimpa Estate',
                                                        selectedState: o,
                                                        isSearchable: !0,
                                                        setSelectedState: s,
                                                    }),
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-color-blue-1 ',
                                                    onClick: () => A(),
                                                    children: 'Reassign',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('section', {
                            className:
                                'grid p-8 bg-white w-4/5 border-t border-t-gray-100',
                            children: [
                                i('h2', {
                                    className: 'text-[2rem] mb-10',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Account Information',
                                }),
                                m
                                    ? d('div', {
                                          className:
                                              'columns-2 justify-between items-center gap-10',
                                          children: [
                                              d('div', {
                                                  className:
                                                      'grid gap-4 relative ',
                                                  children: [
                                                      i('label', {
                                                          htmlFor: 'bankName',
                                                          className:
                                                              'text-[1.4rem] font-Satoshi-Medium',
                                                          children: 'Bank Name',
                                                      }),
                                                      i('input', {
                                                          type: 'text',
                                                          required: !0,
                                                          id: 'bankName',
                                                          placeholder:
                                                              'First City Monument Bank',
                                                          className:
                                                              'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                      }),
                                                  ],
                                              }),
                                              d('div', {
                                                  className:
                                                      'grid gap-4 relative ',
                                                  children: [
                                                      i('label', {
                                                          htmlFor: 'firstName',
                                                          className:
                                                              'text-[1.4rem] font-Satoshi-Medium',
                                                          children:
                                                              'Account Number',
                                                      }),
                                                      d('div', {
                                                          className:
                                                              'relative flex items-center pr-20 w-full rounded-lg border border-color-grey',
                                                          children: [
                                                              i('input', {
                                                                  type: 'number',
                                                                  required: !0,
                                                                  id: 'firstName',
                                                                  placeholder:
                                                                      '2084827323',
                                                                  className:
                                                                      ' text-[1.6rem] outline-transparent py-4 px-4 w-full',
                                                              }),
                                                              i(n3, {
                                                                  className:
                                                                      'text-[#0556E5] absolute right-8 text-[2rem]',
                                                              }),
                                                          ],
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      })
                                    : d('p', {
                                          className: 'flex items-cente gap-2',
                                          children: [
                                              i('span', {
                                                  children:
                                                      'No account Information created.',
                                              }),
                                              i('span', {
                                                  className: ' text-color-blue',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Open a bank account',
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    DS = () =>
        d('div', {
            className: 'grid gap-4',
            children: [
                i('label', {
                    htmlFor: 'phoneNumber',
                    className: 'text-[1.4rem] font-Satoshi-Medium',
                    children: 'Phone Number',
                }),
                d('div', {
                    className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                    children: [
                        i('select', {
                            className:
                                'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                            children: i('option', {
                                value: '234',
                                children: '+234',
                            }),
                        }),
                        i('input', {
                            required: !0,
                            type: 'number',
                            inputMode: 'numeric',
                            id: 'phoneNumber',
                            placeholder: 'Phone Number',
                            className:
                                'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                        }),
                    ],
                }),
            ],
        }),
    $S = () =>
        d('div', {
            className: 'grid gap-4',
            children: [
                i('label', {
                    htmlFor: 'phoneNumber',
                    className: 'text-[1.4rem] font-Satoshi-Medium',
                    children: 'BVN (Number)',
                }),
                i('div', {
                    className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                    children: i('input', {
                        required: !0,
                        type: 'number',
                        inputMode: 'numeric',
                        id: 'phoneNumber',
                        placeholder: 'BVN (Number)',
                        className:
                            'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                    }),
                }),
            ],
        }),
    IS = () =>
        d('div', {
            className: 'grid gap-4',
            children: [
                i('label', {
                    htmlFor: 'phoneNumber',
                    className: 'text-[1.4rem] font-Satoshi-Medium',
                    children: 'NIN (Number)',
                }),
                i('div', {
                    className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                    children: i('input', {
                        required: !0,
                        type: 'number',
                        inputMode: 'numeric',
                        id: 'phoneNumber',
                        placeholder: 'NIN (Number)',
                        className:
                            'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                    }),
                }),
            ],
        }),
    RS = () =>
        d('div', {
            className: 'grid gap-4',
            children: [
                d('div', {
                    children: [
                        i('label', {
                            htmlFor: 'phoneNumber',
                            className: 'text-[1.4rem] font-Satoshi-Medium',
                            children: 'License (Number)',
                        }),
                        i('div', {
                            className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                            children: i('input', {
                                required: !0,
                                type: 'number',
                                inputMode: 'numeric',
                                id: 'phoneNumber',
                                className:
                                    'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                            }),
                        }),
                    ],
                }),
                d('div', {
                    children: [
                        i('label', {
                            htmlFor: 'phoneNumber',
                            className: 'text-[1.4rem] font-Satoshi-Medium',
                            children: 'Date of Birth',
                        }),
                        i('div', {
                            className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                            children: i('input', {
                                required: !0,
                                type: 'date',
                                inputMode: 'numeric',
                                id: 'phoneNumber',
                                className:
                                    'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                            }),
                        }),
                    ],
                }),
            ],
        }),
    LS = () =>
        d('div', {
            className: 'grid gap-4',
            children: [
                d('div', {
                    children: [
                        i('label', {
                            htmlFor: 'phoneNumber',
                            className: 'text-[1.4rem] font-Satoshi-Medium',
                            children: "Int'l Passport (Number)",
                        }),
                        i('div', {
                            className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                            children: i('input', {
                                required: !0,
                                type: 'number',
                                inputMode: 'numeric',
                                id: 'phoneNumber',
                                className:
                                    'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                            }),
                        }),
                    ],
                }),
                d('div', {
                    children: [
                        i('label', {
                            htmlFor: 'phoneNumber',
                            className: 'text-[1.4rem] font-Satoshi-Medium',
                            children: 'Last Name',
                        }),
                        i('div', {
                            className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                            children: i('input', {
                                required: !0,
                                type: 'text',
                                inputMode: 'numeric',
                                id: 'phoneNumber',
                                className:
                                    'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                            }),
                        }),
                    ],
                }),
            ],
        }),
    jS = () => {
        const [e, t] = C.exports.useState(null)
        return d('div', {
            className: 'grid gap-4',
            children: [
                d('div', {
                    children: [
                        i('label', {
                            htmlFor: 'phoneNumber',
                            className: 'text-[1.4rem] font-Satoshi-Medium',
                            children: "Voter's Card Number",
                        }),
                        i('div', {
                            className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                            children: i('input', {
                                required: !0,
                                type: 'number',
                                inputMode: 'numeric',
                                id: 'phoneNumber',
                                className:
                                    'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                            }),
                        }),
                    ],
                }),
                d('div', {
                    children: [
                        i('label', {
                            htmlFor: 'phoneNumber',
                            className: 'text-[1.4rem] font-Satoshi-Medium',
                            children: 'Last Name',
                        }),
                        i('div', {
                            className: 'flex text-[1.6rem] gap-4 h-[5rem]',
                            children: i('input', {
                                required: !0,
                                type: 'text',
                                inputMode: 'numeric',
                                id: 'phoneNumber',
                                className:
                                    'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                            }),
                        }),
                    ],
                }),
                i(Pt, {
                    label: 'State',
                    state: ['Lagos', 'Imo', 'Abia', 'FCT'],
                    placeholder: 'Select State',
                    selectedState: e,
                    setSelectedState: t,
                }),
            ],
        })
    },
    Lie = () => {
        const { handleClose: e, setAddedSecurityGuardStep: t } =
            C.exports.useContext(kp)
        return d('div', {
            className: 'w-full grid justify-items-center gap-4',
            children: [
                i('img', { src: '/icons/admins/modalSuccess.svg', alt: '' }),
                i('p', {
                    children: 'You have successfully added an Security Guard',
                }),
                i('p', {
                    className:
                        'font-bold text-[1.8rem] max-w-[40rem] text-center',
                    style: { fontFamily: 'Satoshi-Medium' },
                    children:
                        'Do you want to open a bank account for this Security Guard?',
                }),
                d('div', {
                    className: 'flex w-full justify-center gap-8 mt-10',
                    children: [
                        i('button', {
                            className:
                                'btn bg-white text-[#0556E5] border-[#0556E5] border rounded-lg w-[20rem] font-bold',
                            onClick: () => e(),
                            children: 'Skip, Later',
                        }),
                        i('button', {
                            className:
                                'bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[20rem]',
                            onClick: () => t('addBankAccount'),
                            children: 'Open an Account',
                        }),
                    ],
                }),
            ],
        })
    },
    jie = () => {
        const {
            selectedBank: e,
            setSelectedBank: t,
            setAddedSecurityGuardStep: r,
        } = C.exports.useContext(kp)
        return d('div', {
            className: 'w-[40rem] grid justify-items-center gap-10',
            children: [
                i('p', {
                    className: 'border-b w-full text-left pb-2',
                    style: { fontFamily: 'Satoshi-Medium' },
                    children: 'Open a bank Account',
                }),
                i('div', {
                    className: 'w-full',
                    children: i(Pt, {
                        label: 'Select Bank',
                        state: [
                            'FCMB Easy Wallet',
                            'FCMB Account',
                            'Parallax Bank Account',
                        ],
                        selectedState: e,
                        setSelectedState: t,
                    }),
                }),
                i('button', {
                    className:
                        'bg-[#0556E5] py-6 px-12 w-full text-white text-[1.6rem] rounded-lg mt-10',
                    onClick: () => r('openedBankAccountSuccessful'),
                    children: 'Generate Account Number',
                }),
            ],
        })
    },
    Fie = () => {
        const {
                handleClose: e,
                selectedBank: t,
                setAddedSecurityGuardStep: r,
            } = C.exports.useContext(kp),
            n = () => {
                e(), r('addedSecuritySuccessful')
            }
        return d('div', {
            className: 'w-full grid justify-items-center gap-4',
            children: [
                i('img', { src: '/icons/admins/modalSuccess.svg', alt: '' }),
                i('p', {
                    children:
                        'You have successfully opened an account number for this security guard',
                }),
                d('div', {
                    className: 'grid justify-items-center gap-4',
                    children: [
                        d('h2', {
                            className:
                                'font-bold text-[2rem] text-center uppercase flex items-center gap-4',
                            style: { fontFamily: 'Satoshi-Medium' },
                            children: [
                                '2094828922 ',
                                i(n3, { className: 'text-[#0556E5]' }),
                                ' -',
                                ' ',
                                t,
                            ],
                        }),
                        i('p', {
                            className: 'uppercase text-[2rem] font-bold',
                            style: { fontFamily: 'Satoshi-Medium' },
                            children: 'Ajayi Suileman Adeyemi',
                        }),
                    ],
                }),
                i('div', {
                    className: 'flex justify-center gap-8 w-full mt-10',
                    children: i('button', {
                        className:
                            'bg-[#0556E5] py-4 px-12 text-white text-[1.6rem] rounded-lg w-[20rem]',
                        onClick: () => n(),
                        children: 'Ok',
                    }),
                }),
            ],
        })
    },
    kp = C.exports.createContext(null),
    Bie = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState(null),
            [a, l] = C.exports.useState(null),
            [o, s] = C.exports.useState(null),
            [c, u] = C.exports.useState(!1),
            [f, p] = C.exports.useState(!1),
            m = () => p(!f),
            [v, b] = C.exports.useState(null),
            [h, g] = C.exports.useState(null),
            [x, w] = C.exports.useState('validate'),
            [y, N] = C.exports.useState('Phone Number'),
            [S, P] = C.exports.useState(null),
            [E, k] = C.exports.useState('addedSecuritySuccessful'),
            [M, A] = C.exports.useState(''),
            _ = async (X) => {
                const ge = await kr('#photoUpload')
                A(ge)
            },
            O = (X) => {
                X.preventDefault()
            },
            T = C.exports.useRef(null),
            $ = C.exports.useRef(null),
            I = () => {
                T.current && T.current.close()
            },
            j = () => {
                $.current && $.current.close()
            },
            L = () => {
                $.current && $.current.showModal()
            },
            D = (X) => {
                X === 'validate' && w('validate'),
                    X === 'add-security-guard' && w('add-security-guard'),
                    X === 'reassign' && w('reassign'),
                    T.current && T.current.showModal()
            },
            R = () => {
                D('add-security-guard')
            },
            V = (X) => {
                X.preventDefault(), I(), L()
            },
            G = () => {
                I(),
                    fe(' Reassigned successfully', {
                        type: 'success',
                        className: 'bg-green-100 text-green-600 text-[1.4rem]',
                    })
            },
            ee = new Map([
                ['Phone Number', i(DS, {})],
                ['BVN Number', i($S, {})],
                ['NIN Number', i(IS, {})],
                ['Drivers License', i(RS, {})],
                ['International Passport', i(LS, {})],
                ['Voters Card', i(jS, {})],
            ]),
            Q = () => {
                u(!0)
            },
            B = new Map([
                ['addedSecuritySuccessful', i(Lie, {})],
                ['addBankAccount', i(jie, {})],
                ['openedBankAccountSuccessful', i(Fie, {})],
            ])
        return d(kp.Provider, {
            value: {
                addedSecurityGuardStep: E,
                setAddedSecurityGuardStep: k,
                handleClose: I,
                selectedBank: S,
                setSelectedBank: P,
            },
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: $,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[90rem] min-h-[30rem] p-10 text-[1.6rem] relative gap-20',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => j(),
                                }),
                                i('div', {
                                    className:
                                        'relative h-[14rem] bg-blue-600 w-full mt-10 rounded-lg',
                                    children: i('img', {
                                        src: '/img/me.jpeg',
                                        alt: '',
                                        className:
                                            'w-[10rem] h-[10rem] border rounded-full border-green-600 object-cover absolute bottom-[-6rem] left-10 object-top',
                                    }),
                                }),
                                d('div', {
                                    className: 'mt-20',
                                    children: [
                                        i('h2', {
                                            children: 'Validation Result',
                                        }),
                                        d('div', {
                                            className: 'border grid mt-5',
                                            children: [
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Validation Option',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Phone Number | (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Full Name',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                'Michael Okonkwo',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Date of Birth',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                '15 May, 1998',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2 border-b gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children:
                                                                'Phone Number',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children:
                                                                ' (+234) 813238432',
                                                        }),
                                                    ],
                                                }),
                                                d('div', {
                                                    className:
                                                        'grid grid-cols-2  gap-4',
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'border-r py-4 pl-4 text-gray-700',
                                                            style: {
                                                                fontFamily:
                                                                    'Satoshi-Light',
                                                            },
                                                            children: 'Gender',
                                                        }),
                                                        i('p', {
                                                            className: 'py-4',
                                                            children: 'Male',
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                i('button', {
                                    className:
                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem] justify-self-center',
                                    onClick: () => j(),
                                    children: 'Ok',
                                }),
                            ],
                        }),
                    }),
                }),
                i('dialog', {
                    className: 'dialog',
                    ref: T,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => I(),
                                }),
                                x === 'validate'
                                    ? d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: V,
                                          children: [
                                              i('h3', {
                                                  className:
                                                      'text-[2rem] font-bold border-b ',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Know Your Guard (KYG)',
                                              }),
                                              i(Pt, {
                                                  state: [
                                                      'Phone Number',
                                                      'BVN Number',
                                                      'NIN Number',
                                                      'Drivers License',
                                                      'International Passport',
                                                      'Voters Card',
                                                  ],
                                                  label: 'Validation Option',
                                                  validate: !0,
                                                  selectedState: y,
                                                  setSelectedState: N,
                                              }),
                                              d('p', {
                                                  className:
                                                      'text-[#043FA7] flex items-center gap-2 border-b pb-10 w-full',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Light',
                                                  },
                                                  children: [
                                                      'What is KYG ',
                                                      i(Wn, {}),
                                                  ],
                                              }),
                                              ee.get(y),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  onClick: Q,
                                                  children: 'Validate',
                                              }),
                                          ],
                                      })
                                    : x === 'add-security-guard'
                                    ? i('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: B.get(E),
                                      })
                                    : d('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: [
                                              ' ',
                                              i('img', {
                                                  src: '/icons/admins/modalDeactivate.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'Are you sure you want to reassign this security guard primary estate',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => I(),
                                                          children: 'Cancel',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              ' bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          onClick: G,
                                                          children: 'Yes',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('main', {
                    children: [
                        i('section', {
                            className:
                                'grid p-8 bg-white items-baseline rounded-lg',
                            children: d('form', {
                                onSubmit: O,
                                className: 'grid max-w-[84rem] gap-16 mt-12 ',
                                style: {
                                    gridTemplateColumns:
                                        ' repeat(auto-fit, minmax(35rem, 1fr))',
                                },
                                children: [
                                    d('div', {
                                        className: 'grid gap-4 relative ',
                                        children: [
                                            i('label', {
                                                htmlFor: 'firstName',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'First Name *',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                required: !0,
                                                id: 'firstName',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid gap-4 relative ',
                                        children: [
                                            i('label', {
                                                htmlFor: 'lastName',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'Last Name *',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                required: !0,
                                                id: 'lastName',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid gap-4 relative ',
                                        children: [
                                            i('label', {
                                                htmlFor: 'lastName',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'Middle Name *',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                required: !0,
                                                id: 'lastName',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid gap-4 relative ',
                                        children: [
                                            i('label', {
                                                htmlFor: 'lastName',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'Date of Birth',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                required: !0,
                                                id: 'lastName',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid gap-4',
                                        children: [
                                            i('label', {
                                                htmlFor: 'phoneNumber',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'Phone Number *',
                                            }),
                                            d('div', {
                                                className:
                                                    'flex text-[1.6rem] gap-4   h-[5rem]',
                                                children: [
                                                    i('select', {
                                                        className:
                                                            'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                        children: i('option', {
                                                            value: '234',
                                                            children: '+234',
                                                        }),
                                                    }),
                                                    i('input', {
                                                        required: !0,
                                                        type: 'number',
                                                        inputMode: 'numeric',
                                                        id: 'phoneNumber',
                                                        placeholder:
                                                            'Phone Number',
                                                        className:
                                                            'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    i(Pt, {
                                        label: 'Gender',
                                        state: ['Male', 'Female'],
                                        selectedState: h,
                                        setSelectedState: g,
                                    }),
                                    d('div', {
                                        className: 'grid gap-4 relative',
                                        children: [
                                            i('label', {
                                                htmlFor: 'email',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'Email Address *',
                                            }),
                                            i('input', {
                                                type: 'email',
                                                required: !0,
                                                id: 'email',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid gap-4 relative',
                                        children: [
                                            i('label', {
                                                htmlFor: 'address1',
                                                className:
                                                    'text-[1.4rem] font-Satoshi-Medium',
                                                children: 'Address',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                required: !0,
                                                id: 'address1',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                    i(Pt, {
                                        label: 'State',
                                        state: ['Lagos', 'Imo', 'Abia', 'FCT'],
                                        placeholder: 'Select State',
                                        selectedState: v,
                                        setSelectedState: b,
                                    }),
                                    d('div', {
                                        className:
                                            'col-span-full rounded-lg border border-width-[.2rem] border-dashed border-color-grey-1 p-8 text-[1.6rem] relative w-full',
                                        children: [
                                            d('label', {
                                                htmlFor: 'photoUpload',
                                                className:
                                                    'flex justify-center gap-4 items-center cursor-pointer',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/photo_library.svg',
                                                        alt: '',
                                                    }),
                                                    d('p', {
                                                        className:
                                                            'text-color-dark-1',
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Light',
                                                        },
                                                        children: [
                                                            'Drag Security Guard picture here or',
                                                            ' ',
                                                            i('span', {
                                                                className:
                                                                    'text-color-blue font-bold',
                                                                children:
                                                                    'click',
                                                            }),
                                                            ' ',
                                                            'to upload',
                                                        ],
                                                    }),
                                                ],
                                            }),
                                            i('input', {
                                                type: 'file',
                                                name: 'photoUpload',
                                                id: 'photoUpload',
                                                accept: 'image/*',
                                                className: 'hidden',
                                                onClick: _,
                                            }),
                                            M &&
                                                i('div', {
                                                    className:
                                                        'flex justify-center justify-self-center',
                                                    children: i('img', {
                                                        src: M,
                                                        alt: 'photoPreview',
                                                        className:
                                                            'object-cover w-[11rem] h-[11rem] rounded-full',
                                                    }),
                                                }),
                                        ],
                                    }),
                                ],
                            }),
                        }),
                        d('section', {
                            className: 'grid p-8 bg-white',
                            children: [
                                i('h2', {
                                    className: 'text-[2rem] mb-10',
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Assigned Estate',
                                }),
                                d('div', {
                                    className: 'grid gap-4 border-b pb-20',
                                    children: [
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Gwarimpa Estate',
                                                        selectedState: e,
                                                        isSearchable: !0,
                                                        setSelectedState: t,
                                                    }),
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Secondary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Iba Estate',
                                                        selectedState: r,
                                                        isSearchable: !0,
                                                        setSelectedState: n,
                                                    }),
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Iba Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Peace Estate',
                                                        selectedState: a,
                                                        isSearchable: !0,
                                                        setSelectedState: l,
                                                    }),
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                ' items-center grid grid-cols-3',
                                            children: [
                                                d('div', {
                                                    children: [
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-Satoshi-Medium',
                                                            children:
                                                                'Primary Assigned Estate',
                                                        }),
                                                        i('p', {
                                                            className:
                                                                'text-[1.4rem] font-light',
                                                            children:
                                                                'Last Assigned on: 12-May-2023',
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    children: i(Ur, {
                                                        state: [
                                                            {
                                                                name: 'Gwarimpa Estate',
                                                                No: 3,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 12,
                                                            },
                                                            {
                                                                name: 'Peace estate',
                                                                No: 1,
                                                            },
                                                            {
                                                                name: 'Ibara Estate',
                                                                No: 2,
                                                            },
                                                        ],
                                                        placeholder:
                                                            'Gwarimpa Estate',
                                                        selectedState: o,
                                                        isSearchable: !0,
                                                        setSelectedState: s,
                                                    }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'grid gap-8 max-w-[40rem] mt-[5rem] ',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex items-center justify-between',
                                            children: [
                                                d('p', {
                                                    className:
                                                        'text-[2rem] font-bold flex items-center gap-2',
                                                    children: [
                                                        'KYG',
                                                        ' ',
                                                        i('span', {
                                                            className:
                                                                'text-[#043FA7]',
                                                            children: i(Wn, {}),
                                                        }),
                                                    ],
                                                }),
                                                i('div', {
                                                    onClick: m,
                                                    className: 'cursor-pointer',
                                                    children: f
                                                        ? i('img', {
                                                              src: '/icons/admins/switchOn.svg',
                                                              alt: '',
                                                          })
                                                        : i('img', {
                                                              src: '/icons/admins/switchOff.svg',
                                                              alt: '',
                                                          }),
                                                }),
                                            ],
                                        }),
                                        c
                                            ? d('div', {
                                                  className:
                                                      'flex gap-8 text-[1.6rem]',
                                                  children: [
                                                      d('p', {
                                                          className:
                                                              'text-[#098DFF] cursor-pointer flex items-center font-Satoshi-Medium',
                                                          children: [
                                                              'KYG Validated ',
                                                              i(hA, {}),
                                                          ],
                                                      }),
                                                      d('button', {
                                                          className:
                                                              'text-green-600 flex items-center gap-2',
                                                          style: {
                                                              fontFamily:
                                                                  'Satoshi-Medium',
                                                          },
                                                          onClick: () => L(),
                                                          children: [
                                                              'View Results ',
                                                              i(Wn, {}),
                                                          ],
                                                      }),
                                                  ],
                                              })
                                            : i('div', {
                                                  className:
                                                      'flex justify-between text-[1.6rem]',
                                                  children: i('p', {
                                                      className:
                                                          'text-[#098DFF] cursor-pointer',
                                                      onClick: () =>
                                                          D('validate'),
                                                      style: {
                                                          fontFamily:
                                                              'Satoshi-Medium',
                                                      },
                                                      children:
                                                          'Click here to validate this person',
                                                  }),
                                              }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg mt-32',
                                    style: { justifySelf: 'start' },
                                    onClick: R,
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Security Guard',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    zie = ['Thomas Nwaje', 'Solomon Nwaje'],
    Jw = Array.from({ length: 10 }).map((e, t) => ({
        id: t + 1,
        date: '19-May-2023',
        transmissionDate: '19-May-2023',
        recipients: zie,
        transmissionChannel: `Channel ${t + 1}`,
        subject: 'Monday Workings',
        description:
            'The report for the month of May is ready for review  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odit est aperiam aspernatur nulla, quidem libero dolore impedit nihil, esse provident non autem quo. Veniam facilis alias distinctio quod eos deserunt Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga adipisci, distinctio suscipit quos dolorem veniam illum assumenda exercitationem saepe voluptatum odit eligendi deserunt omnis vero, reiciendis, tempore quae alias accusantium.',
        status: Math.random() > 0.5 ? 'Sent' : 'Pending',
    }))
function Vie() {
    const e = Me(),
        [t, r] = C.exports.useState([]),
        [n, a] = C.exports.useState('')
    C.exports.useEffect(() => {
        setTimeout(() => {
            r(Jw)
        }, 1e3)
    }, [])
    const l = [2, 4, 6, 8],
        o = 4,
        [s, c] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: o,
            totalPage: Math.ceil(t.length / o),
            slicedPages: null,
        }),
        u = (w) => {
            const y = parseInt(w.target.value),
                N = []
            for (let S = 0; S < t.length; S += y) N.push(t.slice(S, S + y))
            c((S) => ({
                ...S,
                itemsPerPage: y,
                index: 0,
                currentPage: 1,
                slicedPages: N,
                totalPage: Math.ceil(t.length / y),
            }))
        }
    C.exports.useEffect(() => {
        const w = []
        for (let y = 0; y < t.length; y += s.itemsPerPage)
            w.push(t.slice(y, y + s.itemsPerPage))
        c((y) => ({
            ...y,
            slicedPages: w,
            totalPage: Math.ceil(t.length / s.itemsPerPage),
        }))
    }, [t])
    const f = () => {
            console.log(s.currentPage, s.totalPage),
                s.currentPage !== s.totalPage &&
                    c((w) => ({
                        ...w,
                        index: w.index + 1,
                        currentPage: w.currentPage + 1,
                    }))
        },
        p = () => {
            s.currentPage !== 1 &&
                c((w) => ({
                    ...w,
                    index: w.index - 1,
                    currentPage: w.currentPage - 1,
                }))
        },
        { currentPage: m, slicedPages: v, itemsPerPage: b } = s,
        h = (w, y) => {
            c((N) => ({ ...N, index: y, currentPage: y + 1 }))
        }
    return d('div', {
        className: 'grid gap-10 rounded-lg border min-w-[112rem]',
        children: [
            d('div', {
                className: 'grid text-[1.6rem] border rounded-lg',
                children: [
                    d('div', {
                        className:
                            'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                        children: [
                            d('p', {
                                className: ' font-bold',
                                children: [
                                    'Messages ',
                                    i('span', { children: '(200)' }),
                                ],
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/admins/search.svg',
                                        alt: '',
                                        className:
                                            'absolute left-4 text-[4rem]',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        value: n,
                                        onChange: (w) => {
                                            const { value: y } = w.target
                                            a(y)
                                            const N = Jw.filter((S) =>
                                                S.subject
                                                    .toLowerCase()
                                                    .includes(y.toLowerCase())
                                            )
                                            r([...N])
                                        },
                                        placeholder: 'Search Parameters',
                                        className:
                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    d('select', {
                                        className:
                                            ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                        children: [
                                            i('option', {
                                                hidden: !0,
                                                value: '',
                                                children: 'Sort By',
                                            }),
                                            i('option', {
                                                value: 'date',
                                                children: 'date',
                                            }),
                                            i('option', {
                                                value: 'alpha',
                                                children: 'Alpha',
                                            }),
                                        ],
                                    }),
                                    i(le, {
                                        className:
                                            'absolute right-4 text-[1.3rem]',
                                    }),
                                ],
                            }),
                            d('button', {
                                className:
                                    'btn ml-auto bg-color-blue-1 text-white flex gap-2 items-center self-center rounded-lg py-4 px-8 capitalize',
                                onClick: () => {
                                    e('/securityCompany/messages/compose')
                                },
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    i('p', { children: 'compose Message' }),
                                ],
                            }),
                        ],
                    }),
                    i('div', {
                        className: 'grid gap-8 mt-8',
                        style: {
                            gridTemplateColumns:
                                'repeat(auto-fit, minmax(40rem, 1fr))',
                        },
                        children:
                            v && v.length > 0
                                ? K.Children.toArray(
                                      v[s.index].map((w) => {
                                          const {
                                              id: y,
                                              date: N,
                                              subject: S,
                                              description: P,
                                              status: E,
                                              transmissionChannel: k,
                                              transmissionDate: M,
                                              recipients: A,
                                          } = w
                                          return d('div', {
                                              className:
                                                  'grid relative p-8 bg-white rounded-lg gap-2',
                                              children: [
                                                  d('div', {
                                                      className:
                                                          'flex items-center gap-2 absolute right-0 top-0 p-8',
                                                      children: [
                                                          i('p', {
                                                              children:
                                                                  'Status:',
                                                          }),
                                                          i('p', {
                                                              style: {
                                                                  fontFamily:
                                                                      'Satoshi-Medium',
                                                              },
                                                              children:
                                                                  E === 'Sent'
                                                                      ? i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'text-green-600',
                                                                                children:
                                                                                    E,
                                                                            }
                                                                        )
                                                                      : i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'text-orange-500',
                                                                                children:
                                                                                    E,
                                                                            }
                                                                        ),
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'flex items-center gap-2',
                                                      children: [
                                                          i('p', {
                                                              children: 'Date:',
                                                          }),
                                                          i('p', {
                                                              style: {
                                                                  fontFamily:
                                                                      'Satoshi-Medium',
                                                              },
                                                              children: N,
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'flex items-center gap-2',
                                                      children: [
                                                          i('p', {
                                                              children:
                                                                  'Transmission Date:',
                                                          }),
                                                          i('p', {
                                                              style: {
                                                                  fontFamily:
                                                                      'Satoshi-Medium',
                                                              },
                                                              children: M,
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'flex items-center gap-2 max-w-[40rem] overflow-hidden text-ellipsis whitespace-nowrap',
                                                      children: [
                                                          i('p', {
                                                              children:
                                                                  'Recipients:',
                                                          }),
                                                          d('div', {
                                                              style: {
                                                                  fontFamily:
                                                                      'Satoshi-Medium',
                                                              },
                                                              className:
                                                                  'flex gap-2',
                                                              children: [
                                                                  A.map(
                                                                      (_, O) =>
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'flex gap-2 items-center  text-ellipsis whitespace-nowrap',
                                                                                  children:
                                                                                      d(
                                                                                          'p',
                                                                                          {
                                                                                              className:
                                                                                                  '',
                                                                                              children:
                                                                                                  [
                                                                                                      _,
                                                                                                      O !==
                                                                                                          A.length -
                                                                                                              1 &&
                                                                                                          ',',
                                                                                                  ],
                                                                                          }
                                                                                      ),
                                                                              },
                                                                              O
                                                                          )
                                                                  ),
                                                                  d('span', {
                                                                      className:
                                                                          'text-color-blue ',
                                                                      children:
                                                                          [
                                                                              ' ',
                                                                              '+ 20 others',
                                                                          ],
                                                                  }),
                                                              ],
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'flex items-center gap-2',
                                                      children: [
                                                          i('p', {
                                                              children:
                                                                  'Transmission Channel:',
                                                          }),
                                                          i('p', {
                                                              style: {
                                                                  fontFamily:
                                                                      'Satoshi-Medium',
                                                              },
                                                              children: k,
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'flex items-center gap-2',
                                                      children: [
                                                          i('p', {
                                                              children:
                                                                  'Subject:',
                                                          }),
                                                          i('p', {
                                                              style: {
                                                                  fontFamily:
                                                                      'Satoshi-Medium',
                                                              },
                                                              children: S,
                                                          }),
                                                      ],
                                                  }),
                                                  i('div', {
                                                      className:
                                                          'flex items-center gap-2 my-5',
                                                      children: i('p', {
                                                          className:
                                                              'overflow-hidden text-ellipsis whitespace-nowrap max-w-[40rem] ',
                                                          children: P,
                                                      }),
                                                  }),
                                                  i(ye, {
                                                      to: `/securityCompany/messages/view/${y}`,
                                                      state: w,
                                                      className:
                                                          'text-color-blue',
                                                      style: {
                                                          fontFamily:
                                                              'Satoshi-Medium',
                                                      },
                                                      children:
                                                          'View More Details',
                                                  }),
                                              ],
                                          })
                                      })
                                  )
                                : i('div', {
                                      children: i('div', {
                                          className: 'relative',
                                          children: i('div', {
                                              className:
                                                  'absolute w-full grid place-content-center',
                                              children: i(Ne, {
                                                  className:
                                                      'animate-spin text-[#0660FE] text-4xl',
                                              }),
                                          }),
                                      }),
                                  }),
                    }),
                ],
            }),
            d('footer', {
                className:
                    'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                children: [
                    d('div', {
                        className: 'flex gap-8 items-center',
                        children: [
                            i('p', { children: 'View' }),
                            i('select', {
                                name: '',
                                id: '',
                                className:
                                    'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                onChange: u,
                                children: l.map((w, y) =>
                                    i(
                                        'option',
                                        {
                                            value: w,
                                            selected: w === b,
                                            className:
                                                'capitalize cursor-pointer bg-white',
                                            children: w,
                                        },
                                        y
                                    )
                                ),
                            }),
                            i('p', {
                                className: 'text',
                                children: 'List per page',
                            }),
                        ],
                    }),
                    d('ul', {
                        className: 'flex items-center gap-5 ml-10',
                        children: [
                            i(Ae, { onClick: p, className: 'cursor-pointer' }),
                            v == null
                                ? void 0
                                : v.map((w, y) =>
                                      i(
                                          'li',
                                          {
                                              children:
                                                  y + 1 === m
                                                      ? i('span', {
                                                            className:
                                                                'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                            children: y + 1,
                                                        })
                                                      : i('span', {
                                                            className:
                                                                'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                            onClick: (N) =>
                                                                h(N, y),
                                                            children: y + 1,
                                                        }),
                                          },
                                          y
                                      )
                                  ),
                            i(Ee, { onClick: f, className: 'cursor-pointer' }),
                        ],
                    }),
                ],
            }),
        ],
    })
}
function Uie() {
    Me()
    const [e, t] = C.exports.useState(!1)
    return i('div', {
        children: i('div', {
            className: 'rounded-lg mt-[3rem] h-[80vh]',
            children: e
                ? i('section', { children: i(Vie, {}) })
                : d('section', {
                      className:
                          'grid  place-content-center w-full h-full justify-items-center gap-4 bg-white rounded-lg',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not added any Message yet',
                          }),
                          d('button', {
                              className:
                                  'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                              onClick: () => {
                                  t(!0)
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Message',
                              ],
                          }),
                      ],
                  }),
        }),
    })
}
const Wie = Array.from({ length: 20 }).map((e, t) => ({
        id: t,
        guardName: 'John Doe',
        phoneNumber: '+2347024954270',
        guardCode: Math.floor(Math.random() * 3e3 + 1e3),
        assignedEstate: 'Estate 1',
        status: Math.random() > 0.5 ? 'Active' : 'Deactivated',
        kys: Math.random() > 0.5 ? 'Validated' : 'Not Validated',
    })),
    Hie = ({ closeRecipientListDialog: e }) => {
        Me()
        const [t, r] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                r(Wie)
            }, 1e3)
        }, [])
        const n = [2, 4, 6, 8],
            a = 4,
            [l, o] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: a,
                totalPage: Math.ceil(t.length / a),
                slicedPages: null,
            }),
            s = (h) => {
                const g = parseInt(h.target.value),
                    x = []
                for (let w = 0; w < t.length; w += g) x.push(t.slice(w, w + g))
                o((w) => ({
                    ...w,
                    itemsPerPage: g,
                    index: 0,
                    currentPage: 1,
                    slicedPages: x,
                    totalPage: Math.ceil(t.length / g),
                }))
            }
        C.exports.useEffect(() => {
            const h = []
            for (let g = 0; g < t.length; g += l.itemsPerPage)
                h.push(t.slice(g, g + l.itemsPerPage))
            o((g) => ({
                ...g,
                slicedPages: h,
                totalPage: Math.ceil(t.length / l.itemsPerPage),
            }))
        }, [t])
        const c = () => {
                console.log(l.currentPage, l.totalPage),
                    l.currentPage !== l.totalPage &&
                        o((h) => ({
                            ...h,
                            index: h.index + 1,
                            currentPage: h.currentPage + 1,
                        }))
            },
            u = () => {
                l.currentPage !== 1 &&
                    o((h) => ({
                        ...h,
                        index: h.index - 1,
                        currentPage: h.currentPage - 1,
                    }))
            },
            { currentPage: f, slicedPages: p, itemsPerPage: m } = l,
            v = (h, g) => {
                o((x) => ({ ...x, index: g, currentPage: g + 1 }))
            }
        return i('main', {
            className: 'mt-10 grid gap-9',
            children: d('section', {
                className:
                    'bg-color-white rounded-lg border  overflow-scroll max-h-[80vh]',
                children: [
                    d('div', {
                        className: 'grid text-[1.6rem]',
                        children: [
                            d('caption', {
                                className:
                                    'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                children: [
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            i('img', {
                                                src: '/icons/admins/search.svg',
                                                alt: '',
                                                className:
                                                    'absolute left-4 text-[4rem]',
                                            }),
                                            i('input', {
                                                type: 'text',
                                                placeholder:
                                                    'Search Parameters',
                                                className:
                                                    'pl-16 w-[20rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'relative flex items-center',
                                        children: [
                                            d('select', {
                                                className:
                                                    ' cursor-pointer w-[20rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                                children: [
                                                    i('option', {
                                                        hidden: !0,
                                                        value: '',
                                                        children: 'Sort By',
                                                    }),
                                                    i('option', {
                                                        value: 'date',
                                                        children: 'date',
                                                    }),
                                                    i('option', {
                                                        value: 'alpha',
                                                        children: 'Alpha',
                                                    }),
                                                ],
                                            }),
                                            i(le, {
                                                className:
                                                    'absolute right-4 text-[1.3rem]',
                                            }),
                                        ],
                                    }),
                                    i('div', {
                                        className: 'ml-auto',
                                        children: d('button', {
                                            className:
                                                'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                            onClick: () => {
                                                console.log(
                                                    'add security guard'
                                                ),
                                                    e()
                                            },
                                            children: [
                                                i('span', {
                                                    children: i($e, {}),
                                                }),
                                                ' ',
                                                'Save Changes',
                                            ],
                                        }),
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid',
                                children: [
                                    d('div', {
                                        className:
                                            'grid justify-between text-color-dark-1 bg-gray-100 p-8 grid-cols-6 gap-6',
                                        style: { fontSize: '1.6rem' },
                                        children: [
                                            d('p', {
                                                className:
                                                    'flex items-center gap-2',
                                                children: [
                                                    i('input', {
                                                        type: 'checkbox',
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    i('p', {
                                                        children: 'Guard Name',
                                                    }),
                                                ],
                                            }),
                                            i('p', { children: 'Guard Code' }),
                                            i('p', {
                                                children: 'Phone Number',
                                            }),
                                            i('p', {
                                                children: 'Assigned Estate',
                                            }),
                                            i('p', { children: 'Status' }),
                                            i('p', { children: 'KYG' }),
                                        ],
                                    }),
                                    i('div', {
                                        className: 'grid gap-8 mt-8 p-8',
                                        children:
                                            p && p.length > 0
                                                ? K.Children.toArray(
                                                      p[l.index].map(
                                                          ({
                                                              guardCode: h,
                                                              guardName: g,
                                                              assignedEstate: x,
                                                              kys: w,
                                                              status: y,
                                                              id: N,
                                                              phoneNumber: S,
                                                          }) =>
                                                              d('div', {
                                                                  className:
                                                                      'grid justify-between border-b grid-cols-6 gap-8 py-4',
                                                                  children: [
                                                                      d('p', {
                                                                          className:
                                                                              'flex items-center gap-4',
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'input',
                                                                                      {
                                                                                          type: 'checkbox',
                                                                                          className:
                                                                                              'cursor-pointer',
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'span',
                                                                                      {
                                                                                          children:
                                                                                              g,
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              h,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              S,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              x,
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              y ===
                                                                              'Active'
                                                                                  ? i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-[#1A8F56]',
                                                                                            children:
                                                                                                y,
                                                                                        }
                                                                                    )
                                                                                  : i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-red-600',
                                                                                            children:
                                                                                                y,
                                                                                        }
                                                                                    ),
                                                                      }),
                                                                      i('p', {
                                                                          children:
                                                                              w ===
                                                                              'Validated'
                                                                                  ? i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-[#1A8F56]',
                                                                                            children:
                                                                                                w,
                                                                                        }
                                                                                    )
                                                                                  : i(
                                                                                        'span',
                                                                                        {
                                                                                            className:
                                                                                                'text-red-600',
                                                                                            children:
                                                                                                w,
                                                                                        }
                                                                                    ),
                                                                      }),
                                                                  ],
                                                              })
                                                      )
                                                  )
                                                : i('div', {
                                                      children: i('div', {
                                                          className: 'relative',
                                                          children: i('div', {
                                                              className:
                                                                  'absolute w-full grid place-content-center',
                                                              children: i(Ne, {
                                                                  className:
                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                              }),
                                                          }),
                                                      }),
                                                  }),
                                    }),
                                ],
                            }),
                            d('footer', {
                                className:
                                    'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                children: [
                                    d('div', {
                                        className: 'flex gap-8 items-center',
                                        children: [
                                            i('p', { children: 'View' }),
                                            i('select', {
                                                name: '',
                                                id: '',
                                                className:
                                                    'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                onChange: s,
                                                children: n.map((h, g) =>
                                                    i(
                                                        'option',
                                                        {
                                                            value: h,
                                                            selected: h === m,
                                                            className:
                                                                'capitalize cursor-pointer bg-white',
                                                            children: h,
                                                        },
                                                        g
                                                    )
                                                ),
                                            }),
                                            i('p', {
                                                className: 'text',
                                                children: 'List per page',
                                            }),
                                        ],
                                    }),
                                    d('ul', {
                                        className:
                                            'flex items-center gap-5 ml-10',
                                        children: [
                                            i(Ae, {
                                                onClick: u,
                                                className: 'cursor-pointer',
                                            }),
                                            p == null
                                                ? void 0
                                                : p.map((h, g) =>
                                                      i(
                                                          'li',
                                                          {
                                                              children:
                                                                  g + 1 === f
                                                                      ? i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                children:
                                                                                    g +
                                                                                    1,
                                                                            }
                                                                        )
                                                                      : i(
                                                                            'span',
                                                                            {
                                                                                className:
                                                                                    'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                onClick:
                                                                                    (
                                                                                        x
                                                                                    ) =>
                                                                                        v(
                                                                                            x,
                                                                                            g
                                                                                        ),
                                                                                children:
                                                                                    g +
                                                                                    1,
                                                                            }
                                                                        ),
                                                          },
                                                          g
                                                      )
                                                  ),
                                            i(Ee, {
                                                onClick: c,
                                                className: 'cursor-pointer',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    }),
                    ' ',
                ],
            }),
        })
    },
    Gie = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState(null),
            [a, l] = C.exports.useState(!0),
            o = (v) => {
                v.preventDefault(), m('success')
            },
            s = C.exports.useRef(null),
            c = C.exports.useRef(null),
            u = () => {
                c.current && c.current.close()
            },
            f = () => {
                c.current && c.current.showModal()
            },
            p = () => {
                s.current && s.current.close()
            },
            m = (v) => {
                l(v === 'warning'), s.current && s.current.showModal()
            }
        return d(me, {
            children: [
                i('dialog', {
                    className: 'dialog',
                    ref: s,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8 text-[1.6rem]',
                            children: [
                                a
                                    ? i('img', {
                                          src: '/icons/admins/modalWarning.svg',
                                          alt: '',
                                      })
                                    : i('img', {
                                          src: '/icons/admins/modalSuccess.svg',
                                          alt: '',
                                      }),
                                i('p', {
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    className: 'text-[2rem]',
                                    children: 'Confirm Send Message',
                                }),
                                i('p', {
                                    children:
                                        'Are you sure you want to send this message?',
                                }),
                                d('div', {
                                    className:
                                        'flex w-full justify-center gap-8',
                                    children: [
                                        i('button', {
                                            className:
                                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => p(),
                                            children: 'Cancel',
                                        }),
                                        i('button', {
                                            className:
                                                'btn text-white bg-[#0556E5] border rounded-lg w-[15rem]',
                                            onClick: () => p(),
                                            children: 'Yes',
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                }),
                i('dialog', {
                    className: 'dialog',
                    ref: c,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i(Hie, { closeRecipientListDialog: u }),
                    }),
                }),
                i('div', {
                    className: 'grid p-8 bg-white items-baseline rounded-lg',
                    children: d('form', {
                        onSubmit: o,
                        className: 'grid max-w-[84rem] gap-16 mt-12',
                        style: {
                            gridTemplateColumns:
                                ' repeat(auto-fit, minmax(35rem, 1fr))',
                        },
                        children: [
                            i(Pt, {
                                state: [
                                    'Channel 1',
                                    'Channel 2',
                                    'Channel 3',
                                    'Channel 4',
                                    'Channel 5',
                                ],
                                label: 'Channel Type',
                                selectedState: e,
                                setSelectedState: t,
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('label', {
                                        htmlFor: 'email',
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Message Subject',
                                    }),
                                    i('input', {
                                        type: 'text',
                                        required: !0,
                                        id: 'email',
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4',
                                children: [
                                    i('p', {
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Schedule Message',
                                    }),
                                    d('div', {
                                        className: 'flex items-center gap-8',
                                        children: [
                                            i('input', {
                                                type: 'date',
                                                required: !0,
                                                id: 'address',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                                min: new Date()
                                                    .toISOString()
                                                    .split('T')[0],
                                            }),
                                            i('input', {
                                                type: 'time',
                                                required: !0,
                                                id: 'address',
                                                className:
                                                    'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            d('div', {
                                children: [
                                    i(Pt, {
                                        state: [
                                            'Channel 1',
                                            'Channel 2',
                                            'Channel 3',
                                            'Channel 4',
                                            'Channel 5',
                                        ],
                                        label: 'Transmission Channel',
                                        selectedState: r,
                                        setSelectedState: n,
                                    }),
                                    i('p', {
                                        style: { fontFamily: 'Satoshi-Light' },
                                        className: 'text-[1.4rem]',
                                        children: 'NB: SMS charges apply',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'grid gap-4 relative',
                                children: [
                                    i('p', {
                                        className:
                                            'text-[1.4rem] font-Satoshi-Medium',
                                        children: 'Receipts',
                                    }),
                                    i('button', {
                                        className:
                                            'btn border border-color-blue-1 text-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                        style: { justifySelf: 'start' },
                                        onClick: () => f(),
                                        children: 'Add Recipients',
                                    }),
                                ],
                            }),
                            d('div', {
                                className: 'col-span-full',
                                children: [
                                    i('label', {
                                        className: ' font-Satoshi-Medium',
                                        children: 'Message',
                                    }),
                                    i('textarea', {
                                        rows: 5,
                                        className:
                                            'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4 ',
                                    }),
                                    i('p', {
                                        style: { fontFamily: 'Satoshi-Light' },
                                        className: 'text-[1.4rem]',
                                        children: 'NB: SMS charges apply',
                                    }),
                                ],
                            }),
                            d('button', {
                                className:
                                    'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                style: { justifySelf: 'start' },
                                onClick: () => m('success'),
                                children: [
                                    i('span', { children: i($e, {}) }),
                                    ' ',
                                    'Send Message',
                                ],
                            }),
                        ],
                    }),
                }),
            ],
        })
    },
    qie = () => {
        let e = Wa()
        e.state, console.log({ location: e })
        const {
                id: t,
                date: r,
                subject: n,
                description: a,
                status: l,
                transmissionChannel: o,
                transmissionDate: s,
                recipients: c,
            } = e.state,
            u = C.exports.useRef(null),
            f = () => {
                u.current && u.current.close()
            },
            p = () => {
                u.current && u.current.showModal()
            }
        return d(me, {
            children: [
                i(ct, {}),
                i('dialog', {
                    className: 'dialog',
                    ref: u,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: i('div', {
                            className:
                                'bg-white rounded-2xl grid place-content-center justify-items-center w-[64rem] h-[30rem] gap-8',
                            children: d(me, {
                                children: [
                                    i('img', {
                                        src: '/icons/admins/modalWarning.svg',
                                        alt: '',
                                    }),
                                    i('p', {
                                        className: 'text-[1.6rem]',
                                        children:
                                            'Are you sure you want to delete this Message',
                                    }),
                                    d('div', {
                                        className:
                                            'flex w-full justify-center gap-8',
                                        children: [
                                            i('button', {
                                                className:
                                                    'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                onClick: () => f(),
                                                children: 'Cancel',
                                            }),
                                            i('button', {
                                                className:
                                                    'bg-red-600 py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                onClick: () => {
                                                    f(),
                                                        fe(
                                                            'Message deleted successfully',
                                                            {
                                                                type: 'success',
                                                                className:
                                                                    'bg-green-100 text-green-600 text-[1.4rem]',
                                                            }
                                                        )
                                                },
                                                children: 'Delete',
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        }),
                    }),
                }),
                d('main', {
                    children: [
                        i('h2', { className: 'heading', children: 'Messages' }),
                        d('section', {
                            className: ' py-10 mt-20',
                            children: [
                                i('div', {
                                    className: 'flex justify-end',
                                    children: i('div', {
                                        className: 'flex gap-8',
                                        children: d('button', {
                                            className:
                                                'border border-red-600 px-16 py-4 flex items-center  rounded-lg gap-4',
                                            onClick: () => p(),
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/delete.svg',
                                                    alt: '',
                                                }),
                                                i('span', {
                                                    className:
                                                        'text-red-600 text-[1.4rem] font-semibold',
                                                    children: 'Delete Message',
                                                }),
                                            ],
                                        }),
                                    }),
                                }),
                                i('div', {
                                    className:
                                        ' gap-16 mt-12 grid p-8 bg-white rounded-lg ',
                                    style: {
                                        gridTemplateColumns:
                                            ' repeat(auto-fit, minmax(35rem, 1fr))',
                                    },
                                    children: d('div', {
                                        className:
                                            'grid relative p-8 bg-white rounded-lg gap-2',
                                        children: [
                                            d('div', {
                                                className:
                                                    'flex items-center gap-2 absolute right-0 top-0 p-8',
                                                children: [
                                                    i('p', {
                                                        children: 'Status:',
                                                    }),
                                                    i('p', {
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Medium',
                                                        },
                                                        children:
                                                            l === 'Sent'
                                                                ? i('span', {
                                                                      className:
                                                                          'text-green-600',
                                                                      children:
                                                                          l,
                                                                  })
                                                                : i('span', {
                                                                      className:
                                                                          'text-orange-500',
                                                                      children:
                                                                          l,
                                                                  }),
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'flex items-center gap-2',
                                                children: [
                                                    i('p', {
                                                        children: 'Date:',
                                                    }),
                                                    i('p', {
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Medium',
                                                        },
                                                        children: r,
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'flex items-center gap-2',
                                                children: [
                                                    i('p', {
                                                        children:
                                                            'Transmission Date:',
                                                    }),
                                                    i('p', {
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Medium',
                                                        },
                                                        children: s,
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'flex items-center gap-2 max-w-[40rem] overflow-hidden text-ellipsis whitespace-nowrap',
                                                children: [
                                                    i('p', {
                                                        children: 'Recipients:',
                                                    }),
                                                    d('div', {
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Medium',
                                                        },
                                                        className: 'flex gap-2',
                                                        children: [
                                                            c.map((v, b) =>
                                                                i(
                                                                    'div',
                                                                    {
                                                                        className:
                                                                            'flex gap-2 items-center  text-ellipsis whitespace-nowrap',
                                                                        children:
                                                                            d(
                                                                                'p',
                                                                                {
                                                                                    className:
                                                                                        '',
                                                                                    children:
                                                                                        [
                                                                                            v,
                                                                                            b !==
                                                                                                c.length -
                                                                                                    1 &&
                                                                                                ',',
                                                                                        ],
                                                                                }
                                                                            ),
                                                                    },
                                                                    b
                                                                )
                                                            ),
                                                            d('span', {
                                                                className:
                                                                    'text-color-blue ',
                                                                children: [
                                                                    ' ',
                                                                    '+ 20 others',
                                                                ],
                                                            }),
                                                        ],
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'flex items-center gap-2',
                                                children: [
                                                    i('p', {
                                                        children:
                                                            'Transmission Channel:',
                                                    }),
                                                    i('p', {
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Medium',
                                                        },
                                                        children: o,
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'flex items-center gap-2',
                                                children: [
                                                    i('p', {
                                                        children: 'Subject:',
                                                    }),
                                                    i('p', {
                                                        style: {
                                                            fontFamily:
                                                                'Satoshi-Medium',
                                                        },
                                                        children: n,
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className:
                                                    'flex items-center gap-2 my-[8rem]',
                                                children: i('p', {
                                                    className: ' ',
                                                    children: a,
                                                }),
                                            }),
                                        ],
                                    }),
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Kie = Array.from({ length: 10 }).map((e, t) => ({
        id: t,
        transactionType: 'Credit',
        transactionCategory: 'Fund Wallet',
        transactionId: 783239232,
        narration: '---',
        amount: 1e4,
        time: '12:00pm',
        date: '12-May-2023',
        balance: 1e5,
    }))
function Yie() {
    const e = Me(),
        [t, r] = C.exports.useState([])
    C.exports.useEffect(() => {
        setTimeout(() => {
            r(Kie)
        }, 1e3)
    }, [])
    const n = [2, 4, 6, 8],
        a = 4,
        [l, o] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: a,
            totalPage: Math.ceil(t.length / a),
            slicedPages: null,
        }),
        s = (T) => {
            const $ = parseInt(T.target.value),
                I = []
            for (let j = 0; j < t.length; j += $) I.push(t.slice(j, j + $))
            o((j) => ({
                ...j,
                itemsPerPage: $,
                index: 0,
                currentPage: 1,
                slicedPages: I,
                totalPage: Math.ceil(t.length / $),
            }))
        }
    C.exports.useEffect(() => {
        const T = []
        for (let $ = 0; $ < t.length; $ += l.itemsPerPage)
            T.push(t.slice($, $ + l.itemsPerPage))
        o(($) => ({
            ...$,
            slicedPages: T,
            totalPage: Math.ceil(t.length / l.itemsPerPage),
        }))
    }, [t])
    const c = () => {
            console.log(l.currentPage, l.totalPage),
                l.currentPage !== l.totalPage &&
                    o((T) => ({
                        ...T,
                        index: T.index + 1,
                        currentPage: T.currentPage + 1,
                    }))
        },
        u = () => {
            l.currentPage !== 1 &&
                o((T) => ({
                    ...T,
                    index: T.index - 1,
                    currentPage: T.currentPage - 1,
                }))
        },
        { currentPage: f, slicedPages: p, itemsPerPage: m } = l,
        v = (T, $) => {
            o((I) => ({ ...I, index: $, currentPage: $ + 1 }))
        },
        b = (T) => {
            e(`/securityCompany/wallet/transactions/${T}`)
        },
        h = ['This Week', 'This Month', 'This Year'],
        [g, x] = C.exports.useState(!1),
        [w, y] = C.exports.useState('This Week'),
        [N, S] = C.exports.useState(!0),
        P = () => x(!g),
        E = (T) => {
            y(T), x(!1)
        },
        k = C.exports.useRef(null),
        M = () => {
            k.current && k.current.close()
        },
        A = (T) => {
            S(T === 'withdraw'), k.current && k.current.showModal()
        }
    return d(me, {
        children: [
            i('dialog', {
                className: 'dialog',
                ref: k,
                children: i('section', {
                    className: 'grid place-content-center w-full h-[100vh]',
                    children: d('div', {
                        className:
                            'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                        children: [
                            i(Vt, {
                                className:
                                    'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                onClick: () => M(),
                            }),
                            i('h3', {
                                className: 'text-[2rem] font-bold border-b ',
                                style: { fontFamily: 'Satoshi-Medium' },
                                children: N ? 'Withdrawal' : 'Fund Wallet',
                            }),
                            N
                                ? d('form', {
                                      className: 'grid gap-12',
                                      onSubmit: (T) => {
                                          T.preventDefault(), M()
                                      },
                                      children: [
                                          d('div', {
                                              className: 'w-full grid gap-4',
                                              children: [
                                                  i('label', {
                                                      htmlFor: 'amount',
                                                      className:
                                                          'text-[1.4rem] font-semibold',
                                                      children: 'Amount',
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'relative flex items-center',
                                                      children: [
                                                          i('img', {
                                                              src: '/icons/Naira.svg',
                                                              alt: '',
                                                              className:
                                                                  'absolute left-3',
                                                          }),
                                                          i('input', {
                                                              type: 'number',
                                                              required: !0,
                                                              id: 'amount',
                                                              className:
                                                                  'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                          }),
                                                      ],
                                                  }),
                                              ],
                                          }),
                                          d('div', {
                                              className: 'w-full grid gap-4',
                                              children: [
                                                  i('label', {
                                                      htmlFor: 'description',
                                                      className:
                                                          'text-[1.4rem] font-semibold',
                                                      children: 'Description',
                                                  }),
                                                  i('input', {
                                                      type: 'text',
                                                      required: !0,
                                                      id: 'description',
                                                      className:
                                                          'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                  }),
                                              ],
                                          }),
                                          i('button', {
                                              className:
                                                  'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                              children: 'Withdraw',
                                          }),
                                      ],
                                  })
                                : d('form', {
                                      className: 'grid gap-12',
                                      onSubmit: (T) => {
                                          T.preventDefault(), M()
                                      },
                                      children: [
                                          d('div', {
                                              className: 'w-full grid gap-4',
                                              children: [
                                                  i('label', {
                                                      htmlFor: 'amount',
                                                      className:
                                                          'text-[1.4rem] font-semibold',
                                                      children: 'Amount',
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'relative flex items-center',
                                                      children: [
                                                          i('img', {
                                                              src: '/icons/Naira.svg',
                                                              alt: '',
                                                              className:
                                                                  'absolute left-3',
                                                          }),
                                                          i('input', {
                                                              type: 'number',
                                                              required: !0,
                                                              id: 'amount',
                                                              className:
                                                                  'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                          }),
                                                      ],
                                                  }),
                                              ],
                                          }),
                                          d('div', {
                                              className: 'w-full grid gap-4',
                                              children: [
                                                  i('label', {
                                                      htmlFor: 'description',
                                                      className:
                                                          'text-[1.4rem] font-semibold',
                                                      children: 'Card Number',
                                                  }),
                                                  i('input', {
                                                      type: 'number',
                                                      required: !0,
                                                      id: 'description',
                                                      className:
                                                          'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                  }),
                                              ],
                                          }),
                                          d('div', {
                                              className: 'w-full flex gap-4',
                                              children: [
                                                  d('div', {
                                                      className: 'w-full',
                                                      children: [
                                                          i('label', {
                                                              htmlFor:
                                                                  'description',
                                                              className:
                                                                  'text-[1.4rem] font-semibold',
                                                              children: 'CVV',
                                                          }),
                                                          i('input', {
                                                              type: 'number',
                                                              required: !0,
                                                              id: 'description',
                                                              className:
                                                                  'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] ',
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className: 'w-full',
                                                      children: [
                                                          i('label', {
                                                              htmlFor:
                                                                  'description',
                                                              className:
                                                                  'text-[1.4rem] font-semibold',
                                                              children:
                                                                  'Expiry Date',
                                                          }),
                                                          i('input', {
                                                              type: 'date',
                                                              required: !0,
                                                              min: new Date()
                                                                  .toISOString()
                                                                  .split(
                                                                      'T'
                                                                  )[0],
                                                              id: 'description',
                                                              className:
                                                                  'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                          }),
                                                      ],
                                                  }),
                                              ],
                                          }),
                                          i('button', {
                                              className:
                                                  'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem] my-10',
                                              children: 'Fund',
                                          }),
                                      ],
                                  }),
                        ],
                    }),
                }),
            }),
            i('div', {
                className: 'estateDetail',
                children: d('div', {
                    className: 'mt-8 grid gap-8',
                    children: [
                        d('section', {
                            className: ' text-[1.4rem] grid gap-8',
                            style: { gridTemplateColumns: '60% auto' },
                            children: [
                                d('div', {
                                    className:
                                        'border-l border-l-color-grey bg-white rounded-lg p-8 grid gap-10',
                                    children: [
                                        d('div', {
                                            className: 'flex justify-between',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'text-[1.6rem] font-bold p-8',
                                                    children: 'Wallet Trend',
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative grid gap-4',
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'relative flex items-center w-[12rem]',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                    onClick: P,
                                                                    children: w,
                                                                }),
                                                                g
                                                                    ? i(dt, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      })
                                                                    : i(le, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      }),
                                                            ],
                                                        }),
                                                        g &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children: h.map(
                                                                    (T, $) =>
                                                                        i(
                                                                            'p',
                                                                            {
                                                                                className:
                                                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                onClick:
                                                                                    () =>
                                                                                        E(
                                                                                            T
                                                                                        ),
                                                                                children:
                                                                                    T,
                                                                            },
                                                                            $
                                                                        )
                                                                ),
                                                            }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(go, {}),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'bg-white p-8 rounded-lg grid justify-center items-baseline',
                                    children: [
                                        i('div', {
                                            className: 'grid items-end',
                                            children: i(Xt, {
                                                amount: 160847,
                                                title: 'Security Company Wallet',
                                                isWalletScreen: !0,
                                                bgImgUri:
                                                    '/icons/overview/card/bgS.svg',
                                                lefIconUri:
                                                    '/icons/overview/card/leftS.svg',
                                                bgColor: 'bg-[#6AB95F]',
                                            }),
                                        }),
                                        d('div', {
                                            className:
                                                'flex justify-center gap-4',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () => A('request'),
                                                    children: 'Request',
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () =>
                                                        A('withdraw'),
                                                    children: 'Fund Wallet',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        i('section', {
                            className:
                                'bg-color-white rounded-lg border min-w-[112rem]',
                            children: d('div', {
                                className:
                                    'grid text-[1.6rem] border rounded-lg',
                                children: [
                                    d('div', {
                                        className:
                                            'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                        children: [
                                            d('p', {
                                                className: ' font-bold',
                                                children: [
                                                    'Transaction History ',
                                                    i('span', {
                                                        children: '(200)',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/search.svg',
                                                        alt: '',
                                                        className:
                                                            'absolute left-4 text-[4rem]',
                                                    }),
                                                    i('input', {
                                                        type: 'text',
                                                        placeholder:
                                                            'Search Parameters',
                                                        className:
                                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    d('select', {
                                                        className:
                                                            ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                        children: [
                                                            i('option', {
                                                                hidden: !0,
                                                                value: '',
                                                                children:
                                                                    'Sort By',
                                                            }),
                                                            i('option', {
                                                                value: 'date',
                                                                children:
                                                                    'date',
                                                            }),
                                                            i('option', {
                                                                value: 'alpha',
                                                                children:
                                                                    'Alpha',
                                                            }),
                                                        ],
                                                    }),
                                                    i(le, {
                                                        className:
                                                            'absolute right-4 text-[1.3rem]',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid bg-white',
                                        children: [
                                            d('div', {
                                                className:
                                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-9 gap-8 text-[1.4rem] items-center',
                                                children: [
                                                    i('p', {
                                                        children: 'Date',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Type',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Category',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction ID',
                                                    }),
                                                    i('p', {
                                                        children: 'Narration',
                                                    }),
                                                    i('p', {
                                                        children: 'Amount',
                                                    }),
                                                    i('p', {
                                                        children: 'Time',
                                                    }),
                                                    i('p', {
                                                        children: 'Balance',
                                                    }),
                                                    i('p', {
                                                        children: 'Actions',
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className:
                                                    'grid gap-8 mt-8 p-8',
                                                children:
                                                    p && p.length > 0
                                                        ? K.Children.toArray(
                                                              p[l.index].map(
                                                                  ({
                                                                      id: T,
                                                                      date: $,
                                                                      transactionType:
                                                                          I,
                                                                      transactionCategory:
                                                                          j,
                                                                      transactionId:
                                                                          L,
                                                                      narration:
                                                                          D,
                                                                      amount: R,
                                                                      time: V,
                                                                      balance:
                                                                          G,
                                                                  }) =>
                                                                      d('div', {
                                                                          className:
                                                                              'grid justify-between border-b grid-cols-9 items-center gap-8 py-4',
                                                                          children:
                                                                              [
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              $,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              I,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              j,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              L,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              D,
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-.5',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'img',
                                                                                                      {
                                                                                                          src: '/icons/Naira.svg',
                                                                                                          alt: '',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              R.toLocaleString(),
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              V,
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-.5',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'img',
                                                                                                      {
                                                                                                          src: '/icons/Naira.svg',
                                                                                                          alt: '',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              G.toLocaleString(),
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'button',
                                                                                      {
                                                                                          className:
                                                                                              'text-color-primary text-left',
                                                                                          onClick:
                                                                                              () =>
                                                                                                  b(
                                                                                                      T
                                                                                                  ),
                                                                                          children:
                                                                                              'View Details',
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      })
                                                              )
                                                          )
                                                        : i('div', {
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'absolute w-full grid place-content-center',
                                                                                  children:
                                                                                      i(
                                                                                          Ne,
                                                                                          {
                                                                                              className:
                                                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                            }),
                                        ],
                                    }),
                                    d('footer', {
                                        className:
                                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                        children: [
                                            d('div', {
                                                className:
                                                    'flex gap-8 items-center',
                                                children: [
                                                    i('p', {
                                                        children: 'View',
                                                    }),
                                                    i('select', {
                                                        name: '',
                                                        id: '',
                                                        className:
                                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                        onChange: s,
                                                        children: n.map(
                                                            (T, $) =>
                                                                i(
                                                                    'option',
                                                                    {
                                                                        value: T,
                                                                        selected:
                                                                            T ===
                                                                            m,
                                                                        className:
                                                                            'capitalize cursor-pointer bg-white',
                                                                        children:
                                                                            T,
                                                                    },
                                                                    $
                                                                )
                                                        ),
                                                    }),
                                                    i('p', {
                                                        className: 'text',
                                                        children:
                                                            'List per page',
                                                    }),
                                                ],
                                            }),
                                            d('ul', {
                                                className:
                                                    'flex items-center gap-5 ml-10',
                                                children: [
                                                    i(Ae, {
                                                        onClick: u,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    p == null
                                                        ? void 0
                                                        : p.map((T, $) =>
                                                              i(
                                                                  'li',
                                                                  {
                                                                      children:
                                                                          $ +
                                                                              1 ===
                                                                          f
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                        children:
                                                                                            $ +
                                                                                            1,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                        onClick:
                                                                                            (
                                                                                                I
                                                                                            ) =>
                                                                                                v(
                                                                                                    I,
                                                                                                    $
                                                                                                ),
                                                                                        children:
                                                                                            $ +
                                                                                            1,
                                                                                    }
                                                                                ),
                                                                  },
                                                                  $
                                                              )
                                                          ),
                                                    i(Ee, {
                                                        onClick: c,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        }),
                    ],
                }),
            }),
        ],
    })
}
const Xie = () =>
        i('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: d('section', {
                className: 'grid max-w-[65vw] gap-16',
                style: {
                    gridTemplateColumns: 'repeat(auto-fit, minmax(40rem, 1fr))',
                },
                children: [
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'residentName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'residentName',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '02-May-2022',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'withdrawalTime',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Time',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'withdrawalTime',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '3:00pm',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'status',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'status',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-green-500 disabled:cursor-not-allowed',
                                value: 'Credit',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Category',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Source',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction ID',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 1004238232,
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Narration',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase for 6000',
                            }),
                        ],
                    }),
                ],
            }),
        }),
    Zie = () => {
        const [e, t] = C.exports.useState(!0),
            [r, n] = C.exports.useState(!1)
        return d(me, {
            children: [
                i(ct, {}),
                d('div', {
                    className:
                        ' p-8 bg-white h-[80vh] overflow-y-scroll rounded-lg',
                    children: [
                        d('section', {
                            className: 'mb-20 grid gap-2',
                            children: [
                                i('p', {
                                    style: { fontFamily: 'Satoshi-Medium' },
                                    children: 'Notification Settings',
                                }),
                                i('p', {
                                    children:
                                        'Select method of notifying security guards when assigning or reassigning occurs',
                                }),
                            ],
                        }),
                        d('section', {
                            children: [
                                d('div', {
                                    className: 'grid gap-10 w-[60rem]',
                                    children: [
                                        d('div', {
                                            className:
                                                'grid grid-cols-2 items-center gap-16 ',
                                            children: [
                                                i('p', { children: 'In-App' }),
                                                i('div', {
                                                    onClick: () => t(!e),
                                                    className: 'cursor-pointer',
                                                    children: e
                                                        ? i('img', {
                                                              src: '/icons/admins/switchOn.svg',
                                                              alt: '',
                                                          })
                                                        : i('img', {
                                                              src: '/icons/admins/switchOff.svg',
                                                              alt: '',
                                                          }),
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'grid grid-cols-2 items-center gap-16',
                                            children: [
                                                i('p', { children: 'SMS' }),
                                                i('div', {
                                                    onClick: () => n(!r),
                                                    className: 'cursor-pointer',
                                                    children: r
                                                        ? i('img', {
                                                              src: '/icons/admins/switchOn.svg',
                                                              alt: '',
                                                          })
                                                        : i('img', {
                                                              src: '/icons/admins/switchOff.svg',
                                                              alt: '',
                                                          }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                i('p', {
                                    className: 'text-color-blue-1 mt-10',
                                    children:
                                        'NB: A charge of N3 would be incured for this process',
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Jie = () => {
        C.exports.useState(!0)
        const [e, t] = C.exports.useState(''),
            [r, n] = C.exports.useState(!1),
            a = () => n(!r)
        return d(me, {
            children: [
                i(ct, {}),
                d('div', {
                    className:
                        ' p-8 bg-white h-[80vh] overflow-y-scroll rounded-lg',
                    children: [
                        d('figure', {
                            className: 'grid text-center justify-start',
                            children: [
                                i('input', {
                                    type: 'file',
                                    name: 'photoUpload',
                                    id: 'photoUpload',
                                    accept: 'image/*',
                                    className: 'hidden',
                                    onClick: async (s) => {
                                        const c = await kr('#photoUpload')
                                        t(c)
                                    },
                                }),
                                i('img', {
                                    src: e || '/img/me.jpeg',
                                    alt: 'photoPreview',
                                    className:
                                        'object-cover w-[11rem] h-[11rem] rounded-full object-top',
                                }),
                                i('label', {
                                    htmlFor: 'photoUpload',
                                    className:
                                        'cursor-pointer text-color-blue-1 text-[1.6rem] text-center',
                                    children: 'Edit',
                                }),
                            ],
                        }),
                        d('form', {
                            onSubmit: (s) => {
                                s.preventDefault(),
                                    fe('Password Updated successfully', {
                                        type: 'success',
                                        className:
                                            'bg-green-100 text-green-600 text-[1.4rem]',
                                    })
                            },
                            className:
                                'grid max-w-[84rem] text-[1.6rem] mt-[5rem] gap-10',
                            style: {
                                gridTemplateColumns:
                                    ' repeat(auto-fit, minmax(35rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    children: [
                                        i('label', {
                                            className: 'font-Satoshi-Medium',
                                            children: 'Current Password',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('input', {
                                                    type: r
                                                        ? 'text'
                                                        : 'password',
                                                    className:
                                                        'border pr-12 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                    name: 'password',
                                                }),
                                                i('span', {
                                                    className:
                                                        'absolute right-2 cursor-pointer',
                                                    children: r
                                                        ? i(gl, { onClick: a })
                                                        : i(vl, { onClick: a }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('label', {
                                            className: 'font-Satoshi-Medium',
                                            children: 'New Password',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('input', {
                                                    type: r
                                                        ? 'text'
                                                        : 'password',
                                                    className:
                                                        'border pr-12 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                    name: 'password',
                                                }),
                                                i('span', {
                                                    className:
                                                        'absolute right-2 cursor-pointer',
                                                    children: r
                                                        ? i(gl, { onClick: a })
                                                        : i(vl, { onClick: a }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    children: [
                                        i('label', {
                                            className: 'font-Satoshi-Medium',
                                            children: 'Re-Enter New Password',
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('input', {
                                                    type: r
                                                        ? 'text'
                                                        : 'password',
                                                    className:
                                                        'border pr-12 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                    name: 'password',
                                                }),
                                                i('span', {
                                                    className:
                                                        'absolute right-2 cursor-pointer',
                                                    children: r
                                                        ? i(gl, { onClick: a })
                                                        : i(vl, { onClick: a }),
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg col-span-full mt-[10rem]',
                                    style: { justifySelf: 'start' },
                                    children: [
                                        i('span', {
                                            children: i('img', {
                                                src: '/icons/admins/saveDisk.svg',
                                                alt: '',
                                                className:
                                                    'w-[1.7rem] h-[1.7rem]',
                                            }),
                                        }),
                                        ' ',
                                        'Save Changes',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    }
function Qie() {
    const [e, t] = C.exports.useState('passwordSettings')
    return d('div', {
        children: [
            d('div', {
                className: 'estateDetail__radioBox',
                children: [
                    i('input', {
                        type: 'radio',
                        name: 'platform',
                        id: 'passwordSettings',
                        className: 'hidden',
                        defaultChecked: !0,
                        onChange: () => t('passwordSettings'),
                    }),
                    i('label', {
                        htmlFor: 'passwordSettings',
                        className: 'capitalize',
                        children: 'Password Settings',
                    }),
                    i('input', {
                        type: 'radio',
                        name: 'platform',
                        id: 'notificationSettings',
                        className: 'hidden',
                        onChange: () => t('notificationSettings'),
                    }),
                    i('label', {
                        htmlFor: 'notificationSettings',
                        children: 'Notification Settings',
                    }),
                ],
            }),
            i('div', {
                className: 'mt-8 grid gap-8',
                children: i('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children: {
                        passwordSettings: i(Jie, {}),
                        notificationSettings: i(Zie, {}),
                    }[e],
                }),
            }),
        ],
    })
}
const ele = d(oe, {
        path: '/securityCompany',
        element: i(Cie, {}),
        children: [
            i(oe, { index: !0, element: i(mie, {}) }),
            i(oe, { path: 'estates', element: i(Pie, {}) }),
            i(oe, { path: 'estates/detail/:Id', element: i(_ie, {}) }),
            i(oe, { path: 'estates/securityGuard/:Id', element: i(Aie, {}) }),
            i(oe, { path: 'estates/workrate', element: i(Eie, {}) }),
            i(oe, { path: 'estates/estateReport', element: i(Die, {}) }),
            i(oe, { path: 'security-guard', element: i(Iie, {}) }),
            i(oe, {
                path: 'security-guard/viewGuard/:Id',
                element: i(Rie, {}),
            }),
            i(oe, { path: 'security-guard/addSecurity', element: i(Bie, {}) }),
            i(oe, { path: 'messages', element: i(Uie, {}) }),
            i(oe, { path: 'messages/compose', element: i(Gie, {}) }),
            i(oe, { path: 'messages/view/:Id', element: i(qie, {}) }),
            i(oe, { path: 'wallet', element: i(Yie, {}) }),
            i(oe, { path: 'wallet/transactions/:Id', element: i(Xie, {}) }),
            i(oe, { path: 'settings/', element: i(Qie, {}) }),
        ],
    }),
    tle = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    d: 'M16 21V19C16 16.7909 14.2091 15 12 15H5C2.79086 15 1 16.7909 1 19V21',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M8.5 11C10.7091 11 12.5 9.20914 12.5 7C12.5 4.79086 10.7091 3 8.5 3C6.29086 3 4.5 4.79086 4.5 7C4.5 9.20914 6.29086 11 8.5 11Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M20 8V14',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M23 11H17',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    rle = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    d: 'M20 21V19C20 16.7909 18.2091 15 16 15H8C5.79086 15 4 16.7909 4 19V21',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    nle = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M20 7L9 18L4 13',
                stroke: '#222823',
                'stroke-width': '2',
                'stroke-linecap': 'round',
                'stroke-linejoin': 'round',
            }),
        }),
    ale = () =>
        i('svg', {
            width: '22',
            height: '14',
            viewBox: '0 0 22 14',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.0006 8.16981V7.99981C19.0015 6.92983 18.7879 5.87053 18.3722 4.88459C17.9565 3.89866 17.3473 3.00612 16.5806 2.25981C15.6854 1.38879 14.5952 0.744236 13.4006 0.379813H13.3506C12.513 0.115945 11.6386 -0.0123403 10.7606 -0.000187429C8.66896 0.114617 6.70035 1.02458 5.25773 2.54341C3.81512 4.06225 3.00763 6.07507 3.00057 8.16981C2.33224 8.40492 1.76868 8.86896 1.4097 9.47977C1.05073 10.0906 0.919508 10.8087 1.03928 11.507C1.15906 12.2053 1.52209 12.8386 2.0641 13.2949C2.6061 13.7512 3.29209 14.0009 4.00057 13.9998H18.0006C18.709 14.0009 19.395 13.7512 19.937 13.2949C20.479 12.8386 20.8421 12.2053 20.9619 11.507C21.0816 10.8087 20.9504 10.0906 20.5914 9.47977C20.2325 8.86896 19.6689 8.40492 19.0006 8.16981ZM18.0006 11.9998H4.00057C3.73535 11.9998 3.481 11.8945 3.29346 11.7069C3.10593 11.5194 3.00057 11.265 3.00057 10.9998C3.00057 10.7346 3.10593 10.4802 3.29346 10.2927C3.481 10.1052 3.73535 9.99981 4.00057 9.99981H6.00057C6.26579 9.99981 6.52014 9.89445 6.70768 9.70692C6.89521 9.51938 7.00057 9.26503 7.00057 8.99981C7.00057 8.7346 6.89521 8.48024 6.70768 8.29271C6.52014 8.10517 6.26579 7.99981 6.00057 7.99981H5.00057C5.04618 6.96262 5.34303 5.95202 5.86561 5.05493C6.38819 4.15784 7.12084 3.40111 8.00057 2.84981V5.99981C8.00057 6.26503 8.10593 6.51938 8.29346 6.70692C8.481 6.89446 8.73535 6.99981 9.00057 6.99981C9.26579 6.99981 9.52014 6.89446 9.70768 6.70692C9.89521 6.51938 10.0006 6.26503 10.0006 5.99981V2.08981C10.272 2.04446 10.5458 2.01442 10.8206 1.99981H11.0006C11.3362 2.00289 11.6709 2.03636 12.0006 2.09981V5.99981C12.0006 6.26503 12.1059 6.51938 12.2935 6.70692C12.481 6.89446 12.7354 6.99981 13.0006 6.99981C13.2658 6.99981 13.5201 6.89446 13.7077 6.70692C13.8952 6.51938 14.0006 6.26503 14.0006 5.99981V2.81981C14.4248 3.06544 14.8205 3.35721 15.1806 3.68981C15.7571 4.24971 16.2153 4.91973 16.528 5.66011C16.8406 6.40049 17.0013 7.19613 17.0006 7.99981H16.0006C15.7354 7.99981 15.481 8.10517 15.2935 8.29271C15.1059 8.48024 15.0006 8.7346 15.0006 8.99981C15.0006 9.26503 15.1059 9.51938 15.2935 9.70692C15.481 9.89445 15.7354 9.99981 16.0006 9.99981H18.0006C18.2658 9.99981 18.5201 10.1052 18.7077 10.2927C18.8952 10.4802 19.0006 10.7346 19.0006 10.9998C19.0006 11.265 18.8952 11.5194 18.7077 11.7069C18.5201 11.8945 18.2658 11.9998 18.0006 11.9998Z',
            }),
        }),
    ile = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M17.4512 12.4598C18.6188 11.0222 19.1691 9.18062 18.9817 7.33821C18.7942 5.49579 17.8843 3.80273 16.4512 2.62976C15.6302 1.97175 14.673 1.50473 13.649 1.26258C12.6251 1.02043 11.5601 1.00922 10.5312 1.22976C9.37609 1.48526 8.30455 2.02936 7.41669 2.81124C6.52882 3.59313 5.85361 4.58729 5.45413 5.70086C5.05464 6.81444 4.9439 8.0111 5.13226 9.17907C5.32062 10.347 5.80193 11.4482 6.53124 12.3798C7.19592 13.1884 7.5755 14.1936 7.61124 15.2398V15.5298C7.23073 15.8974 7.01139 16.4008 7.00124 16.9298V18.9298C7.00124 19.4602 7.21195 19.9689 7.58703 20.344C7.9621 20.719 8.47081 20.9298 9.00124 20.9298V21.9298C9.00124 22.195 9.1066 22.4493 9.29413 22.6369C9.48167 22.8244 9.73602 22.9298 10.0012 22.9298C10.2665 22.9298 10.5208 22.8244 10.7083 22.6369C10.8959 22.4493 11.0012 22.195 11.0012 21.9298V20.9298H13.0012V21.9298C13.0012 22.195 13.1066 22.4493 13.2941 22.6369C13.4817 22.8244 13.736 22.9298 14.0012 22.9298C14.2665 22.9298 14.5208 22.8244 14.7083 22.6369C14.8959 22.4493 15.0012 22.195 15.0012 21.9298V20.9298C15.5317 20.9298 16.0404 20.719 16.4155 20.344C16.7905 19.9689 17.0012 19.4602 17.0012 18.9298V16.9298C17.0017 16.4065 16.7971 15.9039 16.4312 15.5298V15.0998C16.4604 14.1292 16.8203 13.1978 17.4512 12.4598ZM9.00124 18.9298V16.9298H15.0012V18.9298H9.00124ZM15.8912 11.2098C15.006 12.2538 14.4925 13.5623 14.4312 14.9298H9.56124C9.46691 13.5443 8.94253 12.2229 8.06124 11.1498C7.53185 10.4854 7.18046 9.6971 7.04022 8.85926C6.89999 8.02142 6.97553 7.16167 7.25972 6.36112C7.54392 5.56058 8.02739 4.84564 8.66452 4.28377C9.30166 3.72189 10.0714 3.33162 10.9012 3.14976C11.6364 2.98393 12.3996 2.98644 13.1337 3.15711C13.8678 3.32779 14.5538 3.6622 15.1404 4.13536C15.7271 4.60851 16.1992 5.20816 16.5214 5.88947C16.8436 6.57078 17.0077 7.31612 17.0012 8.06976C17.0075 9.21364 16.615 10.324 15.8912 11.2098Z',
                fill: '#222823',
            }),
        }),
    lle = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M13.3 12.22C13.8336 11.7581 14.2616 11.1869 14.5549 10.545C14.8482 9.90316 15 9.20571 15 8.5C15 7.17392 14.4732 5.90215 13.5355 4.96447C12.5979 4.02678 11.3261 3.5 10 3.5C8.67392 3.5 7.40215 4.02678 6.46447 4.96447C5.52678 5.90215 5 7.17392 5 8.5C4.99999 9.20571 5.1518 9.90316 5.44513 10.545C5.73845 11.1869 6.16642 11.7581 6.7 12.22C5.30014 12.8539 4.11247 13.8775 3.27898 15.1685C2.4455 16.4596 2.00147 17.9633 2 19.5C2 19.7652 2.10536 20.0196 2.29289 20.2071C2.48043 20.3946 2.73478 20.5 3 20.5C3.26522 20.5 3.51957 20.3946 3.70711 20.2071C3.89464 20.0196 4 19.7652 4 19.5C4 17.9087 4.63214 16.3826 5.75736 15.2574C6.88258 14.1321 8.4087 13.5 10 13.5C11.5913 13.5 13.1174 14.1321 14.2426 15.2574C15.3679 16.3826 16 17.9087 16 19.5C16 19.7652 16.1054 20.0196 16.2929 20.2071C16.4804 20.3946 16.7348 20.5 17 20.5C17.2652 20.5 17.5196 20.3946 17.7071 20.2071C17.8946 20.0196 18 19.7652 18 19.5C17.9985 17.9633 17.5545 16.4596 16.721 15.1685C15.8875 13.8775 14.6999 12.8539 13.3 12.22ZM10 11.5C9.40666 11.5 8.82664 11.3241 8.33329 10.9944C7.83994 10.6648 7.45542 10.1962 7.22836 9.64805C7.0013 9.09987 6.94189 8.49667 7.05764 7.91473C7.1734 7.33279 7.45912 6.79824 7.87868 6.37868C8.29824 5.95912 8.83279 5.6734 9.41473 5.55764C9.99667 5.44189 10.5999 5.5013 11.1481 5.72836C11.6962 5.95542 12.1648 6.33994 12.4944 6.83329C12.8241 7.32664 13 7.90666 13 8.5C13 9.29565 12.6839 10.0587 12.1213 10.6213C11.5587 11.1839 10.7956 11.5 10 11.5ZM20.91 12L21.71 11.21C21.8032 11.1168 21.8772 11.0061 21.9277 10.8842C21.9781 10.7624 22.0041 10.6319 22.0041 10.5C22.0041 10.3681 21.9781 10.2376 21.9277 10.1158C21.8772 9.99393 21.8032 9.88324 21.71 9.79C21.6168 9.69676 21.5061 9.6228 21.3842 9.57234C21.2624 9.52188 21.1319 9.49591 21 9.49591C20.8681 9.49591 20.7376 9.52188 20.6158 9.57234C20.4939 9.6228 20.3832 9.69676 20.29 9.79L19.5 10.59L18.71 9.79C18.6168 9.69676 18.5061 9.6228 18.3842 9.57234C18.2624 9.52188 18.1319 9.49591 18 9.49591C17.7337 9.49591 17.4783 9.6017 17.29 9.79C17.1968 9.88324 17.1228 9.99393 17.0723 10.1158C17.0219 10.2376 16.9959 10.3681 16.9959 10.5C16.9959 10.7663 17.1017 11.0217 17.29 11.21L18.09 12L17.29 12.79C17.1963 12.883 17.1219 12.9936 17.0711 13.1154C17.0203 13.2373 16.9942 13.368 16.9942 13.5C16.9942 13.632 17.0203 13.7627 17.0711 13.8846C17.1219 14.0064 17.1963 14.117 17.29 14.21C17.383 14.3037 17.4936 14.3781 17.6154 14.4289C17.7373 14.4797 17.868 14.5058 18 14.5058C18.132 14.5058 18.2627 14.4797 18.3846 14.4289C18.5064 14.3781 18.617 14.3037 18.71 14.21L19.5 13.41L20.29 14.21C20.383 14.3037 20.4936 14.3781 20.6154 14.4289C20.7373 14.4797 20.868 14.5058 21 14.5058C21.132 14.5058 21.2627 14.4797 21.3846 14.4289C21.5064 14.3781 21.617 14.3037 21.71 14.21C21.8037 14.117 21.8781 14.0064 21.9289 13.8846C21.9797 13.7627 22.0058 13.632 22.0058 13.5C22.0058 13.368 21.9797 13.2373 21.9289 13.1154C21.8781 12.9936 21.8037 12.883 21.71 12.79L20.91 12Z',
            }),
        }),
    ole = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M20.0001 7.99952L14.0001 2.73952C13.4501 2.24756 12.738 1.97559 12.0001 1.97559C11.2622 1.97559 10.5501 2.24756 10.0001 2.73952L4.00009 7.99952C3.68246 8.28359 3.42899 8.63207 3.25657 9.02176C3.08414 9.41145 2.99671 9.8334 3.00009 10.2595V18.9995C3.00009 19.7952 3.31617 20.5582 3.87877 21.1208C4.44138 21.6834 5.20445 21.9995 6.00009 21.9995H18.0001C18.7957 21.9995 19.5588 21.6834 20.1214 21.1208C20.684 20.5582 21.0001 19.7952 21.0001 18.9995V10.2495C21.0021 9.82508 20.9139 9.40506 20.7416 9.0172C20.5692 8.62934 20.3165 8.28247 20.0001 7.99952ZM14.0001 19.9995H10.0001V14.9995C10.0001 14.7343 10.1055 14.4799 10.293 14.2924C10.4805 14.1049 10.7349 13.9995 11.0001 13.9995H13.0001C13.2653 13.9995 13.5197 14.1049 13.7072 14.2924C13.8947 14.4799 14.0001 14.7343 14.0001 14.9995V19.9995ZM19.0001 18.9995C19.0001 19.2647 18.8947 19.5191 18.7072 19.7066C18.5197 19.8942 18.2653 19.9995 18.0001 19.9995H16.0001V14.9995C16.0001 14.2039 15.684 13.4408 15.1214 12.8782C14.5588 12.3156 13.7957 11.9995 13.0001 11.9995H11.0001C10.2044 11.9995 9.44138 12.3156 8.87877 12.8782C8.31616 13.4408 8.00009 14.2039 8.00009 14.9995V19.9995H6.00009C5.73488 19.9995 5.48052 19.8942 5.29299 19.7066C5.10545 19.5191 5.00009 19.2647 5.00009 18.9995V10.2495C5.00027 10.1075 5.03069 9.96721 5.08931 9.8379C5.14794 9.70858 5.23343 9.59323 5.3401 9.49952L11.3401 4.24952C11.5226 4.0892 11.7572 4.00078 12.0001 4.00078C12.243 4.00078 12.4776 4.0892 12.6601 4.24952L18.6601 9.49952C18.7668 9.59323 18.8523 9.70858 18.9109 9.8379C18.9695 9.96721 18.9999 10.1075 19.0001 10.2495V18.9995Z',
            }),
        }),
    sle = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M20.3393 9.32013L6.33927 2.32013C5.78676 2.04514 5.16289 1.94724 4.55271 2.03978C3.94252 2.13232 3.37573 2.4108 2.9296 2.83724C2.48347 3.26369 2.17972 3.81735 2.05976 4.42274C1.9398 5.02813 2.00947 5.65578 2.25927 6.22013L4.65927 11.5901C4.71373 11.72 4.74177 11.8593 4.74177 12.0001C4.74177 12.1409 4.71373 12.2803 4.65927 12.4101L2.25927 17.7801C2.05597 18.2368 1.97003 18.7371 2.00925 19.2355C2.04847 19.7339 2.21161 20.2145 2.48385 20.6338C2.75609 21.0531 3.1288 21.3977 3.56809 21.6363C4.00739 21.875 4.49935 22 4.99927 22.0001C5.4675 21.9955 5.92876 21.8861 6.34927 21.6801L20.3493 14.6801C20.8459 14.4303 21.2633 14.0474 21.555 13.5742C21.8466 13.101 22.0011 12.556 22.0011 12.0001C22.0011 11.4442 21.8466 10.8993 21.555 10.4261C21.2633 9.95282 20.8459 9.56994 20.3493 9.32013H20.3393ZM19.4493 12.8901L5.44927 19.8901C5.26543 19.9784 5.059 20.0084 4.85766 19.976C4.65631 19.9436 4.46968 19.8504 4.32278 19.709C4.17589 19.5675 4.07575 19.3845 4.0358 19.1846C3.99585 18.9846 4.018 18.7772 4.09927 18.5901L6.48927 13.2201C6.52021 13.1484 6.54692 13.075 6.56927 13.0001H13.4593C13.7245 13.0001 13.9788 12.8948 14.1664 12.7072C14.3539 12.5197 14.4593 12.2653 14.4593 12.0001C14.4593 11.7349 14.3539 11.4806 14.1664 11.293C13.9788 11.1055 13.7245 11.0001 13.4593 11.0001H6.56927C6.54692 10.9253 6.52021 10.8518 6.48927 10.7801L4.09927 5.41013C4.018 5.22309 3.99585 5.01568 4.0358 4.8157C4.07575 4.61572 4.17589 4.43273 4.32278 4.29128C4.46968 4.14982 4.65631 4.05666 4.85766 4.02428C5.059 3.9919 5.26543 4.02186 5.44927 4.11013L19.4493 11.1101C19.6131 11.194 19.7505 11.3215 19.8465 11.4786C19.9425 11.6356 19.9933 11.8161 19.9933 12.0001C19.9933 12.1842 19.9425 12.3647 19.8465 12.5217C19.7505 12.6787 19.6131 12.8062 19.4493 12.8901Z',
                fill: '#222823',
            }),
        }),
    cle = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M3 3H10V10H3V3Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M14 3H21V10H14V3Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M14 14H21V21H14V14Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M3 14H10V21H3V14Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    ule = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19 4.5H5C4.20435 4.5 3.44129 4.81607 2.87868 5.37868C2.31607 5.94129 2 6.70435 2 7.5V16.5C2 17.2956 2.31607 18.0587 2.87868 18.6213C3.44129 19.1839 4.20435 19.5 5 19.5H19C19.7956 19.5 20.5587 19.1839 21.1213 18.6213C21.6839 18.0587 22 17.2956 22 16.5V7.5C22 6.70435 21.6839 5.94129 21.1213 5.37868C20.5587 4.81607 19.7956 4.5 19 4.5ZM20 16.5C20 16.7652 19.8946 17.0196 19.7071 17.2071C19.5196 17.3946 19.2652 17.5 19 17.5H5C4.73478 17.5 4.48043 17.3946 4.29289 17.2071C4.10536 17.0196 4 16.7652 4 16.5V7.5C4 7.23478 4.10536 6.98043 4.29289 6.79289C4.48043 6.60536 4.73478 6.5 5 6.5H19C19.2652 6.5 19.5196 6.60536 19.7071 6.79289C19.8946 6.98043 20 7.23478 20 7.5V16.5ZM16 10.5C15.4683 10.5037 14.9472 10.6487 14.49 10.92C14.0345 10.6497 13.5156 10.5049 12.986 10.5001C12.4563 10.4954 11.9349 10.6309 11.4746 10.893C11.0144 11.1551 10.6317 11.5344 10.3655 11.9923C10.0993 12.4502 9.95912 12.9704 9.95912 13.5C9.95912 14.0296 10.0993 14.5498 10.3655 15.0077C10.6317 15.4656 11.0144 15.8449 11.4746 16.107C11.9349 16.3691 12.4563 16.5046 12.986 16.4999C13.5156 16.4951 14.0345 16.3503 14.49 16.08C14.8878 16.316 15.3348 16.4568 15.796 16.4915C16.2573 16.5261 16.7203 16.4537 17.1489 16.2797C17.5775 16.1058 17.96 15.8351 18.2667 15.4888C18.5734 15.1426 18.7958 14.7301 18.9166 14.2836C19.0374 13.8371 19.0534 13.3687 18.9632 12.915C18.873 12.4614 18.6792 12.0347 18.3968 11.6684C18.1144 11.302 17.7511 11.006 17.3353 10.8033C16.9195 10.6006 16.4625 10.4968 16 10.5ZM13.17 14.5C13.1134 14.5048 13.0566 14.5048 13 14.5C12.7348 14.5 12.4804 14.3946 12.2929 14.2071C12.1054 14.0196 12 13.7652 12 13.5C12 13.2348 12.1054 12.9804 12.2929 12.7929C12.4804 12.6054 12.7348 12.5 13 12.5C13.0566 12.4952 13.1134 12.4952 13.17 12.5C12.9437 13.12 12.9437 13.8 13.17 14.42V14.5ZM16 14.5C15.8022 14.5 15.6089 14.4414 15.4444 14.3315C15.28 14.2216 15.1518 14.0654 15.0761 13.8827C15.0004 13.7 14.9806 13.4989 15.0192 13.3049C15.0578 13.1109 15.153 12.9327 15.2929 12.7929C15.4327 12.653 15.6109 12.5578 15.8049 12.5192C15.9989 12.4806 16.2 12.5004 16.3827 12.5761C16.5654 12.6518 16.7216 12.78 16.8315 12.9444C16.9414 13.1089 17 13.3022 17 13.5C17 13.7652 16.8946 14.0196 16.7071 14.2071C16.5196 14.3946 16.2652 14.5 16 14.5Z',
                fill: '#222823',
            }),
        }),
    dle = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M7 16C7.39782 16 7.77936 15.842 8.06066 15.5607C8.34196 15.2794 8.5 14.8978 8.5 14.5C8.50488 14.4501 8.50488 14.3999 8.5 14.35L11.29 11.56H11.52H11.75L13.36 13.17C13.36 13.17 13.36 13.22 13.36 13.25C13.36 13.6478 13.518 14.0294 13.7993 14.3107C14.0806 14.592 14.4622 14.75 14.86 14.75C15.2578 14.75 15.6394 14.592 15.9207 14.3107C16.202 14.0294 16.36 13.6478 16.36 13.25V13.17L20 9.5C20.2967 9.5 20.5867 9.41203 20.8334 9.2472C21.08 9.08238 21.2723 8.84811 21.3858 8.57403C21.4993 8.29994 21.5291 7.99834 21.4712 7.70736C21.4133 7.41639 21.2704 7.14912 21.0607 6.93934C20.8509 6.72956 20.5836 6.5867 20.2926 6.52882C20.0017 6.47094 19.7001 6.50065 19.426 6.61418C19.1519 6.72771 18.9176 6.91997 18.7528 7.16664C18.588 7.41332 18.5 7.70333 18.5 8C18.4951 8.04988 18.4951 8.10012 18.5 8.15L14.89 11.76H14.73L13 10C13 9.60218 12.842 9.22064 12.5607 8.93934C12.2794 8.65804 11.8978 8.5 11.5 8.5C11.1022 8.5 10.7206 8.65804 10.4393 8.93934C10.158 9.22064 10 9.60218 10 10L7 13C6.60218 13 6.22064 13.158 5.93934 13.4393C5.65804 13.7206 5.5 14.1022 5.5 14.5C5.5 14.8978 5.65804 15.2794 5.93934 15.5607C6.22064 15.842 6.60218 16 7 16ZM20.5 20H3.5V3C3.5 2.73478 3.39464 2.48043 3.20711 2.29289C3.01957 2.10536 2.76522 2 2.5 2C2.23478 2 1.98043 2.10536 1.79289 2.29289C1.60536 2.48043 1.5 2.73478 1.5 3V21C1.5 21.2652 1.60536 21.5196 1.79289 21.7071C1.98043 21.8946 2.23478 22 2.5 22H20.5C20.7652 22 21.0196 21.8946 21.2071 21.7071C21.3946 21.5196 21.5 21.2652 21.5 21C21.5 20.7348 21.3946 20.4804 21.2071 20.2929C21.0196 20.1054 20.7652 20 20.5 20Z',
                fill: '#666869',
            }),
        }),
    fle = () =>
        d('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
                i('path', {
                    d: 'M17 21V19C17 16.7909 15.2091 15 13 15H5C2.79086 15 1 16.7909 1 19V21',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M9 11C11.2091 11 13 9.20914 13 7C13 4.79086 11.2091 3 9 3C6.79086 3 5 4.79086 5 7C5 9.20914 6.79086 11 9 11Z',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M23 20.9999V18.9999C22.9986 17.177 21.765 15.5856 20 15.1299',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
                i('path', {
                    d: 'M16 3.12988C17.7699 3.58305 19.0078 5.17787 19.0078 7.00488C19.0078 8.83189 17.7699 10.4267 16 10.8799',
                    'stroke-width': '2',
                    'stroke-linecap': 'round',
                    'stroke-linejoin': 'round',
                }),
            ],
        }),
    ple = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.63 3.64982C19.5138 3.55584 19.3781 3.48909 19.2327 3.45448C19.0873 3.41987 18.9361 3.41828 18.79 3.44982C17.7214 3.67376 16.6183 3.67662 15.5486 3.4582C14.4789 3.23979 13.4653 2.80473 12.57 2.17982C12.4026 2.06369 12.2037 2.00146 12 2.00146C11.7963 2.00146 11.5974 2.06369 11.43 2.17982C10.5348 2.80473 9.52108 3.23979 8.45137 3.4582C7.38166 3.67662 6.27857 3.67376 5.21001 3.44982C5.06394 3.41828 4.91267 3.41987 4.76731 3.45448C4.62194 3.48909 4.48618 3.55584 4.37001 3.64982C4.25399 3.74394 4.16053 3.86286 4.0965 3.99784C4.03247 4.13282 3.9995 4.28043 4.00001 4.42982V11.8798C3.99912 13.3136 4.34078 14.7268 4.99654 16.0018C5.6523 17.2768 6.60319 18.3767 7.77001 19.2098L11.42 21.8098C11.5894 21.9304 11.7921 21.9952 12 21.9952C12.2079 21.9952 12.4106 21.9304 12.58 21.8098L16.23 19.2098C17.3968 18.3767 18.3477 17.2768 19.0035 16.0018C19.6592 14.7268 20.0009 13.3136 20 11.8798V4.42982C20.0005 4.28043 19.9675 4.13282 19.9035 3.99784C19.8395 3.86286 19.746 3.74394 19.63 3.64982ZM18 11.8798C18.0008 12.9946 17.7353 14.0934 17.2257 15.0848C16.716 16.0763 15.977 16.9317 15.07 17.5798L12 19.7698L8.93001 17.5798C8.02304 16.9317 7.28399 16.0763 6.77435 15.0848C6.26472 14.0934 5.99924 12.9946 6.00001 11.8798V5.57982C8.09643 5.75925 10.196 5.27284 12 4.18982C13.804 5.27284 15.9036 5.75925 18 5.57982V11.8798ZM13.54 9.58982L10.85 12.2898L9.96001 11.3898C9.7717 11.2015 9.51631 11.0957 9.25001 11.0957C8.9837 11.0957 8.72831 11.2015 8.54001 11.3898C8.3517 11.5781 8.24591 11.8335 8.24591 12.0998C8.24591 12.3661 8.3517 12.6215 8.54001 12.8098L10.14 14.4098C10.233 14.5035 10.3436 14.5779 10.4654 14.6287C10.5873 14.6795 10.718 14.7056 10.85 14.7056C10.982 14.7056 11.1127 14.6795 11.2346 14.6287C11.3564 14.5779 11.467 14.5035 11.56 14.4098L15 10.9998C15.1883 10.8115 15.2941 10.5561 15.2941 10.2898C15.2941 10.0235 15.1883 9.76812 15 9.57982C14.8117 9.39152 14.5563 9.28573 14.29 9.28573C14.0237 9.28573 13.7683 9.39152 13.58 9.57982L13.54 9.58982Z',
            }),
        }),
    hle = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19.9009 12.6599C19.7406 12.4774 19.6521 12.2428 19.6521 11.9999C19.6521 11.757 19.7406 11.5224 19.9009 11.3399L21.1809 9.89989C21.3219 9.74256 21.4095 9.5446 21.4311 9.3344C21.4526 9.12421 21.407 8.91258 21.3009 8.72989L19.3009 5.2699C19.1958 5.08742 19.0358 4.94277 18.8436 4.85658C18.6515 4.77039 18.437 4.74705 18.2309 4.7899L16.3509 5.1699C16.1117 5.21932 15.8626 5.17948 15.6508 5.0579C15.4389 4.93631 15.2789 4.74138 15.2009 4.5099L14.5909 2.6799C14.5238 2.48127 14.396 2.30876 14.2255 2.18674C14.055 2.06471 13.8505 1.99935 13.6409 1.9999H9.64087C9.42281 1.98851 9.20701 2.04882 9.02644 2.17161C8.84587 2.2944 8.71045 2.47291 8.64087 2.6799L8.08087 4.5099C8.00287 4.74138 7.84284 4.93631 7.63099 5.0579C7.41913 5.17948 7.17009 5.21932 6.93087 5.1699L5.00087 4.7899C4.80542 4.76228 4.60617 4.79312 4.42822 4.87853C4.25027 4.96395 4.10157 5.10012 4.00087 5.2699L2.00087 8.72989C1.89203 8.91054 1.84309 9.12098 1.86106 9.33112C1.87902 9.54126 1.96296 9.74034 2.10087 9.89989L3.37087 11.3399C3.53119 11.5224 3.61961 11.757 3.61961 11.9999C3.61961 12.2428 3.53119 12.4774 3.37087 12.6599L2.10087 14.0999C1.96296 14.2595 1.87902 14.4585 1.86106 14.6687C1.84309 14.8788 1.89203 15.0892 2.00087 15.2699L4.00087 18.7299C4.10597 18.9124 4.26599 19.057 4.45812 19.1432C4.65026 19.2294 4.8647 19.2527 5.07087 19.2099L6.95087 18.8299C7.19009 18.7805 7.43913 18.8203 7.65099 18.9419C7.86284 19.0635 8.02287 19.2584 8.10087 19.4899L8.71087 21.3199C8.78045 21.5269 8.91587 21.7054 9.09644 21.8282C9.27701 21.951 9.49281 22.0113 9.71087 21.9999H13.7109C13.9205 22.0004 14.125 21.9351 14.2955 21.8131C14.466 21.691 14.5938 21.5185 14.6609 21.3199L15.2709 19.4899C15.3489 19.2584 15.5089 19.0635 15.7208 18.9419C15.9326 18.8203 16.1817 18.7805 16.4209 18.8299L18.3009 19.2099C18.507 19.2527 18.7215 19.2294 18.9136 19.1432C19.1058 19.057 19.2658 18.9124 19.3709 18.7299L21.3709 15.2699C21.477 15.0872 21.5226 14.8756 21.5011 14.6654C21.4795 14.4552 21.3919 14.2572 21.2509 14.0999L19.9009 12.6599ZM18.4109 13.9999L19.2109 14.8999L17.9309 17.1199L16.7509 16.8799C16.0307 16.7327 15.2814 16.855 14.6455 17.2237C14.0095 17.5924 13.531 18.1817 13.3009 18.8799L12.9209 19.9999H10.3609L10.0009 18.8599C9.77073 18.1617 9.29225 17.5724 8.65628 17.2037C8.0203 16.835 7.27109 16.7127 6.55087 16.8599L5.37087 17.0999L4.07087 14.8899L4.87087 13.9899C5.36283 13.4399 5.6348 12.7278 5.6348 11.9899C5.6348 11.252 5.36283 10.5399 4.87087 9.98989L4.07087 9.0899L5.35087 6.88989L6.53087 7.1299C7.25109 7.27712 8.0003 7.15478 8.63628 6.78609C9.27225 6.41741 9.75073 5.82805 9.98087 5.1299L10.3609 3.9999H12.9209L13.3009 5.13989C13.531 5.83805 14.0095 6.42741 14.6455 6.79609C15.2814 7.16478 16.0307 7.28712 16.7509 7.13989L17.9309 6.8999L19.2109 9.11989L18.4109 10.0199C17.9244 10.5687 17.6558 11.2766 17.6558 12.0099C17.6558 12.7432 17.9244 13.4511 18.4109 13.9999ZM11.6409 7.9999C10.8497 7.9999 10.0764 8.23449 9.41859 8.67402C8.76079 9.11354 8.24811 9.73826 7.94535 10.4692C7.6426 11.2001 7.56339 12.0043 7.71773 12.7803C7.87207 13.5562 8.25304 14.2689 8.81245 14.8283C9.37186 15.3877 10.0846 15.7687 10.8605 15.923C11.6364 16.0774 12.4407 15.9982 13.1716 15.6954C13.9025 15.3927 14.5272 14.88 14.9668 14.2222C15.4063 13.5644 15.6409 12.791 15.6409 11.9999C15.6409 10.939 15.2194 9.92161 14.4693 9.17147C13.7192 8.42132 12.7017 7.9999 11.6409 7.9999ZM11.6409 13.9999C11.2453 13.9999 10.8586 13.8826 10.5297 13.6628C10.2008 13.4431 9.94449 13.1307 9.79311 12.7653C9.64174 12.3998 9.60213 11.9977 9.6793 11.6097C9.75647 11.2218 9.94695 10.8654 10.2267 10.5857C10.5064 10.306 10.8627 10.1155 11.2507 10.0383C11.6387 9.96115 12.0408 10.0008 12.4062 10.1521C12.7717 10.3035 13.084 10.5599 13.3038 10.8888C13.5236 11.2177 13.6409 11.6043 13.6409 11.9999C13.6409 12.5303 13.4302 13.039 13.0551 13.4141C12.68 13.7892 12.1713 13.9999 11.6409 13.9999Z',
            }),
        }),
    Qw = () =>
        i('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: i('path', {
                d: 'M19 7H18V6C18 5.20435 17.6839 4.44129 17.1213 3.87868C16.5587 3.31607 15.7956 3 15 3H5C4.20435 3 3.44129 3.31607 2.87868 3.87868C2.31607 4.44129 2 5.20435 2 6V18C2 18.7956 2.31607 19.5587 2.87868 20.1213C3.44129 20.6839 4.20435 21 5 21H19C19.7956 21 20.5587 20.6839 21.1213 20.1213C21.6839 19.5587 22 18.7956 22 18V10C22 9.20435 21.6839 8.44129 21.1213 7.87868C20.5587 7.31607 19.7956 7 19 7ZM5 5H15C15.2652 5 15.5196 5.10536 15.7071 5.29289C15.8946 5.48043 16 5.73478 16 6V7H5C4.73478 7 4.48043 6.89464 4.29289 6.70711C4.10536 6.51957 4 6.26522 4 6C4 5.73478 4.10536 5.48043 4.29289 5.29289C4.48043 5.10536 4.73478 5 5 5ZM20 15H19C18.7348 15 18.4804 14.8946 18.2929 14.7071C18.1054 14.5196 18 14.2652 18 14C18 13.7348 18.1054 13.4804 18.2929 13.2929C18.4804 13.1054 18.7348 13 19 13H20V15ZM20 11H19C18.2044 11 17.4413 11.3161 16.8787 11.8787C16.3161 12.4413 16 13.2044 16 14C16 14.7956 16.3161 15.5587 16.8787 16.1213C17.4413 16.6839 18.2044 17 19 17H20V18C20 18.2652 19.8946 18.5196 19.7071 18.7071C19.5196 18.8946 19.2652 19 19 19H5C4.73478 19 4.48043 18.8946 4.29289 18.7071C4.10536 18.5196 4 18.2652 4 18V8.83C4.32127 8.94302 4.65943 9.00051 5 9H19C19.2652 9 19.5196 9.10536 19.7071 9.29289C19.8946 9.48043 20 9.73478 20 10V11Z',
            }),
        })
function mle() {
    return d('ul', {
        className: 'iconsBox',
        children: [
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager',
                    children: [i(cle, {}), i('span', { children: 'Overview' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/wallet',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(Qw, {}),
                        i('span', { children: 'Wallet' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/residents',
                    children: [
                        i(rle, {}),
                        i('span', { children: 'Residents' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/properties',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(ole, {}),
                        i('span', { children: 'Properties' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/household',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(lle, {}),
                        i('span', { children: 'Household' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/estate-staff',
                    children: [
                        i(fle, {}),
                        i('span', { children: 'Estate Staff' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/site-worker',
                    children: [
                        ' ',
                        i(tle, {}),
                        i('span', { children: 'Site Worker' }),
                        ' ',
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/security-guard',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(ple, {}),
                        i('span', { children: 'Security Guard' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/artisan',
                    className: 'fillIcon',
                    children: [
                        ' ',
                        i(ale, {}),
                        i('span', { children: 'Artisan' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/wallet',
                    className: 'fillIcon',
                    children: [i(Qw, {}), i('span', { children: 'Wallet' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/message',
                    children: [i(sle, {}), i('span', { children: 'Message' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/payments',
                    children: [i(ule, {}), i('span', { children: 'Payments' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/energy-token',
                    children: [
                        i(ile, {}),
                        i('span', { children: 'Energy Token' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/reports',
                    children: [i(dle, {}), i('span', { children: 'Reports' })],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/approvals',
                    children: [
                        i(nle, {}),
                        i('span', { children: 'Approvals' }),
                    ],
                }),
            }),
            i('li', {
                className: 'iconsBox__list',
                children: d(ye, {
                    to: '/estateManager/rules-and-regulations',
                    className: 'fillIcon',
                    children: [
                        i(hle, {}),
                        i('span', { children: 'Estate Rules and Regulations' }),
                    ],
                }),
            }),
        ],
    })
}
function gle() {
    const e = C.exports.useRef(null),
        [t, r] = C.exports.useState(!0)
    return i('div', {
        className: 'sidebar shadow overflow-scroll',
        ref: e,
        children: d('div', {
            className: `sidebar__container ${
                t ? 'items-start' : 'items-center justify-center'
            }`,
            children: [
                d('section', {
                    className: 'section-1',
                    children: [
                        i('div', {
                            className: 'section-1__box',
                            children: i('img', {
                                src: '/logo.svg',
                                alt: '',
                                width: 127,
                                height: 33,
                            }),
                        }),
                        i('span', {
                            onClick: () => {
                                e.current.classList.toggle('sidebarToggle'),
                                    r((l) => !l)
                            },
                            children: i(Hv, {}),
                        }),
                    ],
                }),
                i('section', { className: 'section-2', children: i(mle, {}) }),
            ],
        }),
    })
}
function vle() {
    return d('div', {
        className: 'dashboard',
        children: [
            i(gle, {}),
            d('div', {
                className: 'dashboard__container',
                children: [
                    i(Kv, {
                        fullName: 'Collins Igboanugwo',
                        role: 'Estate Manager',
                        imgUrl: '/img/me.jpeg',
                    }),
                    d('div', {
                        className: 'p-10 overflow-scroll max-h-[90vh]',
                        children: [i(Yv, {}), i(P0, {})],
                    }),
                ],
            }),
        ],
    })
}
const yl = ({
        iconUrl: e,
        title: t,
        number: r,
        bgColor: n,
        percent: a,
        arrow: l,
        bottomLeft: o,
        bottomRight: s,
        textColor: c = 'black',
    }) =>
        d('div', {
            className: ` rounded-2xl p-8 grid gap-6 h-[15rem] ${n}`,
            children: [
                d('div', {
                    className: 'flex gap-10 items-center',
                    children: [
                        i('img', { src: e, alt: '', className: 'w-[5rem]' }),
                        d('div', {
                            children: [
                                i('p', {
                                    className: 'font-Satoshi-Medium',
                                    children: t,
                                }),
                                i('p', {
                                    className: `text-[2.6rem] font-Satoshi-Medium ${c}`,
                                    children: r.toLocaleString(),
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: `${c} border-t flex items-center justify-around pt-4`,
                    children: [
                        i('p', { children: o }),
                        i('p', { children: s }),
                    ],
                }),
            ],
        }),
    yle = () =>
        d('div', {
            className:
                ' rounded-2xl p-8 flex justify-between gap-8 bg-[#73738b12] h-[15rem]',
            children: [
                d('div', {
                    children: [
                        i('img', {
                            src: '/icons/estateManager/walkRight.svg',
                            alt: '',
                        }),
                        i('p', { children: 'Check-In' }),
                        i('p', {
                            className: 'text-[#33F110]',
                            children: '25,000',
                        }),
                    ],
                }),
                d('div', {
                    children: [
                        i('img', {
                            src: '/icons/estateManager/walkLeft.svg',
                            alt: '',
                        }),
                        i('p', { children: 'Check-Out' }),
                        i('p', {
                            className: 'text-[#A36EE6]',
                            children: '25,000',
                        }),
                    ],
                }),
            ],
        }),
    ble = [
        { name: 'Resident Wallet', value: 10 },
        { name: 'Security Company Wallet', value: 10 },
        { name: 'Estate Wallet', value: 45 },
        { name: 'Commission Wallet', value: 17 },
    ],
    xle = ['#EA0B90', '#23C375', '#098DFF', '#404243'],
    wle = () =>
        i('div', {
            className: '',
            children: d('div', {
                className: 'grid gap-16',
                style: { gridTemplateColumns: '60% auto' },
                children: [
                    d('section', {
                        className: 'grid gap-8',
                        children: [
                            d('div', {
                                className:
                                    ' bg-white rounded-lg grid p-8 gap-10',
                                style: {
                                    gridTemplateColumns:
                                        'repeat(auto-fit, minmax(30rem, 1fr))',
                                },
                                children: [
                                    i(yl, {
                                        title: 'Total Residents',
                                        number: 18e3,
                                        iconUrl:
                                            '/icons/securityCompany/totalEstates.svg',
                                        bgColor: 'bg-[#EDFDEC]',
                                        textColor: 'text-[#1A8F56]',
                                        bottomLeft: 'Alpha 56%',
                                        bottomRight: 'Res. User 44%',
                                    }),
                                    i(yl, {
                                        title: 'Properties',
                                        number: 1532,
                                        iconUrl:
                                            '/icons/securityCompany/securityGuards.svg',
                                        bgColor: 'bg-[#F5F9FA]',
                                        textColor: 'text-[#00C2FF]',
                                        bottomLeft: 'Residential 56%',
                                        bottomRight: 'Business 44%',
                                    }),
                                    i(yl, {
                                        title: 'Security Guards',
                                        number: 1200,
                                        iconUrl:
                                            '/icons/securityCompany/AssignedSecurityGuards.svg',
                                        bgColor: 'bg-[#FCF3FA]',
                                        textColor: 'text-[#B6008E]',
                                        bottomLeft: '23 guards on duty',
                                    }),
                                    i(yle, {}),
                                ],
                            }),
                            i('img', { src: '/img/advertHero.png', alt: '' }),
                        ],
                    }),
                    d('section', {
                        className: 'grid justify-center',
                        children: [
                            i(Xt, {
                                amount: 20033350089e-2,
                                title: 'Estate Wallet',
                                isWalletScreen: !0,
                            }),
                            d('div', {
                                className: 'overviewChart',
                                children: [
                                    i('p', {
                                        className: 'overviewChart__heading',
                                        children: "Today's Inflow",
                                    }),
                                    d('div', {
                                        className: 'overviewChart__box',
                                        children: [
                                            i(Gv, {}),
                                            d('div', {
                                                className:
                                                    'overviewChart__label',
                                                children: [
                                                    d('p', {
                                                        className:
                                                            'overviewChart__label--percentage',
                                                        children: [
                                                            '45',
                                                            i('span', {
                                                                children: '%',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        className:
                                                            'overviewChart__label--title',
                                                        children:
                                                            'Estate Wallet',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    i('ul', {
                                        className: 'overviewChart__list',
                                        children: K.Children.toArray(
                                            ble.map((e, t) =>
                                                d('li', {
                                                    className:
                                                        'overviewChart__list--item',
                                                    children: [
                                                        i('span', {
                                                            style: {
                                                                background:
                                                                    xle[t],
                                                            },
                                                            children: '\xA0',
                                                        }),
                                                        i('p', {
                                                            children: e.name,
                                                        }),
                                                    ],
                                                })
                                            )
                                        ),
                                    }),
                                ],
                            }),
                        ],
                    }),
                ],
            }),
        })
function Nle({ handleClose: e }) {
    const [t, r] = C.exports.useState('first'),
        [n, a] = C.exports.useState(''),
        l = () => {
            r('third')
        },
        o = () => {
            e(), r('first')
        },
        s = d('div', {
            className: 'grid gap-12',
            onSubmit: () => r('second'),
            children: [
                d('div', {
                    className: 'w-full grid gap-4',
                    children: [
                        i('label', {
                            htmlFor: 'amount',
                            className: 'text-[1.4rem] font-semibold',
                            children: 'Amount',
                        }),
                        d('div', {
                            className: 'relative flex items-center',
                            children: [
                                i('img', {
                                    src: '/icons/Naira.svg',
                                    alt: '',
                                    className: 'absolute left-3',
                                }),
                                i('input', {
                                    type: 'number',
                                    required: !0,
                                    id: 'amount',
                                    value: n,
                                    onChange: (p) => a(p.target.value),
                                    className:
                                        'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                }),
                            ],
                        }),
                    ],
                }),
                d('div', {
                    className: 'w-full grid gap-4',
                    children: [
                        i('label', {
                            htmlFor: 'description',
                            className: 'text-[1.4rem] font-semibold',
                            children: 'Description',
                        }),
                        i('input', {
                            type: 'text',
                            required: !0,
                            id: 'description',
                            className:
                                'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                        }),
                    ],
                }),
                i('button', {
                    className:
                        'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                    onClick: () => r('second'),
                    children: 'Withdraw',
                }),
            ],
        }),
        c = d('div', {
            className:
                'grid justify-items-center max-w-[40rem] mx-auto gap-8 text-center',
            children: [
                i('img', { src: '/icons/admins/modalDeactivate.svg', alt: '' }),
                d('p', {
                    className: 'text-[1.6rem]',
                    children: [
                        'Are you sure you want to withdraw',
                        ' ',
                        d('span', {
                            className: 'font-Satoshi-Medium',
                            children: ['N', n],
                        }),
                        ' from the estate wallet',
                        ' ',
                    ],
                }),
                d('div', {
                    className: 'flex w-full justify-center gap-8',
                    children: [
                        i('button', {
                            className:
                                'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                            onClick: () => e(),
                            children: 'Cancel',
                        }),
                        i('button', {
                            className:
                                'bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                            onClick: l,
                            children: 'Proceed',
                        }),
                    ],
                }),
            ],
        }),
        u = d('div', {
            className: 'grid justify-items-center max-w-[40rem] mx-auto gap-8',
            children: [
                i('img', { src: '/icons/admins/modalSuccess.svg', alt: '' }),
                d('p', {
                    className: 'text-[1.6rem] text-center',
                    children: [
                        'Your request has been sent to SESA admin. The registered estate bank account will be credited within 1 working day',
                        ' ',
                    ],
                }),
                i('div', {
                    className: 'flex w-full justify-center gap-8',
                    children: i('button', {
                        className:
                            'btn bg-[#0556E5] text-white border-none rounded-lg w-[15rem]',
                        onClick: () => o(),
                        children: 'Continue',
                    }),
                }),
            ],
        })
    return i(me, {
        children: new Map([
            ['first', s],
            ['second', c],
            ['third', u],
        ]).get(t),
    })
}
const Sle = Array.from({ length: 10 }).map((e, t) => ({
    id: t,
    transactionType: 'Credit',
    transactionCategory: 'Fund Wallet',
    transactionId: 783239232,
    amount: 1e4,
    time: '12:00pm',
    date: '12-May-2023',
    balance: 1e5,
}))
function Cle() {
    const e = Me(),
        [t, r] = C.exports.useState([])
    C.exports.useEffect(() => {
        setTimeout(() => {
            r(Sle)
        }, 1e3)
    }, [])
    const n = [2, 4, 6, 8],
        a = 4,
        [l, o] = C.exports.useState({
            index: 0,
            currentPage: 1,
            itemsPerPage: a,
            totalPage: Math.ceil(t.length / a),
            slicedPages: null,
        }),
        s = (O) => {
            const T = parseInt(O.target.value),
                $ = []
            for (let I = 0; I < t.length; I += T) $.push(t.slice(I, I + T))
            o((I) => ({
                ...I,
                itemsPerPage: T,
                index: 0,
                currentPage: 1,
                slicedPages: $,
                totalPage: Math.ceil(t.length / T),
            }))
        }
    C.exports.useEffect(() => {
        const O = []
        for (let T = 0; T < t.length; T += l.itemsPerPage)
            O.push(t.slice(T, T + l.itemsPerPage))
        o((T) => ({
            ...T,
            slicedPages: O,
            totalPage: Math.ceil(t.length / l.itemsPerPage),
        }))
    }, [t])
    const c = () => {
            console.log(l.currentPage, l.totalPage),
                l.currentPage !== l.totalPage &&
                    o((O) => ({
                        ...O,
                        index: O.index + 1,
                        currentPage: O.currentPage + 1,
                    }))
        },
        u = () => {
            l.currentPage !== 1 &&
                o((O) => ({
                    ...O,
                    index: O.index - 1,
                    currentPage: O.currentPage - 1,
                }))
        },
        { currentPage: f, slicedPages: p, itemsPerPage: m } = l,
        v = (O, T) => {
            o(($) => ({ ...$, index: T, currentPage: T + 1 }))
        },
        b = (O) => {
            e(`/estateManager/wallet/transaction-details/:${O}`)
        },
        h = ['This Week', 'This Month', 'This Year'],
        [g, x] = C.exports.useState(!1),
        [w, y] = C.exports.useState('This Week'),
        [N, S] = C.exports.useState(!0),
        P = () => x(!g),
        E = (O) => {
            y(O), x(!1)
        },
        k = C.exports.useRef(null),
        M = () => {
            k.current && k.current.close()
        },
        A = (O) => {
            S(O === 'withdraw'), k.current && k.current.showModal()
        }
    return d(me, {
        children: [
            i('dialog', {
                className: 'dialog',
                ref: k,
                children: i('section', {
                    className: 'grid place-content-center w-full h-[100vh]',
                    children: d('div', {
                        className:
                            'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                        children: [
                            i(Vt, {
                                className:
                                    'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                onClick: () => M(),
                            }),
                            i('h3', {
                                className: 'text-[2rem] font-bold border-b ',
                                style: { fontFamily: 'Satoshi-Medium' },
                                children: N ? 'Withdrawal' : 'Fund Wallet',
                            }),
                            N
                                ? i(Nle, { handleClose: M })
                                : d('form', {
                                      className: 'grid gap-12',
                                      onSubmit: (O) => {
                                          O.preventDefault(), M()
                                      },
                                      children: [
                                          d('div', {
                                              className: 'w-full grid gap-4',
                                              children: [
                                                  i('label', {
                                                      htmlFor: 'amount',
                                                      className:
                                                          'text-[1.4rem] font-semibold',
                                                      children: 'Amount',
                                                  }),
                                                  d('div', {
                                                      className:
                                                          'relative flex items-center',
                                                      children: [
                                                          i('img', {
                                                              src: '/icons/Naira.svg',
                                                              alt: '',
                                                              className:
                                                                  'absolute left-3',
                                                          }),
                                                          i('input', {
                                                              type: 'number',
                                                              required: !0,
                                                              id: 'amount',
                                                              className:
                                                                  'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                          }),
                                                      ],
                                                  }),
                                              ],
                                          }),
                                          d('div', {
                                              className: 'w-full grid gap-4',
                                              children: [
                                                  i('label', {
                                                      htmlFor: 'description',
                                                      className:
                                                          'text-[1.4rem] font-semibold',
                                                      children: 'Card Number',
                                                  }),
                                                  i('input', {
                                                      type: 'number',
                                                      required: !0,
                                                      id: 'description',
                                                      className:
                                                          'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                  }),
                                              ],
                                          }),
                                          d('div', {
                                              className: 'w-full flex gap-4',
                                              children: [
                                                  d('div', {
                                                      className: 'w-full',
                                                      children: [
                                                          i('label', {
                                                              htmlFor:
                                                                  'description',
                                                              className:
                                                                  'text-[1.4rem] font-semibold',
                                                              children: 'CVV',
                                                          }),
                                                          i('input', {
                                                              type: 'number',
                                                              required: !0,
                                                              id: 'description',
                                                              className:
                                                                  'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] ',
                                                          }),
                                                      ],
                                                  }),
                                                  d('div', {
                                                      className: 'w-full',
                                                      children: [
                                                          i('label', {
                                                              htmlFor:
                                                                  'description',
                                                              className:
                                                                  'text-[1.4rem] font-semibold',
                                                              children:
                                                                  'Expiry Date',
                                                          }),
                                                          i('input', {
                                                              type: 'date',
                                                              required: !0,
                                                              min: new Date()
                                                                  .toISOString()
                                                                  .split(
                                                                      'T'
                                                                  )[0],
                                                              id: 'description',
                                                              className:
                                                                  'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem]',
                                                          }),
                                                      ],
                                                  }),
                                              ],
                                          }),
                                          i('button', {
                                              className:
                                                  'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem] my-10',
                                              children: 'Fund',
                                          }),
                                      ],
                                  }),
                        ],
                    }),
                }),
            }),
            i('div', {
                className: 'estateDetail',
                children: d('div', {
                    className: 'mt-8 grid gap-8',
                    children: [
                        d('section', {
                            className: ' text-[1.4rem] grid gap-8',
                            style: { gridTemplateColumns: '60% auto' },
                            children: [
                                d('div', {
                                    className:
                                        'border-l border-l-color-grey bg-white rounded-lg p-8 grid gap-10',
                                    children: [
                                        d('div', {
                                            className: 'flex justify-between',
                                            children: [
                                                i('p', {
                                                    className:
                                                        'text-[1.6rem] font-bold p-8',
                                                    children: 'Wallet Trend',
                                                }),
                                                d('div', {
                                                    className:
                                                        'relative grid gap-4',
                                                    children: [
                                                        d('div', {
                                                            className:
                                                                'relative flex items-center w-[12rem]',
                                                            children: [
                                                                i('p', {
                                                                    className:
                                                                        'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] cursor-pointer',
                                                                    onClick: P,
                                                                    children: w,
                                                                }),
                                                                g
                                                                    ? i(dt, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      })
                                                                    : i(le, {
                                                                          className:
                                                                              'absolute right-4',
                                                                      }),
                                                            ],
                                                        }),
                                                        g &&
                                                            i('div', {
                                                                className:
                                                                    'absolute top-[8rem]  left-0 border border-color-primary-light  bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                children: h.map(
                                                                    (O, T) =>
                                                                        i(
                                                                            'p',
                                                                            {
                                                                                className:
                                                                                    'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                onClick:
                                                                                    () =>
                                                                                        E(
                                                                                            O
                                                                                        ),
                                                                                children:
                                                                                    O,
                                                                            },
                                                                            T
                                                                        )
                                                                ),
                                                            }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i(go, {}),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'bg-white p-8 rounded-lg grid justify-center items-baseline',
                                    children: [
                                        i('div', {
                                            className: 'grid items-end',
                                            children: i(Xt, {
                                                amount: 20033350089e-2,
                                                title: 'Estate Wallet',
                                                isWalletScreen: !0,
                                            }),
                                        }),
                                        d('div', {
                                            className:
                                                'flex justify-center gap-4',
                                            children: [
                                                i('button', {
                                                    className:
                                                        'btn text-white bg-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () => A('request'),
                                                    children: 'Fund Wallet',
                                                }),
                                                i('button', {
                                                    className:
                                                        'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                    onClick: () =>
                                                        A('withdraw'),
                                                    children: 'Withdraw',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        i('section', {
                            className:
                                'bg-color-white rounded-lg border min-w-[112rem]',
                            children: d('div', {
                                className:
                                    'grid text-[1.6rem] border rounded-lg',
                                children: [
                                    d('div', {
                                        className:
                                            'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                        children: [
                                            d('p', {
                                                className: ' font-bold',
                                                children: [
                                                    'Transaction History ',
                                                    i('span', {
                                                        children: '(200)',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    i('img', {
                                                        src: '/icons/admins/search.svg',
                                                        alt: '',
                                                        className:
                                                            'absolute left-4 text-[4rem]',
                                                    }),
                                                    i('input', {
                                                        type: 'text',
                                                        placeholder:
                                                            'Search Parameters',
                                                        className:
                                                            'pl-16 w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                    }),
                                                ],
                                            }),
                                            d('div', {
                                                className:
                                                    'relative flex items-center',
                                                children: [
                                                    d('select', {
                                                        className:
                                                            ' cursor-pointer w-[25rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                        children: [
                                                            i('option', {
                                                                hidden: !0,
                                                                value: '',
                                                                children:
                                                                    'Sort By',
                                                            }),
                                                            i('option', {
                                                                value: 'date',
                                                                children:
                                                                    'date',
                                                            }),
                                                            i('option', {
                                                                value: 'alpha',
                                                                children:
                                                                    'Alpha',
                                                            }),
                                                        ],
                                                    }),
                                                    i(le, {
                                                        className:
                                                            'absolute right-4 text-[1.3rem]',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    d('div', {
                                        className: 'grid bg-white',
                                        children: [
                                            d('div', {
                                                className:
                                                    'grid justify-between text-color-dark-1 bg-color-grey p-8 grid-cols-9 gap-8 text-[1.4rem] items-center',
                                                children: [
                                                    d('p', {
                                                        className:
                                                            'flex items-center gap-4',
                                                        children: [
                                                            i('input', {
                                                                type: 'checkbox',
                                                                className:
                                                                    'cursor-pointer',
                                                            }),
                                                            i('span', {
                                                                children:
                                                                    ' Date',
                                                            }),
                                                        ],
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Type',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction Category',
                                                    }),
                                                    i('p', {
                                                        children:
                                                            'Transaction ID',
                                                    }),
                                                    i('p', {
                                                        children: 'Narration',
                                                    }),
                                                    i('p', {
                                                        children: 'Amount',
                                                    }),
                                                    i('p', {
                                                        children: 'Time',
                                                    }),
                                                    i('p', {
                                                        children: 'Balance',
                                                    }),
                                                    i('p', {
                                                        children: 'Actions',
                                                    }),
                                                ],
                                            }),
                                            i('div', {
                                                className:
                                                    'grid gap-8 mt-8 p-8',
                                                children:
                                                    p && p.length > 0
                                                        ? K.Children.toArray(
                                                              p[l.index].map(
                                                                  ({
                                                                      id: O,
                                                                      date: T,
                                                                      transactionType:
                                                                          $,
                                                                      transactionCategory:
                                                                          I,
                                                                      transactionId:
                                                                          j,
                                                                      amount: L,
                                                                      time: D,
                                                                      balance:
                                                                          R,
                                                                  }) =>
                                                                      d('div', {
                                                                          className:
                                                                              'grid justify-between border-b grid-cols-9 items-center gap-8 py-4',
                                                                          children:
                                                                              [
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-4',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'input',
                                                                                                      {
                                                                                                          type: 'checkbox',
                                                                                                          className:
                                                                                                              'cursor-pointer',
                                                                                                      }
                                                                                                  ),
                                                                                                  d(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              [
                                                                                                                  ' ',
                                                                                                                  T,
                                                                                                              ],
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              $,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              I,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              j,
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-.5',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'img',
                                                                                                      {
                                                                                                          src: '/icons/Naira.svg',
                                                                                                          alt: '',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              L.toLocaleString(),
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              D,
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-.5',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'img',
                                                                                                      {
                                                                                                          src: '/icons/Naira.svg',
                                                                                                          alt: '',
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              R.toLocaleString(),
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'button',
                                                                                      {
                                                                                          className:
                                                                                              'text-color-primary text-left',
                                                                                          onClick:
                                                                                              () =>
                                                                                                  b(
                                                                                                      O
                                                                                                  ),
                                                                                          children:
                                                                                              'View Details',
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      })
                                                              )
                                                          )
                                                        : i('div', {
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'relative',
                                                                      children:
                                                                          i(
                                                                              'div',
                                                                              {
                                                                                  className:
                                                                                      'absolute w-full grid place-content-center',
                                                                                  children:
                                                                                      i(
                                                                                          Ne,
                                                                                          {
                                                                                              className:
                                                                                                  'animate-spin text-[#0660FE] text-4xl',
                                                                                          }
                                                                                      ),
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                            }),
                                        ],
                                    }),
                                    d('footer', {
                                        className:
                                            'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                        children: [
                                            d('div', {
                                                className:
                                                    'flex gap-8 items-center',
                                                children: [
                                                    i('p', {
                                                        children: 'View',
                                                    }),
                                                    i('select', {
                                                        name: '',
                                                        id: '',
                                                        className:
                                                            'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                        onChange: s,
                                                        children: n.map(
                                                            (O, T) =>
                                                                i(
                                                                    'option',
                                                                    {
                                                                        value: O,
                                                                        selected:
                                                                            O ===
                                                                            m,
                                                                        className:
                                                                            'capitalize cursor-pointer bg-white',
                                                                        children:
                                                                            O,
                                                                    },
                                                                    T
                                                                )
                                                        ),
                                                    }),
                                                    i('p', {
                                                        className: 'text',
                                                        children:
                                                            'List per page',
                                                    }),
                                                ],
                                            }),
                                            d('ul', {
                                                className:
                                                    'flex items-center gap-5 ml-10',
                                                children: [
                                                    i(Ae, {
                                                        onClick: u,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                    p == null
                                                        ? void 0
                                                        : p.map((O, T) =>
                                                              i(
                                                                  'li',
                                                                  {
                                                                      children:
                                                                          T +
                                                                              1 ===
                                                                          f
                                                                              ? i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                        children:
                                                                                            T +
                                                                                            1,
                                                                                    }
                                                                                )
                                                                              : i(
                                                                                    'span',
                                                                                    {
                                                                                        className:
                                                                                            'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                        onClick:
                                                                                            (
                                                                                                $
                                                                                            ) =>
                                                                                                v(
                                                                                                    $,
                                                                                                    T
                                                                                                ),
                                                                                        children:
                                                                                            T +
                                                                                            1,
                                                                                    }
                                                                                ),
                                                                  },
                                                                  T
                                                              )
                                                          ),
                                                    i(Ee, {
                                                        onClick: c,
                                                        className:
                                                            'cursor-pointer',
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        }),
                    ],
                }),
            }),
        ],
    })
}
const Ple = () =>
        i('div', {
            className: ' p-8 bg-white h-[80vh] rounded-lg overflow-y-scroll',
            children: d('section', {
                className: 'grid max-w-[65vw] gap-16',
                style: {
                    gridTemplateColumns: 'repeat(auto-fit, minmax(40rem, 1fr))',
                },
                children: [
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'commissionName',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'commissionName',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '02-May-2022',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'withdrawalTime',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Time',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'withdrawalTime',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: '3:00pm',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'status',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Type',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'status',
                                className:
                                    'border border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-green-500 disabled:cursor-not-allowed',
                                value: 'Credit',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Category',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Source',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase',
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction ID',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 1004238232,
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Transaction Amount',
                            }),
                            d('div', {
                                className: 'relative flex items-center',
                                children: [
                                    i('img', {
                                        src: '/icons/Naira.svg',
                                        alt: '',
                                        className: 'absolute left-3',
                                    }),
                                    i('input', {
                                        disabled: !0,
                                        type: 'text',
                                        required: !0,
                                        id: 'description',
                                        className:
                                            'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                        value: 6e3,
                                    }),
                                ],
                            }),
                        ],
                    }),
                    d('div', {
                        className: 'w-full grid gap-4',
                        children: [
                            i('label', {
                                htmlFor: 'description',
                                className: 'text-[1.4rem] font-semibold',
                                children: 'Narration',
                            }),
                            i('input', {
                                disabled: !0,
                                type: 'text',
                                required: !0,
                                id: 'description',
                                className:
                                    'border pl-8 border-color-grey p-4 outline-none rounded-lg w-full text-[1.6rem] disabled:text-gray-500 disabled:cursor-not-allowed',
                                value: 'Product Purchase for 6000',
                            }),
                        ],
                    }),
                ],
            }),
        }),
    _le = Array.from({ length: 20 }).map((e, t) => ({
        id: t,
        guardName: 'John Doe',
        phoneNumber: '+2347024954270',
        guardCode: Math.floor(Math.random() * 3e3 + 1e3),
        assignedEstate: 'Estate 1',
        status: Math.random() > 0.5 ? 'Active' : 'Deactivated',
        kys: Math.random() > 0.5 ? 'Validated' : 'Not Validated',
    })),
    Ale = () => {
        Me()
        const [e, t] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                t(_le)
            }, 500)
        }, [])
        const r = [2, 4, 6, 8],
            n = 4,
            [a, l] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: n,
                totalPage: Math.ceil(e.length / n),
                slicedPages: null,
            }),
            o = (h) => {
                const g = parseInt(h.target.value),
                    x = []
                for (let w = 0; w < e.length; w += g) x.push(e.slice(w, w + g))
                l((w) => ({
                    ...w,
                    itemsPerPage: g,
                    index: 0,
                    currentPage: 1,
                    slicedPages: x,
                    totalPage: Math.ceil(e.length / g),
                }))
            }
        C.exports.useEffect(() => {
            const h = []
            for (let g = 0; g < e.length; g += a.itemsPerPage)
                h.push(e.slice(g, g + a.itemsPerPage))
            l((g) => ({
                ...g,
                slicedPages: h,
                totalPage: Math.ceil(e.length / a.itemsPerPage),
            }))
        }, [e])
        const s = () => {
                console.log(a.currentPage, a.totalPage),
                    a.currentPage !== a.totalPage &&
                        l((h) => ({
                            ...h,
                            index: h.index + 1,
                            currentPage: h.currentPage + 1,
                        }))
            },
            c = () => {
                a.currentPage !== 1 &&
                    l((h) => ({
                        ...h,
                        index: h.index - 1,
                        currentPage: h.currentPage - 1,
                    }))
            },
            { currentPage: u, slicedPages: f, itemsPerPage: p } = a,
            m = (h, g) => {
                l((x) => ({ ...x, index: g, currentPage: g + 1 }))
            },
            v = () => {
                console.log('add security guard')
            },
            b = (h) => {
                console.log(h)
            }
        return i('div', {
            children: i('main', {
                className: 'mt-10 grid gap-9',
                children: d('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children: [
                        d('div', {
                            className: 'grid text-[1.6rem]',
                            children: [
                                d('caption', {
                                    className:
                                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                    children: [
                                        d('p', {
                                            className: ' font-bold',
                                            children: [
                                                'Resident Profile ',
                                                i('span', { children: '(4)' }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/search.svg',
                                                    alt: '',
                                                    className:
                                                        'absolute left-4 text-[4rem]',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder:
                                                        'Search Parameters',
                                                    className:
                                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                d('select', {
                                                    className:
                                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                                    children: [
                                                        i('option', {
                                                            hidden: !0,
                                                            value: '',
                                                            children: 'Sort By',
                                                        }),
                                                        i('option', {
                                                            value: 'date',
                                                            children: 'date',
                                                        }),
                                                        i('option', {
                                                            value: 'alpha',
                                                            children: 'Alpha',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {
                                                    className:
                                                        'absolute right-4 text-[1.3rem]',
                                                }),
                                            ],
                                        }),
                                        i('div', {
                                            className: 'ml-auto',
                                            children: d('button', {
                                                className:
                                                    'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                                onClick: v,
                                                children: [
                                                    i('span', {
                                                        children: i($e, {}),
                                                    }),
                                                    ' ',
                                                    'Add Resident',
                                                ],
                                            }),
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid',
                                    children: [
                                        d('div', {
                                            className:
                                                'grid justify-between text-color-dark-1 bg-gray-100 p-8 grid-cols-7 gap-8',
                                            style: { fontSize: '1.6rem' },
                                            children: [
                                                d('p', {
                                                    className:
                                                        'flex items-center gap-2',
                                                    children: [
                                                        i('input', {
                                                            type: 'checkbox',
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Guard Code',
                                                        }),
                                                    ],
                                                }),
                                                i('p', {
                                                    children: 'Guard Name',
                                                }),
                                                i('p', {
                                                    children: 'Phone Number',
                                                }),
                                                i('p', {
                                                    children: 'Assigned Estate',
                                                }),
                                                i('p', { children: 'Status' }),
                                                i('p', { children: 'KYG' }),
                                                i('p', { children: 'Action ' }),
                                            ],
                                        }),
                                        i('div', {
                                            className: 'grid gap-8 mt-8 p-8',
                                            children:
                                                f && f.length > 0
                                                    ? K.Children.toArray(
                                                          f[a.index].map(
                                                              ({
                                                                  guardCode: h,
                                                                  guardName: g,
                                                                  assignedEstate:
                                                                      x,
                                                                  kys: w,
                                                                  status: y,
                                                                  id: N,
                                                                  phoneNumber:
                                                                      S,
                                                              }) =>
                                                                  d('div', {
                                                                      className:
                                                                          'grid justify-between border-b grid-cols-7 gap-8 py-4',
                                                                      children:
                                                                          [
                                                                              d(
                                                                                  'p',
                                                                                  {
                                                                                      className:
                                                                                          'flex items-center gap-4',
                                                                                      children:
                                                                                          [
                                                                                              i(
                                                                                                  'input',
                                                                                                  {
                                                                                                      type: 'checkbox',
                                                                                                      className:
                                                                                                          'cursor-pointer',
                                                                                                  }
                                                                                              ),
                                                                                              i(
                                                                                                  'span',
                                                                                                  {
                                                                                                      children:
                                                                                                          h,
                                                                                                  }
                                                                                              ),
                                                                                          ],
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          g,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          S,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          x,
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          y ===
                                                                                          'Active'
                                                                                              ? i(
                                                                                                    'span',
                                                                                                    {
                                                                                                        className:
                                                                                                            'text-[#1A8F56]',
                                                                                                        children:
                                                                                                            y,
                                                                                                    }
                                                                                                )
                                                                                              : i(
                                                                                                    'span',
                                                                                                    {
                                                                                                        className:
                                                                                                            'text-red-600',
                                                                                                        children:
                                                                                                            y,
                                                                                                    }
                                                                                                ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'p',
                                                                                  {
                                                                                      children:
                                                                                          w ===
                                                                                          'Validated'
                                                                                              ? i(
                                                                                                    'span',
                                                                                                    {
                                                                                                        className:
                                                                                                            'text-[#1A8F56]',
                                                                                                        children:
                                                                                                            w,
                                                                                                    }
                                                                                                )
                                                                                              : i(
                                                                                                    'span',
                                                                                                    {
                                                                                                        className:
                                                                                                            'text-red-600',
                                                                                                        children:
                                                                                                            w,
                                                                                                    }
                                                                                                ),
                                                                                  }
                                                                              ),
                                                                              i(
                                                                                  'button',
                                                                                  {
                                                                                      className:
                                                                                          'text-color-primary text-left',
                                                                                      onClick:
                                                                                          () =>
                                                                                              b(
                                                                                                  N
                                                                                              ),
                                                                                      children:
                                                                                          'View Details',
                                                                                  }
                                                                              ),
                                                                          ],
                                                                  })
                                                          )
                                                      )
                                                    : i('div', {
                                                          children: i('div', {
                                                              className:
                                                                  'relative',
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'absolute w-full grid place-content-center',
                                                                      children:
                                                                          i(
                                                                              Ne,
                                                                              {
                                                                                  className:
                                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                                      }),
                                        }),
                                    ],
                                }),
                                d('footer', {
                                    className:
                                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex gap-8 items-center',
                                            children: [
                                                i('p', { children: 'View' }),
                                                i('select', {
                                                    name: '',
                                                    id: '',
                                                    className:
                                                        'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                    onChange: o,
                                                    children: r.map((h, g) =>
                                                        i(
                                                            'option',
                                                            {
                                                                value: h,
                                                                selected:
                                                                    h === p,
                                                                className:
                                                                    'capitalize cursor-pointer bg-white',
                                                                children: h,
                                                            },
                                                            g
                                                        )
                                                    ),
                                                }),
                                                i('p', {
                                                    className: 'text',
                                                    children: 'List per page',
                                                }),
                                            ],
                                        }),
                                        d('ul', {
                                            className:
                                                'flex items-center gap-5 ml-10',
                                            children: [
                                                i(Ae, {
                                                    onClick: c,
                                                    className: 'cursor-pointer',
                                                }),
                                                f == null
                                                    ? void 0
                                                    : f.map((h, g) =>
                                                          i(
                                                              'li',
                                                              {
                                                                  children:
                                                                      g + 1 ===
                                                                      u
                                                                          ? i(
                                                                                'span',
                                                                                {
                                                                                    className:
                                                                                        'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                    children:
                                                                                        g +
                                                                                        1,
                                                                                }
                                                                            )
                                                                          : i(
                                                                                'span',
                                                                                {
                                                                                    className:
                                                                                        'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                    onClick:
                                                                                        (
                                                                                            x
                                                                                        ) =>
                                                                                            m(
                                                                                                x,
                                                                                                g
                                                                                            ),
                                                                                    children:
                                                                                        g +
                                                                                        1,
                                                                                }
                                                                            ),
                                                              },
                                                              g
                                                          )
                                                      ),
                                                i(Ee, {
                                                    onClick: s,
                                                    className: 'cursor-pointer',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        ' ',
                    ],
                }),
            }),
        })
    },
    Ele = Array.from({ length: 20 }).map((e, t) => ({
        id: t + 1,
        residentCode: (Math.random() * 0.1 + 0.9).toFixed(7).split('.')[1],
        name: `Resident ${t + 1}`,
        gender: Math.random() > 0.5 ? 'Male' : 'Female',
        phoneNumber: `+234 801234567${t}`,
        NoOfProfiles: Math.floor(Math.random() * 5 + 1),
        status: 'Active',
        kyr: 'Validated',
    })),
    kle = () => {
        const e = Me(),
            [t, r] = C.exports.useState(new Map()),
            [n, a] = C.exports.useState([])
        C.exports.useEffect(() => {
            setTimeout(() => {
                a(Ele)
            }, 500)
        }, [])
        const l = [2, 4, 6, 8],
            o = 4,
            [s, c] = C.exports.useState({
                index: 0,
                currentPage: 1,
                itemsPerPage: o,
                totalPage: Math.ceil(n.length / o),
                slicedPages: null,
            }),
            u = (_) => {
                const O = parseInt(_.target.value),
                    T = []
                for (let $ = 0; $ < n.length; $ += O) T.push(n.slice($, $ + O))
                c(($) => ({
                    ...$,
                    itemsPerPage: O,
                    index: 0,
                    currentPage: 1,
                    slicedPages: T,
                    totalPage: Math.ceil(n.length / O),
                }))
            }
        C.exports.useEffect(() => {
            const _ = []
            for (let O = 0; O < n.length; O += s.itemsPerPage)
                _.push(n.slice(O, O + s.itemsPerPage))
            c((O) => ({
                ...O,
                slicedPages: _,
                totalPage: Math.ceil(n.length / s.itemsPerPage),
            }))
        }, [n])
        const f = () => {
                console.log(s.currentPage, s.totalPage),
                    s.currentPage !== s.totalPage &&
                        c((_) => ({
                            ..._,
                            index: _.index + 1,
                            currentPage: _.currentPage + 1,
                        }))
            },
            p = () => {
                s.currentPage !== 1 &&
                    c((_) => ({
                        ..._,
                        index: _.index - 1,
                        currentPage: _.currentPage - 1,
                    }))
            },
            { currentPage: m, slicedPages: v, itemsPerPage: b } = s,
            h = (_, O) => {
                c((T) => ({ ...T, index: O, currentPage: O + 1 }))
            },
            g = () => {
                console.log('add security guard'),
                    e('/estateManager/residents/add')
            },
            [x, w] = C.exports.useState([
                'View Details',
                'Edit Details',
                'Delete',
            ]),
            [y, N] = C.exports.useState(null),
            [S, P] = C.exports.useState({ isDropDownOpen: !1, index: null }),
            E = (_, O) => {
                P((T) => ({ isDropDownOpen: _.target.checked, index: O }))
            },
            k = (_, O) => {
                if (_.target.checked) {
                    const T = new Map(t)
                    T.set(_.target.name, O), r(T)
                } else {
                    const T = new Map(t)
                    T.delete(_.target.name), r(T)
                }
            },
            M = () => {
                console.log(t)
            },
            A = (_, O, T) => {
                N(($) => ({ ...$, [T]: O }))
            }
        return i('div', {
            children: i('main', {
                className: 'mt-10 grid gap-9',
                children: d('section', {
                    className:
                        'bg-color-white rounded-lg border min-w-[112rem] overflow-scroll',
                    children: [
                        d('div', {
                            className: 'grid text-[1.6rem]',
                            children: [
                                d('caption', {
                                    className:
                                        'flex w-full justify-start items-center gap-12 p-10 bg-white rounded-lg',
                                    children: [
                                        d('p', {
                                            className: ' font-bold',
                                            children: [
                                                'Unique Resident ',
                                                i('span', { children: '(4)' }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/search.svg',
                                                    alt: '',
                                                    className:
                                                        'absolute left-4 text-[4rem]',
                                                }),
                                                i('input', {
                                                    type: 'text',
                                                    placeholder:
                                                        'Search Parameters',
                                                    className:
                                                        'pl-16 w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4',
                                                }),
                                            ],
                                        }),
                                        d('div', {
                                            className:
                                                'relative flex items-center',
                                            children: [
                                                d('select', {
                                                    className:
                                                        ' cursor-pointer w-[18rem] rounded-lg border border-color-blue-light appearance-none outline-none p-4 bg-white',
                                                    children: [
                                                        i('option', {
                                                            hidden: !0,
                                                            value: '',
                                                            children: 'Sort By',
                                                        }),
                                                        i('option', {
                                                            value: 'date',
                                                            children: 'date',
                                                        }),
                                                        i('option', {
                                                            value: 'alpha',
                                                            children: 'Alpha',
                                                        }),
                                                    ],
                                                }),
                                                i(le, {
                                                    className:
                                                        'absolute right-4 text-[1.3rem]',
                                                }),
                                            ],
                                        }),
                                        i('div', {
                                            className: 'ml-auto',
                                            children:
                                                t.size > 0
                                                    ? i('button', {
                                                          className:
                                                              'btn text-white bg-red-600 flex items-center gap-4 py-4 px-16 rounded-lg',
                                                          onClick: M,
                                                          children:
                                                              'Deactivate',
                                                      })
                                                    : d('button', {
                                                          className:
                                                              'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                                          onClick: g,
                                                          children: [
                                                              i('span', {
                                                                  children: i(
                                                                      $e,
                                                                      {}
                                                                  ),
                                                              }),
                                                              ' ',
                                                              'Add Resident',
                                                          ],
                                                      }),
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid',
                                    children: [
                                        d('div', {
                                            className:
                                                'grid items-center justify-between text-color-dark-1 bg-gray-100 p-8 grid-cols-8 gap-8',
                                            style: { fontSize: '1.6rem' },
                                            children: [
                                                d('p', {
                                                    className:
                                                        'flex items-center gap-2',
                                                    children: [
                                                        i('input', {
                                                            type: 'checkbox',
                                                            className:
                                                                'cursor-pointer',
                                                        }),
                                                        i('p', {
                                                            children:
                                                                'Resident Code',
                                                        }),
                                                    ],
                                                }),
                                                i('p', { children: ' Name' }),
                                                i('p', { children: 'Gender' }),
                                                i('p', {
                                                    children: 'Phone Number',
                                                }),
                                                i('p', {
                                                    children: 'No of Profiles',
                                                }),
                                                i('p', { children: 'Status' }),
                                                i('p', { children: 'KYR' }),
                                                i('p', { children: 'Action ' }),
                                            ],
                                        }),
                                        i('div', {
                                            className: 'grid gap-8 mt-8 p-8',
                                            children:
                                                v && v.length > 0
                                                    ? K.Children.toArray(
                                                          v[s.index].map(
                                                              ({
                                                                  residentCode:
                                                                      _,
                                                                  name: O,
                                                                  id: T,
                                                                  gender: $,
                                                                  phoneNumber:
                                                                      I,
                                                                  status: j,
                                                                  kyr: L,
                                                                  NoOfProfiles:
                                                                      D,
                                                              }) => {
                                                                  const {
                                                                      isDropDownOpen:
                                                                          R,
                                                                      index: V,
                                                                  } = S
                                                                  return d(
                                                                      'div',
                                                                      {
                                                                          className:
                                                                              'grid justify-between border-b grid-cols-8 gap-8 py-4 items-center',
                                                                          children:
                                                                              [
                                                                                  d(
                                                                                      'p',
                                                                                      {
                                                                                          className:
                                                                                              'flex items-center gap-4',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'input',
                                                                                                      {
                                                                                                          type: 'checkbox',
                                                                                                          className:
                                                                                                              'cursor-pointer',
                                                                                                          name: `checkbox-${T}`,
                                                                                                          onChange:
                                                                                                              (
                                                                                                                  G
                                                                                                              ) =>
                                                                                                                  k(
                                                                                                                      G,
                                                                                                                      T
                                                                                                                  ),
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'span',
                                                                                                      {
                                                                                                          children:
                                                                                                              _,
                                                                                                      }
                                                                                                  ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              O,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              $,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              I,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              D,
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              j ===
                                                                                              'Active'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-[#1A8F56]',
                                                                                                            children:
                                                                                                                j,
                                                                                                        }
                                                                                                    )
                                                                                                  : i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-red-600',
                                                                                                            children:
                                                                                                                j,
                                                                                                        }
                                                                                                    ),
                                                                                      }
                                                                                  ),
                                                                                  i(
                                                                                      'p',
                                                                                      {
                                                                                          children:
                                                                                              L ===
                                                                                              'Validated'
                                                                                                  ? i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-[#1A8F56]',
                                                                                                            children:
                                                                                                                L,
                                                                                                        }
                                                                                                    )
                                                                                                  : i(
                                                                                                        'span',
                                                                                                        {
                                                                                                            className:
                                                                                                                'text-red-600',
                                                                                                            children:
                                                                                                                L,
                                                                                                        }
                                                                                                    ),
                                                                                      }
                                                                                  ),
                                                                                  d(
                                                                                      'div',
                                                                                      {
                                                                                          className:
                                                                                              'relative',
                                                                                          children:
                                                                                              [
                                                                                                  i(
                                                                                                      'label',
                                                                                                      {
                                                                                                          className:
                                                                                                              'font-semibold capitalize cursor-pointer flex items-center gap-2 relative z-10',
                                                                                                          htmlFor:
                                                                                                              T.toString(),
                                                                                                          onClick:
                                                                                                              () =>
                                                                                                                  P(
                                                                                                                      (
                                                                                                                          G
                                                                                                                      ) => ({
                                                                                                                          isDropDownOpen:
                                                                                                                              !G.isDropDownOpen,
                                                                                                                          index: T,
                                                                                                                      })
                                                                                                                  ),
                                                                                                          children:
                                                                                                              i(
                                                                                                                  'span',
                                                                                                                  {
                                                                                                                      className:
                                                                                                                          'text-color-primary',
                                                                                                                      children:
                                                                                                                          i(
                                                                                                                              'img',
                                                                                                                              {
                                                                                                                                  src: '/icons/admins/threeDots.svg',
                                                                                                                                  alt: '',
                                                                                                                              }
                                                                                                                          ),
                                                                                                                  }
                                                                                                              ),
                                                                                                      }
                                                                                                  ),
                                                                                                  i(
                                                                                                      'input',
                                                                                                      {
                                                                                                          type: 'radio',
                                                                                                          name: 'dropdown',
                                                                                                          className:
                                                                                                              'hidden',
                                                                                                          id: T.toString(),
                                                                                                          onChange:
                                                                                                              (
                                                                                                                  G
                                                                                                              ) =>
                                                                                                                  E(
                                                                                                                      G,
                                                                                                                      T
                                                                                                                  ),
                                                                                                      }
                                                                                                  ),
                                                                                                  R &&
                                                                                                      V ===
                                                                                                          T &&
                                                                                                      i(
                                                                                                          'div',
                                                                                                          {
                                                                                                              className:
                                                                                                                  'absolute top-0 translate-x-[5rem] border border-color-primary-light w-[10rem] bg-color-white rounded-lg grid gap-2 shadow z-20 capitalize',
                                                                                                              children:
                                                                                                                  x.map(
                                                                                                                      (
                                                                                                                          G,
                                                                                                                          ee
                                                                                                                      ) =>
                                                                                                                          i(
                                                                                                                              'p',
                                                                                                                              {
                                                                                                                                  className:
                                                                                                                                      'text-[1.4rem] hover:bg-color-grey border-b p-4 cursor-pointer',
                                                                                                                                  onClick:
                                                                                                                                      (
                                                                                                                                          Q
                                                                                                                                      ) =>
                                                                                                                                          A(
                                                                                                                                              Q,
                                                                                                                                              G,
                                                                                                                                              T
                                                                                                                                          ),
                                                                                                                                  children:
                                                                                                                                      G ===
                                                                                                                                      'Delete'
                                                                                                                                          ? i(
                                                                                                                                                'span',
                                                                                                                                                {
                                                                                                                                                    className:
                                                                                                                                                        'text-red-600',
                                                                                                                                                    children:
                                                                                                                                                        G,
                                                                                                                                                }
                                                                                                                                            )
                                                                                                                                          : G,
                                                                                                                              },
                                                                                                                              ee +
                                                                                                                                  T
                                                                                                                          )
                                                                                                                  ),
                                                                                                          }
                                                                                                      ),
                                                                                              ],
                                                                                      }
                                                                                  ),
                                                                              ],
                                                                      }
                                                                  )
                                                              }
                                                          )
                                                      )
                                                    : i('div', {
                                                          children: i('div', {
                                                              className:
                                                                  'relative',
                                                              children: i(
                                                                  'div',
                                                                  {
                                                                      className:
                                                                          'absolute w-full grid place-content-center',
                                                                      children:
                                                                          i(
                                                                              Ne,
                                                                              {
                                                                                  className:
                                                                                      'animate-spin text-[#0660FE] text-4xl',
                                                                              }
                                                                          ),
                                                                  }
                                                              ),
                                                          }),
                                                      }),
                                        }),
                                    ],
                                }),
                                d('footer', {
                                    className:
                                        'flex items-center p-4 mt-4 bg-color-white rounded-lg',
                                    children: [
                                        d('div', {
                                            className:
                                                'flex gap-8 items-center',
                                            children: [
                                                i('p', { children: 'View' }),
                                                i('select', {
                                                    name: '',
                                                    id: '',
                                                    className:
                                                        'flex items-center border px-4 rounded-lg outline-none cursor-pointer',
                                                    onChange: u,
                                                    children: l.map((_, O) =>
                                                        i(
                                                            'option',
                                                            {
                                                                value: _,
                                                                selected:
                                                                    _ === b,
                                                                className:
                                                                    'capitalize cursor-pointer bg-white',
                                                                children: _,
                                                            },
                                                            O
                                                        )
                                                    ),
                                                }),
                                                i('p', {
                                                    className: 'text',
                                                    children: 'List per page',
                                                }),
                                            ],
                                        }),
                                        d('ul', {
                                            className:
                                                'flex items-center gap-5 ml-10',
                                            children: [
                                                i(Ae, {
                                                    onClick: p,
                                                    className: 'cursor-pointer',
                                                }),
                                                v == null
                                                    ? void 0
                                                    : v.map((_, O) =>
                                                          i(
                                                              'li',
                                                              {
                                                                  children:
                                                                      O + 1 ===
                                                                      m
                                                                          ? i(
                                                                                'span',
                                                                                {
                                                                                    className:
                                                                                        'bg-color-primary text-white grid place-content-center w-[3rem] h-[3rem] cursor-pointer',
                                                                                    children:
                                                                                        O +
                                                                                        1,
                                                                                }
                                                                            )
                                                                          : i(
                                                                                'span',
                                                                                {
                                                                                    className:
                                                                                        'text-color-primary bg-white grid place-content-center border w-[3rem] h-[3rem] cursor-pointer',
                                                                                    onClick:
                                                                                        (
                                                                                            T
                                                                                        ) =>
                                                                                            h(
                                                                                                T,
                                                                                                O
                                                                                            ),
                                                                                    children:
                                                                                        O +
                                                                                        1,
                                                                                }
                                                                            ),
                                                              },
                                                              O
                                                          )
                                                      ),
                                                i(Ee, {
                                                    onClick: f,
                                                    className: 'cursor-pointer',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        ' ',
                    ],
                }),
            }),
        })
    }
function Ole() {
    const [e, t] = C.exports.useState(!1),
        [r, n] = C.exports.useState('unique')
    return i(me, {
        children: e
            ? d('div', {
                  children: [
                      i('section', {
                          className:
                              'bg-white rounded-lg p-8 grid text-[1.4rem] ',
                          children: d('div', {
                              className: ' grid gap-8',
                              style: {
                                  gridTemplateColumns:
                                      'repeat(auto-fit, minmax(30rem, 1fr))',
                              },
                              children: [
                                  i(yl, {
                                      title: 'Unique Residents',
                                      number: 1532,
                                      iconUrl:
                                          '/icons/estateManager/people.svg',
                                      bgColor: 'bg-[#F5F9FA]',
                                      textColor: 'text-[#00C2FF]',
                                      bottomLeft: 'Alpha 56%',
                                      bottomRight: 'Res. User 44%',
                                  }),
                                  i(yl, {
                                      title: 'KYR Validation',
                                      number: '45%',
                                      iconUrl:
                                          '/icons/estateManager/validation.svg',
                                      bgColor: 'bg-[#EDFDEC]',
                                      textColor: 'text-[#1A8F56]',
                                      bottomLeft:
                                          '% of residents whose identity has been validated',
                                  }),
                                  i(yl, {
                                      title: 'Resident Profiles',
                                      number: 18100,
                                      iconUrl:
                                          '/icons/estateManager/profiles.svg',
                                      bgColor: 'bg-[#FCF3FA]',
                                      textColor: 'text-[#B6008E]',
                                      bottomLeft: 'LR 39% - TR 29%',
                                      bottomRight: 'LD 10% - LNR 2%',
                                  }),
                              ],
                          }),
                      }),
                      i('div', {
                          className: 'rounded-lg mt-[3rem] h-[80vh]',
                          children: d('section', {
                              children: [
                                  d('div', {
                                      className: 'estateDetail__radioBox',
                                      children: [
                                          i('input', {
                                              type: 'radio',
                                              name: 'resident',
                                              id: 'unique',
                                              className: 'hidden',
                                              onChange: () => n('unique'),
                                              defaultChecked: !0,
                                          }),
                                          i('label', {
                                              htmlFor: 'unique',
                                              className: ` ${
                                                  r === 'unique'
                                                      ? 'font-Satoshi-Medium'
                                                      : 'capitalize'
                                              }`,
                                              children: 'Unique Resident',
                                          }),
                                          i('input', {
                                              type: 'radio',
                                              name: 'resident',
                                              id: 'profile',
                                              className: 'hidden',
                                              onChange: () => n('profile'),
                                          }),
                                          i('label', {
                                              htmlFor: 'profile',
                                              className: ` ${
                                                  r === 'profile'
                                                      ? 'font-Satoshi-Medium'
                                                      : 'capitalize'
                                              }`,
                                              children: 'Resident Profile',
                                          }),
                                      ],
                                  }),
                                  i('div', {
                                      children: new Map([
                                          ['unique', i(kle, {})],
                                          ['profile', i(Ale, {})],
                                      ]).get(r),
                                  }),
                              ],
                          }),
                      }),
                  ],
              })
            : i('div', {
                  className: 'h-[80vh]',
                  children: d('section', {
                      className:
                          'grid place-content-center w-full h-full justify-items-center gap-4 bg-white',
                      children: [
                          i('img', {
                              src: '/icons/admins/errorSvg.svg',
                              alt: '',
                          }),
                          i('p', {
                              className: 'text',
                              children:
                                  'Ooops you have not any resident list yet',
                          }),
                          d('button', {
                              className:
                                  'bg-color-blue-1 text-white flex gap-2 items-center rounded-lg justify-self-center py-4 px-16 text-[1.6rem]',
                              onClick: () => {
                                  t(!0)
                              },
                              children: [
                                  i('span', { children: i($e, {}) }),
                                  ' ',
                                  'Add Resident',
                              ],
                          }),
                      ],
                  }),
              }),
    })
}
const Tle = () => {
        const [e, t] = C.exports.useState(null),
            [r, n] = C.exports.useState(null),
            [a, l] = C.exports.useState(null),
            [o, s] = C.exports.useState(!1),
            [c, u] = C.exports.useState('validate'),
            [f, p] = C.exports.useState('Phone Number'),
            [m, v] = C.exports.useState(''),
            b = async (M) => {
                const A = await kr('#photoUpload')
                v(A)
            },
            h = (M) => {
                M.preventDefault()
            },
            g = C.exports.useRef(null),
            x = C.exports.useRef(null),
            w = () => {
                g.current && g.current.close()
            },
            y = () => {
                x.current && x.current.showModal()
            },
            N = (M) => {
                u('validate'), g.current && g.current.showModal()
            },
            S = () => {
                N('add-Resident')
            },
            P = (M) => {
                M.preventDefault(), w(), y()
            },
            E = new Map([
                ['Phone Number', i(DS, {})],
                ['BVN Number', i($S, {})],
                ['NIN Number', i(IS, {})],
                ['Drivers License', i(RS, {})],
                ['International Passport', i(LS, {})],
                ['Voters Card', i(jS, {})],
            ]),
            k = () => {
                s(!0)
            }
        return d(me, {
            children: [
                i(ct, {}),
                'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nulla atque neque hic repellendus eos quisquam fugiat excepturi similique. Quae, sit. Ipsam exercitationem in explicabo blanditiis, aliquid reprehenderit voluptatibus dolores non? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Iste consequatur velit porro quibusdam excepturi deleniti quia harum in voluptas. Blanditiis odit ex soluta. Id quam nostrum reprehenderit voluptate dicta distinctio.',
                i('dialog', {
                    className: 'dialog',
                    ref: g,
                    children: i('section', {
                        className: 'grid place-content-center w-full h-[100vh]',
                        children: d('div', {
                            className:
                                'bg-white rounded-2xl grid items-baseline w-[64rem] min-h-[30rem] p-10 gap-8 text-[1.6rem] relative',
                            children: [
                                i(Vt, {
                                    className:
                                        'absolute right-4 top-4 text-[2rem] cursor-pointer',
                                    onClick: () => w(),
                                }),
                                c === 'validate'
                                    ? d('form', {
                                          className: 'grid gap-12',
                                          onSubmit: P,
                                          children: [
                                              i('h3', {
                                                  className:
                                                      'text-[2rem] font-bold border-b ',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Medium',
                                                  },
                                                  children:
                                                      'Know Your Guard (KYG)',
                                              }),
                                              i(Pt, {
                                                  state: [
                                                      'Phone Number',
                                                      'BVN Number',
                                                      'NIN Number',
                                                      'Drivers License',
                                                      'International Passport',
                                                      'Voters Card',
                                                  ],
                                                  label: 'Validation Option',
                                                  validate: !0,
                                                  selectedState: f,
                                                  setSelectedState: p,
                                              }),
                                              d('p', {
                                                  className:
                                                      'text-[#043FA7] flex items-center gap-2 border-b pb-10 w-full',
                                                  style: {
                                                      fontFamily:
                                                          'Satoshi-Light',
                                                  },
                                                  children: [
                                                      'What is KYG ',
                                                      i(Wn, {}),
                                                  ],
                                              }),
                                              E.get(f),
                                              i('button', {
                                                  className:
                                                      'btn bg-[#0556E5] text-white rounded-lg py-4 place-self-start w-[15rem]',
                                                  onClick: k,
                                                  children: 'Validate',
                                              }),
                                          ],
                                      })
                                    : d('div', {
                                          className:
                                              'bg-white rounded-2xl grid place-content-center justify-items-center h-[30rem] gap-8 text-[1.6rem]',
                                          children: [
                                              ' ',
                                              i('img', {
                                                  src: '/icons/admins/modalSuccess.svg',
                                                  alt: '',
                                              }),
                                              i('p', {
                                                  className: 'text-[1.6rem]',
                                                  children:
                                                      'You have successfully added a resident',
                                              }),
                                              d('div', {
                                                  className:
                                                      'flex w-full justify-center gap-8',
                                                  children: [
                                                      i('button', {
                                                          className:
                                                              'btn border-[#0556E5] text-[#0556E5] border rounded-lg w-[15rem]',
                                                          onClick: () => w(),
                                                          children:
                                                              'View details',
                                                      }),
                                                      i('button', {
                                                          className:
                                                              ' bg-[#0556E5] py-2 px-12 text-white text-[1.6rem] rounded-lg w-[15rem]',
                                                          children: 'Ok',
                                                      }),
                                                  ],
                                              }),
                                          ],
                                      }),
                            ],
                        }),
                    }),
                }),
                d('div', {
                    className:
                        'grid p-8 bg-white h-[80vh] items-baseline overflow-y-scroll rounded-lg',
                    children: [
                        d('div', {
                            className: 'grid gap-8 max-w-[40rem]',
                            children: [
                                d('p', {
                                    className: 'text-[2rem] font-bold',
                                    children: [
                                        'KYA ',
                                        i('span', {
                                            className: 'text-gray-500',
                                            children: '(Optional)',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'flex justify-between text-[1.6rem]',
                                    children: [
                                        i('p', {
                                            className:
                                                'text-[#098DFF] cursor-pointer',
                                            onClick: () => N('validate'),
                                            children:
                                                'Click her to validate this person',
                                        }),
                                        d('p', {
                                            className:
                                                'text-[#043FA7] flex items-center gap-2',
                                            style: {
                                                fontFamily: 'Satoshi-Light',
                                            },
                                            children: [
                                                'What is KYA ',
                                                i(Wn, {}),
                                            ],
                                        }),
                                    ],
                                }),
                            ],
                        }),
                        d('form', {
                            onSubmit: h,
                            className: 'grid max-w-[84rem] gap-16 mt-12',
                            style: {
                                gridTemplateColumns:
                                    ' repeat(auto-fit, minmax(35rem, 1fr))',
                            },
                            children: [
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'firstName',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'First Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'firstName',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative ',
                                    children: [
                                        i('label', {
                                            htmlFor: 'lastName',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Last Name *',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'lastName',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                i(Pt, {
                                    label: 'Gender',
                                    state: ['Male', 'Female'],
                                    selectedState: a,
                                    setSelectedState: l,
                                }),
                                d('div', {
                                    className: 'grid gap-4',
                                    children: [
                                        i('label', {
                                            htmlFor: 'phoneNumber',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Phone Number *',
                                        }),
                                        d('div', {
                                            className:
                                                'flex text-[1.6rem] gap-4   h-[5rem]',
                                            children: [
                                                i('select', {
                                                    className:
                                                        'w-[30%] rounded-lg border border-color-grey py-4.8 px-4 outline-none cursor-pointer text-color-dark relative h-full',
                                                    children: i('option', {
                                                        value: '234',
                                                        children: '+234',
                                                    }),
                                                }),
                                                i('input', {
                                                    required: !0,
                                                    type: 'number',
                                                    inputMode: 'numeric',
                                                    id: 'phoneNumber',
                                                    placeholder: 'Phone Number',
                                                    className:
                                                        'w-full rounded-lg border border-color-grey py-4.8 px-8 outline-none text-color-dark',
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'email',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Email Address *',
                                        }),
                                        i('input', {
                                            type: 'email',
                                            required: !0,
                                            id: 'email',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'address1',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Address Line 1*',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'address1',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'address2',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Address Line 2*',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            required: !0,
                                            id: 'address2',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                i(Pt, {
                                    label: 'State',
                                    state: ['Lagos', 'Imo', 'Abia', 'FCT'],
                                    placeholder: 'Select State',
                                    selectedState: e,
                                    setSelectedState: t,
                                }),
                                i(Pt, {
                                    label: 'Resident Category',
                                    state: [
                                        'Plumber',
                                        'Electrician',
                                        'Carpenter',
                                        'Painter',
                                    ],
                                    selectedState: r,
                                    setSelectedState: n,
                                }),
                                d('div', {
                                    className: 'grid gap-4 relative',
                                    children: [
                                        i('label', {
                                            htmlFor: 'businessName',
                                            className:
                                                'text-[1.4rem] font-Satoshi-Medium',
                                            children: 'Business Name',
                                        }),
                                        i('input', {
                                            type: 'text',
                                            placeholder: 'Optional',
                                            id: 'businessName',
                                            className:
                                                'w-full rounded-lg border border-color-grey text-[1.6rem] outline-none py-4 px-4',
                                        }),
                                    ],
                                }),
                                d('div', {
                                    className:
                                        'col-span-full rounded-lg border border-width-[.2rem] border-dashed border-color-grey-1 p-8 text-[1.6rem] relative w-full',
                                    children: [
                                        d('label', {
                                            htmlFor: 'photoUpload',
                                            className:
                                                'flex justify-center gap-4 items-center cursor-pointer',
                                            children: [
                                                i('img', {
                                                    src: '/icons/admins/photo_library.svg',
                                                    alt: '',
                                                }),
                                                d('p', {
                                                    className:
                                                        'text-color-dark-1',
                                                    style: {
                                                        fontFamily:
                                                            'Satoshi-Light',
                                                    },
                                                    children: [
                                                        'Drag estate manager picture here or',
                                                        ' ',
                                                        i('span', {
                                                            className:
                                                                'text-color-blue font-bold',
                                                            children: 'click',
                                                        }),
                                                        ' ',
                                                        'to upload',
                                                    ],
                                                }),
                                            ],
                                        }),
                                        i('input', {
                                            type: 'file',
                                            name: 'photoUpload',
                                            id: 'photoUpload',
                                            accept: 'image/*',
                                            className: 'hidden',
                                            onClick: b,
                                        }),
                                        m &&
                                            i('div', {
                                                className:
                                                    'flex justify-center justify-self-center',
                                                children: i('img', {
                                                    src: m,
                                                    alt: 'photoPreview',
                                                    className:
                                                        'object-cover w-[11rem] h-[11rem] rounded-full',
                                                }),
                                            }),
                                    ],
                                }),
                                d('button', {
                                    className:
                                        'btn text-white bg-color-blue-1 flex items-center gap-4 py-4 px-16 rounded-lg',
                                    style: { justifySelf: 'start' },
                                    onClick: S,
                                    children: [
                                        i('span', { children: i($e, {}) }),
                                        ' ',
                                        'Add Resident',
                                    ],
                                }),
                            ],
                        }),
                    ],
                }),
            ],
        })
    },
    Mle = d(oe, {
        path: '/estateManager',
        element: i(vle, {}),
        children: [
            i(oe, { index: !0, element: i(wle, {}) }),
            i(oe, { path: 'wallet', element: i(Cle, {}) }),
            i(oe, {
                path: 'wallet/transaction-details/:id',
                element: i(Ple, {}),
            }),
            i(oe, { path: 'residents', element: i(Ole, {}) }),
            i(oe, { path: 'residents/add', element: i(Tle, {}) }),
        ],
    }),
    Dle = R_(
        Yu([
            i(oe, { path: '/', element: i(U_, {}) }),
            pie,
            ele,
            Mle,
            i(oe, { path: '*', element: i(k_, { to: '/' }) }),
        ])
    ),
    $le = () =>
        i('div', {
            className: 'text-[1.6rem] max-w-[180rem] mx-auto',
            children: i(V_, {
                baseColor: '#202020',
                highlightColor: '#444',
                children: i(E_, { router: Dle }),
            }),
        })
var Xv = {},
    Zv = {}
Zv.__esModule = !0
Zv.default = Lle
function wu(e) {
    return (
        typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
            ? (wu = function (r) {
                  return typeof r
              })
            : (wu = function (r) {
                  return r &&
                      typeof Symbol == 'function' &&
                      r.constructor === Symbol &&
                      r !== Symbol.prototype
                      ? 'symbol'
                      : typeof r
              }),
        wu(e)
    )
}
function nm() {}
var Ile = { getItem: nm, setItem: nm, removeItem: nm }
function Rle(e) {
    if (
        (typeof self > 'u' ? 'undefined' : wu(self)) !== 'object' ||
        !(e in self)
    )
        return !1
    try {
        var t = self[e],
            r = 'redux-persist '.concat(e, ' test')
        t.setItem(r, 'test'), t.getItem(r), t.removeItem(r)
    } catch {
        return !1
    }
    return !0
}
function Lle(e) {
    var t = ''.concat(e, 'Storage')
    return Rle(t) ? self[t] : Ile
}
Xv.__esModule = !0
Xv.default = Ble
var jle = Fle(Zv)
function Fle(e) {
    return e && e.__esModule ? e : { default: e }
}
function Ble(e) {
    var t = (0, jle.default)(e)
    return {
        getItem: function (n) {
            return new Promise(function (a, l) {
                a(t.getItem(n))
            })
        },
        setItem: function (n, a) {
            return new Promise(function (l, o) {
                l(t.setItem(n, a))
            })
        },
        removeItem: function (n) {
            return new Promise(function (a, l) {
                a(t.removeItem(n))
            })
        },
    }
}
var zle = Vle(Xv)
function Vle(e) {
    return e && e.__esModule ? e : { default: e }
}
;(0, zle.default)('local')
var Ule = 'persist/FLUSH',
    FS = 'persist/REHYDRATE',
    Wle = 'persist/PAUSE',
    Hle = 'persist/PERSIST',
    Gle = 'persist/PURGE',
    BS = 'persist/REGISTER'
function eN(e) {
    return Yle(e) || Kle(e) || qle()
}
function qle() {
    throw new TypeError('Invalid attempt to spread non-iterable instance')
}
function Kle(e) {
    if (
        Symbol.iterator in Object(e) ||
        Object.prototype.toString.call(e) === '[object Arguments]'
    )
        return Array.from(e)
}
function Yle(e) {
    if (Array.isArray(e)) {
        for (var t = 0, r = new Array(e.length); t < e.length; t++) r[t] = e[t]
        return r
    }
}
function tN(e, t) {
    var r = Object.keys(e)
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e)
        t &&
            (n = n.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable
            })),
            r.push.apply(r, n)
    }
    return r
}
function P1(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}
        t % 2
            ? tN(r, !0).forEach(function (n) {
                  Xle(e, n, r[n])
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : tN(r).forEach(function (n) {
                  Object.defineProperty(
                      e,
                      n,
                      Object.getOwnPropertyDescriptor(r, n)
                  )
              })
    }
    return e
}
function Xle(e, t, r) {
    return (
        t in e
            ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (e[t] = r),
        e
    )
}
var zS = { registry: [], bootstrapped: !1 },
    Zle = function () {
        var t =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : zS,
            r = arguments.length > 1 ? arguments[1] : void 0
        switch (r.type) {
            case BS:
                return P1({}, t, {
                    registry: [].concat(eN(t.registry), [r.key]),
                })
            case FS:
                var n = t.registry.indexOf(r.key),
                    a = eN(t.registry)
                return (
                    a.splice(n, 1),
                    P1({}, t, { registry: a, bootstrapped: a.length === 0 })
                )
            default:
                return t
        }
    }
function Jle(e, t, r) {
    var n = r || !1,
        a = M0(Zle, zS, t && t.enhancer ? t.enhancer : void 0),
        l = function (u) {
            a.dispatch({ type: BS, key: u })
        },
        o = function (u, f, p) {
            var m = { type: FS, payload: f, err: p, key: u }
            e.dispatch(m),
                a.dispatch(m),
                n && s.getState().bootstrapped && (n(), (n = !1))
        },
        s = P1({}, a, {
            purge: function () {
                var u = []
                return (
                    e.dispatch({
                        type: Gle,
                        result: function (p) {
                            u.push(p)
                        },
                    }),
                    Promise.all(u)
                )
            },
            flush: function () {
                var u = []
                return (
                    e.dispatch({
                        type: Ule,
                        result: function (p) {
                            u.push(p)
                        },
                    }),
                    Promise.all(u)
                )
            },
            pause: function () {
                e.dispatch({ type: Wle })
            },
            persist: function () {
                e.dispatch({ type: Hle, register: l, rehydrate: o })
            },
        })
    return (t && t.manualPersist) || s.persist(), s
}
const Qle = { firstName: '', lastName: '', email: '' },
    eoe = V8({
        name: 'userState',
        initialState: Qle,
        reducers: {
            updateUser(e, t) {
                const r = t.payload
                console.log(r),
                    Object.entries(r).forEach((a) => {
                        const [l, o] = a
                        e[l] = o
                    })
            },
            clearUser(e, t) {
                console.log('++++++++++++++clearing user')
            },
        },
        extraReducers: (e) => {},
    }),
    toe = eoe.reducer,
    roe = j8({ user: toe, routeChange: nE }),
    VS = GA({
        reducer: roe,
        devTools: !1,
        middleware: (e) => e({ serializableCheck: !1 }),
    })
Jle(VS)
am.createRoot(document.getElementById('root')).render(
    i(UE, { store: VS, children: i($le, {}) })
)
